/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

GO

SET NUMERIC_ROUNDABORT OFF;

GO

GO
PRINT N'Creating [ReportUsersRole]...';


GO
CREATE ROLE [ReportUsersRole]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [UsersRole]...';


GO
CREATE ROLE [UsersRole]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [db_executor]...';


GO
CREATE ROLE [db_executor]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [PublishersRole]...';


GO
CREATE ROLE [PublishersRole]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [DataSyncUsersRole]...';


GO
CREATE ROLE [DataSyncUsersRole]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [crt]...';


GO
CREATE SCHEMA [crt]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [ax]...';


GO
CREATE SCHEMA [ax]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [COMMERCEFULLTEXTCATALOG]...';


GO
CREATE FULLTEXT CATALOG [COMMERCEFULLTEXTCATALOG]
    WITH ACCENT_SENSITIVITY = ON
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [crt].[ADDRESSBOOKPARTYTABLETYPE]...';


GO
CREATE TYPE [crt].[ADDRESSBOOKPARTYTABLETYPE] AS TABLE (
    [RECORDID]         BIGINT NOT NULL,
    [STOREADDRESSBOOK] BIGINT NOT NULL,
    [PARTY]            BIGINT NOT NULL,
    PRIMARY KEY CLUSTERED ([RECORDID] ASC));


GO
PRINT N'Creating [crt].[PRODUCTLOOKUPIDTABLETYPE]...';


GO
CREATE TYPE [crt].[PRODUCTLOOKUPIDTABLETYPE] AS TABLE (
    [PRODUCTID] BIGINT NOT NULL,
    [LOOKUPID]  BIGINT NOT NULL,
    [ISREMOTE]  BIT    NOT NULL,
    [VALIDFROM] DATE   NOT NULL,
    [VALIDTO]   DATE   NOT NULL,
    PRIMARY KEY CLUSTERED ([PRODUCTID] ASC, [VALIDFROM] ASC, [VALIDTO] ASC));


GO
PRINT N'Creating [crt].[CATALOGDEFINITIONTABLETYPE]...';


GO
CREATE TYPE [crt].[CATALOGDEFINITIONTABLETYPE] AS TABLE (
    [LISTID]           NVARCHAR (50) NOT NULL,
    [ATTRIBUTERECID]   BIGINT        NOT NULL,
    [ATTRIBUTEKEYNAME] NVARCHAR (50) NOT NULL,
    [LISTGROUPID]      BIGINT        NOT NULL PRIMARY KEY CLUSTERED ([LISTID] ASC, [ATTRIBUTERECID] ASC));


GO
PRINT N'Creating [crt].[SALESLINEDELIVERYOPTIONSTABLETYPE]...';


GO
CREATE TYPE [crt].[SALESLINEDELIVERYOPTIONSTABLETYPE] AS TABLE (
    [SALESLINEID]        NVARCHAR (44) NOT NULL,
    [ITEMID]             NVARCHAR (20) NOT NULL,
    [VARIANTINVENTDIMID] NVARCHAR (20) NOT NULL,
    [COUNTRYREGIONID]    NVARCHAR (20) NOT NULL,
    [STATEID]            NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([SALESLINEID] ASC));


GO
PRINT N'Creating [crt].[PICKINGLISTLINETABLETYPE]...';


GO
CREATE TYPE [crt].[PICKINGLISTLINETABLETYPE] AS TABLE (
    [RECID]               NVARCHAR (50)    NOT NULL,
    [ITEMID]              NVARCHAR (20)    NULL,
    [ITEMNAME]            NVARCHAR (60)    NULL,
    [INVENTDIMID]         NVARCHAR (20)    NULL,
    [PURCHASERECEIVEDNOW] NUMERIC (28, 12) NULL,
    [INVENTBATCHID]       NVARCHAR (10)    NULL,
    [INVENTSITEID]        NVARCHAR (10)    NULL,
    [INVENTLOCATIONID]    NVARCHAR (20)    NULL,
    [CONFIGID]            NVARCHAR (10)    NULL,
    [INVENTSERIALID]      NVARCHAR (10)    NULL,
    [INVENTSIZEID]        NVARCHAR (10)    NULL,
    [INVENTCOLORID]       NVARCHAR (10)    NULL,
    [INVENTSTYLEID]       NVARCHAR (10)    NULL,
    [DELIVERYMETHOD]      NVARCHAR (60)    NOT NULL);


GO
PRINT N'Creating [crt].[ITEMQUANTITYTABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMQUANTITYTABLETYPE] AS TABLE (
    [ITEMID]             NVARCHAR (20) NOT NULL,
    [VARIANTINVENTDIMID] NVARCHAR (20) NOT NULL,
    [QUANTITY]           DECIMAL (18)  NOT NULL,
    PRIMARY KEY CLUSTERED ([ITEMID] ASC, [VARIANTINVENTDIMID] ASC, [QUANTITY] ASC));


GO
PRINT N'Creating [crt].[RETAILINCOMEEXPENSETABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILINCOMEEXPENSETABLETYPE] AS TABLE (
    [TRANSACTIONID]         NVARCHAR (44)    NOT NULL,
    [RECEIPTID]             NVARCHAR (18)    NOT NULL,
    [INCOMEEXEPENSEACCOUNT] NVARCHAR (10)    NOT NULL,
    [STORE]                 NVARCHAR (10)    NOT NULL,
    [TERMINAL]              NVARCHAR (10)    NOT NULL,
    [STAFF]                 NVARCHAR (25)    NOT NULL,
    [TRANSACTIONSTATUS]     INT              NOT NULL,
    [AMOUNT]                NUMERIC (32, 16) NOT NULL,
    [ACCOUNTTYPE]           INT              NOT NULL,
    [TRANSDATE]             DATE             NULL,
    [TRANSTIME]             INT              NULL,
    [DATAAREAID]            NVARCHAR (4)     NOT NULL,
    [CHANNEL]               BIGINT           NULL);


GO
PRINT N'Creating [crt].[KITCOMPONENTINFOTYPE]...';


GO
CREATE TYPE [crt].[KITCOMPONENTINFOTYPE] AS TABLE (
    [KITLINEPRODUCTLISTING]       BIGINT           NOT NULL,
    [QUANTITY]                    NUMERIC (32, 16) NOT NULL,
    [UNIT]                        NVARCHAR (10)    NOT NULL,
    [CHARGE]                      NUMERIC (32, 16) NOT NULL,
    [ITEMID]                      NVARCHAR (20)    NOT NULL,
    [KITLINEPRODUCTMASTERLISTING] BIGINT           NOT NULL,
    [ISDEFAULTCOMPONENT]          NUMERIC (18)     NOT NULL,
    [KITPRODUCTMASTERLISTING]     BIGINT           NOT NULL,
    [KITLINEIDENTIFIER]           BIGINT           NOT NULL,
    [CHANNEL]                     BIGINT           NOT NULL);


GO
PRINT N'Creating [crt].[ITEMLINETRANSACTIONTABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMLINETRANSACTIONTABLETYPE] AS TABLE (
    [ITEMID]            NVARCHAR (20)    NOT NULL,
    [LINENUM]           NUMERIC (32, 16) NOT NULL,
    [QTY]               NUMERIC (32, 16) NOT NULL,
    [STOREID]           NVARCHAR (10)    NOT NULL,
    [TERMINALID]        NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]     NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS] INT              NOT NULL,
    [VARIANTID]         NVARCHAR (10)    NOT NULL,
    [DATAAREAID]        NVARCHAR (4)     NOT NULL);


GO
PRINT N'Creating [crt].[RETAILSTOCKCOUNTJOURNALSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILSTOCKCOUNTJOURNALSTABLETYPE] AS TABLE (
    [RECID]       VARCHAR (50)  NOT NULL,
    [JOURNALID]   NVARCHAR (50) NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NULL);


GO
PRINT N'Creating [crt].[RETAILPRODUCTPRICINGINFOTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILPRODUCTPRICINGINFOTABLETYPE] AS TABLE (
    [PRODUCTRECID]         BIGINT           NOT NULL,
    [PRODUCTLOOKUPID]      BIGINT           NOT NULL,
    [BASEPRICE]            NUMERIC (32, 16) DEFAULT ((0)) NOT NULL,
    [TRADEAGREEMENTPRICE]  NUMERIC (32, 16) DEFAULT ((0)) NOT NULL,
    [PRICEADJUSTMENTPRICE] NUMERIC (32, 16) DEFAULT ((0)) NOT NULL,
    [CURRENCY]             NVARCHAR (3)     DEFAULT ('') NOT NULL,
    [ITEMID]               NVARCHAR (20)    NOT NULL,
    [INVENTDIMID]          NVARCHAR (20)    DEFAULT ('') NOT NULL,
    [UNITID]               NVARCHAR (10)    DEFAULT ('') NOT NULL,
    [VALIDFROM]            DATETIME         NOT NULL,
    [CHANNEL]              BIGINT           DEFAULT ((0)) NOT NULL,
    [CATALOG]              BIGINT           DEFAULT ((0)) NOT NULL);


GO
PRINT N'Creating [crt].[STRINGIDTABLETYPE]...';


GO
CREATE TYPE [crt].[STRINGIDTABLETYPE] AS TABLE (
    [STRINGID] NVARCHAR (88) NOT NULL,
    PRIMARY KEY CLUSTERED ([STRINGID] ASC));


GO
PRINT N'Creating [crt].[SALESTRANSACTIONTABLETYPE]...';


GO
CREATE TYPE [crt].[SALESTRANSACTIONTABLETYPE] AS TABLE (
    [TRANSACTIONID]   NVARCHAR (44)    NOT NULL,
    [TERMINALID]      NVARCHAR (10)    NOT NULL,
    [CUSTOMERID]      NVARCHAR (38)    NULL,
    [NAME]            NVARCHAR (128)   NULL,
    [BYTELENGTH]      INT              NULL,
    [TRANSACTIONDATA] VARBINARY (MAX)  NULL,
    [ROWVERSION]      BINARY (8)       NULL,
    [ISSUSPENDED]     BIT              NOT NULL,
    [TYPE]            INT              NOT NULL,
    [COMMENT]         NVARCHAR (60)    NULL,
    [CHANNELID]       BIGINT           NOT NULL,
    [STAFF]           NVARCHAR (25)    NOT NULL,
    [AMOUNT]          NUMERIC (28, 16) NOT NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONDISCOUNTTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONDISCOUNTTRANSTABLETYPE] AS TABLE (
    [AMOUNT]                  NUMERIC (32, 16) NULL,
    [DATAAREAID]              NVARCHAR (4)     NULL,
    [DEALPRICE]               NUMERIC (32, 16) NULL,
    [DISCOUNTAMOUNT]          NUMERIC (32, 16) NULL,
    [DISCOUNTCODE]            NVARCHAR (15)    NULL,
    [LINENUM]                 NUMERIC (32, 16) NULL,
    [PERCENTAGE]              NUMERIC (32, 16) NULL,
    [PERIODICDISCOUNTOFFERID] NVARCHAR (20)    NULL,
    [SALELINENUM]             NUMERIC (32, 16) NULL,
    [STOREID]                 NVARCHAR (10)    NULL,
    [TERMINALID]              NVARCHAR (10)    NULL,
    [TRANSACTIONID]           NVARCHAR (44)    NULL,
    [DISCOUNTORIGINTYPE]      INT              NULL,
    [CUSTOMERDISCOUNTTYPE]    INT              NULL,
    [MANUALDISCOUNTTYPE]      INT              NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONTABLETYPE] AS TABLE (
    [CHANNELREFERENCEID]            NVARCHAR (50)    NULL,
    [CREATEDDATETIME]               DATETIME         NULL,
    [TRANSDATE]                     DATETIME         NULL,
    [TRANSTIME]                     INT              NULL,
    [CURRENCY]                      NVARCHAR (3)     NULL,
    [EXCHRATE]                      NUMERIC (32, 16) NULL,
    [ENTRYSTATUS]                   INT              NULL,
    [CUSTOMERID]                    NVARCHAR (38)    NULL,
    [DATAAREAID]                    NVARCHAR (4)     NULL,
    [DELIVERYMODE]                  NVARCHAR (10)    NULL,
    [GROSSAMOUNT]                   NUMERIC (32, 16) NULL,
    [INVENTLOCATIONID]              NVARCHAR (10)    NULL,
    [INVENTSITEID]                  NVARCHAR (10)    NULL,
    [INCOMEEXPENSEAMOUNT]           NUMERIC (32, 16) NULL,
    [LOGISTICSPOSTALADDRESS]        BIGINT           NULL,
    [NETAMOUNT]                     NUMERIC (32, 16) NULL,
    [PAYMENTAMOUNT]                 NUMERIC (32, 16) NULL,
    [SALESPAYMENTDIFFERENCE]        NUMERIC (32, 16) NULL,
    [RECEIPTDATEREQUESTED]          DATETIME         NULL,
    [SHIPPINGDATEREQUESTED]         DATETIME         NULL,
    [STORE]                         NVARCHAR (10)    NULL,
    [TERMINAL]                      NVARCHAR (10)    NULL,
    [STAFF]                         NVARCHAR (25)    NULL,
    [TRANSACTIONID]                 NVARCHAR (44)    NULL,
    [SALESORDERID]                  NVARCHAR (20)    NULL,
    [TYPE]                          INT              NULL,
    [LOYALTYCARDID]                 NVARCHAR (30)    NULL,
    [RECEIPTEMAIL]                  NVARCHAR (80)    NULL,
    [RECEIPTID]                     NVARCHAR (18)    NULL,
    [NUMBEROFITEMS]                 NUMERIC (32, 16) NULL,
    [NUMBEROFITEMLINES]             NUMERIC (32, 16) NULL,
    [NUMBEROFPAYMENTLINES]          INT              NULL,
    [TIMEWHENTRANSCLOSED]           INT              NULL,
    [SALEISRETURNSALE]              INT              NULL,
    [DISCAMOUNT]                    NUMERIC (32, 16) NULL,
    [TOTALDISCAMOUNT]               NUMERIC (32, 16) NULL,
    [CUSTDISCAMOUNT]                NUMERIC (32, 16) NULL,
    [TOTALMANUALDISCOUNTAMOUNT]     NUMERIC (32, 16) NULL,
    [TOTALMANUALDISCOUNTPERCENTAGE] NUMERIC (32, 16) NULL,
    [BATCHID]                       BIGINT           NULL,
    [BATCHTERMINALID]               NVARCHAR (10)    NULL,
    [COMMENT]                       NVARCHAR (60)    NULL,
    [INVOICECOMMENT]                NVARCHAR (60)    NULL,
    [DESCRIPTION]                   NVARCHAR (150)   NULL,
    [BUSINESSDATE]                  DATE             NULL,
    [STATEMENTCODE]                 NVARCHAR (25)    NULL,
    [CREATEDOFFLINE]                BIT              NULL);


GO
PRINT N'Creating [crt].[ITEMRESERVATIONIDTABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMRESERVATIONIDTABLETYPE] AS TABLE (
    [RESERVATIONID] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([RESERVATIONID] ASC));


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONPROPERTIESTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONPROPERTIESTABLETYPE] AS TABLE (
    [DATAAREAID]    NVARCHAR (4)     NOT NULL,
    [STOREID]       NVARCHAR (10)    NOT NULL,
    [TERMINALID]    NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID] NVARCHAR (44)    NOT NULL,
    [SALELINENUM]   NUMERIC (32, 16) NOT NULL,
    [NAME]          NVARCHAR (128)   NOT NULL,
    [VALUE]         NVARCHAR (2000)  NOT NULL);


GO
PRINT N'Creating [crt].[PRODUCTREFINERTABLETYPE]...';


GO
CREATE TYPE [crt].[PRODUCTREFINERTABLETYPE] AS TABLE (
    [RECID]           BIGINT         NULL,
    [SOURCE]          INT            NOT NULL,
    [KEYNAME]         NVARCHAR (80)  NULL,
    [DATATYPE]        INT            NOT NULL,
    [DISPLAYOPTION]   INT            NOT NULL,
    [DISPLAYTEMPLATE] INT            NOT NULL,
    [THRESHOLDVALUE]  NVARCHAR (200) NULL);


GO
PRINT N'Creating [crt].[LOYALTYCARDTIERTABLETYPE]...';


GO
CREATE TYPE [crt].[LOYALTYCARDTIERTABLETYPE] AS TABLE (
    [RECID]       BIGINT NOT NULL,
    [AFFILIATION] BIGINT NOT NULL,
    [LOYALTYCARD] BIGINT NOT NULL,
    [LOYALTYTIER] BIGINT NOT NULL,
    [VALIDFROM]   DATE   NOT NULL,
    [VALIDTO]     DATE   NOT NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONADDRESSTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONADDRESSTRANSTABLETYPE] AS TABLE (
    [DATAAREAID]      NVARCHAR (4)     NULL,
    [STORE]           NVARCHAR (10)    NULL,
    [TERMINAL]        NVARCHAR (10)    NULL,
    [TRANSACTIONID]   NVARCHAR (44)    NULL,
    [SALELINENUM]     NUMERIC (32, 16) NOT NULL,
    [DELIVERYNAME]    NVARCHAR (60)    NOT NULL,
    [SALESNAME]       NVARCHAR (60)    NOT NULL,
    [ZIPCODE]         NVARCHAR (10)    NOT NULL,
    [COUNTRYREGIONID] NVARCHAR (10)    NOT NULL,
    [STATE]           NVARCHAR (10)    NOT NULL,
    [CITY]            NVARCHAR (60)    NOT NULL,
    [COUNTY]          NVARCHAR (10)    NOT NULL,
    [STREET]          NVARCHAR (250)   NOT NULL,
    [EMAIL]           NVARCHAR (80)    NOT NULL,
    [EMAILCONTENT]    NVARCHAR (80)    NOT NULL,
    [PHONE]           NVARCHAR (20)    NOT NULL,
    [STREETNUMBER]    NVARCHAR (20)    NOT NULL,
    [DISTRICTNAME]    NVARCHAR (60)    NOT NULL);


GO
PRINT N'Creating [crt].[LOYALTYCARDTABLETYPE]...';


GO
CREATE TYPE [crt].[LOYALTYCARDTABLETYPE] AS TABLE (
    [RECID]          BIGINT        NOT NULL,
    [CARDNUMBER]     NVARCHAR (30) NOT NULL,
    [CARDTENDERTYPE] INT           NOT NULL,
    [PARTY]          BIGINT        NOT NULL);


GO
PRINT N'Creating [crt].[TRANSFERORDERLINETABLETYPE]...';


GO
CREATE TYPE [crt].[TRANSFERORDERLINETABLETYPE] AS TABLE (
    [RECID]                 NVARCHAR (50)    NOT NULL,
    [LINERECEIPTNUMBER]     NVARCHAR (20)    NULL,
    [ITEMID]                NVARCHAR (20)    NULL,
    [ITEMNAME]              NVARCHAR (60)    NULL,
    [INVENTDIMID]           NVARCHAR (20)    NULL,
    [QUANTITYTRANSFERRED]   NUMERIC (28, 12) NULL,
    [QUANTITYSHIPPED]       NUMERIC (28, 12) NULL,
    [QUANTITYRECEIVED]      NUMERIC (28, 12) NULL,
    [QUANTITYSHIPNOW]       NUMERIC (28, 12) NULL,
    [QUANTITYRECEIVENOW]    NUMERIC (28, 12) NULL,
    [QUANTITYREMAINSHIP]    NUMERIC (28, 12) NULL,
    [QUANTITYREMAINRECEIVE] NUMERIC (28, 12) NULL,
    [PURCHASEUNIT]          NVARCHAR (10)    NULL,
    [INVENTBATCHID]         NVARCHAR (10)    NULL,
    [INVENTSITEID]          NVARCHAR (10)    NULL,
    [INVENTLOCATIONID]      NVARCHAR (20)    NULL,
    [CONFIGID]              NVARCHAR (10)    NULL,
    [INVENTSERIALID]        NVARCHAR (10)    NULL,
    [INVENTSIZEID]          NVARCHAR (10)    NULL,
    [INVENTCOLORID]         NVARCHAR (10)    NULL,
    [INVENTSTYLEID]         NVARCHAR (10)    NULL,
    [DELIVERYMETHOD]        NVARCHAR (60)    NOT NULL);


GO
PRINT N'Creating [crt].[PURCHASEORDERLINETABLETYPE]...';


GO
CREATE TYPE [crt].[PURCHASEORDERLINETABLETYPE] AS TABLE (
    [RECID]               NVARCHAR (50)    NOT NULL,
    [LINERECEIPTNUMBER]   NVARCHAR (20)    NULL,
    [ITEMID]              NVARCHAR (20)    NULL,
    [ITEMNAME]            NVARCHAR (60)    NULL,
    [UNIQUEIDENTIFIER]    NVARCHAR (50)    NULL,
    [INVENTDIMID]         NVARCHAR (20)    NULL,
    [QUANTITYORDERED]     NUMERIC (28, 12) NULL,
    [PURCHASEQUANTITY]    NUMERIC (28, 12) NULL,
    [PURCHASEUNIT]        NVARCHAR (10)    NULL,
    [PURCHASERECEIVED]    NUMERIC (28, 12) NULL,
    [PURCHASERECEIVEDNOW] NUMERIC (28, 12) NULL,
    [INVENTBATCHID]       NVARCHAR (10)    NULL,
    [INVENTSITEID]        NVARCHAR (10)    NULL,
    [INVENTLOCATIONID]    NVARCHAR (20)    NULL,
    [CONFIGID]            NVARCHAR (10)    NULL,
    [INVENTSERIALID]      NVARCHAR (10)    NULL,
    [INVENTSIZEID]        NVARCHAR (10)    NULL,
    [INVENTCOLORID]       NVARCHAR (10)    NULL,
    [INVENTSTYLEID]       NVARCHAR (10)    NULL,
    [RECEIPTDATE]         DATETIME         NULL,
    [DELIVERYMETHOD]      NVARCHAR (60)    NOT NULL);


GO
PRINT N'Creating [crt].[KEYWORDSEARCHTABLETYPE]...';


GO
CREATE TYPE [crt].[KEYWORDSEARCHTABLETYPE] AS TABLE (
    [INDEX]   INT          NOT NULL,
    [KEYWORD] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([INDEX] ASC));


GO
PRINT N'Creating [crt].[SHIFTACCOUNTLINETYPE]...';


GO
CREATE TYPE [crt].[SHIFTACCOUNTLINETYPE] AS TABLE (
    [INCOMEEXEPENSEACCOUNT] NVARCHAR (10)    NULL,
    [ACCOUNTTYPE]           INT              NULL,
    [AMOUNT]                NUMERIC (32, 16) NULL,
    [SHIFTID]               BIGINT           NULL,
    [STOREID]               NVARCHAR (10)    NULL,
    [TERMINALID]            NVARCHAR (10)    NULL,
    [CHANNEL]               BIGINT           NULL,
    [DATAAREAID]            NVARCHAR (4)     NULL);


GO
PRINT N'Creating [crt].[RETAILSTOCKCOUNTTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILSTOCKCOUNTTABLETYPE] AS TABLE (
    [JOURNALID]     NVARCHAR (50)    NOT NULL,
    [RECID]         BIGINT           NULL,
    [OPERATIONTYPE] INT              NULL,
    [ITEMID]        NVARCHAR (20)    NOT NULL,
    [ITEMNAME]      NVARCHAR (60)    NULL,
    [COUNTED]       NUMERIC (28, 12) NULL,
    [QUANTITY]      NUMERIC (28, 12) NULL,
    [UNIT]          NVARCHAR (10)    NULL,
    [USERID]        NVARCHAR (10)    NULL,
    [TERMINALID]    NVARCHAR (10)    NULL,
    [COUNTDATE]     DATETIME         NULL,
    [STATUS]        INT              NULL,
    [INVENTSIZEID]  NVARCHAR (10)    NULL,
    [INVENTCOLORID] NVARCHAR (10)    NULL,
    [INVENTSTYLEID] NVARCHAR (10)    NULL,
    [CONFIGID]      NVARCHAR (10)    NULL,
    [TRACKINGGUID]  UNIQUEIDENTIFIER NOT NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONMARKUPTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONMARKUPTRANSTABLETYPE] AS TABLE (
    [CURRENCYCODE]       NVARCHAR (3)     NULL,
    [DATAAREAID]         NVARCHAR (4)     NULL,
    [MARKUPCODE]         NVARCHAR (10)    NULL,
    [MARKUPLINENUM]      NUMERIC (32, 16) NULL,
    [SALELINENUM]        NUMERIC (32, 16) NULL,
    [STORE]              NVARCHAR (10)    NULL,
    [TAXGROUP]           NVARCHAR (10)    NULL,
    [TAXITEMGROUP]       NVARCHAR (10)    NULL,
    [TERMINALID]         NVARCHAR (10)    NULL,
    [TRANSACTIONID]      NVARCHAR (44)    NULL,
    [VALUE]              NUMERIC (32, 16) NULL,
    [CALCULATEDAMOUNT]   NUMERIC (32, 16) NULL,
    [METHOD]             INT              NULL,
    [TAXAMOUNT]          NUMERIC (32, 16) NULL,
    [TAXAMOUNTINCLUSIVE] NUMERIC (32, 16) NULL,
    [TAXAMOUNTEXCLUSIVE] NUMERIC (32, 16) NULL);


GO
PRINT N'Creating [crt].[SHIFTTENDERAMOUNTTYPE]...';


GO
CREATE TYPE [crt].[SHIFTTENDERAMOUNTTYPE] AS TABLE (
    [TENDERTYPEID]      NVARCHAR (20)    NULL,
    [TENDERTYPENAME]    NVARCHAR (120)   NULL,
    [CURRENCY]          NVARCHAR (6)     NULL,
    [COUNTINGREQUIRED]  INT              NULL,
    [TENDEREDAMOUNT]    NUMERIC (32, 16) NULL,
    [TENDEREDAMOUNTCUR] NUMERIC (32, 16) NULL,
    [TRANSACTIONTYPE]   INT              NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSTABLETYPE] AS TABLE (
    [TRANSACTIONID]     NVARCHAR (44) NOT NULL,
    [RECEIPTID]         NVARCHAR (18) NOT NULL,
    [CUSTACCOUNT]       NVARCHAR (38) NOT NULL,
    [STORE]             NVARCHAR (10) NOT NULL,
    [TERMINAL]          NVARCHAR (10) NOT NULL,
    [STAFF]             NVARCHAR (25) NOT NULL,
    [TRANSACTIONSTATUS] INT           NOT NULL,
    [AMOUNT]            NUMERIC (18)  NOT NULL,
    [TRANSDATE]         DATE          NULL,
    [TRANSTIME]         INT           NULL,
    [DATAAREAID]        NVARCHAR (4)  NOT NULL,
    [CHANNEL]           BIGINT        NULL,
    [COMMENT]           NVARCHAR (60) NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONSALESTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONSALESTRANSTABLETYPE] AS TABLE (
    [CUSTACCOUNT]                    NVARCHAR (38)    NULL,
    [CREATEDDATETIME]                DATETIME         NULL,
    [DATAAREAID]                     NVARCHAR (4)     NULL,
    [LINEMANUALDISCOUNTAMOUNT]       NUMERIC (32, 16) NULL,
    [LINEMANUALDISCOUNTPERCENTAGE]   NUMERIC (32, 16) NULL,
    [DISCAMOUNT]                     NUMERIC (32, 16) NULL,
    [TOTALDISCAMOUNT]                NUMERIC (32, 16) NULL,
    [TOTALDISCPCT]                   NUMERIC (32, 16) NULL,
    [LINEDSCAMOUNT]                  NUMERIC (32, 16) NULL,
    [PERIODICDISCAMOUNT]             NUMERIC (32, 16) NULL,
    [PERIODICPERCENTAGEDISCOUNT]     NUMERIC (32, 16) NULL,
    [DLVMODE]                        NVARCHAR (10)    NULL,
    [INVENTDIMID]                    NVARCHAR (20)    NULL,
    [INVENTLOCATIONID]               NVARCHAR (10)    NULL,
    [INVENTSERIALID]                 NVARCHAR (20)    NULL,
    [INVENTSITEID]                   NVARCHAR (10)    NULL,
    [ITEMID]                         NVARCHAR (20)    NULL,
    [BARCODE]                        NVARCHAR (80)    NULL,
    [LINENUM]                        NUMERIC (32, 16) NULL,
    [LISTINGID]                      NVARCHAR (50)    NULL,
    [LOGISTICSPOSTALADDRESS]         BIGINT           NULL,
    [NETAMOUNT]                      NUMERIC (32, 16) NULL,
    [NETAMOUNTINCLTAX]               NUMERIC (32, 16) NULL,
    [PRICE]                          NUMERIC (32, 16) NULL,
    [PRICECHANGE]                    INT              NULL,
    [ORIGINALPRICE]                  NUMERIC (32, 16) NULL,
    [QTY]                            NUMERIC (32, 16) NULL,
    [RECEIPTDATEREQUESTED]           DATETIME         NULL,
    [SHIPPINGDATEREQUESTED]          DATETIME         NULL,
    [STORE]                          NVARCHAR (10)    NULL,
    [TAXAMOUNT]                      NUMERIC (32, 16) NULL,
    [TAXGROUP]                       NVARCHAR (10)    NULL,
    [ORIGINALTAXGROUP]               NVARCHAR (10)    NULL,
    [TAXITEMGROUP]                   NVARCHAR (10)    NULL,
    [ORIGINALTAXITEMGROUP]           NVARCHAR (10)    NULL,
    [TERMINALID]                     NVARCHAR (10)    NULL,
    [STAFFID]                        NVARCHAR (25)    NULL,
    [TRANSACTIONID]                  NVARCHAR (44)    NULL,
    [UNIT]                           NVARCHAR (10)    NULL,
    [VARIANTID]                      NVARCHAR (10)    NULL,
    [RETURNNOSALE]                   INT              NULL,
    [RETURNTRANSACTIONID]            NVARCHAR (44)    NULL,
    [RETURNLINENUM]                  NUMERIC (32, 16) NULL,
    [RETURNSTORE]                    NVARCHAR (10)    NULL,
    [RETURNTERMINALID]               NVARCHAR (10)    NULL,
    [RECEIPTID]                      NVARCHAR (18)    NULL,
    [TRANSDATE]                      DATETIME         NULL,
    [TRANSTIME]                      INT              NULL,
    [TRANSACTIONSTATUS]              INT              NULL,
    [COMMENT]                        NVARCHAR (60)    NULL,
    [GIFTCARD]                       INT              NOT NULL,
    [CATALOG]                        BIGINT           NOT NULL,
    [ELECTRONICDELIVERYEMAIL]        NVARCHAR (80)    NULL,
    [ELECTRONICDELIVERYEMAILCONTENT] NVARCHAR (250)   NULL,
    [FULFILLMENTSTOREID]             NVARCHAR (10)    NULL);


GO
PRINT N'Creating [crt].[LISTINGPUBLISHSTATUSTABLETYPE]...';


GO
CREATE TYPE [crt].[LISTINGPUBLISHSTATUSTABLETYPE] AS TABLE (
    [ACTIONSTATUS]                INT             NOT NULL,
    [APPLIEDACTION]               INT             NOT NULL,
    [CATALOG]                     BIGINT          NOT NULL,
    [CHANNEL]                     BIGINT          NOT NULL,
    [CHANNELLISTINGID]            NVARCHAR (50)   NOT NULL,
    [LISTINGMODIFIEDDATETIME]     DATETIME        NOT NULL,
    [LISTINGMODIFIEDDATETIMETZID] INT             NOT NULL,
    [PRODUCT]                     BIGINT          NOT NULL,
    [PROCESSED]                   INT             NOT NULL,
    [STATUSDATETIME]              DATETIME        NOT NULL,
    [STATUSDATETIMETZID]          INT             NOT NULL,
    [STATUSMESSAGE]               NVARCHAR (2048) NOT NULL,
    [CHANNELBATCHID]              NVARCHAR (100)  NOT NULL,
    [CHANNELSTATE]                NVARCHAR (4000) NOT NULL,
    [LANGUAGEID]                  NVARCHAR (7)    NOT NULL,
    PRIMARY KEY NONCLUSTERED ([PRODUCT] ASC, [CATALOG] ASC, [CHANNEL] ASC, [LISTINGMODIFIEDDATETIME] ASC));


GO
PRINT N'Creating [crt].[RECORDIDSTABLETYPE]...';


GO
CREATE TYPE [crt].[RECORDIDSTABLETYPE] AS TABLE (
    [RECID]       BIGINT NOT NULL,
    [PARENTRECID] BIGINT NULL,
    PRIMARY KEY CLUSTERED ([RECID] ASC));


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONAFFILIATIONTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONAFFILIATIONTRANSTABLETYPE] AS TABLE (
    [AFFILIATION]   BIGINT        NOT NULL,
    [LOYALTYTIER]   BIGINT        NOT NULL,
    [TRANSACTIONID] NVARCHAR (44) NOT NULL,
    [TERMINALID]    NVARCHAR (10) NOT NULL,
    [RECEIPTID]     NVARCHAR (18) NOT NULL,
    [STAFFID]       NVARCHAR (25) NOT NULL,
    [STOREID]       NVARCHAR (10) NOT NULL,
    [DATAAREAID]    NVARCHAR (4)  NOT NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONPAYMENTTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONPAYMENTTRANSTABLETYPE] AS TABLE (
    [AMOUNTCUR]            NUMERIC (32, 16) NULL,
    [TENDERCUR]            NVARCHAR (3)     NULL,
    [EXCHRATECUR]          NUMERIC (32, 16) NULL,
    [AMOUNTTENDERED]       NUMERIC (32, 16) NULL,
    [EXCHRATEMST]          NUMERIC (32, 16) NULL,
    [AMOUNTMST]            NUMERIC (32, 16) NULL,
    [DATAAREAID]           NVARCHAR (4)     NULL,
    [LINENUM]              NUMERIC (32, 16) NULL,
    [PAYMENTCARDTOKEN]     NVARCHAR (MAX)   NOT NULL,
    [PAYMENTAUTHORIZATION] NVARCHAR (MAX)   NOT NULL,
    [ISPAYMENTCAPTURED]    INT              NOT NULL,
    [STORE]                NVARCHAR (10)    NULL,
    [TENDERTYPE]           NVARCHAR (10)    NULL,
    [CHANGELINE]           INT              NULL,
    [TERMINAL]             NVARCHAR (10)    NULL,
    [STAFF]                NVARCHAR (25)    NULL,
    [TRANSACTIONID]        NVARCHAR (44)    NULL,
    [SIGCAPDATA]           NVARCHAR (MAX)   NULL,
    [TRANSACTIONSTATUS]    INT              NULL,
    [RECEIPTID]            NVARCHAR (18)    NULL,
    [GIFTCARDID]           NVARCHAR (30)    NOT NULL,
    [ISPREPAYMENT]         INT              NOT NULL,
    [LOYALTYCARDID]        NVARCHAR (30)    NOT NULL,
    [CARDORACCOUNT]        NVARCHAR (30)    NOT NULL,
    [CARDTYPEID]           NVARCHAR (10)    NOT NULL,
    [CREDITVOUCHERID]      NVARCHAR (30)    NOT NULL,
    [TRANSDATE]            DATETIME         NULL,
    [TRANSTIME]            INT              NULL);


GO
PRINT N'Creating [crt].[PRODUCTATTRIBUTEVALUETABLETYPE]...';


GO
CREATE TYPE [crt].[PRODUCTATTRIBUTEVALUETABLETYPE] AS TABLE (
    [ATTRIBUTE]         BIGINT           NOT NULL,
    [BOOLEANVALUE]      INT              NULL,
    [CURRENCYCODE]      NVARCHAR (3)     NULL,
    [CURRENCYVALUE]     NUMERIC (32, 16) NULL,
    [DATETIMEVALUE]     DATETIME         NULL,
    [DATETIMEVALUETZID] INT              NULL,
    [FLOATUNITSYMBOL]   NVARCHAR (10)    NULL,
    [FLOATVALUE]        NUMERIC (32, 16) NULL,
    [INTUNITSYMBOL]     NVARCHAR (10)    NULL,
    [INTVALUE]          INT              NULL,
    [TEXTVALUE]         NVARCHAR (1999)  NULL,
    [LANGUAGE]          NVARCHAR (7)     NULL,
    [TRANSLATION]       NVARCHAR (1999)  NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONORDERINVOICETRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONORDERINVOICETRANSTABLETYPE] AS TABLE (
    [DATAAREAID]        NVARCHAR (4)     NULL,
    [STOREID]           NVARCHAR (10)    NULL,
    [TERMINALID]        NVARCHAR (10)    NULL,
    [TRANSACTIONID]     NVARCHAR (44)    NULL,
    [LINENUM]           NUMERIC (32, 16) NOT NULL,
    [TRANSACTIONSTATUS] INT              NULL,
    [INVOICEID]         NVARCHAR (10)    NULL,
    [AMOUNTCUR]         NUMERIC (32, 16) NULL);


GO
PRINT N'Creating [crt].[RECORDIDTABLETYPE]...';


GO
CREATE TYPE [crt].[RECORDIDTABLETYPE] AS TABLE (
    [RECID] BIGINT NOT NULL,
    PRIMARY KEY CLUSTERED ([RECID] ASC));


GO
PRINT N'Creating [crt].[EXTENSIONPROPERTIESTABLETYPE]...';


GO
CREATE TYPE [crt].[EXTENSIONPROPERTIESTABLETYPE] AS TABLE (
    [PARENTRECID]   BIGINT         NOT NULL,
    [PROPERTYNAME]  NVARCHAR (512) NOT NULL,
    [PROPERTYVALUE] NVARCHAR (512) NULL);


GO
PRINT N'Creating [crt].[LANGUAGEIDTABLETYPE]...';


GO
CREATE TYPE [crt].[LANGUAGEIDTABLETYPE] AS TABLE (
    [LANGUAGEID] NVARCHAR (7) NOT NULL PRIMARY KEY CLUSTERED ([LANGUAGEID] ASC));


GO
PRINT N'Creating [crt].[TENDERDROPTRANSTYPE]...';


GO
CREATE TYPE [crt].[TENDERDROPTRANSTYPE] AS TABLE (
    [AMOUNTCUR]         NUMERIC (32, 16) NOT NULL,
    [AMOUNTCURPOS]      NUMERIC (32, 16) NOT NULL,
    [AMOUNTMST]         NUMERIC (32, 16) NOT NULL,
    [AMOUNTMSTPOS]      NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDERED]    NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDEREDPOS] NUMERIC (32, 16) NOT NULL,
    [TYPE]              INT              NULL,
    [BANKBAGNO]         NVARCHAR (30)    NOT NULL,
    [CARDORACCOUNT]     NVARCHAR (30)    NOT NULL,
    [CARDTYPEID]        NVARCHAR (10)    NOT NULL,
    [CURRENCY]          NVARCHAR (3)     NOT NULL,
    [EXCHRATE]          NUMERIC (32, 16) NOT NULL,
    [EXCHRATEMST]       NUMERIC (32, 16) NOT NULL,
    [LINENUM]           NUMERIC (32, 16) NOT NULL,
    [QTY]               NUMERIC (32, 16) NOT NULL,
    [REPLICATED]        INT              NOT NULL,
    [SHIFT]             NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]         DATE             NOT NULL,
    [STAFF]             NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]     NVARCHAR (25)    NOT NULL,
    [STATUSTYPE]        INT              NOT NULL,
    [STORE]             NVARCHAR (10)    NOT NULL,
    [TENDERTYPE]        NVARCHAR (10)    NOT NULL,
    [TERMINAL]          NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]     NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS] INT              NOT NULL,
    [TRANSDATE]         DATE             NOT NULL,
    [TRANSTIME]         INT              NOT NULL,
    [DATAAREAID]        NVARCHAR (4)     NOT NULL);


GO
PRINT N'Creating [crt].[SHIFTTABLETYPE]...';


GO
CREATE TYPE [crt].[SHIFTTABLETYPE] AS TABLE (
    [CASHDRAWER]           NVARCHAR (512)   NULL,
    [CHANNEL]              BIGINT           NULL,
    [CLOSEDATE]            DATE             NULL,
    [CLOSEDATETIMEUTC]     DATETIME         NULL,
    [CLOSEDATETIMEUTCTZID] INT              NULL,
    [CLOSETIME]            INT              NULL,
    [CLOSEDATTERMINAL]     NVARCHAR (10)    NULL,
    [CURRENTTERMINALID]    NVARCHAR (10)    NULL,
    [CUSTOMERSCOUNT]       INT              NULL,
    [DISCOUNTTOTAL]        NUMERIC (32, 16) NULL,
    [LOGONSCOUNT]          INT              NULL,
    [NOSALECOUNT]          INT              NULL,
    [PAIDTOACCOUNTTOTAL]   NUMERIC (32, 16) NULL,
    [POSTED]               INT              NULL,
    [RETURNSTOTAL]         NUMERIC (32, 16) NULL,
    [ROUNDEDAMOUNTTOTAL]   NUMERIC (32, 16) NULL,
    [SALESCOUNT]           INT              NULL,
    [SALESTOTAL]           NUMERIC (32, 16) NULL,
    [SHIFTID]              BIGINT           NULL,
    [STAFFID]              NVARCHAR (25)    NULL,
    [CURRENTSTAFFID]       NVARCHAR (25)    NULL,
    [STARTDATE]            DATE             NULL,
    [STARTDATETIMEUTC]     DATETIME         NULL,
    [STARTDATETIMEUTCTZID] INT              NULL,
    [STARTTIME]            INT              NULL,
    [STATUS]               INT              NULL,
    [STATUSDATETIMEUTC]    DATETIME         NULL,
    [STOREID]              NVARCHAR (10)    NULL,
    [TAXTOTAL]             NUMERIC (32, 16) NULL,
    [TERMINALID]           NVARCHAR (10)    NULL,
    [TRANSACTIONSCOUNT]    INT              NULL,
    [VOIDSCOUNT]           INT              NULL,
    [ISSHARED]             BIT              NULL,
    [DATAAREAID]           NVARCHAR (4)     NULL);


GO
PRINT N'Creating [crt].[CUSTOMERADDRESSTABLETYPE]...';


GO
CREATE TYPE [crt].[CUSTOMERADDRESSTABLETYPE] AS TABLE (
    [RECORDID]                      BIGINT         NOT NULL,
    [ADDRESSTYPE]                   INT            NOT NULL,
    [NAME]                          NVARCHAR (60)  NULL,
    [FULLADDRESS]                   NVARCHAR (250) NULL,
    [STREETNUMBER]                  NVARCHAR (20)  NULL,
    [STREET]                        NVARCHAR (250) NULL,
    [POSTBOX]                       NVARCHAR (20)  NULL,
    [BUILDINGCOMPLIMENT]            NVARCHAR (60)  NULL,
    [CITY]                          NVARCHAR (60)  NULL,
    [COUNTY]                        NVARCHAR (10)  NULL,
    [DISTRICTNAME]                  NVARCHAR (60)  NULL,
    [STATE]                         NVARCHAR (10)  NULL,
    [ZIPCODE]                       NVARCHAR (10)  NULL,
    [THREELETTERISOREGIONNAME]      NVARCHAR (10)  NULL,
    [ISPRIMARY]                     INT            NOT NULL,
    [ISPRIVATE]                     INT            NOT NULL,
    [DIRPARTYRECORDID]              BIGINT         NOT NULL,
    [DIRPARTYLOCATIONRECORDID]      BIGINT         NOT NULL,
    [DIRPARTYLOCATIONROLERECORDID]  BIGINT         NOT NULL,
    [LOCATIONDESCRIPTION]           NVARCHAR (60)  NOT NULL,
    [LOCATOR]                       NVARCHAR (255) NULL,
    [LOGISTICSLOCATIONID]           NVARCHAR (30)  NULL,
    [LOGISTICSLOCATIONRECORDID]     BIGINT         NOT NULL,
    [TAXGROUP]                      NVARCHAR (10)  NOT NULL,
    [DEACTIVATE]                    BIT            NOT NULL,
    [SORTORDER]                     INT            NOT NULL,
    [EXPIRERECORDID]                BIGINT         NULL,
    [LOGISTICSLOCATIONROLERECORDID] BIGINT         NOT NULL,
    [LOGISTICSLOCATIONEXTRECORDID]  BIGINT         NOT NULL);


GO
PRINT N'Creating [crt].[AFFILIATIONLOYALTYTIERTABLETYPE]...';


GO
CREATE TYPE [crt].[AFFILIATIONLOYALTYTIERTABLETYPE] AS TABLE (
    [AFFILIATIONID] BIGINT NOT NULL,
    [LOYALTYTIERID] BIGINT NOT NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONATTRIBUTETRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONATTRIBUTETRANSTABLETYPE] AS TABLE (
    [DATAAREAID]    NVARCHAR (4)    NULL,
    [STORE]         NVARCHAR (10)   NULL,
    [TERMINAL]      NVARCHAR (10)   NULL,
    [TRANSACTIONID] NVARCHAR (44)   NULL,
    [TEXTVALUE]     NVARCHAR (1999) NULL,
    [NAME]          NVARCHAR (60)   NULL);


GO
PRINT N'Creating [crt].[PRICEACCOUNTRELATIONSTABLETYPE]...';


GO
CREATE TYPE [crt].[PRICEACCOUNTRELATIONSTABLETYPE] AS TABLE (
    [ACCOUNTRELATION] NVARCHAR (20) NOT NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSTABLETYPE] AS TABLE (
    [AFFILIATION]          BIGINT           NOT NULL,
    [CARDNUMBER]           NVARCHAR (30)    NOT NULL,
    [CUSTACCOUNT]          NVARCHAR (20)    NOT NULL,
    [ENTRYDATE]            DATE             NOT NULL,
    [ENTRYTIME]            INT              NOT NULL,
    [ENTRYTYPE]            INT              NOT NULL,
    [EXPIRATIONDATE]       DATE             NOT NULL,
    [LINENUM]              NUMERIC (32, 16) NOT NULL,
    [LOYALTYTIER]          BIGINT           NOT NULL,
    [RECEIPTID]            NVARCHAR (18)    NOT NULL,
    [REWARDPOINT]          BIGINT           NOT NULL,
    [REWARDPOINTAMOUNTQTY] NUMERIC (32, 16) NOT NULL,
    [STAFFID]              NVARCHAR (25)    NOT NULL,
    [STOREID]              NVARCHAR (10)    NOT NULL,
    [TERMINALID]           NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]        NVARCHAR (44)    NOT NULL,
    [DATAAREAID]           NVARCHAR (4)     NOT NULL);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONTAXTRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONTAXTRANSTABLETYPE] AS TABLE (
    [AMOUNT]            NUMERIC (32, 16) NULL,
    [DATAAREAID]        NVARCHAR (4)     NULL,
    [ISINCLUDEDINPRICE] INT              NULL,
    [SALELINENUM]       NUMERIC (32, 16) NULL,
    [STOREID]           NVARCHAR (10)    NULL,
    [TAXCODE]           NVARCHAR (10)    NULL,
    [TERMINALID]        NVARCHAR (10)    NULL,
    [TRANSACTIONID]     NVARCHAR (44)    NULL);


GO
PRINT N'Creating [crt].[CUSTOMERAFFILIATIONTABLETYPE]...';


GO
CREATE TYPE [crt].[CUSTOMERAFFILIATIONTABLETYPE] AS TABLE (
    [RECID]               BIGINT        NOT NULL,
    [CUSTACCOUNTNUM]      NVARCHAR (20) NULL,
    [RETAILAFFILIATIONID] BIGINT        NOT NULL);


GO
PRINT N'Creating [crt].[QUERYRESULTSETTINGSTABLETYPE]...';


GO
CREATE TYPE [crt].[QUERYRESULTSETTINGSTABLETYPE] AS TABLE (
    [SKIP]          BIGINT        NOT NULL,
    [TOP]           BIGINT        NOT NULL,
    [COUNTREQUIRED] BIT           NOT NULL,
    [ORDERBY]       NVARCHAR (60) NULL,
    [ASCENDING]     BIT           NULL);


GO
PRINT N'Creating [crt].[ITEMVARIANTINVENTDIMTABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMVARIANTINVENTDIMTABLETYPE] AS TABLE (
    [ITEMID]             NVARCHAR (20) NOT NULL,
    [VARIANTINVENTDIMID] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([ITEMID] ASC, [VARIANTINVENTDIMID] ASC));


GO
PRINT N'Creating [crt].[CUSTOMERELECTRONICADDRESSTABLETYPE]...';


GO
CREATE TYPE [crt].[CUSTOMERELECTRONICADDRESSTABLETYPE] AS TABLE (
    [METHODYTPE]                    INT            NOT NULL,
    [RECORDID]                      BIGINT         NOT NULL,
    [DIRPARTYLOCATIONRECORDID]      BIGINT         NOT NULL,
    [DIRPARTYRECORDID]              BIGINT         NOT NULL,
    [LOCATIONDESCRIPTION]           NVARCHAR (60)  NOT NULL,
    [LOCATOR]                       NVARCHAR (255) NULL,
    [LOCATOREXTENSION]              NVARCHAR (10)  NULL,
    [LOGISTICSLOCATIONID]           NVARCHAR (30)  NOT NULL,
    [LOGISTICSLOCATIONRECORDID]     BIGINT         NOT NULL,
    [PARENTLOCATION]                BIGINT         NOT NULL,
    [ISPRIMARY]                     INT            NOT NULL,
    [ISMOBILEPHONE]                 INT            NOT NULL,
    [ISPRIVATE]                     INT            NOT NULL,
    [DIRPARTYLOCATIONROLERECORDID]  BIGINT         NOT NULL,
    [LOGISTICSLOCATIONROLERECORDID] BIGINT         NOT NULL);


GO
PRINT N'Creating [crt].[ITEMRESERVATIONTABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMRESERVATIONTABLETYPE] AS TABLE (
    [RESERVATIONID]  UNIQUEIDENTIFIER NOT NULL,
    [ITEMID]         NVARCHAR (20)    NOT NULL,
    [INVENTDIMID]    NVARCHAR (20)    NOT NULL,
    [QUANTITY]       NUMERIC (32, 16) NOT NULL,
    [EXPIREDATETIME] DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([RESERVATIONID] ASC));


GO
PRINT N'Creating [crt].[ITEMWAREHOUSETABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMWAREHOUSETABLETYPE] AS TABLE (
    [ITEMID]             NVARCHAR (20) NOT NULL,
    [VARIANTINVENTDIMID] NVARCHAR (20) NOT NULL,
    [INVENTLOCATIONID]   NVARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([ITEMID] ASC, [VARIANTINVENTDIMID] ASC, [INVENTLOCATIONID] ASC));


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONINFOCODETRANSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONINFOCODETRANSTABLETYPE] AS TABLE (
    [TRANSACTIONID] NVARCHAR (44)    NOT NULL,
    [LINENUM]       NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]    NVARCHAR (4)     NULL,
    [TYPE]          INT              NOT NULL,
    [INFOCODEID]    NVARCHAR (10)    NOT NULL,
    [INFORMATION]   NVARCHAR (100)   NOT NULL,
    [INFOAMOUNT]    NUMERIC (32, 16) NOT NULL,
    [TRANSDATE]     DATETIME         NOT NULL,
    [TRANSTIME]     INT              NOT NULL,
    [STORE]         NVARCHAR (10)    NOT NULL,
    [TERMINAL]      NVARCHAR (10)    NOT NULL,
    [STAFF]         NVARCHAR (25)    NOT NULL,
    [ITEMTENDER]    NVARCHAR (10)    NOT NULL,
    [AMOUNT]        NUMERIC (32, 16) NOT NULL,
    [INPUTTYPE]     INT              NOT NULL,
    [SUBINFOCODEID] NVARCHAR (10)    NOT NULL,
    [STATEMENTCODE] NVARCHAR (25)    NOT NULL,
    [SOURCECODE]    NVARCHAR (20)    NOT NULL,
    [SOURCECODE2]   NVARCHAR (20)    NOT NULL,
    [SOURCECODE3]   NVARCHAR (20)    NOT NULL,
    [PARENTLINENUM] NUMERIC (32, 16) NOT NULL);


GO
PRINT N'Creating [crt].[PRODUCTREFINERVALUETABLETYPE]...';


GO
CREATE TYPE [crt].[PRODUCTREFINERVALUETABLETYPE] AS TABLE (
    [RECID]           BIGINT         NULL,
    [REFINERSOURCE]   INT            NOT NULL,
    [DATATYPE]        INT            NOT NULL,
    [LEFTVALUEBOUND]  NVARCHAR (MAX) NULL,
    [RIGHTVALUEBOUND] NVARCHAR (MAX) NULL,
    [UNIT]            NVARCHAR (10)  NULL);


GO
PRINT N'Creating [crt].[ITEMUNITCONVERSIONTABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMUNITCONVERSIONTABLETYPE] AS TABLE (
    [ITEMID]     NVARCHAR (20) NOT NULL,
    [FROMUNITID] NVARCHAR (10) NOT NULL,
    [TOUNITID]   NVARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([ITEMID] ASC, [FROMUNITID] ASC, [TOUNITID] ASC));


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONTAXTRANSINDIATABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILTRANSACTIONTAXTRANSINDIATABLETYPE] AS TABLE (
    [ISTAXONTAX]           INT              NULL,
    [SALELINENUM]          NUMERIC (32, 16) NULL,
    [STOREID]              NVARCHAR (10)    NULL,
    [TAXBASIS]             NUMERIC (32, 16) NULL,
    [TAXCODE]              NVARCHAR (10)    NOT NULL,
    [TAXCOMPONENT]         NVARCHAR (15)    NULL,
    [TAXFORMULA]           NVARCHAR (100)   NULL,
    [TAXISEXEMPT]          INT              NULL,
    [TAXISINCLUDEDINPRICE] INT              NULL,
    [TAXITEMGROUP]         NVARCHAR (10)    NULL,
    [TAXPERCENTAGE]        NUMERIC (32, 16) NULL,
    [TERMINALID]           NVARCHAR (10)    NULL,
    [TRANSACTIONID]        NVARCHAR (44)    NOT NULL,
    [DATAAREAID]           NVARCHAR (4)     NULL);


GO
PRINT N'Creating [crt].[PRODUCTCHANGETRACKINGANCHORSET]...';


GO
CREATE TYPE [crt].[PRODUCTCHANGETRACKINGANCHORSET] AS TABLE (
    [CHANNEL]                                  BIGINT NOT NULL,
    [ECORESPRODUCT]                            BIGINT NULL,
    [ECORESPRODUCTINSTANCEVALUE]               BIGINT NULL,
    [ECORESINSTANCEVALUE]                      BIGINT NULL,
    [ECORESATTRIBUTE]                          BIGINT NULL,
    [ECORESATTRIBUTEVALUE]                     BIGINT NULL,
    [ECORESVALUE]                              BIGINT NULL,
    [ECORESBOOLEANVALUE]                       BIGINT NULL,
    [ECORESDATETIMEVALUE]                      BIGINT NULL,
    [ECORESCURRENCYVALUE]                      BIGINT NULL,
    [ECORESFLOATVALUE]                         BIGINT NULL,
    [ECORESINTVALUE]                           BIGINT NULL,
    [ECORESREFERENCEVALUE]                     BIGINT NULL,
    [ECORESTEXTVALUE]                          BIGINT NULL,
    [ECORESTEXTVALUETRANSLATION]               BIGINT NULL,
    [ECORESPRODUCTTRANSLATION]                 BIGINT NULL,
    [ECORESPRODUCTVARIANTCOLOR]                BIGINT NULL,
    [ECORESPRODUCTVARIANTCONFIGURATION]        BIGINT NULL,
    [ECORESPRODUCTVARIANTDIMENSIONVALUE]       BIGINT NULL,
    [ECORESPRODUCTVARIANTSIZE]                 BIGINT NULL,
    [ECORESPRODUCTVARIANTSTYLE]                BIGINT NULL,
    [ECORESCOLOR]                              BIGINT NULL,
    [ECORESCONFIGURATION]                      BIGINT NULL,
    [ECORESSIZE]                               BIGINT NULL,
    [ECORESSTYLE]                              BIGINT NULL,
    [ECORESATTRIBUTEGROUPATTRIBUTE]            BIGINT NULL,
    [ECORESCATEGORYATTRIBUTEGROUP]             BIGINT NULL,
    [ECORESCATEGORYATTRIBUTELOOKUP]            BIGINT NULL,
    [ECORESDISTINCTPRODUCTVARIANT]             BIGINT NULL,
    [ECORESPRODUCTCATEGORY]                    BIGINT NULL,
    [RETAILCATEGORYCONTAINMENTLOOKUP]          BIGINT NULL,
    [RETAILPUBCATALOGPRODUCT]                  BIGINT NULL,
    [RETAILPUBCATALOGPRODUCTCATEGORY]          BIGINT NULL,
    [RETAILPUBCATALOGPRODUCTRELATION]          BIGINT NULL,
    [RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION] BIGINT NULL,
    [RETAILPUBINTERNALORGATTRIBUTEGROUP]       BIGINT NULL,
    [RETAILPUBINTORGINHERITANCEEXPLODED]       BIGINT NULL,
    [RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] BIGINT NULL,
    [RETAILPUBPRODUCTATTRIBUTEVALUE]           BIGINT NULL,
    [RETAILPUBRETAILCHANNELTABLE]              BIGINT NULL,
    [RETAILSHAREDPARAMETERS]                   BIGINT NULL,
    [RETAILSTANDARDATTRIBUTE]                  BIGINT NULL,
    [UNITOFMEASURE]                            BIGINT NULL,
    PRIMARY KEY CLUSTERED ([CHANNEL] ASC));


GO
PRINT N'Creating [crt].[SHIFTTENDERTRANSTYPE]...';


GO
CREATE TYPE [crt].[SHIFTTENDERTRANSTYPE] AS TABLE (
    [TENDEREDAMOUNT]    NUMERIC (32, 16) DEFAULT ((0)) NULL,
    [TENDERTYPEID]      NVARCHAR (20)    DEFAULT ('') NULL,
    [CURRENCY]          NVARCHAR (6)     DEFAULT ('') NULL,
    [TENDEREDAMOUNTCUR] NUMERIC (32, 16) DEFAULT ((0)) NULL,
    [CARDTYPEID]        NVARCHAR (10)    DEFAULT ('') NULL);


GO
PRINT N'Creating [crt].[CATALOGLISTMAPPINGTABLETYPE]...';


GO
CREATE TYPE [crt].[CATALOGLISTMAPPINGTABLETYPE] AS TABLE (
    [CATALOGID]  BIGINT        NOT NULL,
    [PRODUCTID]  BIGINT        NOT NULL,
    [LANGUAGEID] NVARCHAR (7)  NOT NULL,
    [TAG]        NVARCHAR (50) NOT NULL);


GO
PRINT N'Creating [crt].[SHIFTTENDERLINETABLETYPE]...';


GO
CREATE TYPE [crt].[SHIFTTENDERLINETABLETYPE] AS TABLE (
    [ADDTOTENDERAMOUNT]      NUMERIC (32, 16) NULL,
    [ADDTOTENDERAMOUNTCUR]   NUMERIC (32, 16) NULL,
    [BANKDROPAMOUNT]         NUMERIC (32, 16) NULL,
    [BANKDROPAMOUNTCUR]      NUMERIC (32, 16) NULL,
    [CARDTYPEID]             NVARCHAR (10)    NULL,
    [CHANGEAMOUNT]           NUMERIC (32, 16) NULL,
    [CHANGEAMOUNTCUR]        NUMERIC (32, 16) NULL,
    [CHANNEL]                BIGINT           NULL,
    [COUNT]                  INT              NULL,
    [COUNTINGREQUIRED]       INT              NULL,
    [CURRENCY]               NVARCHAR (3)     NULL,
    [DECLARETENDERAMOUNT]    NUMERIC (32, 16) NULL,
    [DECLARETENDERAMOUNTCUR] NUMERIC (32, 16) NULL,
    [REMOVETENDERAMOUNT]     NUMERIC (32, 16) NULL,
    [REMOVETENDERAMOUNTCUR]  NUMERIC (32, 16) NULL,
    [SAFEDROPAMOUNT]         NUMERIC (32, 16) NULL,
    [SAFEDROPAMOUNTCUR]      NUMERIC (32, 16) NULL,
    [SHIFTID]                BIGINT           NULL,
    [STARTINGAMOUNT]         NUMERIC (32, 16) NULL,
    [STARTINGAMOUNTCUR]      NUMERIC (32, 16) NULL,
    [STOREID]                NVARCHAR (10)    NULL,
    [TENDEREDAMOUNT]         NUMERIC (32, 16) NULL,
    [TENDEREDAMOUNTCUR]      NUMERIC (32, 16) NULL,
    [TENDERTYPEID]           NVARCHAR (10)    NULL,
    [TERMINALID]             NVARCHAR (10)    NULL,
    [DATAAREAID]             NVARCHAR (4)     NULL);


GO
PRINT N'Creating [crt].[CUSTOMERORDERTRANSACTIONTABLETYPE]...';


GO
CREATE TYPE [crt].[CUSTOMERORDERTRANSACTIONTABLETYPE] AS TABLE (
    [STORE]               NVARCHAR (10)    NOT NULL,
    [TERMINAL]            NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]       NVARCHAR (44)    NOT NULL,
    [DATAAREAID]          NVARCHAR (4)     NOT NULL,
    [CANCELLATIONCHARGE]  NUMERIC (32, 16) NULL,
    [DEPOSITOVERRIDE]     NUMERIC (32, 16) NULL,
    [REQUIREDDEPOSIT]     NUMERIC (32, 16) NOT NULL,
    [CALCULATEDDEPOSIT]   NUMERIC (32, 16) NOT NULL,
    [PREPAYMENTPAID]      NUMERIC (32, 16) NOT NULL,
    [PREPAYMENTINVOICED]  NUMERIC (32, 16) NOT NULL,
    [QUOTEEXPIRATIONDATE] DATETIME         NULL,
    [CUSTOMERORDERTYPE]   INT              NOT NULL,
    [CUSTOMERORDERMODE]   INT              NOT NULL);


GO
PRINT N'Creating [crt].[ITEMIDSEARCHTABLETYPE]...';


GO
CREATE TYPE [crt].[ITEMIDSEARCHTABLETYPE] AS TABLE (
    [ITEMID]      NVARCHAR (20) NOT NULL,
    [INVENTDIMID] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([ITEMID] ASC, [INVENTDIMID] ASC));


GO
PRINT N'Creating [crt].[PRICEGROUPTABLETYPE]...';


GO
CREATE TYPE [crt].[PRICEGROUPTABLETYPE] AS TABLE (
    [RECID]      BIGINT        NOT NULL,
    [PRICEGROUP] BIGINT        NOT NULL,
    [GROUPID]    NVARCHAR (10) NOT NULL);


GO
PRINT N'Creating [crt].[RETAILSHIPMENTPUBLISHINGSTATUSTABLETYPE]...';


GO
CREATE TYPE [crt].[RETAILSHIPMENTPUBLISHINGSTATUSTABLETYPE] AS TABLE (
    [SALESID]        NVARCHAR (40)   NOT NULL,
    [PACKINGSLIPID]  NVARCHAR (40)   NOT NULL,
    [PUBLISHSTATUS]  INT             NOT NULL,
    [PUBLISHMESSAGE] NVARCHAR (2048) NOT NULL,
    [CHANNELBATCHID] NVARCHAR (128)  NOT NULL,
    [CHANNELREFID]   NVARCHAR (128)  NOT NULL);


GO
PRINT N'Creating [crt].[WISHLISTTABLETYPE]...';


GO
CREATE TYPE [crt].[WISHLISTTABLETYPE] AS TABLE (
    [ID]           NVARCHAR (44)   NOT NULL,
    [CUSTOMERID]   NVARCHAR (20)   NOT NULL,
    [NAME]         NVARCHAR (128)  NOT NULL,
    [WISHLISTDATA] VARBINARY (MAX) NOT NULL,
    [FAVORITE]     BIT             NOT NULL,
    [RECURRING]    BIT             NOT NULL);


GO
PRINT N'Creating [crt].[CUSTOMERTABLETYPE]...';


GO
CREATE TYPE [crt].[CUSTOMERTABLETYPE] AS TABLE (
    [ACCOUNTNUMBER]           NVARCHAR (38)    NOT NULL,
    [BLOCKED]                 INT              NOT NULL,
    [CREDITLIMIT]             NUMERIC (32, 16) NULL,
    [CURRENCY]                NVARCHAR (3)     NOT NULL,
    [CUSTGROUP]               NVARCHAR (10)    NOT NULL,
    [DIRPARTYRECORDID]        BIGINT           NOT NULL,
    [INVOICEACCOUNT]          NVARCHAR (20)    NOT NULL,
    [LINEDISCOUNTGROUP]       NVARCHAR (10)    NOT NULL,
    [MULTILINEDISCOUNTGROUP]  NVARCHAR (10)    NOT NULL,
    [NAME]                    NVARCHAR (100)   NOT NULL,
    [PERSONNAMEID]            BIGINT           NULL,
    [FIRSTNAME]               NVARCHAR (25)    NULL,
    [MIDDLENAME]              NVARCHAR (25)    NULL,
    [LASTNAME]                NVARCHAR (25)    NULL,
    [ORGID]                   NVARCHAR (10)    NOT NULL,
    [PARTYNUMBER]             NVARCHAR (40)    NOT NULL,
    [PRICEGROUP]              NVARCHAR (10)    NOT NULL,
    [RECORDID]                BIGINT           NOT NULL,
    [RETAILCUSTTABLERECORDID] BIGINT           NOT NULL,
    [TAXGROUP]                NVARCHAR (10)    NOT NULL,
    [TOTALDISCOUNTGROUP]      NVARCHAR (10)    NOT NULL,
    [VATNUM]                  NVARCHAR (20)    NOT NULL,
    [LANGUAGEID]              NVARCHAR (7)     NULL,
    [INSTANCERELATIONTYPE]    BIGINT           NOT NULL,
    [RECEIPTEMAIL]            NVARCHAR (80)    NULL,
    [RECEIPTOPTION]           INT              NULL);


GO
PRINT N'Creating [crt].[RECORDIDLANGUAGETABLETYPE]...';


GO
CREATE TYPE [crt].[RECORDIDLANGUAGETABLETYPE] AS TABLE (
    [RECID]      BIGINT       NOT NULL,
    [LANGUAGEID] NVARCHAR (7) NOT NULL PRIMARY KEY CLUSTERED ([RECID] ASC, [LANGUAGEID] ASC));


GO
PRINT N'Creating [crt].[TENDERDECLARATIONTRANSTYPE]...';


GO
CREATE TYPE [crt].[TENDERDECLARATIONTRANSTYPE] AS TABLE (
    [AMOUNTCUR]         NUMERIC (32, 16) NOT NULL,
    [AMOUNTMST]         NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDERED]    NUMERIC (32, 16) NOT NULL,
    [CARDID]            NVARCHAR (10)    NOT NULL,
    [CURRENCY]          NVARCHAR (3)     NOT NULL,
    [EXCHRATE]          NUMERIC (32, 16) NOT NULL,
    [EXCHRATEMST]       NUMERIC (32, 16) NOT NULL,
    [LINENUM]           NUMERIC (32, 16) NOT NULL,
    [POSCURRENCY]       NVARCHAR (3)     NOT NULL,
    [QTY]               NUMERIC (32, 16) NOT NULL,
    [RECEIPTID]         NVARCHAR (18)    NOT NULL,
    [REPLICATED]        INT              NOT NULL,
    [SHIFT]             NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]         DATE             NOT NULL,
    [STAFF]             NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]     NVARCHAR (25)    NOT NULL,
    [STORE]             NVARCHAR (10)    NOT NULL,
    [TENDERTYPE]        NVARCHAR (10)    NOT NULL,
    [TERMINAL]          NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]     NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS] INT              NOT NULL,
    [TRANSDATE]         DATE             NOT NULL,
    [TRANSTIME]         INT              NOT NULL,
    [DATAAREAID]        NVARCHAR (4)     NOT NULL);


GO
PRINT N'Creating [crt].[RETAILSHIPMENTPUBLISHINGSTATUS]...';


GO
CREATE TABLE [crt].[RETAILSHIPMENTPUBLISHINGSTATUS] (
    [CHANNELID]            BIGINT          NOT NULL,
    [SALESID]              NVARCHAR (40)   NOT NULL,
    [PACKINGSLIPID]        NVARCHAR (40)   NOT NULL,
    [PUBLISHSTATUS]        INT             NOT NULL,
    [CHANNELBATCHID]       NVARCHAR (128)  NOT NULL,
    [CHANNELREFID]         NVARCHAR (128)  NOT NULL,
    [ROWVERSION]           TIMESTAMP       NOT NULL,
    [LASTMODIFIEDDATETIME] DATETIME        NOT NULL,
    [PUBLISHMESSAGE]       NVARCHAR (2048) NOT NULL,
    CONSTRAINT [PK_RETAILSHIPMENTPUBLISHINGSTATUS] PRIMARY KEY CLUSTERED ([CHANNELID] ASC, [SALESID] ASC, [PACKINGSLIPID] ASC)
);


GO
PRINT N'Creating [crt].[PICKINGLISTLINE]...';


GO
CREATE TABLE [crt].[PICKINGLISTLINE] (
    [RECID]               BIGINT           NOT NULL,
    [ORDERID]             NVARCHAR (50)    NOT NULL,
    [ITEMID]              NVARCHAR (20)    NOT NULL,
    [ITEMNAME]            NVARCHAR (60)    NULL,
    [INVENTDIMID]         NVARCHAR (20)    NULL,
    [PURCHASERECEIVEDNOW] NUMERIC (28, 12) NULL,
    [INVENTBATCHID]       NVARCHAR (10)    NULL,
    [INVENTSITEID]        NVARCHAR (10)    NULL,
    [INVENTLOCATIONID]    NVARCHAR (20)    NULL,
    [CONFIGID]            NVARCHAR (10)    NULL,
    [INVENTSERIALID]      NVARCHAR (10)    NULL,
    [INVENTSIZEID]        NVARCHAR (10)    NULL,
    [INVENTCOLORID]       NVARCHAR (10)    NULL,
    [INVENTSTYLEID]       NVARCHAR (10)    NULL,
    [DELIVERYMETHOD]      NVARCHAR (60)    NOT NULL,
    CONSTRAINT [PK_PICKINGLISTLINE] PRIMARY KEY CLUSTERED ([ORDERID] ASC, [RECID] ASC)
);


GO
PRINT N'Creating [crt].[RETAILCHANNELPROPERTIES]...';


GO
CREATE TABLE [crt].[RETAILCHANNELPROPERTIES] (
    [RECID]      BIGINT         NULL,
    [CHANNEL]    BIGINT         NOT NULL,
    [NAME]       NVARCHAR (128) NOT NULL,
    [VALUE]      NVARCHAR (MAX) NOT NULL,
    [ROWVERSION] ROWVERSION     NOT NULL,
    CONSTRAINT [PK_RETAILCHANNELPROPERTIES] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [NAME] ASC)
);


GO
PRINT N'Creating [crt].[RETAILSTOCKCOUNTJOURNALS]...';


GO
CREATE TABLE [crt].[RETAILSTOCKCOUNTJOURNALS] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [RECID]       VARCHAR (50)  NOT NULL,
    [JOURNALID]   NVARCHAR (50) NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [PK_RETAILSTOCKCOUNTJOURNALS] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[CATALOGLISTMAPPING]...';


GO
CREATE TABLE [crt].[CATALOGLISTMAPPING] (
    [CHANNELID]    BIGINT        NOT NULL,
    [CATALOGID]    BIGINT        NOT NULL,
    [LISTINGRECID] BIGINT        NOT NULL,
    [LANGUAGEID]   NVARCHAR (7)  NOT NULL,
    [LISTID]       NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_CATALOGLISTMAPPING] PRIMARY KEY CLUSTERED ([CHANNELID] ASC, [CATALOGID] ASC, [LISTINGRECID] ASC, [LANGUAGEID] ASC, [LISTID] ASC)
);


GO
PRINT N'Creating [crt].[CATALOGLISTMAPPING].[IX_CATALOGLISTMAPPING_CHAN_LISTING]...';


GO
CREATE NONCLUSTERED INDEX [IX_CATALOGLISTMAPPING_CHAN_LISTING]
    ON [crt].[CATALOGLISTMAPPING]([CHANNELID] ASC, [LISTINGRECID] ASC)
    INCLUDE([CATALOGID], [LANGUAGEID], [LISTID]);


GO
PRINT N'Creating [crt].[RETAILSTAFFLOGINLOG]...';


GO
CREATE TABLE [crt].[RETAILSTAFFLOGINLOG] (
    [CHANNELID]       NVARCHAR (10) NOT NULL,
    [TERMINALID]      NVARCHAR (10) NOT NULL,
    [STAFFID]         NVARCHAR (25) NOT NULL,
    [DATAAREAID]      NVARCHAR (4)  NOT NULL,
    [CREATEDDATETIME] DATETIME      NOT NULL,
    CONSTRAINT [PK_RETAILSTAFFLOGINLOG] PRIMARY KEY CLUSTERED ([DATAAREAID] ASC, [CHANNELID] ASC, [TERMINALID] ASC, [STAFFID] ASC)
);


GO
PRINT N'Creating [crt].[RETAILCATALOGPUBLISHINGSYNCSTATE]...';


GO
CREATE TABLE [crt].[RETAILCATALOGPUBLISHINGSYNCSTATE] (
    [DESTINATIONID]   UNIQUEIDENTIFIER NOT NULL,
    [TABLENAME]       NVARCHAR (50)    NOT NULL,
    [LASTSYNCVERSION] BIGINT           NOT NULL,
    CONSTRAINT [PK_RETAILCATALOGPUBLISHINGSYNCSTATE] PRIMARY KEY CLUSTERED ([DESTINATIONID] ASC, [TABLENAME] ASC)
);


GO
PRINT N'Creating [crt].[CHANNELREFINABLEATTRIBUTE]...';


GO
CREATE TABLE [crt].[CHANNELREFINABLEATTRIBUTE] (
    [CHANNEL]   BIGINT        NOT NULL,
    [ATTRIBUTE] BIGINT        NOT NULL,
    [KEYNAME]   NVARCHAR (80) NOT NULL,
    [DATATYPE]  INT           NOT NULL
);


GO
PRINT N'Creating [crt].[CHANNELREFINABLEATTRIBUTE].[IX_CHANNELREFINABLEATTRIBUTE]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_CHANNELREFINABLEATTRIBUTE]
    ON [crt].[CHANNELREFINABLEATTRIBUTE]([CHANNEL] ASC, [ATTRIBUTE] ASC);


GO
PRINT N'Creating [crt].[PRODUCTASSORTMENTRULES_V2]...';


GO
CREATE TABLE [crt].[PRODUCTASSORTMENTRULES_V2] (
    [ASSORTMENTID] BIGINT NOT NULL,
    [PRODUCTID]    BIGINT NOT NULL,
    [VALIDFROM]    DATE   NOT NULL,
    [VALIDTO]      DATE   NOT NULL
);


GO
PRINT N'Creating [crt].[PRODUCTASSORTMENTRULES_V2].[IX_PRODUCTASSORTMENTRULES]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_PRODUCTASSORTMENTRULES]
    ON [crt].[PRODUCTASSORTMENTRULES_V2]([PRODUCTID] ASC, [ASSORTMENTID] ASC, [VALIDFROM] ASC, [VALIDTO] ASC);


GO
PRINT N'Creating [crt].[CATALOGDEFINITION]...';


GO
CREATE TABLE [crt].[CATALOGDEFINITION] (
    [CHANNELID]        BIGINT        NOT NULL,
    [LISTID]           NVARCHAR (50) NOT NULL,
    [ATTRIBUTERECID]   BIGINT        NOT NULL,
    [LISTGROUPID]      BIGINT        NOT NULL,
    [ATTRIBUTEKEYNAME] NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_CATALOGDEFINITION] PRIMARY KEY CLUSTERED ([CHANNELID] ASC, [LISTID] ASC, [ATTRIBUTERECID] ASC)
);


GO
PRINT N'Creating [crt].[CATALOGDEFINITION].[IX_CATALOGDEFINITION_LISTDEFINITION]...';


GO
CREATE NONCLUSTERED INDEX [IX_CATALOGDEFINITION_LISTDEFINITION]
    ON [crt].[CATALOGDEFINITION]([LISTID] ASC);


GO
PRINT N'Creating [crt].[CATALOGDEFINITION].[IX_CATALOGDEFINITION_LISTGROUPS]...';


GO
CREATE NONCLUSTERED INDEX [IX_CATALOGDEFINITION_LISTGROUPS]
    ON [crt].[CATALOGDEFINITION]([LISTID] ASC, [ATTRIBUTERECID] ASC, [ATTRIBUTEKEYNAME] ASC, [LISTGROUPID] ASC);


GO
PRINT N'Creating [crt].[PURCHASEORDERLINE]...';


GO
CREATE TABLE [crt].[PURCHASEORDERLINE] (
    [RECID]               BIGINT           NOT NULL,
    [ORDERID]             NVARCHAR (50)    NOT NULL,
    [LINERECEIPTNUMBER]   NVARCHAR (20)    NULL,
    [ITEMID]              NVARCHAR (20)    NOT NULL,
    [ITEMNAME]            NVARCHAR (60)    NULL,
    [UNIQUEIDENTIFIER]    NVARCHAR (50)    NULL,
    [INVENTDIMID]         NVARCHAR (20)    NULL,
    [QUANTITYORDERED]     NUMERIC (28, 12) NULL,
    [PURCHASEQUANTITY]    NUMERIC (28, 12) NULL,
    [PURCHASEUNIT]        NVARCHAR (10)    NULL,
    [PURCHASERECEIVED]    NUMERIC (28, 12) NULL,
    [PURCHASERECEIVEDNOW] NUMERIC (28, 12) NULL,
    [INVENTBATCHID]       NVARCHAR (10)    NULL,
    [INVENTSITEID]        NVARCHAR (10)    NULL,
    [INVENTLOCATIONID]    NVARCHAR (20)    NULL,
    [CONFIGID]            NVARCHAR (10)    NOT NULL,
    [INVENTSERIALID]      NVARCHAR (10)    NULL,
    [INVENTSIZEID]        NVARCHAR (10)    NOT NULL,
    [INVENTCOLORID]       NVARCHAR (10)    NOT NULL,
    [INVENTSTYLEID]       NVARCHAR (10)    NOT NULL,
    [RECEIPTDATE]         DATETIME         NULL,
    [DELIVERYMETHOD]      NVARCHAR (60)    NOT NULL,
    CONSTRAINT [PK_PURCHASEORDERLINE] PRIMARY KEY CLUSTERED ([ORDERID] ASC, [RECID] ASC, [ITEMID] ASC, [CONFIGID] ASC, [INVENTCOLORID] ASC, [INVENTSIZEID] ASC, [INVENTSTYLEID] ASC)
);


GO
PRINT N'Creating [crt].[DOWNLOADSESSIONLOG]...';


GO
CREATE TABLE [crt].[DOWNLOADSESSIONLOG] (
    [ID]                BIGINT         IDENTITY (1, 1) NOT NULL,
    [DOWNLOADSESSIONID] BIGINT         NOT NULL,
    [STATUS]            INT            NOT NULL,
    [MESSAGE]           NVARCHAR (MAX) NULL,
    [DATECREATED]       DATETIME       NOT NULL,
    [TIMESTAMP]         ROWVERSION     NOT NULL,
    CONSTRAINT [PK_DOWNLOADSESSIONLOG] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[DOWNLOADSESSIONLOG].[IX_DOWNLOADSESSIONLOG_DOWNLOADSESSIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DOWNLOADSESSIONLOG_DOWNLOADSESSIONID]
    ON [crt].[DOWNLOADSESSIONLOG]([DOWNLOADSESSIONID] ASC);


GO
PRINT N'Creating [crt].[DOWNLOADSESSION]...';


GO
CREATE TABLE [crt].[DOWNLOADSESSION] (
    [ID]             BIGINT         NOT NULL,
    [JOBID]          NVARCHAR (20)  NOT NULL,
    [FILESIZE]       BIGINT         NOT NULL,
    [CHECKSUM]       NVARCHAR (64)  NOT NULL,
    [DATEREQUESTED]  DATETIME       NULL,
    [DATEDOWNLOADED] DATETIME       NULL,
    [DATEAPPLIED]    DATETIME       NULL,
    [STATUS]         INT            NOT NULL,
    [MESSAGE]        NVARCHAR (MAX) NULL,
    [JOBDESCRIPTION] NVARCHAR (120) NOT NULL,
    CONSTRAINT [PK_DOWNLOADSESSION] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[DOWNLOADSESSION].[IX_DOWNLOADSESSION_DATEREQUESTED]...';


GO
CREATE NONCLUSTERED INDEX [IX_DOWNLOADSESSION_DATEREQUESTED]
    ON [crt].[DOWNLOADSESSION]([DATEREQUESTED] ASC);


GO
PRINT N'Creating [crt].[RETAILUPGRADEHISTORY]...';


GO
CREATE TABLE [crt].[RETAILUPGRADEHISTORY] (
    [ID]          INT             IDENTITY (1, 1) NOT NULL,
    [UPGRADETYPE] NVARCHAR (50)   NOT NULL,
    [FILEPATH]    NVARCHAR (1000) NULL,
    [FILENAME]    NVARCHAR (300)  NULL,
    [BUILD]       NVARCHAR (300)  NULL,
    [DATEAPPLIED] DATETIME        NULL,
    CONSTRAINT [PK_RETAILUPGRADEHISTORY] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[RETAILUPGRADEHISTORY].[IX_RETAILUPGRADEHISTORY_UPGRADETYPE_FILENAME]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_RETAILUPGRADEHISTORY_UPGRADETYPE_FILENAME]
    ON [crt].[RETAILUPGRADEHISTORY]([UPGRADETYPE] ASC, [FILENAME] ASC);


GO
PRINT N'Creating [crt].[RETAILSTOCKCOUNT]...';


GO
CREATE TABLE [crt].[RETAILSTOCKCOUNT] (
    [ID]            INT              IDENTITY (1, 1) NOT NULL,
    [JOURNALID]     NVARCHAR (50)    NOT NULL,
    [RECID]         BIGINT           NULL,
    [OPERATIONTYPE] INT              NULL,
    [ITEMID]        NVARCHAR (20)    NOT NULL,
    [ITEMNAME]      NVARCHAR (60)    NULL,
    [COUNTED]       NUMERIC (28, 12) NULL,
    [QUANTITY]      NUMERIC (28, 12) NULL,
    [UNIT]          NVARCHAR (10)    NULL,
    [USERID]        NVARCHAR (10)    NULL,
    [TERMINALID]    NVARCHAR (10)    NULL,
    [COUNTDATE]     DATETIME         NULL,
    [STATUS]        INT              NULL,
    [INVENTSIZEID]  NVARCHAR (10)    NOT NULL,
    [INVENTCOLORID] NVARCHAR (10)    NOT NULL,
    [INVENTSTYLEID] NVARCHAR (10)    NOT NULL,
    [CONFIGID]      NVARCHAR (10)    NOT NULL,
    [TRACKINGGUID]  UNIQUEIDENTIFIER NOT NULL,
    [ROWVERSION]    TIMESTAMP        NOT NULL,
    CONSTRAINT [PK_RETAILSTOCKCOUNT] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[CUSTOMERORDERTRANSACTION]...';


GO
CREATE TABLE [crt].[CUSTOMERORDERTRANSACTION] (
    [CHANNEL]             BIGINT           NOT NULL,
    [STORE]               NVARCHAR (10)    NOT NULL,
    [TERMINAL]            NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]       NVARCHAR (44)    NOT NULL,
    [DATAAREAID]          NVARCHAR (4)     NOT NULL,
    [CANCELLATIONCHARGE]  NUMERIC (32, 16) NULL,
    [DEPOSITOVERRIDE]     NUMERIC (32, 16) NULL,
    [REQUIREDDEPOSIT]     NUMERIC (32, 16) NOT NULL,
    [CALCULATEDDEPOSIT]   NUMERIC (32, 16) NOT NULL,
    [PREPAYMENTPAID]      NUMERIC (32, 16) NOT NULL,
    [PREPAYMENTINVOICED]  NUMERIC (32, 16) NOT NULL,
    [ROWVERSION]          TIMESTAMP        NOT NULL,
    [QUOTEEXPIRATIONDATE] DATETIME         NULL,
    [CUSTOMERORDERTYPE]   INT              NOT NULL,
    [CUSTOMERORDERMODE]   INT              NOT NULL,
    CONSTRAINT [PK_RETAILCUSTOMERORDERTRANSACTIONTABLE] PRIMARY KEY CLUSTERED ([STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [CHANNEL] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [crt].[DOWNLOADSESSIONDATAFILEHISTORY]...';


GO
CREATE TABLE [crt].[DOWNLOADSESSIONDATAFILEHISTORY] (
    [ID]           BIGINT         IDENTITY (1, 1) NOT NULL,
    [DATAFILENAME] NVARCHAR (260) NOT NULL,
    [DATECREATED]  DATETIME       NULL,
    CONSTRAINT [PK_DOWNLOADSESSIONDATAFILEHISTORY_ID] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[DOWNLOADSESSIONDATAFILEHISTORY].[IX_DOWNLOADSESSIONDATAFILEHISTORY_DATECREATED]...';


GO
CREATE NONCLUSTERED INDEX [IX_DOWNLOADSESSIONDATAFILEHISTORY_DATECREATED]
    ON [crt].[DOWNLOADSESSIONDATAFILEHISTORY]([DATECREATED] ASC);


GO
PRINT N'Creating [crt].[DOWNLOADSESSIONDATAFILEHISTORY].[IX_DOWNLOADSESSIONDATAFILEHISTORY_DATAFILENAME]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_DOWNLOADSESSIONDATAFILEHISTORY_DATAFILENAME]
    ON [crt].[DOWNLOADSESSIONDATAFILEHISTORY]([DATAFILENAME] ASC);


GO
PRINT N'Creating [crt].[SALESTRANSACTION]...';


GO
CREATE TABLE [crt].[SALESTRANSACTION] (
    [TRANSACTIONID]    NVARCHAR (44)    NOT NULL,
    [CHANNELID]        BIGINT           NOT NULL,
    [TERMINALID]       NVARCHAR (10)    NOT NULL,
    [CUSTOMERID]       NVARCHAR (38)    NULL,
    [NAME]             NVARCHAR (128)   NULL,
    [BYTELENGTH]       INT              NOT NULL,
    [TRANSACTIONDATA]  VARBINARY (MAX)  NOT NULL,
    [CREATEDDATETIME]  DATETIME         NOT NULL,
    [MODIFIEDDATETIME] DATETIME         NOT NULL,
    [DELETEDDATETIME]  DATETIME         NULL,
    [ROWVERSION]       ROWVERSION       NOT NULL,
    [ISSUSPENDED]      BIT              NOT NULL,
    [COMMENT]          NVARCHAR (60)    NULL,
    [TYPE]             INT              NOT NULL,
    [STAFF]            NVARCHAR (25)    NOT NULL,
    [AMOUNT]           NUMERIC (32, 16) NOT NULL,
    CONSTRAINT [PK_SALESTRANSACTION] PRIMARY KEY CLUSTERED ([TRANSACTIONID] ASC)
);


GO
PRINT N'Creating [crt].[SALESTRANSACTION].[IX_SALESTRANSACTION_CUSTOMERID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SALESTRANSACTION_CUSTOMERID]
    ON [crt].[SALESTRANSACTION]([CUSTOMERID] ASC);


GO
PRINT N'Creating [crt].[SALESTRANSACTION].[IX_SALESTRANSACTION_MODIFIEDDATETIME]...';


GO
CREATE NONCLUSTERED INDEX [IX_SALESTRANSACTION_MODIFIEDDATETIME]
    ON [crt].[SALESTRANSACTION]([MODIFIEDDATETIME] ASC);


GO
PRINT N'Creating [crt].[RETAILSHIFTUSERSSTAGINGTABLE]...';


GO
CREATE TABLE [crt].[RETAILSHIFTUSERSSTAGINGTABLE] (
    [CHANNEL]            BIGINT        NOT NULL,
    [TERMINALID]         NVARCHAR (10) NOT NULL,
    [ORIGINALTERMINALID] NVARCHAR (10) NOT NULL,
    [SHIFTID]            BIGINT        NOT NULL,
    [STAFFID]            NVARCHAR (25) NOT NULL,
    [DATAAREAID]         NVARCHAR (4)  NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [PK_RETAILSHIFTUSERSSTAGINGTABLE] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [TERMINALID] ASC, [ORIGINALTERMINALID] ASC, [SHIFTID] ASC, [STAFFID] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [crt].[TMPASSORTEDPRODUCTS]...';


GO
CREATE TABLE [crt].[TMPASSORTEDPRODUCTS] (
    [CHANNELID] BIGINT        NOT NULL,
    [ITEMID]    NVARCHAR (20) NOT NULL,
    [PRODUCTID] BIGINT        NOT NULL,
    [VALIDFROM] DATE          NOT NULL,
    [VALIDTO]   DATE          NOT NULL,
    CONSTRAINT [PK_TMPASSORTEDPRODUCTS] PRIMARY KEY CLUSTERED ([CHANNELID] ASC, [PRODUCTID] ASC)
);


GO
PRINT N'Creating [crt].[PRODUCTCATEGORYRULES]...';


GO
CREATE TABLE [crt].[PRODUCTCATEGORYRULES] (
    [CHANNELID]  BIGINT NOT NULL,
    [CATALOGID]  BIGINT NOT NULL,
    [CATEGORYID] BIGINT NOT NULL,
    [PRODUCTID]  BIGINT NOT NULL,
    [VALIDFROM]  DATE   NULL,
    [VALIDTO]    DATE   NULL
);


GO
PRINT N'Creating [crt].[PRODUCTCATEGORYRULES].[IX_PRODUCTCATEGORYRULES]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_PRODUCTCATEGORYRULES]
    ON [crt].[PRODUCTCATEGORYRULES]([CHANNELID] ASC, [CATALOGID] ASC, [CATEGORYID] ASC, [PRODUCTID] ASC, [VALIDFROM] ASC, [VALIDTO] ASC);


GO
PRINT N'Creating [crt].[PRODUCTCATEGORYRULES].[IX_PRODUCTCATEGORYRULES_CHANNELID_CATALOGID_CATEGORYID]...';


GO
CREATE NONCLUSTERED INDEX [IX_PRODUCTCATEGORYRULES_CHANNELID_CATALOGID_CATEGORYID]
    ON [crt].[PRODUCTCATEGORYRULES]([CHANNELID] ASC, [CATALOGID] ASC, [CATEGORYID] ASC)
    INCLUDE([PRODUCTID], [VALIDFROM], [VALIDTO]);


GO
PRINT N'Creating [crt].[PRODUCTCATEGORYRULES].[IX_PRODUCTCATEGORYRULES_CHANNELID_CATALOGID]...';


GO
CREATE NONCLUSTERED INDEX [IX_PRODUCTCATEGORYRULES_CHANNELID_CATALOGID]
    ON [crt].[PRODUCTCATEGORYRULES]([CHANNELID] ASC, [CATALOGID] ASC)
    INCLUDE([CATEGORYID], [PRODUCTID], [VALIDFROM], [VALIDTO]);


GO
PRINT N'Creating [crt].[TABLEREPLICATIONLOG]...';


GO
CREATE TABLE [crt].[TABLEREPLICATIONLOG] (
    [ID]              BIGINT        IDENTITY (1, 1) NOT NULL,
    [UPLOADSESSIONID] BIGINT        NOT NULL,
    [TABLENAME]       NVARCHAR (50) NOT NULL,
    [FILTERFIELDNAME] NVARCHAR (50) NOT NULL,
    [FILTERMIN]       BIGINT        NOT NULL,
    [FILTERMAX]       BIGINT        NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[TABLEREPLICATIONLOG].[IX_TABLEREPLICATIONLOG_UPLOADSESSIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_TABLEREPLICATIONLOG_UPLOADSESSIONID]
    ON [crt].[TABLEREPLICATIONLOG]([UPLOADSESSIONID] ASC);


GO
PRINT N'Creating [crt].[RETAILSHIFTSTAGINGTABLE]...';


GO
CREATE TABLE [crt].[RETAILSHIFTSTAGINGTABLE] (
    [CHANNEL]           BIGINT         NOT NULL,
    [TERMINALID]        NVARCHAR (10)  NOT NULL,
    [STOREID]           NVARCHAR (10)  NOT NULL,
    [SHIFTID]           BIGINT         NOT NULL,
    [STAFFID]           NVARCHAR (25)  NOT NULL,
    [CURRENTSTAFFID]    NVARCHAR (25)  NULL,
    [STATUS]            INT            NOT NULL,
    [CURRENTTERMINALID] NVARCHAR (10)  NULL,
    [ISSHARED]          BIT            NULL,
    [STARTDATETIMEUTC]  DATETIME       NOT NULL,
    [STATUSDATETIMEUTC] DATETIME       NULL,
    [DATAAREAID]        NVARCHAR (4)   NOT NULL,
    [CASHDRAWER]        NVARCHAR (512) NULL,
    [ROWVERSION]        TIMESTAMP      NOT NULL,
    CONSTRAINT [PK_RETAILSHIFTSTAGINGTABLE] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [TERMINALID] ASC, [SHIFTID] ASC)
);


GO
PRINT N'Creating [crt].[UPLOADSESSION]...';


GO
CREATE TABLE [crt].[UPLOADSESSION] (
    [ID]             BIGINT          IDENTITY (1, 1) NOT NULL,
    [JOBID]          NVARCHAR (20)   NOT NULL,
    [JOBDESCRIPTION] NVARCHAR (120)  NULL,
    [STATUS]         INT             NOT NULL,
    [MESSAGE]        NVARCHAR (MAX)  NULL,
    [UPLOADPATH]     NVARCHAR (1024) NULL,
    [DATECREATED]    DATETIME        NULL,
    [DATEUPLOADED]   DATETIME        NULL,
    [FILESIZE]       BIGINT          NOT NULL,
    [CHECKSUM]       NVARCHAR (64)   NULL,
    CONSTRAINT [PK_UPLOADSESSION] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[UPLOADSESSION].[IX_UPLOADSESSION_DATEUPLOADED]...';


GO
CREATE NONCLUSTERED INDEX [IX_UPLOADSESSION_DATEUPLOADED]
    ON [crt].[UPLOADSESSION]([DATEUPLOADED] ASC);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONPROPERTIES]...';


GO
CREATE TABLE [crt].[RETAILTRANSACTIONPROPERTIES] (
    [DATAAREAID]    NVARCHAR (4)     NOT NULL,
    [CHANNEL]       BIGINT           NOT NULL,
    [STOREID]       NVARCHAR (10)    NOT NULL,
    [TERMINALID]    NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID] NVARCHAR (44)    NOT NULL,
    [SALELINENUM]   NUMERIC (32, 16) NOT NULL,
    [NAME]          NVARCHAR (128)   NOT NULL,
    [VALUE]         NVARCHAR (2000)  NOT NULL,
    CONSTRAINT [PK_RETAILTRANSACTIONPROPERTIES] PRIMARY KEY CLUSTERED ([DATAAREAID] ASC, [CHANNEL] ASC, [STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [SALELINENUM] ASC, [NAME] ASC)
);


GO
PRINT N'Creating [crt].[RETAILOFFLINESYNCLOG]...';


GO
CREATE TABLE [crt].[RETAILOFFLINESYNCLOG] (
    [RECID]              BIGINT        NOT NULL,
    [LOGTIME]            DATETIME      NOT NULL,
    [LOGTIMETZID]        INT           NOT NULL,
    [SCOPEID]            BIGINT        NOT NULL,
    [TOTALDOWNLOADED]    INT           NOT NULL,
    [TOTALDOWNLOADEDOK]  INT           NOT NULL,
    [TOTALDOWNLOADEDERR] INT           NOT NULL,
    [TOTALUPLOADED]      INT           NOT NULL,
    [TOTALUPLOADEDOK]    INT           NOT NULL,
    [TOTALUPLOADEDERR]   INT           NOT NULL,
    [SYNCSTARTTIME]      DATETIME      NOT NULL,
    [SYNCSTARTTIMETZID]  INT           NOT NULL,
    [SYNCSTOPTIME]       DATETIME      NOT NULL,
    [SYNCSTOPTIMETZID]   INT           NOT NULL,
    [TERMINAL]           NVARCHAR (10) NOT NULL,
    [REPLICATIONCOUNTER] INT           IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_RETAILOFFLINESYNCLOG] PRIMARY KEY CLUSTERED ([REPLICATIONCOUNTER] ASC)
);


GO
PRINT N'Creating [crt].[RETAILOFFLINESYNCLOG].[IX_RETAILOFFLINESYNCLOG_TERMINALID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILOFFLINESYNCLOG_TERMINALID]
    ON [crt].[RETAILOFFLINESYNCLOG]([TERMINAL] ASC);


GO
PRINT N'Creating [crt].[RETAILOFFLINESYNCLOG].[IX_RETAILOFFLINESYNCLOG_SYNCSTOPTIME]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILOFFLINESYNCLOG_SYNCSTOPTIME]
    ON [crt].[RETAILOFFLINESYNCLOG]([SYNCSTOPTIME] ASC);


GO
PRINT N'Creating [crt].[RETAILOFFLINESYNCLOG].[IX_RETAILOFFLINESYNCLOG_SCOPEID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILOFFLINESYNCLOG_SCOPEID]
    ON [crt].[RETAILOFFLINESYNCLOG]([SCOPEID] ASC);


GO
PRINT N'Creating [crt].[RETAILCUSTOMEREMAILACTIVATION]...';


GO
CREATE TABLE [crt].[RETAILCUSTOMEREMAILACTIVATION] (
    [ACTIVATIONID]          UNIQUEIDENTIFIER NOT NULL,
    [EMAIL]                 NVARCHAR (100)   NOT NULL,
    [LASTMODIFIEDTIME]      DATETIME         NOT NULL,
    [STATUS]                INT              NOT NULL,
    [EXTERNALIDENTITYID]    NVARCHAR (500)   NULL,
    [IDENTITYPROVIDERRECID] BIGINT           NULL,
    [CUSTOMERACCOUNTNUMBER] NVARCHAR (20)    NOT NULL,
    CONSTRAINT [PK_RETAILCUSTOMEREMAILACTIVATION] PRIMARY KEY CLUSTERED ([ACTIVATIONID] ASC)
);


GO
PRINT N'Creating [crt].[RETAILCUSTOMEREMAILACTIVATION].[IX_RETAILCUSTOMEREMAILACTIVATION_GROUPS]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILCUSTOMEREMAILACTIVATION_GROUPS]
    ON [crt].[RETAILCUSTOMEREMAILACTIVATION]([ACTIVATIONID] ASC, [EMAIL] ASC, [LASTMODIFIEDTIME] ASC, [STATUS] ASC);


GO
PRINT N'Creating [crt].[ITEMRESERVATION]...';


GO
CREATE TABLE [crt].[ITEMRESERVATION] (
    [RESERVATIONID]      UNIQUEIDENTIFIER NOT NULL,
    [INVENTAVAILABILITY] BIGINT           NOT NULL,
    [QUANTITY]           NUMERIC (32, 16) NOT NULL,
    [EXPIREDATETIME]     DATETIME         NOT NULL,
    [ISRELEASED]         BIT              NOT NULL,
    CONSTRAINT [PK_ITEMRESERVATION_RESERVATIONID] PRIMARY KEY CLUSTERED ([RESERVATIONID] ASC)
);


GO
PRINT N'Creating [crt].[ITEMRESERVATION].[IX_ITEMRESERVATION_INVENTAVAILABILITY]...';


GO
CREATE NONCLUSTERED INDEX [IX_ITEMRESERVATION_INVENTAVAILABILITY]
    ON [crt].[ITEMRESERVATION]([INVENTAVAILABILITY] ASC);


GO
PRINT N'Creating [crt].[ITEMRESERVATION].[IX_ITEMRESERVATION_EXPIREDATETIME]...';


GO
CREATE NONCLUSTERED INDEX [IX_ITEMRESERVATION_EXPIREDATETIME]
    ON [crt].[ITEMRESERVATION]([EXPIREDATETIME] ASC);


GO
PRINT N'Creating [crt].[ITEMRESERVATION].[IX_ITEMRESERVATION_ISRELEASED]...';


GO
CREATE NONCLUSTERED INDEX [IX_ITEMRESERVATION_ISRELEASED]
    ON [crt].[ITEMRESERVATION]([ISRELEASED] ASC);


GO
PRINT N'Creating [crt].[WISHLIST]...';


GO
CREATE TABLE [crt].[WISHLIST] (
    [ID]               NVARCHAR (44)   NOT NULL,
    [CUSTOMERID]       NVARCHAR (20)   NOT NULL,
    [NAME]             NVARCHAR (128)  NOT NULL,
    [WISHLISTDATA]     VARBINARY (MAX) NOT NULL,
    [CREATEDDATETIME]  DATETIME        NOT NULL,
    [MODIFIEDDATETIME] DATETIME        NOT NULL,
    [DELETEDDATETIME]  DATETIME        NULL,
    [FAVORITE]         BIT             NOT NULL,
    [RECURRING]        BIT             NOT NULL,
    CONSTRAINT [PK_WISHLIST] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [crt].[TRANSFERORDERLINE]...';


GO
CREATE TABLE [crt].[TRANSFERORDERLINE] (
    [RECID]                 BIGINT           NOT NULL,
    [ORDERID]               NVARCHAR (50)    NOT NULL,
    [LINERECEIPTNUMBER]     NVARCHAR (20)    NULL,
    [ITEMID]                NVARCHAR (20)    NOT NULL,
    [ITEMNAME]              NVARCHAR (60)    NULL,
    [INVENTDIMID]           NVARCHAR (20)    NULL,
    [QUANTITYTRANSFERRED]   NUMERIC (28, 12) NULL,
    [QUANTITYSHIPPED]       NUMERIC (28, 12) NULL,
    [QUANTITYRECEIVED]      NUMERIC (28, 12) NULL,
    [QUANTITYSHIPNOW]       NUMERIC (28, 12) NULL,
    [QUANTITYRECEIVENOW]    NUMERIC (28, 12) NULL,
    [QUANTITYREMAINSHIP]    NUMERIC (28, 12) NULL,
    [QUANTITYREMAINRECEIVE] NUMERIC (28, 12) NULL,
    [PURCHASEUNIT]          NVARCHAR (10)    NULL,
    [INVENTBATCHID]         NVARCHAR (10)    NULL,
    [INVENTSITEID]          NVARCHAR (10)    NULL,
    [INVENTLOCATIONID]      NVARCHAR (20)    NULL,
    [CONFIGID]              NVARCHAR (10)    NOT NULL,
    [INVENTSERIALID]        NVARCHAR (10)    NULL,
    [INVENTSIZEID]          NVARCHAR (10)    NOT NULL,
    [INVENTCOLORID]         NVARCHAR (10)    NOT NULL,
    [INVENTSTYLEID]         NVARCHAR (10)    NOT NULL,
    [DELIVERYMETHOD]        NVARCHAR (60)    NOT NULL,
    CONSTRAINT [PK_TRANSFERORDERLINE] PRIMARY KEY CLUSTERED ([ORDERID] ASC, [RECID] ASC, [ITEMID] ASC, [CONFIGID] ASC, [INVENTCOLORID] ASC, [INVENTSIZEID] ASC, [INVENTSTYLEID] ASC)
);


GO
PRINT N'Creating [crt].[OFFLINEDATABASEPARTITIONS]...';


GO
CREATE TABLE [crt].[OFFLINEDATABASEPARTITIONS] (
    [RECID]             BIGINT          IDENTITY (1, 1) NOT NULL,
    [DATABASEVERSIONID] BIGINT          NOT NULL,
    [NUMBER]            INT             NOT NULL,
    [URL]               NVARCHAR (4000) NOT NULL,
    [FILEPATH]          NVARCHAR (4000) NULL,
    CONSTRAINT [PK_OFFLINEDATABASEPARTITIONS] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [UNIQUE_OFFLINEDATABASEPARTITIONS_DATABASEVERSIONID_NUMBER] UNIQUE NONCLUSTERED ([DATABASEVERSIONID] DESC, [NUMBER] ASC)
);


GO
PRINT N'Creating [crt].[OFFLINEDATABASEPARTITIONS].[IX_OFFLINEDATABASEPARTITIONS_DATABASEVERSIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_OFFLINEDATABASEPARTITIONS_DATABASEVERSIONID]
    ON [crt].[OFFLINEDATABASEPARTITIONS]([DATABASEVERSIONID] ASC);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONTAXTRANS_IN]...';


GO
CREATE TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN] (
    [CHANNEL]              BIGINT           NOT NULL,
    [ISTAXONTAX]           INT              NOT NULL,
    [SALELINENUM]          NUMERIC (32, 16) NOT NULL,
    [STOREID]              NVARCHAR (10)    NOT NULL,
    [TAXBASIS]             NUMERIC (32, 16) NOT NULL,
    [TAXCODE]              NVARCHAR (10)    NOT NULL,
    [TAXCOMPONENT]         NVARCHAR (15)    NOT NULL,
    [TAXFORMULA]           NVARCHAR (1000)  NOT NULL,
    [TAXISEXEMPT]          INT              NOT NULL,
    [TAXISINCLUDEDINPRICE] INT              NOT NULL,
    [TAXITEMGROUP]         NVARCHAR (10)    NOT NULL,
    [TAXPERCENTAGE]        NUMERIC (32, 16) NOT NULL,
    [TERMINALID]           NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]        NVARCHAR (44)    NOT NULL,
    [DATAAREAID]           NVARCHAR (4)     NOT NULL,
    [ROWVERSION]           TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-606328328_-36691966] UNIQUE CLUSTERED ([CHANNEL] ASC, [SALELINENUM] ASC, [STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [TAXCODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [crt].[RETAILTRANSACTIONTAXTRANS_IN].[IX_RETAILTRANSACTIONTAXTRANS_IN_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONTAXTRANS_IN_TRANSACTIONID]
    ON [crt].[RETAILTRANSACTIONTAXTRANS_IN]([TRANSACTIONID] ASC);


GO
PRINT N'Creating [crt].[PRODUCTASSORTMENTRULES]...';


GO
CREATE TABLE [crt].[PRODUCTASSORTMENTRULES] (
    [ASSORTMENTID] BIGINT NOT NULL,
    [PRODUCTID]    BIGINT NOT NULL,
    [VARIANTID]    BIGINT NOT NULL,
    [VALIDFROM]    DATE   NULL,
    [VALIDTO]      DATE   NULL
);


GO
PRINT N'Creating [crt].[PRODUCTASSORTMENTRULES].[IX_PRODUCTASSORTMENTRULES]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_PRODUCTASSORTMENTRULES]
    ON [crt].[PRODUCTASSORTMENTRULES]([VARIANTID] ASC, [PRODUCTID] ASC, [VALIDFROM] ASC, [VALIDTO] ASC, [ASSORTMENTID] ASC);


GO
PRINT N'Creating [crt].[OFFLINEDATABASEMETADATA]...';


GO
CREATE TABLE [crt].[OFFLINEDATABASEMETADATA] (
    [RECID]           BIGINT         IDENTITY (1, 1) NOT NULL,
    [DATABASETYPE]    INT            NOT NULL,
    [VERSION]         BIGINT         NOT NULL,
    [CREATEDDATETIME] DATETIME       NOT NULL,
    [CHANNELID]       BIGINT         NOT NULL,
    [HASH]            NVARCHAR (256) NULL,
    CONSTRAINT [PK_OFFLINEDATABASEMETADATA] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [UNIQUE_OFFLINEDATABASEMETADATA_DATABASETYPE_VERSION] UNIQUE NONCLUSTERED ([DATABASETYPE] ASC, [CHANNELID] ASC, [VERSION] DESC)
);


GO
PRINT N'Creating [crt].[OFFLINEDATABASEMETADATA].[IX_OFFLINEDATABASEMETADATA_DATABASETYPE]...';


GO
CREATE NONCLUSTERED INDEX [IX_OFFLINEDATABASEMETADATA_DATABASETYPE]
    ON [crt].[OFFLINEDATABASEMETADATA]([DATABASETYPE] ASC);


GO
PRINT N'Creating [crt].[PRODUCTCATALOGRULES]...';


GO
CREATE TABLE [crt].[PRODUCTCATALOGRULES] (
    [CHANNELID] BIGINT NOT NULL,
    [CATALOGID] BIGINT NOT NULL,
    [PRODUCTID] BIGINT NOT NULL,
    [VALIDFROM] DATE   NOT NULL,
    [VALIDTO]   DATE   NOT NULL
);


GO
PRINT N'Creating [crt].[PRODUCTCATALOGRULES].[IX_PRODUCTCATALOGRULES]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_PRODUCTCATALOGRULES]
    ON [crt].[PRODUCTCATALOGRULES]([CHANNELID] ASC, [CATALOGID] ASC, [PRODUCTID] ASC, [VALIDFROM] ASC, [VALIDTO] ASC);


GO
PRINT N'Creating [ax].[COMPANYDEFAULTLOCATION]...';


GO
CREATE TABLE [ax].[COMPANYDEFAULTLOCATION] (
    [RECID]             BIGINT       NOT NULL,
    [LEGALENTITY]       BIGINT       NOT NULL,
    [PARTYLOCATIONROLE] BIGINT       NOT NULL,
    [DATAAREAID]        NVARCHAR (4) NOT NULL,
    [ROWVERSION]        TIMESTAMP    NOT NULL,
    CONSTRAINT [I_COMPANYDEFAULTLOCATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1577318117_-1861487196] UNIQUE CLUSTERED ([LEGALENTITY] ASC, [PARTYLOCATIONROLE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[HCMPOSITIONWORKERASSIGNMENT]...';


GO
CREATE TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT] (
    [RECID]                BIGINT    NOT NULL,
    [ASSIGNMENTREASONCODE] BIGINT    NOT NULL,
    [POSITION]             BIGINT    NOT NULL,
    [VALIDFROM]            DATETIME  NOT NULL,
    [VALIDFROMTZID]        INT       NOT NULL,
    [VALIDTO]              DATETIME  NOT NULL,
    [VALIDTOTZID]          INT       NOT NULL,
    [WORKER]               BIGINT    NOT NULL,
    [CREATEDDATETIME]      DATETIME  NOT NULL,
    [MODIFIEDDATETIME]     DATETIME  NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_HCMPOSITIONWORKERASSIGNMENT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1725185210_-1568444020] UNIQUE NONCLUSTERED ([POSITION] ASC, [VALIDFROM] ASC, [VALIDTO] ASC)
);


GO
PRINT N'Creating [ax].[HCMPOSITIONWORKERASSIGNMENT].[IX_HCMPOSITIONWORKERASSIGNMENT_CODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_HCMPOSITIONWORKERASSIGNMENT_CODE]
    ON [ax].[HCMPOSITIONWORKERASSIGNMENT]([POSITION] ASC)
    INCLUDE([WORKER]);


GO
PRINT N'Creating [ax].[RETAILMEDIARESOURCE]...';


GO
CREATE TABLE [ax].[RETAILMEDIARESOURCE] (
    [RECID]        BIGINT          NOT NULL,
    [RESOURCEID]   INT             NOT NULL,
    [RESOURCEURL]  NVARCHAR (MAX)  NULL,
    [RESOURCEBLOB] VARBINARY (MAX) NULL,
    [DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [ROWVERSION]   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_RETAILMEDIARESOURCE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_136798797_-2016156031] UNIQUE NONCLUSTERED ([RESOURCEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALDOCUMENTCANCEL_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR] (
    [ACCESSKEY]                    NVARCHAR (45)  NOT NULL,
    [CANCELACCOUNTINGDATE]         DATETIME       NOT NULL,
    [CANCELACCOUNTINGDATETZID]     INT            NOT NULL,
    [CANCELREASONCOMMENT]          NVARCHAR (255) NOT NULL,
    [CHANNEL]                      BIGINT         NOT NULL,
    [MESSAGESTATUS]                INT            NOT NULL,
    [PROTOCOLNUMBER]               NVARCHAR (15)  NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT            IDENTITY (1, 1) NOT NULL,
    [RETURNCODEDESCRIPTION]        NVARCHAR (255) NOT NULL,
    [STORE]                        NVARCHAR (10)  NOT NULL,
    [TERMINAL]                     NVARCHAR (10)  NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)  NOT NULL,
    [XMLREQUEST]                   NVARCHAR (MAX) NULL,
    [XMLRESPONSE]                  NVARCHAR (MAX) NULL,
    [DATAAREAID]                   NVARCHAR (4)   NOT NULL,
    [ROWVERSION]                   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_1832075579_292746041] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALDOCUMENTCANCEL_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[HCMPOSITIONDETAIL]...';


GO
CREATE TABLE [ax].[HCMPOSITIONDETAIL] (
    [RECID]               BIGINT           NOT NULL,
    [COMPLOCATION]        BIGINT           NOT NULL,
    [DEPARTMENT]          BIGINT           NOT NULL,
    [DESCRIPTION]         NVARCHAR (60)    NOT NULL,
    [FULLTIMEEQUIVALENCY] NUMERIC (32, 16) NOT NULL,
    [JOB]                 BIGINT           NOT NULL,
    [POSITION]            BIGINT           NOT NULL,
    [POSITIONTYPE]        BIGINT           NOT NULL,
    [TITLE]               BIGINT           NOT NULL,
    [VALIDFROM]           DATETIME         NOT NULL,
    [VALIDFROMTZID]       INT              NOT NULL,
    [VALIDTO]             DATETIME         NOT NULL,
    [VALIDTOTZID]         INT              NOT NULL,
    [CREATEDDATETIME]     DATETIME         NOT NULL,
    [MODIFIEDDATETIME]    DATETIME         NOT NULL,
    [ROWVERSION]          TIMESTAMP        NOT NULL,
    CONSTRAINT [I_HCMPOSITIONDETAIL_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1550564396_-1568444020] UNIQUE NONCLUSTERED ([POSITION] ASC, [VALIDFROM] ASC, [VALIDTO] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTABLE_RU]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONTABLE_RU] (
    [CHANNEL]                      BIGINT        NOT NULL,
    [EKLZSERIALNUMBER]             NVARCHAR (10) NOT NULL,
    [FISCALDOCUMENTSERIALNUMBER]   NVARCHAR (10) NOT NULL,
    [FISCALPRINTERSERIALNUMBER]    NVARCHAR (20) NOT NULL,
    [FISCALPRINTERSHIFTID]         NVARCHAR (5)  NOT NULL,
    [KPKNUMBER]                    NVARCHAR (8)  NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT           IDENTITY (1, 1) NOT NULL,
    [STORE]                        NVARCHAR (10) NOT NULL,
    [TERMINAL]                     NVARCHAR (10) NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44) NOT NULL,
    [CREATEDDATETIME]              DATETIME      NOT NULL,
    [MODIFIEDDATETIME]             DATETIME      NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1458006241_-1679712867] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONTABLE_RU_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONPAYMENTTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS] (
    [AMOUNTCUR]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTMST]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDERED]               NUMERIC (32, 16) NOT NULL,
    [AUTHENTICATIONCODE]           NVARCHAR (20)    NOT NULL,
    [BUSINESSDATE]                 DATE             NOT NULL,
    [CARDORACCOUNT]                NVARCHAR (30)    NOT NULL,
    [CARDTYPEID]                   NVARCHAR (10)    NOT NULL,
    [CASHDOCID_RU]                 NVARCHAR (20)    NOT NULL,
    [CHANGELINE]                   INT              NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [COUNTER]                      INT              NOT NULL,
    [CREDITVOUCHERID]              NVARCHAR (30)    NOT NULL,
    [CURRENCY]                     NVARCHAR (3)     NOT NULL,
    [EXCHRATE]                     NUMERIC (32, 16) NOT NULL,
    [EXCHRATEMST]                  NUMERIC (32, 16) NOT NULL,
    [GIFTCARDID]                   NVARCHAR (30)    NOT NULL,
    [ISPREPAYMENT]                 INT              NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [LOYALTYCARDID]                NVARCHAR (30)    NOT NULL,
    [MANAGERKEYLIVE]               INT              NOT NULL,
    [MESSAGENUM]                   INT              NOT NULL,
    [PAYMENTAUTHORIZATION]         NVARCHAR (MAX)   NULL,
    [QTY]                          NUMERIC (32, 16) NOT NULL,
    [RECEIPTID]                    NVARCHAR (18)    NOT NULL,
    [REPLICATED]                   INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SHIFT]                        NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                    DATE             NOT NULL,
    [SIGCAPDATA]                   NVARCHAR (MAX)   NULL,
    [STAFF]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                NVARCHAR (25)    NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TENDERTYPE]                   NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [ISCAPTUREFAILED]              INT              NOT NULL,
    [PAYMENTCARDTOKEN]             NVARCHAR (MAX)   NULL,
    [ISPAYMENTCAPTURED]            INT              NOT NULL,
    [CREATEDDATETIME]              DATETIME         NOT NULL,
    [MODIFIEDDATETIME]             DATETIME         NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_371784663_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONPAYMENTTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONPAYMENTTRANS].[IX_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONID]
    ON [ax].[RETAILTRANSACTIONPAYMENTTRANS]([TRANSACTIONID] ASC);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONPAYMENTTRANS].[IX_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONSTATUS]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONSTATUS]
    ON [ax].[RETAILTRANSACTIONPAYMENTTRANS]([TRANSACTIONSTATUS] ASC);


GO
PRINT N'Creating [ax].[TAXGROUPHEADING]...';


GO
CREATE TABLE [ax].[TAXGROUPHEADING] (
    [RECID]                BIGINT        NOT NULL,
    [SEARCHFIELD1]         NVARCHAR (60) NOT NULL,
    [SEARCHFIELD2]         NVARCHAR (60) NOT NULL,
    [TAXGROUP]             NVARCHAR (10) NOT NULL,
    [TAXGROUPNAME]         NVARCHAR (60) NOT NULL,
    [TAXGROUPROUNDING]     INT           NOT NULL,
    [TAXGROUPSETUP]        INT           NOT NULL,
    [TAXPRINTDETAIL]       INT           NOT NULL,
    [TAXREVERSEONCASHDISC] INT           NOT NULL,
    [DATAAREAID]           NVARCHAR (4)  NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-326351512_-1912629129] PRIMARY KEY CLUSTERED ([TAXGROUP] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONORDERSTATUS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONORDERSTATUS] (
    [RECID]           BIGINT          NOT NULL,
    [CHANNEL]         BIGINT          NOT NULL,
    [ERRORDETAIL]     NVARCHAR (1024) NOT NULL,
    [LASTINVENTTRANS] BIGINT          NOT NULL,
    [RETRYCOUNT]      INT             NOT NULL,
    [SALESID]         NVARCHAR (20)   NOT NULL,
    [STATUS]          INT             NOT NULL,
    [STORE]           NVARCHAR (10)   NOT NULL,
    [TERMINAL]        NVARCHAR (10)   NOT NULL,
    [TRANSACTIONID]   NVARCHAR (44)   NOT NULL,
    [DATAAREAID]      NVARCHAR (4)    NOT NULL,
    [ROWVERSION]      TIMESTAMP       NOT NULL,
    CONSTRAINT [I_RETAILTRANSACTIONORDERSTATUS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-832777827_-915363680] UNIQUE NONCLUSTERED ([TRANSACTIONID] ASC, [TERMINAL] ASC, [STORE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONORDERSTATUS].[IX_RETAILTRANSACTIONORDERSTATUS_SALESID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONORDERSTATUS_SALESID]
    ON [ax].[RETAILTRANSACTIONORDERSTATUS]([SALESID] ASC);


GO
PRINT N'Creating [ax].[UNITOFMEASURE]...';


GO
CREATE TABLE [ax].[UNITOFMEASURE] (
    [RECID]              BIGINT        NOT NULL,
    [DECIMALPRECISION]   INT           NOT NULL,
    [SYMBOL]             NVARCHAR (10) NOT NULL,
    [SYSTEMOFUNITS]      INT           NOT NULL,
    [UNITOFMEASURECLASS] INT           NOT NULL,
    [MODIFIEDDATETIME]   DATETIME      NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [I_UNITOFMEASURE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1127893861_-1854694893] UNIQUE CLUSTERED ([SYMBOL] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTEDEFAULTVALUE]...';


GO
CREATE TABLE [ax].[ECORESATTRIBUTEDEFAULTVALUE] (
    [RECID]      BIGINT    NOT NULL,
    [ATTRIBUTE]  BIGINT    NOT NULL,
    [VALUE]      BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESATTRIBUTEDEFAULTVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTEDEFAULTVALUE].[IX_ECORESATTRIBUTEDEFAULTVALUE_VALUE]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESATTRIBUTEDEFAULTVALUE_VALUE]
    ON [ax].[ECORESATTRIBUTEDEFAULTVALUE]([VALUE] ASC)
    INCLUDE([ATTRIBUTE]);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTEDEFAULTVALUE].[IX_ECORESATTRIBUTEDEFAULTVALUE_ATTRIBUTE]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESATTRIBUTEDEFAULTVALUE_ATTRIBUTE]
    ON [ax].[ECORESATTRIBUTEDEFAULTVALUE]([ATTRIBUTE] ASC)
    INCLUDE([VALUE]);


GO
PRINT N'Creating [ax].[TAXATIONCODESETUP_BR]...';


GO
CREATE TABLE [ax].[TAXATIONCODESETUP_BR] (
    [RECID]      BIGINT       NOT NULL,
    [MANDATORY]  INT          NOT NULL,
    [TAXTYPE]    INT          NOT NULL,
    [DATAAREAID] NVARCHAR (4) NOT NULL,
    [ROWVERSION] TIMESTAMP    NOT NULL,
    CONSTRAINT [I_734124585_-2105670234] PRIMARY KEY CLUSTERED ([TAXTYPE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[EXCHANGERATETYPE]...';


GO
CREATE TABLE [ax].[EXCHANGERATETYPE] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [NAME]        NVARCHAR (20) NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_EXCHANGERATETYPE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-193334427_516664720] UNIQUE CLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILRECEIPTPROFILELINE]...';


GO
CREATE TABLE [ax].[RETAILRECEIPTPROFILELINE] (
    [RECID]        BIGINT        NOT NULL,
    [FORMLAYOUTID] NVARCHAR (10) NOT NULL,
    [PROFILEID]    NVARCHAR (10) NOT NULL,
    [RECEIPTTYPE]  INT           NOT NULL,
    [ROWVERSION]   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1297941798_-1375636276] PRIMARY KEY CLUSTERED ([PROFILEID] ASC, [RECEIPTTYPE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]...';


GO
CREATE TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY] (
    [RECID]              BIGINT    NOT NULL,
    [CATALOGPRODUCT]     BIGINT    NOT NULL,
    [CATEGORY]           BIGINT    NOT NULL,
    [CATEGORYHIERARCHY]  BIGINT    NOT NULL,
    [INCLUDEEXCLUDETYPE] INT       NOT NULL,
    [ORIGIN]             BIGINT    NOT NULL,
    [CREATEDDATETIME]    DATETIME  NOT NULL,
    [MODIFIEDDATETIME]   DATETIME  NOT NULL,
    [ROWVERSION]         TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBCATALOGPRODUCTCATEGORY_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_838037498_1588830537] UNIQUE CLUSTERED ([CATALOGPRODUCT] ASC, [CATEGORY] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGPRODUCTCATEGORY].[IX_RETAILPUBCATALOGPRODUCTCATEGORY_CATEGORY]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBCATALOGPRODUCTCATEGORY_CATEGORY]
    ON [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]([CATEGORY] ASC)
    INCLUDE([ORIGIN], [INCLUDEEXCLUDETYPE]);


GO
PRINT N'Creating [ax].[RETAILKIT]...';


GO
CREATE TABLE [ax].[RETAILKIT] (
    [RECID]                        BIGINT    NOT NULL,
    [DISASSEMBLYATREGISTERALLOWED] INT       NOT NULL,
    [DISCONTINUEKIT]               INT       NOT NULL,
    [PRODUCTMASTER]                BIGINT    NOT NULL,
    [STATUS]                       INT       NOT NULL,
    [ROWVERSION]                   TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILKIT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_209556489_1729947418] UNIQUE NONCLUSTERED ([PRODUCTMASTER] ASC)
);


GO
PRINT N'Creating [ax].[INVENTSITEDEFAULTLOCATION]...';


GO
CREATE TABLE [ax].[INVENTSITEDEFAULTLOCATION] (
    [RECID]                     BIGINT        NOT NULL,
    [SITEID]                    NVARCHAR (10) NOT NULL,
    [SITELOGISTICSLOCATIONROLE] BIGINT        NOT NULL,
    [DATAAREAID]                NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                TIMESTAMP     NOT NULL,
    CONSTRAINT [I_INVENTSITEDEFAULTLOCATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-182107541_-1854860068] UNIQUE CLUSTERED ([SITEID] ASC, [SITELOGISTICSLOCATIONROLE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[DIRPERSONNAME]...';


GO
CREATE TABLE [ax].[DIRPERSONNAME] (
    [RECID]         BIGINT        NOT NULL,
    [FIRSTNAME]     NVARCHAR (25) NOT NULL,
    [LASTNAME]      NVARCHAR (25) NOT NULL,
    [MIDDLENAME]    NVARCHAR (25) NOT NULL,
    [PERSON]        BIGINT        NOT NULL,
    [VALIDFROM]     DATETIME      NOT NULL,
    [VALIDFROMTZID] INT           NOT NULL,
    [VALIDTO]       DATETIME      NOT NULL,
    [VALIDTOTZID]   INT           NOT NULL,
    [ROWVERSION]    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_DIRPERSONNAME_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_600258457_-1645802954] UNIQUE CLUSTERED ([PERSON] ASC, [VALIDFROM] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUTSTAFF]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUTSTAFF] (
    [RECID]      BIGINT        NOT NULL,
    [LAYOUTID]   NVARCHAR (10) NOT NULL,
    [STAFF]      BIGINT        NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTILLLAYOUTSTAFF_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1600860122_-519367667] UNIQUE NONCLUSTERED ([LAYOUTID] ASC, [STAFF] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBRETAILSTORETABLE]...';


GO
CREATE TABLE [ax].[RETAILPUBRETAILSTORETABLE] (
    [RECID]                            BIGINT           NOT NULL,
    [CLOSINGMETHOD]                    INT              NULL,
    [CREATELABELSFORZEROPRICE]         INT              NULL,
    [CULTURENAME]                      NVARCHAR (7)     NULL,
    [FUNCTIONALITYPROFILE]             NVARCHAR (10)    NULL,
    [HIDETRAININGMODE]                 INT              NULL,
    [INVENTLOCATIONIDFORCUSTOMERORDER] NVARCHAR (10)    NULL,
    [INVENTORYLOOKUP]                  INT              NULL,
    [ITEMIDONRECEIPT]                  INT              NULL,
    [LAYOUTID]                         NVARCHAR (10)    NULL,
    [MAXIMUMPOSTINGDIFFERENCE]         NUMERIC (32, 16) NULL,
    [MAXIMUMTEXTLENGTHONRECEIPT]       INT              NULL,
    [MAXROUNDINGAMOUNT]                NUMERIC (32, 16) NULL,
    [MAXROUNDINGTAXAMOUNT]             NUMERIC (32, 16) NULL,
    [MAXSHIFTDIFFERENCEAMOUNT]         NUMERIC (32, 16) NULL,
    [MAXTRANSACTIONDIFFERENCEAMOUNT]   NUMERIC (32, 16) NULL,
    [NUMBEROFTOPORBOTTOMLINES]         INT              NULL,
    [OFFLINEPROFILE]                   BIGINT           NULL,
    [ONESTATEMENTPERDAY]               INT              NULL,
    [OPENFROM]                         INT              NULL,
    [OPENTO]                           INT              NULL,
    [PHONE]                            NVARCHAR (20)    NULL,
    [REMOVEADDTENDER]                  NVARCHAR (10)    NULL,
    [REPLICATIONCOUNTER]               INT              NULL,
    [ROUNDINGTAXACCOUNT]               NVARCHAR (20)    NULL,
    [SERVICECHARGEPCT]                 NUMERIC (32, 16) NULL,
    [SERVICECHARGEPROMPT]              NVARCHAR (30)    NULL,
    [STATEMENTMETHOD]                  INT              NULL,
    [STORENUMBER]                      NVARCHAR (10)    NOT NULL,
    [STOREORIGINID]                    BIGINT           NULL,
    [TAXGROUP]                         NVARCHAR (10)    NOT NULL,
    [TAXGROUPDATAAREAID]               NVARCHAR (10)    NULL,
    [TAXIDENTIFICATIONNUMBER]          NVARCHAR (25)    NULL,
    [TAXOVERRIDEGROUP]                 BIGINT           NULL,
    [TENDERDECLARATIONCALCULATION]     INT              NULL,
    [USECUSTOMERBASEDTAX]              INT              NULL,
    [USEDEFAULTCUSTACCOUNT]            INT              NULL,
    [USEDESTINATIONBASEDTAX]           INT              NULL,
    [ROWVERSION]                       TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILPUBRETAILSTORETABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[MARKUPAUTOTABLE]...';


GO
CREATE TABLE [ax].[MARKUPAUTOTABLE] (
    [RECID]           BIGINT        NOT NULL,
    [ACCOUNTCODE]     INT           NOT NULL,
    [ACCOUNTRELATION] NVARCHAR (20) NOT NULL,
    [DLVMODECODE]     INT           NOT NULL,
    [DLVMODERELATION] NVARCHAR (20) NOT NULL,
    [ITEMCODE]        INT           NOT NULL,
    [ITEMRELATION]    NVARCHAR (20) NOT NULL,
    [MARKUPRETURN]    INT           NOT NULL,
    [MODULECATEGORY]  INT           NOT NULL,
    [MODULETYPE]      INT           NOT NULL,
    [RETURNRELATION]  NVARCHAR (10) NOT NULL,
    [DATAAREAID]      NVARCHAR (4)  NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_366724785_-1598920379] PRIMARY KEY CLUSTERED ([MODULECATEGORY] ASC, [MODULETYPE] ASC, [ITEMCODE] ASC, [ITEMRELATION] ASC, [ACCOUNTCODE] ASC, [ACCOUNTRELATION] ASC, [MARKUPRETURN] ASC, [RETURNRELATION] ASC, [DLVMODECODE] ASC, [DLVMODERELATION] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINFOCODE]...';


GO
CREATE TABLE [ax].[RETAILINFOCODE] (
    [RECID]      BIGINT        NOT NULL,
    [INFOCODEID] NVARCHAR (10) NOT NULL,
    [DATAAREAID] NVARCHAR (4)  NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILINFOCODE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1162389280_-1624030085] UNIQUE NONCLUSTERED ([INFOCODEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTITEMBARCODE]...';


GO
CREATE TABLE [ax].[INVENTITEMBARCODE] (
    [RECID]             BIGINT           NOT NULL,
    [BARCODESETUPID]    NVARCHAR (10)    NOT NULL,
    [BLOCKED]           INT              NOT NULL,
    [DESCRIPTION]       NVARCHAR (60)    NOT NULL,
    [INVENTDIMID]       NVARCHAR (20)    NOT NULL,
    [ITEMBARCODE]       NVARCHAR (80)    NOT NULL,
    [ITEMID]            NVARCHAR (20)    NOT NULL,
    [QTY]               NUMERIC (32, 16) NOT NULL,
    [RETAILSHOWFORITEM] INT              NOT NULL,
    [RETAILVARIANTID]   NVARCHAR (10)    NOT NULL,
    [UNITID]            NVARCHAR (10)    NOT NULL,
    [USEFORINPUT]       INT              NOT NULL,
    [USEFORPRINTING]    INT              NOT NULL,
    [DATAAREAID]        NVARCHAR (4)     NOT NULL,
    [ROWVERSION]        TIMESTAMP        NOT NULL,
    CONSTRAINT [I_INVENTITEMBARCODE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTITEMBARCODE].[IX_INVENTITEMBARCODE_ITEMBARCODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTITEMBARCODE_ITEMBARCODE]
    ON [ax].[INVENTITEMBARCODE]([ITEMBARCODE] ASC, [DATAAREAID] ASC);


GO
PRINT N'Creating [ax].[TAXPARAMETERS]...';


GO
CREATE TABLE [ax].[TAXPARAMETERS] (
    [RECID]                          BIGINT        NOT NULL,
    [ALLOWDUPLICATES]                INT           NOT NULL,
    [CALCULATEPRINCIPLE]             INT           NOT NULL,
    [CASHDISCONINVOICE]              INT           NOT NULL,
    [CHECKINTERSECTION]              INT           NOT NULL,
    [CONDITIONALTAX]                 INT           NOT NULL,
    [CUSTOMERCALCULATIONDATETYPE_IN] INT           NOT NULL,
    [CUSTOMS_IN]                     INT           NOT NULL,
    [EXCISE_IN]                      INT           NOT NULL,
    [EXIMINCENTIVESCHEMES_IN]        INT           NOT NULL,
    [JOURNALINCLTAX]                 INT           NOT NULL,
    [KEY]                            INT           NOT NULL,
    [MANDATORYTAXDIRECTION]          INT           NOT NULL,
    [PURCHTAXONOPERATIONS]           INT           NOT NULL,
    [REPORTADJUSTMENT]               INT           NOT NULL,
    [REVERSEONCASHDISC]              INT           NOT NULL,
    [SALESTAX_IN]                    INT           NOT NULL,
    [SERVICETAX_IN]                  INT           NOT NULL,
    [TAXCALCULATIONDATETYPE]         INT           NOT NULL,
    [TAXGROUP]                       NVARCHAR (10) NOT NULL,
    [TAXITEMGROUP]                   NVARCHAR (10) NOT NULL,
    [TAXLESSCASHDISC]                INT           NOT NULL,
    [TAXONOVERPAYMENT]               INT           NOT NULL,
    [TAXRECOVERABLE_IN]              INT           NOT NULL,
    [TAXREPORT_JP]                   INT           NOT NULL,
    [TAXSPECIFYLINE]                 INT           NOT NULL,
    [VALIDATETAXCODE]                INT           NOT NULL,
    [VAT_IN]                         INT           NOT NULL,
    [VENDORCALCULATIONDATETYPE_IN]   INT           NOT NULL,
    [MODIFIEDDATETIME]               DATETIME      NOT NULL,
    [DATAAREAID]                     NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                     TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-908637253_-1273338697] PRIMARY KEY CLUSTERED ([KEY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELPRICEGROUP]...';


GO
CREATE TABLE [ax].[RETAILCHANNELPRICEGROUP] (
    [RECID]         BIGINT    NOT NULL,
    [PRICEGROUP]    BIGINT    NOT NULL,
    [RETAILCHANNEL] BIGINT    NOT NULL,
    [ROWVERSION]    TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILCHANNELPRICEGROUP_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-639419124_-99939092] UNIQUE CLUSTERED ([RETAILCHANNEL] ASC, [PRICEGROUP] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONMARKUPTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS] (
    [CALCULATEDAMOUNT]             NUMERIC (32, 16) NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [CURRENCYCODE]                 NVARCHAR (3)     NOT NULL,
    [MARKUPCODE]                   NVARCHAR (10)    NOT NULL,
    [MARKUPLINENUM]                NUMERIC (32, 16) NOT NULL,
    [METHOD]                       INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SALELINENUM]                  NUMERIC (32, 16) NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TAXAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [TAXAMOUNTEXCLUSIVE]           NUMERIC (32, 16) NOT NULL,
    [TAXAMOUNTINCLUSIVE]           NUMERIC (32, 16) NOT NULL,
    [TAXGROUP]                     NVARCHAR (10)    NOT NULL,
    [TAXITEMGROUP]                 NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [VALUE]                        NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_620503057_-984473184] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [SALELINENUM] ASC, [MARKUPLINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONMARKUPTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONMARKUPTRANS].[IX_RETAILTRANSACTIONMARKUPTRANS_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONMARKUPTRANS_TRANSACTIONID]
    ON [ax].[RETAILTRANSACTIONMARKUPTRANS]([TRANSACTIONID] ASC);


GO
PRINT N'Creating [ax].[RETAILASYNCADDRESS]...';


GO
CREATE TABLE [ax].[RETAILASYNCADDRESS] (
    [ONLINEADDRESSCREATED]         INT            NOT NULL,
    [CUSTACCOUNTASYNC]             NVARCHAR (38)  NOT NULL,
    [CUSTACCOUNT]                  NVARCHAR (20)  NOT NULL,
    [CUSTNAME]                     NVARCHAR (100) NOT NULL,
    [STREET]                       NVARCHAR (250) NOT NULL,
    [STATE]                        NVARCHAR (10)  NOT NULL,
    [COUNTY]                       NVARCHAR (10)  NOT NULL,
    [PHONE]                        NVARCHAR (20)  NOT NULL,
    [ZIP]                          NVARCHAR (10)  NOT NULL,
    [EMAIL]                        NVARCHAR (255) NOT NULL,
    [URL]                          NVARCHAR (255) NOT NULL,
    [TAXGROUP]                     NVARCHAR (10)  NOT NULL,
    [CITY]                         NVARCHAR (60)  NOT NULL,
    [COUNTRY]                      NVARCHAR (10)  NOT NULL,
    [STREETNUMBER]                 NVARCHAR (20)  NOT NULL,
    [DISTRICTNAME]                 NVARCHAR (60)  NOT NULL,
    [BUILDINGCOMPLIMENT]           NVARCHAR (60)  NOT NULL,
    [MAKEPOSTALADDRESSPRIMARY]     INT            NOT NULL,
    [ROLE]                         INT            NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT            IDENTITY (1, 1) NOT NULL,
    [ADDRESSID]                    NVARCHAR (38)  NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)   NOT NULL,
    [ROWVERSION]                   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_1002599171_403526518] PRIMARY KEY NONCLUSTERED ([ADDRESSID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_1002599171_-246396043] UNIQUE NONCLUSTERED ([CUSTACCOUNTASYNC] ASC, [REPLICATIONCOUNTERFROMORIGIN] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILASYNCADDRESS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE CLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTORETABLE_IN]...';


GO
CREATE TABLE [ax].[RETAILSTORETABLE_IN] (
    [RECID]             BIGINT    NOT NULL,
    [RETAILSTORETABLE]  BIGINT    NOT NULL,
    [SALESTAXFORMTYPES] BIGINT    NOT NULL,
    [SHOWTAXONTAX]      INT       NOT NULL,
    [TAXDETAILSTYPE]    INT       NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILSTORETABLE_IN_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1889058460_-1306246117] UNIQUE CLUSTERED ([RETAILSTORETABLE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] (
    [AMOUNT]                       NUMERIC (32, 16) NOT NULL,
    [BUSINESSDATE]                 DATE             NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [COUNTER]                      INT              NOT NULL,
    [CUSTACCOUNT]                  NVARCHAR (38)    NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [RECEIPTID]                    NVARCHAR (18)    NOT NULL,
    [REPLICATED]                   INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SHIFT]                        NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                    DATE             NOT NULL,
    [STAFF]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                NVARCHAR (25)    NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [COMMENT]                      NVARCHAR (60)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1615386354_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE]...';


GO
CREATE TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE] (
    [RECID]                     BIGINT    NOT NULL,
    [LOCATIONLOGISTICSLOCATION] BIGINT    NOT NULL,
    [LOCATIONROLE]              BIGINT    NOT NULL,
    [ROWVERSION]                TIMESTAMP NOT NULL,
    CONSTRAINT [I_INVENTLOCATIONLOGISTICSLOCATIONROLE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1564173239_-536561902] UNIQUE CLUSTERED ([LOCATIONLOGISTICSLOCATION] ASC, [LOCATIONROLE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOG]...';


GO
CREATE TABLE [ax].[RETAILLOG] (
    [CODEUNIT]                     NVARCHAR (100) NOT NULL,
    [DURATIONINMILLISEC]           INT            NOT NULL,
    [LOGDATE]                      DATE           NOT NULL,
    [LOGLEVEL]                     INT            NOT NULL,
    [LOGSTRING]                    NVARCHAR (MAX) NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT            IDENTITY (1, 1) NOT NULL,
    [RETAILLOGID]                  BIGINT         NOT NULL,
    [STOREID]                      NVARCHAR (10)  NOT NULL,
    [TERMINALID]                   NVARCHAR (10)  NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)   NOT NULL,
    [ROWVERSION]                   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_1372356043_-1275116490] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [RETAILLOGID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILLOG_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYREDEEMSCHEMELINE]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE] (
    [RECID]                    BIGINT           NOT NULL,
    [FROMREWARDPOINT]          BIGINT           NOT NULL,
    [FROMREWARDPOINTAMOUNTQTY] NUMERIC (32, 16) NOT NULL,
    [LOYALTYSCHEME]            BIGINT           NOT NULL,
    [LOYALTYTIER]              BIGINT           NOT NULL,
    [TORETAILGROUPMEMBERLINE]  BIGINT           NOT NULL,
    [TOREWARDAMOUNTCURRENCY]   NVARCHAR (3)     NOT NULL,
    [TOREWARDAMOUNTQTY]        NUMERIC (32, 16) NOT NULL,
    [TOREWARDTYPE]             INT              NOT NULL,
    [VALIDFROM]                DATE             NOT NULL,
    [VALIDTO]                  DATE             NOT NULL,
    [LINENUM]                  NUMERIC (32, 16) NOT NULL,
    [ROWVERSION]               TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYREDEEMSCHEMELINE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1369333272_-1976788570] UNIQUE NONCLUSTERED ([LOYALTYSCHEME] ASC, [LINENUM] ASC)
);


GO
PRINT N'Creating [ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP]...';


GO
CREATE TABLE [ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP] (
    [RECID]               BIGINT    NOT NULL,
    [FRAMEWORK]           BIGINT    NOT NULL,
    [GENERATEPROCESSDATA] INT       NOT NULL,
    [INDUSTRY]            BIGINT    NOT NULL,
    [ROWVERSION]          TIMESTAMP NOT NULL,
    CONSTRAINT [I_SYSTASKRECORDERFRAMEWORKINDUSTRYMAP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_617825684_777265151] UNIQUE NONCLUSTERED ([INDUSTRY] ASC, [FRAMEWORK] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYCARD]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYCARD] (
    [RECID]          BIGINT        NOT NULL,
    [CARDNUMBER]     NVARCHAR (30) NOT NULL,
    [CARDTENDERTYPE] INT           NOT NULL,
    [PARTY]          BIGINT        NOT NULL,
    [ROWVERSION]     TIMESTAMP     NOT NULL,
    CONSTRAINT [I_162050765_-700086456] PRIMARY KEY NONCLUSTERED ([CARDNUMBER] ASC),
    CONSTRAINT [I_RETAILLOYALTYCARD_RECID] UNIQUE CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYCARD].[IX_RETAILLOYALTYCARD_RECID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_RETAILLOYALTYCARD_RECID]
    ON [ax].[RETAILLOYALTYCARD]([RECID] ASC);


GO
PRINT N'Creating [ax].[SALESPARAMETERS]...';


GO
CREATE TABLE [ax].[SALESPARAMETERS] (
    [RECID]                          BIGINT         NOT NULL,
    [ACCESLEVELINVOICED]             INT            NOT NULL,
    [BILLOFLADING]                   INT            NOT NULL,
    [BOLCARRIERNAME]                 NVARCHAR (140) NOT NULL,
    [BOLFREIGHTCHARGETERMS]          INT            NOT NULL,
    [BOLFREIGHTCOUNTED]              INT            NOT NULL,
    [BOLFREIGHTEDBY]                 INT            NOT NULL,
    [BOLLANGUAGEID]                  NVARCHAR (7)   NOT NULL,
    [BOLTRAILERLOADED]               INT            NOT NULL,
    [CANCELSALES]                    INT            NOT NULL,
    [CUSTQUOTATIONTYPEID]            NVARCHAR (20)  NOT NULL,
    [DELETEHEADING]                  INT            NOT NULL,
    [DELETELINE]                     INT            NOT NULL,
    [DELIVERY2INVOICE]               NVARCHAR (10)  NOT NULL,
    [DISC]                           INT            NOT NULL,
    [KEY]                            INT            NOT NULL,
    [LEADTIMESALESDEFAULT]           INT            NOT NULL,
    [MARKUPHEADING]                  INT            NOT NULL,
    [MARKUPLINE]                     INT            NOT NULL,
    [ORDERENTRYSTATISTICS]           INT            NOT NULL,
    [ORDERTYPE]                      INT            NOT NULL,
    [OVERDELIVERY]                   INT            NOT NULL,
    [PICKINGLISTDEFAULTLANGUAGE]     INT            NOT NULL,
    [POSTPACKINGSLIP]                INT            NOT NULL,
    [PREPRINTLEVELSHIPPINGLABEL]     INT            NOT NULL,
    [PROMPTTRANSFER]                 INT            NOT NULL,
    [QUOTATIONNUMOFDAYSEXPIRYDATE]   INT            NOT NULL,
    [QUOTATIONNUMOFDAYSFOLLOWUPDATE] INT            NOT NULL,
    [REDUCEINVOICE]                  INT            NOT NULL,
    [REDUCEPACKINGSLIP]              INT            NOT NULL,
    [REDUCEPICKINGLIST]              INT            NOT NULL,
    [RESERVATION]                    INT            NOT NULL,
    [SALESORIGINID]                  NVARCHAR (10)  NOT NULL,
    [SALESPOOLID]                    NVARCHAR (10)  NOT NULL,
    [SETTLEVOUCHER]                  INT            NOT NULL,
    [SHIPPINGSTAT]                   INT            NOT NULL,
    [SPLITDELIVERYCONFIRMATION]      INT            NOT NULL,
    [SPLITDELIVERYINVOICE]           INT            NOT NULL,
    [SPLITDELIVERYPACKINGSLIP]       INT            NOT NULL,
    [SPLITDELIVERYPICKINGLIST]       INT            NOT NULL,
    [SUBDELIVERY]                    INT            NOT NULL,
    [SUMMARYERRORTOLERANCE]          INT            NOT NULL,
    [SUMMARYUPDATEBY]                INT            NOT NULL,
    [USESETTLEEXCHRATE]              INT            NOT NULL,
    [VALIDDAYS]                      INT            NOT NULL,
    [DATAAREAID]                     NVARCHAR (4)   NOT NULL,
    [ROWVERSION]                     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_782353986_-1273337705] PRIMARY KEY CLUSTERED ([KEY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKEYBOARDBUTTONCONTROLB]...';


GO
CREATE TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB] (
    [RECID]           BIGINT          NOT NULL,
    [ACTION]          INT             NOT NULL,
    [ACTIONPROPERTY]  NVARCHAR (1000) NOT NULL,
    [BUTTONCONTROLID] INT             NOT NULL,
    [COLOUR]          NVARCHAR (20)   NOT NULL,
    [DISPLAYTEXT]     NVARCHAR (50)   NOT NULL,
    [FONTSIZE]        INT             NOT NULL,
    [FONTSTYLE]       INT             NOT NULL,
    [ID]              INT             NOT NULL,
    [PICTURE]         NVARCHAR (MAX)  NULL,
    [ROWNUM]          INT             NOT NULL,
    [DATAAREAID]      NVARCHAR (4)    NOT NULL,
    [ROWVERSION]      TIMESTAMP       NOT NULL,
    CONSTRAINT [I_876263485_-594239886] PRIMARY KEY CLUSTERED ([ID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALRECEIPTLINE_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALRECEIPTLINE_BR] (
    [CANCELLEDQUANTITY]            NUMERIC (32, 16) NOT NULL,
    [CFOP]                         NVARCHAR (5)     NOT NULL,
    [ITEMID]                       NVARCHAR (20)    NOT NULL,
    [ITEMTYPE]                     NVARCHAR (10)    NOT NULL,
    [LINEAMOUNT]                   NUMERIC (32, 16) NOT NULL,
    [LINEDISCOUNTAMOUNT]           NUMERIC (32, 16) NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [LINESURCHARGEAMOUNT]          NUMERIC (32, 16) NOT NULL,
    [PRINTEDLINEDISCOUNTAMOUNT]    NUMERIC (32, 16) NOT NULL,
    [PRINTEDLINESURCHARGEAMOUNT]   NUMERIC (32, 16) NOT NULL,
    [QUANTITY]                     NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [UNIT]                         NVARCHAR (10)    NOT NULL,
    [UNITPRICE]                    NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_283734048_-1103390687] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALRECEIPTLINE_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[DIRPARTYLOCATIONROLE]...';


GO
CREATE TABLE [ax].[DIRPARTYLOCATIONROLE] (
    [RECID]         BIGINT    NOT NULL,
    [LOCATIONROLE]  BIGINT    NOT NULL,
    [PARTYLOCATION] BIGINT    NOT NULL,
    [ROWVERSION]    TIMESTAMP NOT NULL,
    CONSTRAINT [I_DIRPARTYLOCATIONROLE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_586983440_-1706136147] UNIQUE CLUSTERED ([PARTYLOCATION] ASC, [LOCATIONROLE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCHANNELATTRIBUTE]...';


GO
CREATE TABLE [ax].[RETAILPUBCHANNELATTRIBUTE] (
    [RECID]          BIGINT       NOT NULL,
    [ATTRIBUTE]      BIGINT       NOT NULL,
    [ATTRIBUTEVALUE] BIGINT       NOT NULL,
    [CHANNEL]        BIGINT       NOT NULL,
    [DATAAREAID]     NVARCHAR (4) NOT NULL,
    [ROWVERSION]     TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILPUBCHANNELATTRIBUTE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1546253985_67495050] UNIQUE NONCLUSTERED ([CHANNEL] ASC, [ATTRIBUTE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINFOCODETABLESPECIFIC]...';


GO
CREATE TABLE [ax].[RETAILINFOCODETABLESPECIFIC] (
    [RECID]         BIGINT        NOT NULL,
    [INFOCODEID]    NVARCHAR (10) NOT NULL,
    [INPUTREQUIRED] INT           NOT NULL,
    [REFRELATION]   NVARCHAR (64) NOT NULL,
    [REFRELATION2]  NVARCHAR (64) NOT NULL,
    [REFRELATION3]  NVARCHAR (64) NOT NULL,
    [REFTABLEID]    INT           NOT NULL,
    [SEQUENCE]      INT           NOT NULL,
    [WHENREQUIRED]  INT           NOT NULL,
    [DATAAREAID]    NVARCHAR (4)  NOT NULL,
    [ROWVERSION]    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_798844888_-1498359599] PRIMARY KEY CLUSTERED ([REFTABLEID] ASC, [REFRELATION] ASC, [REFRELATION2] ASC, [REFRELATION3] ASC, [INFOCODEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTLOCATIONDEFAULTLOCATION]...';


GO
CREATE TABLE [ax].[INVENTLOCATIONDEFAULTLOCATION] (
    [RECID]                         BIGINT        NOT NULL,
    [INVENTLOCATIONID]              NVARCHAR (10) NOT NULL,
    [LOCATIONLOGISTICSLOCATIONROLE] BIGINT        NOT NULL,
    [DATAAREAID]                    NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_INVENTLOCATIONDEFAULTLOCATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-306181515_1141804996] UNIQUE CLUSTERED ([INVENTLOCATIONID] ASC, [LOCATIONLOGISTICSLOCATIONROLE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[FORMULADESIGNER_IN]...';


GO
CREATE TABLE [ax].[FORMULADESIGNER_IN] (
    [RECID]        BIGINT          NOT NULL,
    [CALCEXP]      NVARCHAR (1000) NOT NULL,
    [CALCEXP1]     NVARCHAR (1000) NOT NULL,
    [ID]           INT             NOT NULL,
    [PRICEINCLTAX] INT             NOT NULL,
    [TAXABLEBASIS] INT             NOT NULL,
    [TAXCODE]      NVARCHAR (10)   NOT NULL,
    [TAXITEMGROUP] NVARCHAR (10)   NOT NULL,
    [DATAAREAID]   NVARCHAR (4)    NOT NULL,
    [ROWVERSION]   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_FORMULADESIGNER_IN_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-751993433_-2114646326] UNIQUE CLUSTERED ([TAXITEMGROUP] ASC, [TAXCODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELREPORT]...';


GO
CREATE TABLE [ax].[RETAILCHANNELREPORT] (
    [RECID]               BIGINT         NOT NULL,
    [REPORTDEFINITIONXML] NVARCHAR (MAX) NULL,
    [REPORTID]            NVARCHAR (100) NOT NULL,
    [REPORTNAME]          NVARCHAR (400) NOT NULL,
    [ROWVERSION]          TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILCHANNELREPORT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1169491562_-253282476] UNIQUE NONCLUSTERED ([REPORTID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTVARIANTCONFIGURATION]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTVARIANTCONFIGURATION] (
    [RECID]         BIGINT    NOT NULL,
    [CONFIGURATION] BIGINT    NOT NULL,
    [ROWVERSION]    TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTVARIANTCONFIGURATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCONNDATABASEPROFILE]...';


GO
CREATE TABLE [ax].[RETAILCONNDATABASEPROFILE] (
    [RECID]      BIGINT         NOT NULL,
    [DATABASE]   NVARCHAR (128) NOT NULL,
    [NAME]       NVARCHAR (64)  NOT NULL,
    [SERVER]     NVARCHAR (256) NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILCONNDATABASEPROFILE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1554329957_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[TAXTABLE]...';


GO
CREATE TABLE [ax].[TAXTABLE] (
    [RECID]                              BIGINT           NOT NULL,
    [TAXCODE]                            NVARCHAR (10)    NOT NULL,
    [CUSTOMSPRACTICE_FI]                 INT              NOT NULL,
    [INCLUDEDTAX_BR]                     INT              NOT NULL,
    [NEGATIVETAX]                        INT              NOT NULL,
    [NOTEUSALESLIST]                     INT              NOT NULL,
    [PAYMENTTAXCODE]                     NVARCHAR (10)    NOT NULL,
    [PRINTCODE]                          NVARCHAR (10)    NOT NULL,
    [REPFIELDBASEINCOMING]               INT              NOT NULL,
    [REPFIELDBASEINCOMINGCREDITNOTE]     INT              NOT NULL,
    [REPFIELDBASEOUTGOING]               INT              NOT NULL,
    [REPFIELDBASEOUTGOINGCREDITNOTE]     INT              NOT NULL,
    [REPFIELDBASEUSETAX]                 INT              NOT NULL,
    [REPFIELDBASEUSETAXCREDITNOTE]       INT              NOT NULL,
    [REPFIELDBASEUSETAXOFFSET]           INT              NOT NULL,
    [REPFIELDBASEUSETAXOFFSETCREDITNOTE] INT              NOT NULL,
    [REPFIELDTAXFREEBUY]                 INT              NOT NULL,
    [REPFIELDTAXFREEBUYCREDITNOTE]       INT              NOT NULL,
    [REPFIELDTAXFREESALES]               INT              NOT NULL,
    [REPFIELDTAXFREESALESCREDITNOTE]     INT              NOT NULL,
    [REPFIELDTAXINCOMING]                INT              NOT NULL,
    [REPFIELDTAXINCOMINGCREDITNOTE]      INT              NOT NULL,
    [REPFIELDTAXOUTGOING]                INT              NOT NULL,
    [REPFIELDTAXOUTGOINGCREDITNOTE]      INT              NOT NULL,
    [REPFIELDUSETAX]                     INT              NOT NULL,
    [REPFIELDUSETAXCREDITNOTE]           INT              NOT NULL,
    [REPFIELDUSETAXOFFSET]               INT              NOT NULL,
    [REPFIELDUSETAXOFFSETCREDITNOTE]     INT              NOT NULL,
    [RETAINEDTAX_BR]                     INT              NOT NULL,
    [REVENUECODE_BR]                     NVARCHAR (20)    NOT NULL,
    [TAXACCOUNTGROUP]                    NVARCHAR (10)    NOT NULL,
    [TAXATIONCODETABLE_BR]               BIGINT           NOT NULL,
    [TAXBASE]                            INT              NOT NULL,
    [TAXBORDERNUMREQ_FI]                 INT              NOT NULL,
    [TAXCALCMETHOD]                      INT              NOT NULL,
    [TAXCOMPONENTTABLE_IN]               BIGINT           NOT NULL,
    [TAXCOUNTRYREGIONTYPE]               INT              NOT NULL,
    [TAXCURRENCYCODE]                    NVARCHAR (3)     NOT NULL,
    [TAXINCLUDEINTAX]                    INT              NOT NULL,
    [TAXJURISDICTIONCODE]                NVARCHAR (10)    NOT NULL,
    [TAXLIMITBASE]                       INT              NOT NULL,
    [TAXNAME]                            NVARCHAR (30)    NOT NULL,
    [TAXONTAX]                           NVARCHAR (10)    NOT NULL,
    [TAXPACKAGINGSORT]                   NVARCHAR (10)    NOT NULL,
    [TAXPACKAGINGTAX]                    INT              NOT NULL,
    [TAXPERIOD]                          NVARCHAR (10)    NOT NULL,
    [TAXPURCHASETAX]                     INT              NOT NULL,
    [TAXROUNDOFF]                        NUMERIC (32, 16) NOT NULL,
    [TAXROUNDOFFTYPE]                    INT              NOT NULL,
    [TAXSUBSTITUTION_BR]                 INT              NOT NULL,
    [TAXTYPE_BR]                         INT              NOT NULL,
    [TAXTYPE_IN]                         INT              NOT NULL,
    [TAXTYPE_SG]                         INT              NOT NULL,
    [TAXUNIT]                            NVARCHAR (10)    NOT NULL,
    [TAXWRITESELECTION]                  INT              NOT NULL,
    [UNREALIZEDTAX]                      INT              NOT NULL,
    [DATAAREAID]                         NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                         TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1870905641_-787576842] PRIMARY KEY CLUSTERED ([TAXCODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTLINEOFFER]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTLINEOFFER] (
    [RECID]          BIGINT           NOT NULL,
    [DISCAMOUNT]     NUMERIC (32, 16) NULL,
    [DISCOUNTMETHOD] INT              NULL,
    [DISCPCT]        NUMERIC (32, 16) NULL,
    [OFFERPRICE]     NUMERIC (32, 16) NULL,
    [DATAAREAID]     NVARCHAR (4)     NOT NULL,
    [ROWVERSION]     TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTLINEOFFER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKEYBOARDBUTTONCONTROL]...';


GO
CREATE TABLE [ax].[RETAILKEYBOARDBUTTONCONTROL] (
    [RECID]            BIGINT        NOT NULL,
    [BUTTONCONTROLID]  INT           NOT NULL,
    [DEFAULTCOLOR]     NVARCHAR (10) NOT NULL,
    [DEFAULTFONT]      NVARCHAR (32) NOT NULL,
    [DEFAULTFONTSIZE]  INT           NOT NULL,
    [DEFAULTFONTSTYLE] INT           NOT NULL,
    [NAME]             NVARCHAR (50) NOT NULL,
    [DATAAREAID]       NVARCHAR (4)  NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_316740147_-1011273354] PRIMARY KEY CLUSTERED ([BUTTONCONTROLID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] (
    [AMOUNTCUR]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTCURPOS]                 NUMERIC (32, 16) NOT NULL,
    [AMOUNTMST]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTMSTPOS]                 NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDERED]               NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDEREDPOS]            NUMERIC (32, 16) NOT NULL,
    [BANKBAGNO]                    NVARCHAR (30)    NOT NULL,
    [BUSINESSDATE]                 DATE             NOT NULL,
    [CARDORACCOUNT]                NVARCHAR (30)    NOT NULL,
    [CARDTYPEID]                   NVARCHAR (10)    NOT NULL,
    [CHANGELINE]                   INT              NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [COUNTER]                      NUMERIC (32, 16) NOT NULL,
    [CURRENCY]                     NVARCHAR (3)     NOT NULL,
    [EXCHRATE]                     NUMERIC (32, 16) NOT NULL,
    [EXCHRATEMST]                  NUMERIC (32, 16) NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [MANAGERSKEYLIVE]              INT              NOT NULL,
    [MESSAGENUM]                   INT              NOT NULL,
    [QTY]                          NUMERIC (32, 16) NOT NULL,
    [REPLICATED]                   INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SHIFT]                        NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                    DATE             NOT NULL,
    [STAFF]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                NVARCHAR (25)    NOT NULL,
    [STATUSTYPE]                   INT              NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TENDERTYPE]                   NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [CREATEDDATETIME]              DATETIME         NOT NULL,
    [MODIFIEDDATETIME]             DATETIME         NOT NULL,
    [CREATEDTRANSACTIONID]         BIGINT           NOT NULL,
    [MODIFIEDTRANSACTIONID]        BIGINT           NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_85947504_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONBANKEDTENDERTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILVISUALPROFILE]...';


GO
CREATE TABLE [ax].[RETAILVISUALPROFILE] (
    [RECID]               BIGINT          NOT NULL,
    [PROFILEID]           NVARCHAR (10)   NOT NULL,
    [BACKGROUNDPICTUREID] INT             NOT NULL,
    [DESIGNALLOWEDONPOS]  INT             NOT NULL,
    [FONTSCHEME]          INT             NOT NULL,
    [FULLSCREENMODE]      INT             NOT NULL,
    [HIDECURSOR]          INT             NOT NULL,
    [NAME]                NVARCHAR (60)   NOT NULL,
    [PALLET]              NVARCHAR (60)   NOT NULL,
    [PICTUREID]           INT             NOT NULL,
    [POSSKINNAME]         NVARCHAR (100)  NOT NULL,
    [SCREENHEIGHT]        INT             NOT NULL,
    [SCREENWIDTH]         INT             NOT NULL,
    [SKINFILE]            VARBINARY (MAX) NULL,
    [PICTUREIDPORTRAIT]   INT             NOT NULL,
    [MODIFIEDDATETIME]    DATETIME        NOT NULL,
    [ROWVERSION]          TIMESTAMP       NOT NULL,
    CONSTRAINT [I_660123670_-2102841330] PRIMARY KEY CLUSTERED ([PROFILEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION]...';


GO
CREATE TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION] (
    [RECID]           BIGINT    NOT NULL,
    [CATALOGPRODUCT]  BIGINT    NOT NULL,
    [ORIGIN]          BIGINT    NOT NULL,
    [PRODUCTRELATION] BIGINT    NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-348013118_-162312163] UNIQUE NONCLUSTERED ([ORIGIN] ASC),
    CONSTRAINT [I_-348013118_-609989922] UNIQUE CLUSTERED ([CATALOGPRODUCT] ASC, [PRODUCTRELATION] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTAFFTABLE]...';


GO
CREATE TABLE [ax].[RETAILSTAFFTABLE] (
    [RECID]                           BIGINT          NOT NULL,
    [BLOCKED]                         INT             NOT NULL,
    [CHANGEPASSWORD]                  INT             NOT NULL,
    [CONTINUEONTSERRORS]              INT             NOT NULL,
    [CULTURENAME]                     NVARCHAR (7)    NOT NULL,
    [EMPLOYMENTTYPE]                  INT             NOT NULL,
    [IMAGE]                           NVARCHAR (1999) NOT NULL,
    [NAMEONRECEIPT]                   NVARCHAR (15)   NOT NULL,
    [PASSWORD]                        NVARCHAR (32)   NOT NULL,
    [PASSWORDDATA]                    NVARCHAR (128)  NOT NULL,
    [STAFFID]                         NVARCHAR (25)   NOT NULL,
    [PASSWORDSALT]                    NVARCHAR (128)  NOT NULL,
    [PASSWORDHASHALGORITHM]           NVARCHAR (25)   NOT NULL,
    [PASSWORDLASTCHANGEDDATETIME]     DATETIME        NOT NULL,
    [PASSWORDLASTCHANGEDDATETIMETZID] INT             NOT NULL,
    [PASSWORDLASTUPDATEDOPERATION]    INT             NOT NULL,
    [MODIFIEDDATETIME]                DATETIME        NOT NULL,
    [ROWVERSION]                      TIMESTAMP       NOT NULL,
    CONSTRAINT [I_RETAILSTAFFTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1254821775_1463232915] UNIQUE NONCLUSTERED ([STAFFID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTENDERTYPECARDTABLE]...';


GO
CREATE TABLE [ax].[RETAILTENDERTYPECARDTABLE] (
    [RECID]      BIGINT        NOT NULL,
    [CARDISSUER] NVARCHAR (60) NOT NULL,
    [CARDTYPEID] NVARCHAR (10) NOT NULL,
    [CARDTYPES]  INT           NOT NULL,
    [NAME]       NVARCHAR (60) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1446778053_-1743312871] PRIMARY KEY CLUSTERED ([CARDTYPEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELTABLEEXT]...';


GO
CREATE TABLE [ax].[RETAILCHANNELTABLEEXT] (
    [RECID]               BIGINT    NOT NULL,
    [CHANNEL]             BIGINT    NOT NULL,
    [CHANNELPROFILE]      BIGINT    NOT NULL,
    [LIVECHANNELDATABASE] BIGINT    NOT NULL,
    [ROWVERSION]          TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILCHANNELTABLEEXT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1313859313_69820500] UNIQUE NONCLUSTERED ([CHANNEL] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELTABLEEXT].[IX_RETAILCHANNELTABLEEXT_CHANNELPROFILE]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILCHANNELTABLEEXT_CHANNELPROFILE]
    ON [ax].[RETAILCHANNELTABLEEXT]([CHANNELPROFILE] ASC)
    INCLUDE([CHANNEL]);


GO
PRINT N'Creating [ax].[RETAILCUSTTABLE]...';


GO
CREATE TABLE [ax].[RETAILCUSTTABLE] (
    [RECID]                   BIGINT          NOT NULL,
    [ACCOUNTNUM]              NVARCHAR (20)   NOT NULL,
    [IMAGE]                   NVARCHAR (1999) NOT NULL,
    [NONCHARGABLEACCOUNT]     INT             NOT NULL,
    [POSTASSHIPMENT]          INT             NOT NULL,
    [RECEIPTEMAIL]            NVARCHAR (80)   NOT NULL,
    [RECEIPTOPTION]           INT             NOT NULL,
    [REQUIRESAPPROVAL]        INT             NOT NULL,
    [USEORDERNUMBERREFERENCE] INT             NOT NULL,
    [MODIFIEDDATETIME]        DATETIME        NOT NULL,
    [DATAAREAID]              NVARCHAR (4)    NOT NULL,
    [ROWVERSION]              TIMESTAMP       NOT NULL,
    CONSTRAINT [I_-344762130_-2129881424] PRIMARY KEY CLUSTERED ([ACCOUNTNUM] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSCOUNTY]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSCOUNTY] (
    [RECID]           BIGINT        NOT NULL,
    [COUNTRYREGIONID] NVARCHAR (10) NOT NULL,
    [COUNTYCODE_SP]   NCHAR (2)     NOT NULL,
    [COUNTYID]        NVARCHAR (10) NOT NULL,
    [NAME]            NVARCHAR (60) NOT NULL,
    [STATEID]         NVARCHAR (10) NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1242622437_-816487246] PRIMARY KEY CLUSTERED ([COUNTRYREGIONID] ASC, [STATEID] ASC, [COUNTYID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTHEMEACCENTCOLOR]...';


GO
CREATE TABLE [ax].[RETAILTHEMEACCENTCOLOR] (
    [RECID]      BIGINT    NOT NULL,
    [ACCENT]     BIGINT    NOT NULL,
    [COLOR]      INT       NOT NULL,
    [PALLET]     BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILTHEMEACCENTCOLOR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1375997065_1327556950] UNIQUE NONCLUSTERED ([PALLET] ASC, [ACCENT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] (
    [RECID]           BIGINT    NOT NULL,
    [LOYALTYSCHEME]   BIGINT    NOT NULL,
    [OMOPERATINGUNIT] BIGINT    NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYSCHEMECHANNELEXPLODED_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-539412674_-1453058155] UNIQUE NONCLUSTERED ([OMOPERATINGUNIT] ASC, [LOYALTYSCHEME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDEVICETYPES]...';


GO
CREATE TABLE [ax].[RETAILDEVICETYPES] (
    [RECID]        BIGINT         NOT NULL,
    [DESCRIPTION]  NVARCHAR (255) NOT NULL,
    [DESIGNERFORM] INT            NOT NULL,
    [TYPE]         INT            NOT NULL,
    [ROWVERSION]   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILDEVICETYPES_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-2081582748_648562881] UNIQUE NONCLUSTERED ([TYPE] ASC)
);


GO
PRINT N'Creating [ax].[EFDOCAUTHORITY_BR]...';


GO
CREATE TABLE [ax].[EFDOCAUTHORITY_BR] (
    [RECID]                                 BIGINT           NOT NULL,
    [AUTHORITYID]                           NVARCHAR (10)    NOT NULL,
    [AUTHORITYTYPE]                         INT              NOT NULL,
    [CANCELASEVENT]                         INT              NOT NULL,
    [CONVERTACCENTEDCHARACTERS]             INT              NOT NULL,
    [DESCRIPTION]                           NVARCHAR (60)    NOT NULL,
    [CONSUMEREFDOCINQUIRYURL]               NVARCHAR (255)   NOT NULL,
    [CONSUMEREFDOCMAXAMOUNTWITHOUTCUSTOMER] NUMERIC (32, 16) NOT NULL,
    [CONSUMEREFDSYNCPROCESS]                INT              NOT NULL,
    [ROWVERSION]                            TIMESTAMP        NOT NULL,
    CONSTRAINT [I_962389861_-1137859919] PRIMARY KEY CLUSTERED ([AUTHORITYID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTDIM]...';


GO
CREATE TABLE [ax].[INVENTDIM] (
    [RECID]              BIGINT        NOT NULL,
    [CONFIGID]           NVARCHAR (10) NOT NULL,
    [INVENTBATCHID]      NVARCHAR (20) NOT NULL,
    [INVENTCOLORID]      NVARCHAR (10) NOT NULL,
    [INVENTDIMID]        NVARCHAR (20) NOT NULL,
    [INVENTGTDID_RU]     NVARCHAR (30) NOT NULL,
    [INVENTLOCATIONID]   NVARCHAR (10) NOT NULL,
    [INVENTOWNERID_RU]   NVARCHAR (20) NOT NULL,
    [INVENTPROFILEID_RU] NVARCHAR (10) NOT NULL,
    [INVENTSERIALID]     NVARCHAR (20) NOT NULL,
    [INVENTSITEID]       NVARCHAR (10) NOT NULL,
    [INVENTSIZEID]       NVARCHAR (10) NOT NULL,
    [INVENTSTYLEID]      NVARCHAR (10) NOT NULL,
    [WMSLOCATIONID]      NVARCHAR (10) NOT NULL,
    [WMSPALLETID]        NVARCHAR (18) NOT NULL,
    [SHA1HASHHEX]        NVARCHAR (40) NOT NULL,
    [DATAAREAID]         NVARCHAR (4)  NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-65082180_-588450352] PRIMARY KEY CLUSTERED ([INVENTDIMID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-65082180_-997209838] UNIQUE NONCLUSTERED ([SHA1HASHHEX] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTDIM].[IX_INVENTDIM_RECID]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTDIM_RECID]
    ON [ax].[INVENTDIM]([RECID] ASC)
    INCLUDE([INVENTDIMID]);


GO
PRINT N'Creating [ax].[RETAILKITCOMPONENTSUBSTITUTE]...';


GO
CREATE TABLE [ax].[RETAILKITCOMPONENTSUBSTITUTE] (
    [RECID]             BIGINT           NOT NULL,
    [KITCOMPONENT]      BIGINT           NOT NULL,
    [QUANTITY]          NUMERIC (32, 16) NOT NULL,
    [SUBSTITUTEPRODUCT] BIGINT           NOT NULL,
    [UNITOFMEASURE]     BIGINT           NOT NULL,
    [ROWVERSION]        TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILKITCOMPONENTSUBSTITUTE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1352945126_160563956] UNIQUE NONCLUSTERED ([KITCOMPONENT] ASC, [SUBSTITUTEPRODUCT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDRAWERPOOLDEVICE]...';


GO
CREATE TABLE [ax].[RETAILDRAWERPOOLDEVICE] (
    [RECID]       BIGINT         NOT NULL,
    [DESCRIPTION] NVARCHAR (100) NOT NULL,
    [DRAWERPOOL]  BIGINT         NOT NULL,
    [NAME]        NVARCHAR (50)  NOT NULL,
    [ROWVERSION]  TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILDRAWERPOOLDEVICE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSSTATE]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSSTATE] (
    [RECID]           BIGINT        NOT NULL,
    [COUNTRYREGIONID] NVARCHAR (10) NOT NULL,
    [NAME]            NVARCHAR (60) NOT NULL,
    [STATEID]         NVARCHAR (10) NOT NULL,
    [TIMEZONE]        INT           NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-727715432_-971710904] PRIMARY KEY CLUSTERED ([COUNTRYREGIONID] ASC, [STATEID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTRELATIONTYPE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTRELATIONTYPE] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (60) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTRELATIONTYPE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1362932938_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLANGUAGETEXT]...';


GO
CREATE TABLE [ax].[RETAILLANGUAGETEXT] (
    [RECID]          BIGINT         NOT NULL,
    [DATECREATED]    DATE           NOT NULL,
    [DATEUPDATED]    DATE           NOT NULL,
    [ERRORTEXT]      INT            NOT NULL,
    [FIRSTINVERSION] NVARCHAR (20)  NOT NULL,
    [LANGUAGEID]     NVARCHAR (7)   NOT NULL,
    [MODULEID]       INT            NOT NULL,
    [TEXT]           NVARCHAR (250) NOT NULL,
    [TEXTID]         INT            NOT NULL,
    [DATAAREAID]     NVARCHAR (4)   NOT NULL,
    [ROWVERSION]     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_1986448268_2004151621] PRIMARY KEY CLUSTERED ([LANGUAGEID] ASC, [TEXTID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[SHIPCARRIERCOMPANYACCOUNTS]...';


GO
CREATE TABLE [ax].[SHIPCARRIERCOMPANYACCOUNTS] (
    [RECID]        BIGINT        NOT NULL,
    [ACCOUNTCODE]  NVARCHAR (20) NOT NULL,
    [CARRIERNAME]  NVARCHAR (20) NOT NULL,
    [CURRENCYCODE] NVARCHAR (3)  NOT NULL,
    [DATAAREAID]   NVARCHAR (4)  NOT NULL,
    [ROWVERSION]   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_SHIPCARRIERCOMPANYACCOUNTS_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_36305795_1216394877] UNIQUE CLUSTERED ([ACCOUNTCODE] ASC, [CARRIERNAME] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[SYSTASKRECORDERPARAMETERS]...';


GO
CREATE TABLE [ax].[SYSTASKRECORDERPARAMETERS] (
    [RECID]        BIGINT         NOT NULL,
    [FILEPATH]     NVARCHAR (259) NOT NULL,
    [KEY]          INT            NOT NULL,
    [TEMPLATEPATH] NVARCHAR (259) NOT NULL,
    [ROWVERSION]   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_-32377564_-1273337705] PRIMARY KEY CLUSTERED ([KEY] ASC)
);


GO
PRINT N'Creating [ax].[BRAZILPARAMETERS]...';


GO
CREATE TABLE [ax].[BRAZILPARAMETERS] (
    [RECID]                             BIGINT        NOT NULL,
    [APPROXTAXVALUESOURCE]              NVARCHAR (60) NOT NULL,
    [KEY]                               INT           NOT NULL,
    [LINKEDFISCALDOCUMENTMODEL02COFINS] NVARCHAR (10) NOT NULL,
    [LINKEDFISCALDOCUMENTMODEL02ICMS]   NVARCHAR (10) NOT NULL,
    [LINKEDFISCALDOCUMENTMODEL02PIS]    NVARCHAR (10) NOT NULL,
    [DATAAREAID]                        NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                        TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1632568128_-1273337705] PRIMARY KEY CLUSTERED ([KEY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTAFFEXTENDEDLOGON]...';


GO
CREATE TABLE [ax].[RETAILSTAFFEXTENDEDLOGON] (
    [RECID]      BIGINT          NOT NULL,
    [EXTRADATA]  VARBINARY (MAX) NULL,
    [LOGONKEY]   NVARCHAR (256)  NOT NULL,
    [LOGONTYPE]  INT             NOT NULL,
    [STAFF]      BIGINT          NOT NULL,
    [LOGONDATA]  NVARCHAR (256)  NOT NULL,
    [ROWVERSION] TIMESTAMP       NOT NULL,
    CONSTRAINT [I_RETAILSTAFFEXTENDEDLOGON_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-635492541_-1099356344] UNIQUE NONCLUSTERED ([LOGONDATA] ASC, [LOGONKEY] ASC, [LOGONTYPE] ASC)
);


GO
PRINT N'Creating [ax].[CUSTPACKINGSLIPJOUR]...';


GO
CREATE TABLE [ax].[CUSTPACKINGSLIPJOUR] (
    [RECID]                BIGINT        NOT NULL,
    [PACKINGSLIPID]        NVARCHAR (20) NOT NULL,
    [SALESID]              NVARCHAR (20) NOT NULL,
    [SHIPCARRIERID]        NVARCHAR (10) NOT NULL,
    [SOURCEDOCUMENTHEADER] BIGINT        NOT NULL,
    [CREATEDDATETIME]      DATETIME      NOT NULL,
    [DATAAREAID]           NVARCHAR (4)  NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_CUSTPACKINGSLIPJOUR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_868055170_1531416702] UNIQUE NONCLUSTERED ([SOURCEDOCUMENTHEADER] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[CUSTPACKINGSLIPJOUR].[IX_CUSTPACKINGSLIPJOUR_PACKINGSLIPID]...';


GO
CREATE NONCLUSTERED INDEX [IX_CUSTPACKINGSLIPJOUR_PACKINGSLIPID]
    ON [ax].[CUSTPACKINGSLIPJOUR]([PACKINGSLIPID] ASC)
    INCLUDE([SALESID]);


GO
PRINT N'Creating [ax].[RETAILAFFILIATION]...';


GO
CREATE TABLE [ax].[RETAILAFFILIATION] (
    [RECID]           BIGINT        NOT NULL,
    [AFFILIATIONTYPE] INT           NOT NULL,
    [NAME]            NVARCHAR (64) NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILAFFILIATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-2069845833_-1405435399] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[TAXINFORMATION_IN]...';


GO
CREATE TABLE [ax].[TAXINFORMATION_IN] (
    [RECID]                      BIGINT        NOT NULL,
    [ECCNUMBER]                  BIGINT        NOT NULL,
    [ISPRIMARY]                  INT           NOT NULL,
    [NAME]                       NVARCHAR (60) NOT NULL,
    [REGISTRATIONLOCATION]       BIGINT        NOT NULL,
    [STCREGISTRATIONNUMBERTABLE] BIGINT        NOT NULL,
    [TIN]                        BIGINT        NOT NULL,
    [ROWVERSION]                 TIMESTAMP     NOT NULL,
    CONSTRAINT [I_TAXINFORMATION_IN_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1576999069_-1966747349] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOFFLINEPROFILE]...';


GO
CREATE TABLE [ax].[RETAILOFFLINEPROFILE] (
    [RECID]                         BIGINT         NOT NULL,
    [ADDRESSBOOK]                   BIGINT         NOT NULL,
    [ASSORTMENT]                    BIGINT         NOT NULL,
    [CHECKNEWDBINTERVAL]            INT            NOT NULL,
    [DBEXPORTPATH]                  NVARCHAR (259) NOT NULL,
    [DESCRIPTION]                   NVARCHAR (256) NOT NULL,
    [IMAGEPATH]                     NVARCHAR (259) NOT NULL,
    [NAME]                          NVARCHAR (10)  NOT NULL,
    [UPLOADTRANSACTIONSIZE]         BIGINT         NOT NULL,
    [RECONNECTINTERVAL]             INT            NOT NULL,
    [TIMEOUT]                       INT            NOT NULL,
    [CUSTOMERBYADDRESS]             INT            NOT NULL,
    [CUSTOMERBYSALESAMOUNT]         INT            NOT NULL,
    [CUSTOMERBYSALESAMOUNTDAYLIMIT] INT            NOT NULL,
    [CUSTOMERBYSALESAMOUNTNUMLIMIT] INT            NOT NULL,
    [CUSTOMERBYVISITS]              INT            NOT NULL,
    [CUSTOMERBYVISITSDAYLIMIT]      INT            NOT NULL,
    [CUSTOMERBYVISITSNUMLIMIT]      INT            NOT NULL,
    [LIMITASSORTEDPRODUCTS]         INT            NOT NULL,
    [LIMITAVAILABLECUSTOMERS]       INT            NOT NULL,
    [PRODUCTSALESAMOUNTLIMIT]       INT            NOT NULL,
    [PRODUCTSALESAMOUNTLIMITDAYS]   INT            NOT NULL,
    [PRODUCTSALESQUANTITYLIMIT]     INT            NOT NULL,
    [PRODUCTSALESQUANTITYLIMITDAYS] INT            NOT NULL,
    [PRODUCTSARRIVALLIMIT]          INT            NOT NULL,
    [PRODUCTSARRIVALLIMITDAYS]      INT            NOT NULL,
    [PRODUCTSBYRECENTARRIVAL]       INT            NOT NULL,
    [PRODUCTSBYSALESAMOUNT]         INT            NOT NULL,
    [PRODUCTSBYSALESQUANTITY]       INT            NOT NULL,
    [PRODUCTSBYSPECIFICCATEGORY]    INT            NOT NULL,
    [TRXUPLOADINTERVAL]             INT            NOT NULL,
    [ROWVERSION]                    TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILOFFLINEPROFILE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1301352601_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[INVENTSITELOGISTICSLOCATION]...';


GO
CREATE TABLE [ax].[INVENTSITELOGISTICSLOCATION] (
    [RECID]           BIGINT    NOT NULL,
    [ISPOSTALADDRESS] INT       NOT NULL,
    [ISPRIMARY]       INT       NOT NULL,
    [LOCATION]        BIGINT    NOT NULL,
    [SITE]            BIGINT    NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_INVENTSITELOGISTICSLOCATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-257462025_1328284702] UNIQUE CLUSTERED ([SITE] ASC, [LOCATION] ASC)
);


GO
PRINT N'Creating [ax].[RETAILAFFILIATIONTRANSLATION]...';


GO
CREATE TABLE [ax].[RETAILAFFILIATIONTRANSLATION] (
    [RECID]       BIGINT         NOT NULL,
    [AFFILIATION] BIGINT         NOT NULL,
    [DESCRIPTION] NVARCHAR (255) NOT NULL,
    [LANGUAGEID]  NVARCHAR (7)   NOT NULL,
    [ROWVERSION]  TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILAFFILIATIONTRANSLATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1948685724_-1107894182] UNIQUE NONCLUSTERED ([LANGUAGEID] ASC, [AFFILIATION] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTRELATIONTABLE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTRELATIONTABLE] (
    [RECID]               BIGINT    NOT NULL,
    [PRODUCT1]            BIGINT    NOT NULL,
    [PRODUCT2]            BIGINT    NOT NULL,
    [PRODUCTRELATIONTYPE] BIGINT    NOT NULL,
    [ROWVERSION]          TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTRELATIONTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_705077454_-382657853] UNIQUE NONCLUSTERED ([PRODUCT1] ASC, [PRODUCTRELATIONTYPE] ASC, [PRODUCT2] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTRELATIONTABLE].[IX_ECORESPRODUCTRELATIONTABLE_PRODUCT2]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTRELATIONTABLE_PRODUCT2]
    ON [ax].[ECORESPRODUCTRELATIONTABLE]([PRODUCT2] ASC)
    INCLUDE([PRODUCT1]);


GO
PRINT N'Creating [ax].[RETAILSTOREHARDWARESTATIONTABLE]...';


GO
CREATE TABLE [ax].[RETAILSTOREHARDWARESTATIONTABLE] (
    [RECID]             BIGINT         NOT NULL,
    [HARDWARESTATIONID] NVARCHAR (20)  NOT NULL,
    [HOSTNAME]          NVARCHAR (255) NOT NULL,
    [EFTTERMINALID]     NVARCHAR (50)  NOT NULL,
    [STORE]             BIGINT         NOT NULL,
    [DESCRIPTION]       NVARCHAR (255) NOT NULL,
    [ROWVERSION]        TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILSTOREHARDWARESTATIONTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_617963882_1400125646] UNIQUE NONCLUSTERED ([STORE] ASC, [HOSTNAME] ASC, [HARDWARESTATIONID] ASC, [EFTTERMINALID] ASC)
);


GO
PRINT N'Creating [ax].[SHIPCARRIERTABLE]...';


GO
CREATE TABLE [ax].[SHIPCARRIERTABLE] (
    [RECID]                      BIGINT        NOT NULL,
    [CARRIERID]                  NVARCHAR (10) NOT NULL,
    [CARRIERINTERFACEID]         INT           NOT NULL,
    [CARRIERNAME]                NVARCHAR (20) NOT NULL,
    [CARRIERSERVICEDESCRIPTION]  NVARCHAR (60) NOT NULL,
    [RETAILSHIPCARRIERINTERFACE] BIGINT        NOT NULL,
    [DATAAREAID]                 NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                 TIMESTAMP     NOT NULL,
    CONSTRAINT [I_725690128_-1275116490] PRIMARY KEY CLUSTERED ([CARRIERID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELPAYMENTCONNECTORLINE]...';


GO
CREATE TABLE [ax].[RETAILCHANNELPAYMENTCONNECTORLINE] (
    [RECID]                      BIGINT         NOT NULL,
    [ONLINECHANNEL]              BIGINT         NOT NULL,
    [PAYMENTCONNECTORNAME]       NVARCHAR (50)  NOT NULL,
    [PAYMENTCONNECTORPROPERTIES] NVARCHAR (MAX) NULL,
    [ISTESTMODE]                 INT            NOT NULL,
    [CREATEDDATETIME]            DATETIME       NOT NULL,
    [MODIFIEDDATETIME]           DATETIME       NOT NULL,
    [ROWVERSION]                 TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILCHANNELPAYMENTCONNECTORLINE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[SYSSERVICECONFIGURATIONSETTING]...';


GO
CREATE TABLE [ax].[SYSSERVICECONFIGURATIONSETTING] (
    [RECID]      BIGINT         NOT NULL,
    [VALUE]      NVARCHAR (MAX) NULL,
    [NAME]       NVARCHAR (50)  NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_SYSSERVICECONFIGURATIONSETTING_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1007903400_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSLOCATIONROLETRANSLATION]...';


GO
CREATE TABLE [ax].[LOGISTICSLOCATIONROLETRANSLATION] (
    [RECID]        BIGINT         NOT NULL,
    [DESCRIPTION]  NVARCHAR (255) NOT NULL,
    [LANGUAGEID]   NVARCHAR (7)   NOT NULL,
    [LOCATIONROLE] BIGINT         NOT NULL,
    [ROWVERSION]   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_LOGISTICSLOCATIONROLETRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_32160965_619597902] UNIQUE CLUSTERED ([LOCATIONROLE] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCATEGORY]...';


GO
CREATE TABLE [ax].[ECORESCATEGORY] (
    [RECID]                         BIGINT         NOT NULL,
    [CATEGORYHIERARCHY]             BIGINT         NOT NULL,
    [CHANGESTATUS]                  INT            NOT NULL,
    [CODE]                          NVARCHAR (20)  NOT NULL,
    [DEFAULTPROJECTGLOBALCATEGORY]  BIGINT         NOT NULL,
    [INSTANCERELATIONTYPE]          BIGINT         NOT NULL,
    [ISACTIVE]                      INT            NOT NULL,
    [ISCATEGORYATTRIBUTESINHERITED] INT            NOT NULL,
    [ISTANGIBLE]                    INT            NOT NULL,
    [LEVEL]                         BIGINT         NOT NULL,
    [NAME]                          NVARCHAR (254) NOT NULL,
    [NESTEDSETLEFT]                 BIGINT         NOT NULL,
    [NESTEDSETRIGHT]                BIGINT         NOT NULL,
    [PARENTCATEGORY]                BIGINT         NOT NULL,
    [RELATIONTYPE]                  BIGINT         NOT NULL,
    [CREATEDDATETIME]               DATETIME       NOT NULL,
    [MODIFIEDDATETIME]              DATETIME       NOT NULL,
    [ROWVERSION]                    TIMESTAMP      NOT NULL,
    CONSTRAINT [I_ECORESCATEGORY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1608894095_516664720] UNIQUE NONCLUSTERED ([NAME] ASC, [CATEGORYHIERARCHY] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTENDERTYPECARDNUMBERS]...';


GO
CREATE TABLE [ax].[RETAILTENDERTYPECARDNUMBERS] (
    [RECID]            BIGINT        NOT NULL,
    [CARDNUMBERFROM]   NVARCHAR (30) NOT NULL,
    [CARDNUMBERLENGTH] INT           NOT NULL,
    [CARDNUMBERTO]     NVARCHAR (30) NOT NULL,
    [CARDTYPEID]       NVARCHAR (10) NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_2117254335_1729673423] PRIMARY KEY CLUSTERED ([CARDTYPEID] ASC, [CARDNUMBERFROM] ASC, [CARDNUMBERTO] ASC, [CARDNUMBERLENGTH] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOFFLINETABLE]...';


GO
CREATE TABLE [ax].[RETAILOFFLINETABLE] (
    [RECID]      BIGINT        NOT NULL,
    [TABLENAME]  NVARCHAR (50) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILOFFLINETABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSPOSTALADDRESS]...';


GO
CREATE TABLE [ax].[LOGISTICSPOSTALADDRESS] (
    [RECID]              BIGINT           NOT NULL,
    [ADDRESS]            NVARCHAR (250)   NOT NULL,
    [BUILDINGCOMPLIMENT] NVARCHAR (60)    NOT NULL,
    [CITY]               NVARCHAR (60)    NOT NULL,
    [CITYRECID]          BIGINT           NOT NULL,
    [COUNTRYREGIONID]    NVARCHAR (10)    NOT NULL,
    [COUNTY]             NVARCHAR (10)    NOT NULL,
    [DISTRICT]           BIGINT           NOT NULL,
    [DISTRICTNAME]       NVARCHAR (60)    NOT NULL,
    [ISPRIVATE]          INT              NOT NULL,
    [LATITUDE]           NUMERIC (32, 16) NOT NULL,
    [LOCATION]           BIGINT           NOT NULL,
    [LONGITUDE]          NUMERIC (32, 16) NOT NULL,
    [POSTBOX]            NVARCHAR (20)    NOT NULL,
    [STATE]              NVARCHAR (10)    NOT NULL,
    [STREET]             NVARCHAR (250)   NOT NULL,
    [STREETNUMBER]       NVARCHAR (20)    NOT NULL,
    [TIMEZONE]           INT              NOT NULL,
    [VALIDFROM]          DATETIME         NOT NULL,
    [VALIDFROMTZID]      INT              NOT NULL,
    [VALIDTO]            DATETIME         NOT NULL,
    [VALIDTOTZID]        INT              NOT NULL,
    [ZIPCODE]            NVARCHAR (10)    NOT NULL,
    [ZIPCODERECID]       BIGINT           NOT NULL,
    [MODIFIEDDATETIME]   DATETIME         NOT NULL,
    [ROWVERSION]         TIMESTAMP        NOT NULL,
    CONSTRAINT [I_LOGISTICSPOSTALADDRESS_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_621354382_2047046459] UNIQUE CLUSTERED ([LOCATION] ASC, [VALIDFROM] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]...';


GO
CREATE TABLE [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] (
    [RECID]             BIGINT    NOT NULL,
    [CATEGORY]          BIGINT    NOT NULL,
    [CONTAINEDCATEGORY] BIGINT    NOT NULL,
    [ISDIRTY]           INT       NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILCATEGORYCONTAINMENTLOOKUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_729336743_496772623] UNIQUE NONCLUSTERED ([CATEGORY] ASC, [CONTAINEDCATEGORY] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCATEGORYCONTAINMENTLOOKUP].[IX_RETAILCATEGORYCONTAINMENTLOOKUP_CATEGORY]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILCATEGORYCONTAINMENTLOOKUP_CATEGORY]
    ON [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]([CATEGORY] ASC);


GO
PRINT N'Creating [ax].[RETAILCATEGORYCONTAINMENTLOOKUP].[IX_RETAILCATEGORYCONTAINMENTLOOKUP_CONTAINEDCATEGORY_RECID_CATEGORY]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILCATEGORYCONTAINMENTLOOKUP_CONTAINEDCATEGORY_RECID_CATEGORY]
    ON [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]([CONTAINEDCATEGORY] ASC, [RECID] ASC, [CATEGORY] ASC);


GO
PRINT N'Creating [ax].[RETAILCATEGORYCONTAINMENTLOOKUP].[IX_RETAILCATEGORYCONTAINMENTLOOKUP_CATEGORY_RECID_CONTAINEDCATEGORY]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILCATEGORYCONTAINMENTLOOKUP_CATEGORY_RECID_CONTAINEDCATEGORY]
    ON [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]([CATEGORY] ASC, [RECID] ASC, [CONTAINEDCATEGORY] ASC);


GO
PRINT N'Creating [ax].[RETAILCATEGORYCONTAINMENTLOOKUP].[IX_RETAILCATEGORYCONTAINMENTLOOKUP_VERSION]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILCATEGORYCONTAINMENTLOOKUP_VERSION]
    ON [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]([ROWVERSION] ASC)
    INCLUDE([CATEGORY], [CONTAINEDCATEGORY]);


GO
PRINT N'Creating [ax].[SYSTASKRECORDERINDUSTRY]...';


GO
CREATE TABLE [ax].[SYSTASKRECORDERINDUSTRY] (
    [RECID]                       BIGINT        NOT NULL,
    [NAME]                        NVARCHAR (60) NOT NULL,
    [SYSTASKRECORDERINDUSTRYCODE] NVARCHAR (20) NOT NULL,
    [ROWVERSION]                  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_SYSTASKRECORDERINDUSTRY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-568159942_-693532912] UNIQUE NONCLUSTERED ([SYSTASKRECORDERINDUSTRYCODE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSPECIALCATEGORYMEMBER]...';


GO
CREATE TABLE [ax].[RETAILSPECIALCATEGORYMEMBER] (
    [RECID]             BIGINT    NOT NULL,
    [CATEGORY]          BIGINT    NOT NULL,
    [RETAILGROUPMEMBER] BIGINT    NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILSPECIALCATEGORYMEMBER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-689542890_191182833] UNIQUE NONCLUSTERED ([RETAILGROUPMEMBER] ASC, [CATEGORY] ASC)
);


GO
PRINT N'Creating [ax].[ECORESDISTINCTPRODUCTVARIANT]...';


GO
CREATE TABLE [ax].[ECORESDISTINCTPRODUCTVARIANT] (
    [RECID]         BIGINT    NOT NULL,
    [PRODUCTMASTER] BIGINT    NOT NULL,
    [ROWVERSION]    TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESDISTINCTPRODUCTVARIANT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESDISTINCTPRODUCTVARIANT].[IX_ECORESDISTINCTPRODUCTVARIANT_PRODUCTMASTER]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESDISTINCTPRODUCTVARIANT_PRODUCTMASTER]
    ON [ax].[ECORESDISTINCTPRODUCTVARIANT]([PRODUCTMASTER] ASC)
    INCLUDE([RECID]);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTPRICEGROUP]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTPRICEGROUP] (
    [RECID]          BIGINT        NOT NULL,
    [OFFERID]        NVARCHAR (20) NOT NULL,
    [PRICEDISCGROUP] BIGINT        NOT NULL,
    [DATAAREAID]     NVARCHAR (4)  NOT NULL,
    [ROWVERSION]     TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTPRICEGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-755294702_1520629562] UNIQUE NONCLUSTERED ([OFFERID] ASC, [PRICEDISCGROUP] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[TAXREGISTRATIONNUMBERS_IN]...';


GO
CREATE TABLE [ax].[TAXREGISTRATIONNUMBERS_IN] (
    [RECID]              BIGINT        NOT NULL,
    [REGISTRATIONNUMBER] NVARCHAR (15) NOT NULL,
    [REGISTRATIONTYPE]   INT           NOT NULL,
    [TAXTYPE]            INT           NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [I_TAXREGISTRATIONNUMBERS_IN_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1544047818_-1285409270] UNIQUE NONCLUSTERED ([REGISTRATIONTYPE] ASC, [TAXTYPE] ASC, [REGISTRATIONNUMBER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTERMINALTABLE]...';


GO
CREATE TABLE [ax].[RETAILTERMINALTABLE] (
    [RECID]                            BIGINT         NOT NULL,
    [AUTOLOGOFFTIMEOUT]                INT            NOT NULL,
    [CLOSINGSTATUS]                    INT            NOT NULL,
    [CUSTOMERDISPLAYTEXT1]             NVARCHAR (40)  NOT NULL,
    [CUSTOMERDISPLAYTEXT2]             NVARCHAR (40)  NOT NULL,
    [EFTSTORERECID]                    BIGINT         NOT NULL,
    [EFTTENDERTYPEIDDEFAULT]           NVARCHAR (10)  NOT NULL,
    [EFTTERMINALID]                    NVARCHAR (50)  NOT NULL,
    [EXITAFTEREACHTRANSACTION]         INT            NOT NULL,
    [HARDWAREPROFILE]                  NVARCHAR (10)  NOT NULL,
    [IPADDRESS]                        NVARCHAR (255) NOT NULL,
    [ITEMIDONRECEIPT]                  INT            NOT NULL,
    [LAYOUTID]                         NVARCHAR (10)  NOT NULL,
    [LOCATION]                         NVARCHAR (60)  NOT NULL,
    [MANAGERKEYONRETURN]               INT            NOT NULL,
    [MAXDISPLAYTEXTLENGTH]             INT            NOT NULL,
    [MAXRECEIPTTEXTLENGTH]             INT            NOT NULL,
    [NAME]                             NVARCHAR (60)  NOT NULL,
    [NOTACTIVE]                        INT            NOT NULL,
    [NUMBEROFTOPBOTTOMLINES]           INT            NOT NULL,
    [ONLYTOTALINSUSPENDEDTRANSACTION]  INT            NOT NULL,
    [OPENDRAWERATLILO]                 INT            NOT NULL,
    [PRINTVATREFUNDCHECKS]             INT            NOT NULL,
    [RECEIPTBARCODE]                   INT            NOT NULL,
    [RECEIPTPRINTINGDEFAULTOFF]        INT            NOT NULL,
    [RECEIPTSETUPLOCATION]             INT            NOT NULL,
    [RETURNINTRANSACTION]              INT            NOT NULL,
    [SLIPIFRETURN]                     INT            NOT NULL,
    [STANDALONE]                       INT            NOT NULL,
    [STATEMENTMETHOD]                  INT            NOT NULL,
    [STORERECID]                       BIGINT         NOT NULL,
    [TERMINALID]                       NVARCHAR (10)  NOT NULL,
    [TERMINALSTATEMENT]                INT            NOT NULL,
    [UPDATESERVICEPORT]                INT            NOT NULL,
    [VISUALPROFILE]                    NVARCHAR (10)  NOT NULL,
    [FISCALDOCUMENTSERIES]             NVARCHAR (3)   NOT NULL,
    [RETAILTERMINALOPERATIONMODE]      INT            NOT NULL,
    [SELECTHARDWARESTATIONONTENDERING] INT            NOT NULL,
    [SUPPORTOFFLINE]                   INT            NOT NULL,
    [CREATERECORDING]                  INT            NOT NULL,
    [PLAYBACKRECORDING]                INT            NOT NULL,
    [MODIFIEDDATETIME]                 DATETIME       NOT NULL,
    [ROWVERSION]                       TIMESTAMP      NOT NULL,
    CONSTRAINT [I_1485945225_417776753] PRIMARY KEY CLUSTERED ([TERMINALID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTSERIAL]...';


GO
CREATE TABLE [ax].[INVENTSERIAL] (
    [RECID]          BIGINT         NOT NULL,
    [DESCRIPTION]    NVARCHAR (MAX) NULL,
    [INVENTSERIALID] NVARCHAR (20)  NOT NULL,
    [ITEMID]         NVARCHAR (20)  NOT NULL,
    [PRODDATE]       DATE           NOT NULL,
    [RFIDTAGID]      NVARCHAR (24)  NOT NULL,
    [DATAAREAID]     NVARCHAR (4)   NOT NULL,
    [ROWVERSION]     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_43867350_-846934704] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [INVENTSERIALID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINFOCODETABLE]...';


GO
CREATE TABLE [ax].[RETAILINFOCODETABLE] (
    [RECID]                   BIGINT           NOT NULL,
    [DESCRIPTION]             NVARCHAR (60)    NOT NULL,
    [INFOCODEID]              NVARCHAR (10)    NOT NULL,
    [INPUTREQUIRED]           INT              NOT NULL,
    [INPUTTYPE]               INT              NOT NULL,
    [LINKEDINFOCODEID]        NVARCHAR (10)    NOT NULL,
    [MAXIMUMLENGTH]           INT              NOT NULL,
    [MAXIMUMVALUE]            NUMERIC (32, 16) NOT NULL,
    [MINIMUMLENGTH]           INT              NOT NULL,
    [MINIMUMVALUE]            NUMERIC (32, 16) NOT NULL,
    [ONCEPERTRANSACTION]      INT              NOT NULL,
    [PRINTINPUTNAMEONRECEIPT] INT              NOT NULL,
    [PRINTINPUTONRECEIPT]     INT              NOT NULL,
    [PRINTPROMPTONRECEIPT]    INT              NOT NULL,
    [PROMPT]                  NVARCHAR (60)    NOT NULL,
    [RANDOMCOUNTER]           NUMERIC (32, 16) NOT NULL,
    [RANDOMFACTOR]            NUMERIC (32, 16) NOT NULL,
    [RETAILUSEINFOCODE]       INT              NOT NULL,
    [MODIFIEDDATETIME]        DATETIME         NOT NULL,
    [DATAAREAID]              NVARCHAR (4)     NOT NULL,
    [ROWVERSION]              TIMESTAMP        NOT NULL,
    CONSTRAINT [I_2047807304_-246962802] PRIMARY KEY CLUSTERED ([INFOCODEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINFOCODEGROUP]...';


GO
CREATE TABLE [ax].[RETAILINFOCODEGROUP] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [GROUPID]     NVARCHAR (10) NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILINFOCODEGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-2072258145_1109132959] UNIQUE NONCLUSTERED ([GROUPID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[HCMPOSITION]...';


GO
CREATE TABLE [ax].[HCMPOSITION] (
    [RECID]            BIGINT        NOT NULL,
    [POSITIONID]       NVARCHAR (25) NOT NULL,
    [CREATEDDATETIME]  DATETIME      NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_HCMPOSITION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_592131255_-1568444020] UNIQUE NONCLUSTERED ([POSITIONID] ASC)
);


GO
PRINT N'Creating [ax].[HCMPOSITION].[IX_HCMPOSITION_CODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_HCMPOSITION_CODE]
    ON [ax].[HCMPOSITION]([RECID] ASC);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERCONFIGURATION]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTMASTERCONFIGURATION] (
    [RECID]                           BIGINT    NOT NULL,
    [CONFIGPRODUCTDIMENSIONATTRIBUTE] BIGINT    NOT NULL,
    [CONFIGPRODUCTMASTER]             BIGINT    NOT NULL,
    [CONFIGURATION]                   BIGINT    NOT NULL,
    [ROWVERSION]                      TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTMASTERCONFIGURATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_2132147850_-1900482308] UNIQUE NONCLUSTERED ([CONFIGPRODUCTMASTER] ASC, [CONFIGPRODUCTDIMENSIONATTRIBUTE] ASC, [CONFIGURATION] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERCONFIGURATION].[IX_ECORESPRODUCTMASTERCONFIGURATION_CONFIGURATION]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTMASTERCONFIGURATION_CONFIGURATION]
    ON [ax].[ECORESPRODUCTMASTERCONFIGURATION]([CONFIGURATION] ASC)
    INCLUDE([CONFIGPRODUCTMASTER]);


GO
PRINT N'Creating [ax].[RETAILAUTHENTICATIONLOG]...';


GO
CREATE TABLE [ax].[RETAILAUTHENTICATIONLOG] (
    [LOGID]                        UNIQUEIDENTIFIER NOT NULL,
    [CHANNELID]                    BIGINT           NOT NULL,
    [STAFFID]                      NVARCHAR (25)    NOT NULL,
    [AUTHENTICATIONSTATUS]         INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [LOGDATETIME]                  DATETIME         NOT NULL,
    [LOGDATETIMETZID]              INT              NOT NULL,
    [AUTHENTICATIONOPERATION]      INT              NOT NULL,
    [CREATEDDATETIME]              DATETIME         NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-2088126445_-1275116490] PRIMARY KEY NONCLUSTERED ([LOGID] ASC),
    CONSTRAINT [I_RETAILAUTHENTICATIONLOG_REPLICATIONCOUNTERFROMORIGIN] UNIQUE CLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESVALUE]...';


GO
CREATE TABLE [ax].[ECORESVALUE] (
    [RECID]                BIGINT    NOT NULL,
    [INSTANCERELATIONTYPE] BIGINT    NOT NULL,
    [RELATIONTYPE]         BIGINT    NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYSCHEME]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYSCHEME] (
    [RECID]           BIGINT         NOT NULL,
    [AFFILIATION]     BIGINT         NOT NULL,
    [DESCRIPTION]     NVARCHAR (255) NOT NULL,
    [LOYALTYSCHEMEID] NVARCHAR (10)  NOT NULL,
    [ROWVERSION]      TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYSCHEME_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1146749838_-1598981990] UNIQUE NONCLUSTERED ([LOYALTYSCHEMEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBRETAILONLINECHANNELTABLE]...';


GO
CREATE TABLE [ax].[RETAILPUBRETAILONLINECHANNELTABLE] (
    [RECID]                 BIGINT    NOT NULL,
    [ONLINECHANNELORIGINID] BIGINT    NULL,
    [ROWVERSION]            TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBRETAILONLINECHANNELTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[PROVISIONINGMESSAGETABLE]...';


GO
CREATE TABLE [ax].[PROVISIONINGMESSAGETABLE] (
    [RECID]          BIGINT           NOT NULL,
    [ID]             UNIQUEIDENTIFIER NOT NULL,
    [USERID]         NVARCHAR (255)   NOT NULL,
    [PLANID]         UNIQUEIDENTIFIER NOT NULL,
    [PLANCAPABILITY] NVARCHAR (255)   NOT NULL,
    [STATE]          INT              NOT NULL,
    [ROWVERSION]     TIMESTAMP        NOT NULL,
    CONSTRAINT [I_PROVISIONINGMESSAGETABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_64444418_-1896442584] UNIQUE NONCLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTVARIANTSTYLE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTVARIANTSTYLE] (
    [RECID]      BIGINT    NOT NULL,
    [STYLE]      BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTVARIANTSTYLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[SYSTASKRECORDERFRAMEWORKLEVEL]...';


GO
CREATE TABLE [ax].[SYSTASKRECORDERFRAMEWORKLEVEL] (
    [RECID]                BIGINT        NOT NULL,
    [ALLOWARTIFACTS]       INT           NOT NULL,
    [FRAMEWORKINDUSTRYMAP] BIGINT        NOT NULL,
    [FRAMEWORKLEVEL]       NVARCHAR (20) NOT NULL,
    [SEQUENCE]             INT           NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_SYSTASKRECORDERFRAMEWORKLEVEL_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-138047098_-1016042189] UNIQUE NONCLUSTERED ([FRAMEWORKLEVEL] ASC, [FRAMEWORKINDUSTRYMAP] ASC),
    CONSTRAINT [I_-138047098_-781073241] UNIQUE NONCLUSTERED ([FRAMEWORKINDUSTRYMAP] ASC, [SEQUENCE] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERCOLOR]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTMASTERCOLOR] (
    [RECID]                          BIGINT    NOT NULL,
    [COLOR]                          BIGINT    NOT NULL,
    [COLORPRODUCTDIMENSIONATTRIBUTE] BIGINT    NOT NULL,
    [COLORPRODUCTMASTER]             BIGINT    NOT NULL,
    [ROWVERSION]                     TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTMASTERCOLOR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-245487881_1679221303] UNIQUE NONCLUSTERED ([COLORPRODUCTMASTER] ASC, [COLORPRODUCTDIMENSIONATTRIBUTE] ASC, [COLOR] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERCOLOR].[IX_ECORESPRODUCTMASTERCOLOR_COLOR]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTMASTERCOLOR_COLOR]
    ON [ax].[ECORESPRODUCTMASTERCOLOR]([COLOR] ASC)
    INCLUDE([COLORPRODUCTMASTER]);


GO
PRINT N'Creating [ax].[RETAILJOBPOSPERMISSIONGROUP]...';


GO
CREATE TABLE [ax].[RETAILJOBPOSPERMISSIONGROUP] (
    [RECID]                    BIGINT    NOT NULL,
    [JOB]                      BIGINT    NOT NULL,
    [RETAILPOSPERMISSIONGROUP] BIGINT    NOT NULL,
    [ROWVERSION]               TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILJOBPOSPERMISSIONGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_495795012_-384136432] UNIQUE NONCLUSTERED ([JOB] ASC)
);


GO
PRINT N'Creating [ax].[INVENTLOCATIONLOGISTICSLOCATION]...';


GO
CREATE TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATION] (
    [RECID]           BIGINT    NOT NULL,
    [INVENTLOCATION]  BIGINT    NOT NULL,
    [ISPOSTALADDRESS] INT       NOT NULL,
    [ISPRIMARY]       INT       NOT NULL,
    [LOCATION]        BIGINT    NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_INVENTLOCATIONLOGISTICSLOCATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1407999417_553911634] UNIQUE CLUSTERED ([INVENTLOCATION] ASC, [LOCATION] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERSTYLE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTMASTERSTYLE] (
    [RECID]                          BIGINT    NOT NULL,
    [STYLE]                          BIGINT    NOT NULL,
    [STYLEPRODUCTDIMENSIONATTRIBUTE] BIGINT    NOT NULL,
    [STYLEPRODUCTMASTER]             BIGINT    NOT NULL,
    [ROWVERSION]                     TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTMASTERSTYLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1455273879_-671292583] UNIQUE NONCLUSTERED ([STYLEPRODUCTMASTER] ASC, [STYLEPRODUCTDIMENSIONATTRIBUTE] ASC, [STYLE] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERSTYLE].[IX_ECORESPRODUCTMASTERSTYLE_STYLE]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTMASTERSTYLE_STYLE]
    ON [ax].[ECORESPRODUCTMASTERSTYLE]([STYLE] ASC)
    INCLUDE([STYLEPRODUCTMASTER]);


GO
PRINT N'Creating [ax].[RETAILCDXDATASTORECHANNEL]...';


GO
CREATE TABLE [ax].[RETAILCDXDATASTORECHANNEL] (
    [RECID]                         BIGINT    NOT NULL,
    [CHANNEL]                       BIGINT    NOT NULL,
    [DATABASEPROFILE]               BIGINT    NOT NULL,
    [DATAGROUPMODIFIEDDATETIME]     DATETIME  NOT NULL,
    [DATAGROUPMODIFIEDDATETIMETZID] INT       NOT NULL,
    [ROWVERSION]                    TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILCDXDATASTORECHANNEL_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_477722470_813932609] UNIQUE NONCLUSTERED ([CHANNEL] ASC, [DATABASEPROFILE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTORELOCATORGROUPMEMBER]...';


GO
CREATE TABLE [ax].[RETAILSTORELOCATORGROUPMEMBER] (
    [RECID]        BIGINT    NOT NULL,
    [LOCATORGROUP] BIGINT    NOT NULL,
    [STORE]        BIGINT    NOT NULL,
    [ROWVERSION]   TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILSTORELOCATORGROUPMEMBER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-319812993_-276372453] UNIQUE NONCLUSTERED ([LOCATORGROUP] ASC, [STORE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONATTRIBUTETRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONATTRIBUTETRANS] (
    [CHANNEL]                      BIGINT          NOT NULL,
    [NAME]                         NVARCHAR (60)   NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT             IDENTITY (1, 1) NOT NULL,
    [STORE]                        NVARCHAR (10)   NOT NULL,
    [TERMINAL]                     NVARCHAR (10)   NOT NULL,
    [TEXTVALUE]                    NVARCHAR (1999) NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)   NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)    NOT NULL,
    [ROWVERSION]                   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_-1620058971_-2013298691] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [NAME] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONATTRIBUTETRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONATTRIBUTETRANS].[IX_RETAILTRANSACTIONATTRIBUTETRANS_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONATTRIBUTETRANS_TRANSACTIONID]
    ON [ax].[RETAILTRANSACTIONATTRIBUTETRANS]([TRANSACTIONID] ASC);


GO
PRINT N'Creating [ax].[RETAILSTORETABLE]...';


GO
CREATE TABLE [ax].[RETAILSTORETABLE] (
    [RECID]                            BIGINT           NOT NULL,
    [TAXGROUP]                         NVARCHAR (10)    NOT NULL,
    [CLOSINGMETHOD]                    INT              NULL,
    [CREATELABELSFORZEROPRICE]         INT              NULL,
    [CULTURENAME]                      NVARCHAR (7)     NULL,
    [DATABASENAME]                     NVARCHAR (50)    NULL,
    [FUNCTIONALITYPROFILE]             NVARCHAR (10)    NULL,
    [GENERATESITEMLABELS]              INT              NULL,
    [GENERATESSHELFLABELS]             INT              NULL,
    [HIDETRAININGMODE]                 INT              NULL,
    [INVENTLOCATIONIDFORCUSTOMERORDER] NVARCHAR (10)    NULL,
    [INVENTORYLOOKUP]                  INT              NULL,
    [ITEMIDONRECEIPT]                  INT              NULL,
    [MAXIMUMPOSTINGDIFFERENCE]         NUMERIC (32, 16) NULL,
    [MAXIMUMTEXTLENGTHONRECEIPT]       INT              NULL,
    [MAXROUNDINGAMOUNT]                NUMERIC (32, 16) NULL,
    [MAXROUNDINGTAXAMOUNT]             NUMERIC (32, 16) NULL,
    [MAXSHIFTDIFFERENCEAMOUNT]         NUMERIC (32, 16) NULL,
    [MAXTRANSACTIONDIFFERENCEAMOUNT]   NUMERIC (32, 16) NULL,
    [NUMBEROFTOPORBOTTOMLINES]         INT              NULL,
    [OFFLINEPROFILE]                   BIGINT           NULL,
    [ONESTATEMENTPERDAY]               INT              NULL,
    [OPENFROM]                         INT              NULL,
    [OPENTO]                           INT              NULL,
    [PASSWORD]                         NVARCHAR (50)    NULL,
    [PHONE]                            NVARCHAR (20)    NULL,
    [REMOVEADDTENDER]                  NVARCHAR (10)    NULL,
    [REPLICATIONCOUNTER]               INT              NULL,
    [ROUNDINGTAXACCOUNT]               NVARCHAR (20)    NULL,
    [SERVICECHARGEPCT]                 NUMERIC (32, 16) NULL,
    [SERVICECHARGEPROMPT]              NVARCHAR (30)    NULL,
    [SQLSERVERNAME]                    NVARCHAR (80)    NULL,
    [STATEMENTMETHOD]                  INT              NULL,
    [STMTCALCBATCHENDTIME]             INT              NULL,
    [STMTPOSTASBUSINESSDAY]            INT              NULL,
    [STORENUMBER]                      NVARCHAR (10)    NOT NULL,
    [TAXGROUPDATAAREAID]               NVARCHAR (10)    NULL,
    [TAXIDENTIFICATIONNUMBER]          NVARCHAR (25)    NULL,
    [TAXOVERRIDEGROUP]                 BIGINT           NULL,
    [TENDERDECLARATIONCALCULATION]     INT              NULL,
    [USECUSTOMERBASEDTAX]              INT              NULL,
    [USEDEFAULTCUSTACCOUNT]            INT              NULL,
    [USEDESTINATIONBASEDTAX]           INT              NULL,
    [USERNAME]                         NVARCHAR (50)    NULL,
    [EFTSTORENUMBER]                   NVARCHAR (10)    NULL,
    [ROWVERSION]                       TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILSTORETABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-355920874_-94122868] UNIQUE NONCLUSTERED ([STORENUMBER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTORETABLE].[IX_RETAILSTORETABLE_RECID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILSTORETABLE_RECID]
    ON [ax].[RETAILSTORETABLE]([RECID] ASC);


GO
PRINT N'Creating [ax].[DIRPARTYTABLE]...';


GO
CREATE TABLE [ax].[DIRPARTYTABLE] (
    [RECID]            BIGINT         NOT NULL,
    [KNOWNAS]          NVARCHAR (100) NOT NULL,
    [LANGUAGEID]       NVARCHAR (7)   NOT NULL,
    [NAME]             NVARCHAR (100) NOT NULL,
    [NAMEALIAS]        NVARCHAR (20)  NOT NULL,
    [PARTYNUMBER]      NVARCHAR (40)  NOT NULL,
    [CREATEDDATETIME]  DATETIME       NOT NULL,
    [MODIFIEDDATETIME] DATETIME       NOT NULL,
    [ROWVERSION]       TIMESTAMP      NOT NULL,
    CONSTRAINT [I_DIRPARTYTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-747565321_315771746] UNIQUE NONCLUSTERED ([PARTYNUMBER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOFFLINECUSTOMERADDRESSFILTER]...';


GO
CREATE TABLE [ax].[RETAILOFFLINECUSTOMERADDRESSFILTER] (
    [RECID]          BIGINT         NOT NULL,
    [ADDRESSPART]    INT            NOT NULL,
    [FILTERVALUE]    NVARCHAR (250) NOT NULL,
    [OFFLINEPROFILE] BIGINT         NOT NULL,
    [ROWVERSION]     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILOFFLINECUSTOMERADDRESSFILTER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERDIMENSIONVALUE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTMASTERDIMENSIONVALUE] (
    [RECID]                BIGINT           NOT NULL,
    [INSTANCERELATIONTYPE] BIGINT           NOT NULL,
    [RETAILDISPLAYORDER]   NUMERIC (32, 16) NOT NULL,
    [RETAILWEIGHT]         INT              NOT NULL,
    [RELATIONTYPE]         BIGINT           NOT NULL,
    [ROWVERSION]           TIMESTAMP        NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTMASTERDIMENSIONVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCONFIGURATION]...';


GO
CREATE TABLE [ax].[ECORESCONFIGURATION] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (10) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESCONFIGURATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1043434429_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] (
    [CFOP]                         NVARCHAR (5)     NOT NULL,
    [ITEMID]                       NVARCHAR (20)    NOT NULL,
    [LINEAMOUNT]                   NUMERIC (32, 16) NOT NULL,
    [LINEDISCOUNT]                 NUMERIC (32, 16) NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [LINESURCHARGE]                NUMERIC (32, 16) NOT NULL,
    [QUANTITY]                     NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [UNIT]                         NVARCHAR (10)    NOT NULL,
    [UNITPRICE]                    NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-642316962_-1103390687] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALDOCUMENTMODEL2LINE_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILHARDWAREPROFILE]...';


GO
CREATE TABLE [ax].[RETAILHARDWAREPROFILE] (
    [RECID]                           BIGINT           NOT NULL,
    [CAPTUREEXTRADATA]                INT              NOT NULL,
    [CASHCHANGER]                     INT              NOT NULL,
    [CASHCHANGERINITSETTINGS]         NVARCHAR (100)   NOT NULL,
    [CASHCHANGERPORTSETTINGS]         NVARCHAR (50)    NOT NULL,
    [CCTV]                            INT              NOT NULL,
    [CCTVCAMERA]                      NVARCHAR (60)    NOT NULL,
    [CCTVHOSTNAME]                    NVARCHAR (60)    NOT NULL,
    [CCTVPORT]                        INT              NOT NULL,
    [DELAYFORLINKEDITEMS]             INT              NOT NULL,
    [DISPLAYBALANCETEXT]              NVARCHAR (60)    NOT NULL,
    [DISPLAYBINCONVERSION]            INT              NOT NULL,
    [DISPLAYCHARACTERSET]             INT              NOT NULL,
    [DISPLAYCLOSEDLINE1]              NVARCHAR (60)    NOT NULL,
    [DISPLAYCLOSEDLINE2]              NVARCHAR (60)    NOT NULL,
    [DISPLAYDESCRIPTION]              NVARCHAR (60)    NOT NULL,
    [DISPLAYDEVICE]                   INT              NOT NULL,
    [DISPLAYDEVICENAME]               NVARCHAR (60)    NOT NULL,
    [DISPLAYLINKEDITEM]               INT              NOT NULL,
    [DISPLAYTERMINALCLOSED]           INT              NOT NULL,
    [DISPLAYTOTALTEXT]                NVARCHAR (60)    NOT NULL,
    [DOCINSERTREMOVALTIMEOUT]         INT              NOT NULL,
    [DRAWER]                          INT              NOT NULL,
    [DRAWER2]                         INT              NOT NULL,
    [DRAWER2DESCRIPTION]              NVARCHAR (60)    NOT NULL,
    [DRAWER2DEVICENAME]               NVARCHAR (512)   NOT NULL,
    [DRAWER2MAKE]                     NVARCHAR (30)    NOT NULL,
    [DRAWER2MODEL]                    NVARCHAR (30)    NOT NULL,
    [DRAWERDESCRIPTION]               NVARCHAR (60)    NOT NULL,
    [DRAWERDEVICENAME]                NVARCHAR (512)   NOT NULL,
    [DRAWERMAKE]                      NVARCHAR (30)    NOT NULL,
    [DRAWERMODEL]                     NVARCHAR (30)    NOT NULL,
    [DUALDISPLAY]                     INT              NOT NULL,
    [DUALDISPLAYBROWSERURL]           NVARCHAR (255)   NOT NULL,
    [DUALDISPLAYIMAGEINTERVAL]        INT              NOT NULL,
    [DUALDISPLAYIMAGEPATH]            NVARCHAR (259)   NOT NULL,
    [DUALDISPLAYRECEIPTPERCENTAGE]    NUMERIC (32, 16) NOT NULL,
    [DUALDISPLAYTYPE]                 INT              NOT NULL,
    [EFT]                             INT              NOT NULL,
    [EFTCOMPANYID]                    NVARCHAR (50)    NOT NULL,
    [EFTCONFIGURATION]                INT              NOT NULL,
    [EFTCONNECTORNAME]                NVARCHAR (50)    NOT NULL,
    [EFTCONNECTORPROPERTIES]          NVARCHAR (MAX)   NULL,
    [EFTDATA]                         NVARCHAR (128)   NOT NULL,
    [EFTDESCRIPTION]                  NVARCHAR (60)    NOT NULL,
    [EFTMERCHANTID]                   NVARCHAR (25)    NOT NULL,
    [EFTPASSWORD]                     NVARCHAR (16)    NOT NULL,
    [EFTSERVERNAME]                   NVARCHAR (80)    NOT NULL,
    [EFTSERVERPORT]                   NVARCHAR (10)    NOT NULL,
    [EFTUSERID]                       NVARCHAR (60)    NOT NULL,
    [ENDTRACK1]                       NVARCHAR (5)     NOT NULL,
    [ENDTRACK2]                       NCHAR (1)        NOT NULL,
    [FISCALPRINTER]                   INT              NOT NULL,
    [FISCALPRINTERDESCRIPTION]        NVARCHAR (60)    NOT NULL,
    [FISCALPRINTERDEVICENAME]         NVARCHAR (512)   NOT NULL,
    [FORMXPOS]                        INT              NOT NULL,
    [FORMYPOS]                        INT              NOT NULL,
    [HARDTOTAL]                       INT              NOT NULL,
    [HARDTOTALDESCRIPTION]            NVARCHAR (60)    NOT NULL,
    [HARDTOTALDEVICENAME]             NVARCHAR (512)   NOT NULL,
    [KEYBOARDMAPPINGID]               NVARCHAR (10)    NOT NULL,
    [KEYLOCK]                         INT              NOT NULL,
    [KEYLOCKDESCRIPTION]              NVARCHAR (60)    NOT NULL,
    [KEYLOCKDEVICENAME]               NVARCHAR (512)   NOT NULL,
    [LOGO]                            INT              NOT NULL,
    [LOGOALIGNMENT]                   INT              NOT NULL,
    [LOGOBITMAP]                      VARBINARY (MAX)  NULL,
    [MANUALINPUTALLOWED]              INT              NOT NULL,
    [MAXINVOICELINES]                 INT              NOT NULL,
    [MICR]                            INT              NOT NULL,
    [MICRDESCRIPTION]                 NVARCHAR (60)    NOT NULL,
    [MICRDRIVERNAME]                  NVARCHAR (30)    NOT NULL,
    [MSR]                             INT              NOT NULL,
    [MSRDESCRIPTION]                  NVARCHAR (60)    NOT NULL,
    [MSRDEVICENAME]                   NVARCHAR (512)   NOT NULL,
    [MSRMAKE]                         NVARCHAR (30)    NOT NULL,
    [MSRMODEL]                        NVARCHAR (30)    NOT NULL,
    [NAME]                            NVARCHAR (60)    NOT NULL,
    [PHARMACY]                        INT              NOT NULL,
    [PHARMACYHOST]                    NVARCHAR (60)    NOT NULL,
    [PHARMACYPORT]                    INT              NOT NULL,
    [PINPAD]                          INT              NOT NULL,
    [PINPADDESCRIPTION]               NVARCHAR (60)    NOT NULL,
    [PINPADDEVICENAME]                NVARCHAR (512)   NOT NULL,
    [PINPADMAKE]                      NVARCHAR (30)    NOT NULL,
    [PINPADMODEL]                     NVARCHAR (30)    NOT NULL,
    [PRINTBINARYCONVERSION]           INT              NOT NULL,
    [PRINTER]                         INT              NOT NULL,
    [PRINTER2]                        INT              NOT NULL,
    [PRINTER2BINARYCONVERSION]        INT              NOT NULL,
    [PRINTER2CHARACTERSET]            INT              NOT NULL,
    [PRINTER2DESCRIPTION]             NVARCHAR (60)    NOT NULL,
    [PRINTER2DEVICENAME]              NVARCHAR (512)   NOT NULL,
    [PRINTER2DOCINSERTREMOVALTIMEOUT] INT              NOT NULL,
    [PRINTER2LOGO]                    INT              NOT NULL,
    [PRINTER2LOGOALIGNMENT]           INT              NOT NULL,
    [PRINTER2LOGOBITMAP]              VARBINARY (MAX)  NULL,
    [PRINTER2MAKE]                    NVARCHAR (30)    NOT NULL,
    [PRINTER2MODEL]                   NVARCHAR (30)    NOT NULL,
    [PRINTER2RECEIPTPROFILEID]        NVARCHAR (10)    NOT NULL,
    [PRINTERCHARACTERSET]             INT              NOT NULL,
    [PRINTERDESCRIPTION]              NVARCHAR (60)    NOT NULL,
    [PRINTERDEVICENAME]               NVARCHAR (512)   NOT NULL,
    [PRINTERMAKE]                     NVARCHAR (30)    NOT NULL,
    [PRINTERMODEL]                    NVARCHAR (30)    NOT NULL,
    [PRINTERRECEIPTPROFILEID]         NVARCHAR (10)    NOT NULL,
    [PROFILEID]                       NVARCHAR (10)    NOT NULL,
    [RFIDDESCRIPTION]                 NVARCHAR (60)    NOT NULL,
    [RFIDDEVICENAME]                  NVARCHAR (512)   NOT NULL,
    [RFIDSCANNERTYPE]                 INT              NOT NULL,
    [SCALE]                           INT              NOT NULL,
    [SCALEDESCRIPTION]                NVARCHAR (60)    NOT NULL,
    [SCALEDEVICENAME]                 NVARCHAR (512)   NOT NULL,
    [SCANNER]                         INT              NOT NULL,
    [SCANNER2]                        INT              NOT NULL,
    [SCANNER2DESCRIPTION]             NVARCHAR (60)    NOT NULL,
    [SCANNER2DEVICENAME]              NVARCHAR (512)   NOT NULL,
    [SCANNERDESCRIPTION]              NVARCHAR (60)    NOT NULL,
    [SCANNERDEVICENAME]               NVARCHAR (512)   NOT NULL,
    [SCREENKEYBOARD]                  INT              NOT NULL,
    [SEPARATOR1]                      NCHAR (1)        NOT NULL,
    [SHOWPICTURE]                     INT              NOT NULL,
    [SIGCAP]                          INT              NOT NULL,
    [SIGCAPDESCRIPTION]               NVARCHAR (60)    NOT NULL,
    [SIGCAPDEVICENAME]                NVARCHAR (512)   NOT NULL,
    [SIGCAPFORMNAME]                  NVARCHAR (50)    NOT NULL,
    [SIGCAPMAKE]                      NVARCHAR (30)    NOT NULL,
    [SIGCAPMODEL]                     NVARCHAR (30)    NOT NULL,
    [STARTTRACK1]                     NVARCHAR (5)     NOT NULL,
    [STARTTRACK2AFTER]                INT              NOT NULL,
    [TIMEOUTINSEC]                    INT              NOT NULL,
    [DRAWER2DEVICEPOOL]               BIGINT           NOT NULL,
    [DRAWER2USECASHDRAWERPOOL]        INT              NOT NULL,
    [DRAWERDEVICEPOOL]                BIGINT           NOT NULL,
    [DRAWERUSECASHDRAWERPOOL]         INT              NOT NULL,
    [EFTMAXIMUMCARDPAYMENTS]          INT              NOT NULL,
    [FISCALPRINTERCONFIGID]           NVARCHAR (10)    NOT NULL,
    [FISCALREGISTER]                  INT              NOT NULL,
    [FISCALREGISTERCONFIGID]          NVARCHAR (10)    NOT NULL,
    [FISCALREGISTERDESCRIPTION]       NVARCHAR (60)    NOT NULL,
    [FISCALREGISTERDEVICENAME]        NVARCHAR (512)   NOT NULL,
    [EFTTESTMODE]                     INT              NOT NULL,
    [MODIFIEDDATETIME]                DATETIME         NOT NULL,
    [ROWVERSION]                      TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1111485814_-2102841330] PRIMARY KEY CLUSTERED ([PROFILEID] ASC)
);


GO
PRINT N'Creating [ax].[COMPANYINFO]...';


GO
CREATE TABLE [ax].[COMPANYINFO] (
    [RECID]      BIGINT        NOT NULL,
    [CNAE_BR]    NVARCHAR (10) NULL,
    [DATAAREA]   NVARCHAR (10) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_COMPANYINFO_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-885798727_-1273337705] UNIQUE CLUSTERED ([DATAAREA] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCATEGORYHIERARCHY]...';


GO
CREATE TABLE [ax].[ECORESCATEGORYHIERARCHY] (
    [RECID]             BIGINT         NOT NULL,
    [HIERARCHYMODIFIER] INT            NOT NULL,
    [NAME]              NVARCHAR (128) NOT NULL,
    [ROWVERSION]        TIMESTAMP      NOT NULL,
    CONSTRAINT [I_ECORESCATEGORYHIERARCHY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-979199422_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINTERNALORGANIZATION]...';


GO
CREATE TABLE [ax].[RETAILINTERNALORGANIZATION] (
    [RECID]                BIGINT    NOT NULL,
    [INTERNALORGANIZATION] BIGINT    NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILINTERNALORGANIZATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_423793179_1393859730] UNIQUE NONCLUSTERED ([INTERNALORGANIZATION] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPOSBATCHACCOUNTTRANS]...';


GO
CREATE TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS] (
    [ACCOUNTNUM]         NVARCHAR (10)    NOT NULL,
    [ACCOUNTTYPE]        INT              NOT NULL,
    [AMOUNT]             NUMERIC (32, 16) NOT NULL,
    [BATCHID]            BIGINT           NOT NULL,
    [CHANNEL]            BIGINT           NOT NULL,
    [REPLICATIONCOUNTER] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]            NVARCHAR (10)    NOT NULL,
    [TERMINALID]         NVARCHAR (10)    NOT NULL,
    [DATAAREAID]         NVARCHAR (4)     NOT NULL,
    [ROWVERSION]         TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-2072456596_1536653555] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [BATCHID] ASC, [ACCOUNTNUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILPOSBATCHACCOUNTTRANS_REPLICATIONCOUNTER] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTER] ASC)
);


GO
PRINT N'Creating [ax].[INVENTTABLEMODULE]...';


GO
CREATE TABLE [ax].[INVENTTABLEMODULE] (
    [RECID]                 BIGINT           NOT NULL,
    [ALLOCATEMARKUP]        INT              NOT NULL,
    [ENDDISC]               INT              NOT NULL,
    [INTERCOMPANYBLOCKED]   INT              NOT NULL,
    [ITEMID]                NVARCHAR (20)    NOT NULL,
    [LINEDISC]              NVARCHAR (10)    NOT NULL,
    [MARKUP]                NUMERIC (32, 16) NOT NULL,
    [MARKUPGROUPID]         NVARCHAR (10)    NOT NULL,
    [MAXIMUMRETAILPRICE_IN] NUMERIC (32, 16) NOT NULL,
    [MODULETYPE]            INT              NOT NULL,
    [MULTILINEDISC]         NVARCHAR (10)    NOT NULL,
    [OVERDELIVERYPCT]       NUMERIC (32, 16) NOT NULL,
    [PRICE]                 NUMERIC (32, 16) NOT NULL,
    [PRICEDATE]             DATE             NOT NULL,
    [PRICEQTY]              NUMERIC (32, 16) NOT NULL,
    [PRICEUNIT]             NUMERIC (32, 16) NOT NULL,
    [SUPPITEMGROUPID]       NVARCHAR (10)    NOT NULL,
    [TAXITEMGROUPID]        NVARCHAR (10)    NOT NULL,
    [UNDERDELIVERYPCT]      NUMERIC (32, 16) NOT NULL,
    [UNITID]                NVARCHAR (10)    NOT NULL,
    [DATAAREAID]            NVARCHAR (4)     NOT NULL,
    [ROWVERSION]            TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1890880046_1242579072] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [MODULETYPE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTTABLEMODULE].[IX_INVENTTABLEMODULE_MODULE_ITEM_UNIT]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTTABLEMODULE_MODULE_ITEM_UNIT]
    ON [ax].[INVENTTABLEMODULE]([MODULETYPE] ASC, [ITEMID] ASC, [UNITID] ASC);


GO
PRINT N'Creating [ax].[INVENTTABLEMODULE].[IX_INVENTTABLEMODULE_MODULE_VERSION]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTTABLEMODULE_MODULE_VERSION]
    ON [ax].[INVENTTABLEMODULE]([MODULETYPE] ASC, [ROWVERSION] ASC)
    INCLUDE([ITEMID]);


GO
PRINT N'Creating [ax].[INVENTTABLEMODULE].[IX_INVENTTABLEMODULE_ITEM_TYPE]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTTABLEMODULE_ITEM_TYPE]
    ON [ax].[INVENTTABLEMODULE]([ITEMID] ASC, [MODULETYPE] ASC)
    INCLUDE([ALLOCATEMARKUP], [ENDDISC], [LINEDISC], [MARKUP], [MARKUPGROUPID], [MULTILINEDISC], [PRICE], [PRICEQTY], [TAXITEMGROUPID], [UNITID]);


GO
PRINT N'Creating [ax].[INVENTTABLEMODULE].[IX_INVENTTABLEMODULE_MODULE]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTTABLEMODULE_MODULE]
    ON [ax].[INVENTTABLEMODULE]([MODULETYPE] ASC)
    INCLUDE([ITEMID], [UNITID], [PRICE], [MARKUP], [LINEDISC], [MULTILINEDISC], [ENDDISC], [TAXITEMGROUPID], [MARKUPGROUPID], [PRICEQTY], [ALLOCATEMARKUP]);


GO
PRINT N'Creating [ax].[TAXONITEM]...';


GO
CREATE TABLE [ax].[TAXONITEM] (
    [RECID]                BIGINT           NOT NULL,
    [ABATEMENTPERCENT_IN]  NUMERIC (32, 16) NOT NULL,
    [EXEMPTTAX_BR]         INT              NOT NULL,
    [TAXATIONCODETABLE_BR] BIGINT           NOT NULL,
    [TAXCODE]              NVARCHAR (10)    NOT NULL,
    [TAXITEMGROUP]         NVARCHAR (10)    NOT NULL,
    [WITHOUTTAXCREDIT_BR]  INT              NOT NULL,
    [DATAAREAID]           NVARCHAR (4)     NOT NULL,
    [ROWVERSION]           TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1486226945_-2114646326] PRIMARY KEY CLUSTERED ([TAXITEMGROUP] ASC, [TAXCODE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_1486226945_-1293317740] UNIQUE NONCLUSTERED ([TAXCODE] ASC, [TAXITEMGROUP] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]...';


GO
CREATE TABLE [ax].[RETAILEXTERNALIDTOCUSTOMERMAP] (
    [RECID]                 BIGINT         NOT NULL,
    [EXTERNALIDENTITYID]    NVARCHAR (500) NOT NULL,
    [PROVIDERID]            BIGINT         NOT NULL,
    [CUSTOMERACCOUNTNUMBER] NVARCHAR (20)  NOT NULL,
    [ISACTIVATED]           INT            NOT NULL,
    [DATAAREAID]            NVARCHAR (4)   NOT NULL,
    [ROWVERSION]            TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILEXTERNALIDTOCUSTOMERMAP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_69711760_-1965032261] UNIQUE NONCLUSTERED ([EXTERNALIDENTITYID] ASC, [PROVIDERID] ASC, [CUSTOMERACCOUNTNUMBER] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILEXTERNALIDTOCUSTOMERMAP].[IX_RETAILEXTERNALIDTOCUSTOMERMAP_EXTERNALID_PROVIDERID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_RETAILEXTERNALIDTOCUSTOMERMAP_EXTERNALID_PROVIDERID]
    ON [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]([EXTERNALIDENTITYID] ASC, [PROVIDERID] ASC)
    INCLUDE([CUSTOMERACCOUNTNUMBER]);


GO
PRINT N'Creating [ax].[RETAILPERMISSIONSEX]...';


GO
CREATE TABLE [ax].[RETAILPERMISSIONSEX] (
    [RECID]          BIGINT         NOT NULL,
    [PERMISSIONNAME] NVARCHAR (100) NOT NULL,
    [PERMISSIONID]   INT            NOT NULL,
    [ROWVERSION]     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_1223034906_-1286231878] PRIMARY KEY CLUSTERED ([PERMISSIONID] ASC)
);


GO
PRINT N'Creating [ax].[TAXGROUPDATA]...';


GO
CREATE TABLE [ax].[TAXGROUPDATA] (
    [RECID]                BIGINT        NOT NULL,
    [EXEMPTTAX]            INT           NOT NULL,
    [TAXATIONCODETABLE_BR] BIGINT        NOT NULL,
    [TAXCODE]              NVARCHAR (10) NOT NULL,
    [TAXGROUP]             NVARCHAR (10) NOT NULL,
    [USETAX]               INT           NOT NULL,
    [DATAAREAID]           NVARCHAR (4)  NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-469848310_-1912629129] PRIMARY KEY CLUSTERED ([TAXGROUP] ASC, [TAXCODE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-469848310_-1078995487] UNIQUE NONCLUSTERED ([TAXCODE] ASC, [TAXGROUP] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILREPORTLOCALIZEDSTRING]...';


GO
CREATE TABLE [ax].[RETAILREPORTLOCALIZEDSTRING] (
    [RECID]       BIGINT         NOT NULL,
    [LOCALECODE]  NVARCHAR (7)   NOT NULL,
    [STRINGID]    NVARCHAR (100) NOT NULL,
    [STRINGVALUE] NVARCHAR (400) NOT NULL,
    [ROWVERSION]  TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILREPORTLOCALIZEDSTRING_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1485736813_-566285944] UNIQUE NONCLUSTERED ([LOCALECODE] ASC, [STRINGID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] (
    [AFFILIATION]                  BIGINT           NOT NULL,
    [CARDNUMBER]                   NVARCHAR (30)    NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [CUSTACCOUNT]                  NVARCHAR (20)    NOT NULL,
    [ENTRYDATE]                    DATE             NOT NULL,
    [ENTRYTIME]                    INT              NOT NULL,
    [ENTRYTYPE]                    INT              NOT NULL,
    [EXPIRATIONDATE]               DATE             NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [LOYALTYTIER]                  BIGINT           NOT NULL,
    [RECEIPTID]                    NVARCHAR (18)    NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [REWARDPOINT]                  BIGINT           NOT NULL,
    [REWARDPOINTAMOUNTQTY]         NUMERIC (32, 16) NOT NULL,
    [STAFFID]                      NVARCHAR (25)    NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1316415024_2094676863] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCUSTAFFILIATION]...';


GO
CREATE TABLE [ax].[RETAILCUSTAFFILIATION] (
    [RECID]               BIGINT        NOT NULL,
    [CUSTACCOUNTNUM]      NVARCHAR (20) NOT NULL,
    [RETAILAFFILIATIONID] BIGINT        NOT NULL,
    [DATAAREAID]          NVARCHAR (4)  NOT NULL,
    [ROWVERSION]          TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILCUSTAFFILIATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1682217268_1544434852] UNIQUE NONCLUSTERED ([CUSTACCOUNTNUM] ASC, [RETAILAFFILIATIONID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUTREPORTZONE]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUTREPORTZONE] (
    [RECID]      BIGINT    NOT NULL,
    [REPORT]     BIGINT    NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILTILLLAYOUTREPORTZONE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSLOCATIONEXT]...';


GO
CREATE TABLE [ax].[LOGISTICSLOCATIONEXT] (
    [RECID]           BIGINT        NOT NULL,
    [LOCATION]        BIGINT        NOT NULL,
    [SALESCALENDARID] NVARCHAR (10) NOT NULL,
    [TAXGROUP]        NVARCHAR (10) NOT NULL,
    [DATAAREAID]      NVARCHAR (4)  NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_LOGISTICSLOCATIONEXT_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-45831765_167473448] UNIQUE CLUSTERED ([LOCATION] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ACCOUNTANT_BR]...';


GO
CREATE TABLE [ax].[ACCOUNTANT_BR] (
    [RECID]      BIGINT         NOT NULL,
    [CNPJNUM_BR] NVARCHAR (20)  NOT NULL,
    [CPFNUM_BR]  NVARCHAR (20)  NOT NULL,
    [CRCNUM_BR]  NVARCHAR (20)  NOT NULL,
    [NAME]       NVARCHAR (100) NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_ACCOUNTANT_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1701316395_1138566887] UNIQUE NONCLUSTERED ([CPFNUM_BR] ASC, [CRCNUM_BR] ASC)
);


GO
PRINT N'Creating [ax].[CUSTTABLE]...';


GO
CREATE TABLE [ax].[CUSTTABLE] (
    [RECID]                      BIGINT           NOT NULL,
    [PAYMTERMID]                 NVARCHAR (10)    NOT NULL,
    [LINEDISC]                   NVARCHAR (10)    NOT NULL,
    [ACCOUNTNUM]                 NVARCHAR (20)    NOT NULL,
    [ACCOUNTSTATEMENT]           INT              NOT NULL,
    [BANKACCOUNT]                NVARCHAR (10)    NOT NULL,
    [BANKCENTRALBANKPURPOSECODE] NVARCHAR (10)    NOT NULL,
    [BANKCENTRALBANKPURPOSETEXT] NVARCHAR (140)   NOT NULL,
    [BLOCKED]                    INT              NOT NULL,
    [CASHDISC]                   NVARCHAR (10)    NOT NULL,
    [CLEARINGPERIOD]             NVARCHAR (10)    NOT NULL,
    [CNPJCPFNUM_BR]              NVARCHAR (20)    NOT NULL,
    [COMMISSIONGROUP]            NVARCHAR (10)    NOT NULL,
    [CONTACTPERSONID]            NVARCHAR (20)    NOT NULL,
    [CREDITMAX]                  NUMERIC (32, 16) NOT NULL,
    [CREDITRATING]               NVARCHAR (10)    NOT NULL,
    [CURRENCY]                   NVARCHAR (3)     NOT NULL,
    [CUSTGROUP]                  NVARCHAR (10)    NOT NULL,
    [CUSTITEMGROUPID]            NVARCHAR (10)    NOT NULL,
    [DESTINATIONCODEID]          NVARCHAR (10)    NOT NULL,
    [DLVMODE]                    NVARCHAR (10)    NOT NULL,
    [DLVTERM]                    NVARCHAR (10)    NOT NULL,
    [ENDDISC]                    NVARCHAR (10)    NOT NULL,
    [FORECASTDMPINCLUDE]         INT              NOT NULL,
    [FREIGHTZONE]                NVARCHAR (10)    NOT NULL,
    [IDENTIFICATIONNUMBER]       NVARCHAR (50)    NOT NULL,
    [IENUM_BR]                   NVARCHAR (20)    NOT NULL,
    [INCLTAX]                    INT              NOT NULL,
    [INVENTLOCATION]             NVARCHAR (10)    NOT NULL,
    [INVENTSITEID]               NVARCHAR (10)    NOT NULL,
    [INVOICEACCOUNT]             NVARCHAR (20)    NOT NULL,
    [INVOICEADDRESS]             INT              NOT NULL,
    [LINEOFBUSINESSID]           NVARCHAR (10)    NOT NULL,
    [MANDATORYCREDITLIMIT]       INT              NOT NULL,
    [MARKUPGROUP]                NVARCHAR (10)    NOT NULL,
    [MULTILINEDISC]              NVARCHAR (10)    NOT NULL,
    [NUMBERSEQUENCEGROUP]        NVARCHAR (10)    NOT NULL,
    [ONETIMECUSTOMER]            INT              NOT NULL,
    [ORGID]                      NVARCHAR (10)    NOT NULL,
    [OURACCOUNTNUM]              NVARCHAR (20)    NOT NULL,
    [PACKMATERIALFEELICENSENUM]  NVARCHAR (20)    NOT NULL,
    [PARTY]                      BIGINT           NOT NULL,
    [PAYMDAYID]                  NVARCHAR (10)    NOT NULL,
    [PAYMMODE]                   NVARCHAR (10)    NOT NULL,
    [PAYMSPEC]                   NVARCHAR (10)    NOT NULL,
    [PRICEGROUP]                 NVARCHAR (10)    NOT NULL,
    [SALESGROUP]                 NVARCHAR (10)    NOT NULL,
    [SALESPOOLID]                NVARCHAR (10)    NOT NULL,
    [STATISTICSGROUP]            NVARCHAR (10)    NOT NULL,
    [SUFRAMA_BR]                 INT              NOT NULL,
    [SUFRAMANUMBER_BR]           NVARCHAR (10)    NOT NULL,
    [SUPPITEMGROUPID]            NVARCHAR (10)    NOT NULL,
    [TAXGROUP]                   NVARCHAR (10)    NOT NULL,
    [TAXLICENSENUM]              NVARCHAR (20)    NOT NULL,
    [USEPURCHREQUEST]            INT              NOT NULL,
    [VATNUM]                     NVARCHAR (20)    NOT NULL,
    [VENDACCOUNT]                NVARCHAR (20)    NOT NULL,
    [WEBSALESORDERDISPLAY]       INT              NOT NULL,
    [CREATEDDATETIME]            DATETIME         NOT NULL,
    [MODIFIEDDATETIME]           DATETIME         NOT NULL,
    [DATAAREAID]                 NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                 TIMESTAMP        NOT NULL,
    CONSTRAINT [I_880715539_-2094443312] PRIMARY KEY CLUSTERED ([ACCOUNTNUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_880715539_237279918] UNIQUE NONCLUSTERED ([PARTY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[CUSTTABLE].[IX_CUSTTABLE_RECID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CUSTTABLE_RECID]
    ON [ax].[CUSTTABLE]([RECID] ASC)
    INCLUDE([PARTY]);


GO
PRINT N'Creating [ax].[RETAILOFFLINESCOPETABLES]...';


GO
CREATE TABLE [ax].[RETAILOFFLINESCOPETABLES] (
    [RECID]       BIGINT    NOT NULL,
    [SCOPEID]     BIGINT    NOT NULL,
    [SYNCTABLEID] BIGINT    NOT NULL,
    [ROWVERSION]  TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILOFFLINESCOPETABLES_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-118421387_-1026021288] UNIQUE NONCLUSTERED ([SYNCTABLEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELCURRENCY]...';


GO
CREATE TABLE [ax].[RETAILCHANNELCURRENCY] (
    [RECID]        BIGINT       NOT NULL,
    [CHANNEL]      BIGINT       NOT NULL,
    [CURRENCYCODE] NVARCHAR (3) NOT NULL,
    [ROWVERSION]   TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILCHANNELCURRENCY_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_114831543_1078512529] UNIQUE CLUSTERED ([CHANNEL] ASC, [CURRENCYCODE] ASC)
);


GO
PRINT N'Creating [ax].[PRICEDISCTABLE]...';


GO
CREATE TABLE [ax].[PRICEDISCTABLE] (
    [RECID]                 BIGINT           NOT NULL,
    [ACCOUNTCODE]           INT              NOT NULL,
    [ACCOUNTRELATION]       NVARCHAR (20)    NOT NULL,
    [AGREEMENT]             NVARCHAR (10)    NOT NULL,
    [AGREEMENTHEADEREXT_RU] BIGINT           NOT NULL,
    [ALLOCATEMARKUP]        INT              NOT NULL,
    [AMOUNT]                NUMERIC (32, 16) NOT NULL,
    [CALENDARDAYS]          INT              NOT NULL,
    [CURRENCY]              NVARCHAR (3)     NOT NULL,
    [DELIVERYTIME]          INT              NOT NULL,
    [FROMDATE]              DATE             NOT NULL,
    [GENERICCURRENCY]       INT              NOT NULL,
    [INVENTDIMID]           NVARCHAR (20)    NOT NULL,
    [ITEMCODE]              INT              NOT NULL,
    [ITEMRELATION]          NVARCHAR (20)    NOT NULL,
    [MARKUP]                NUMERIC (32, 16) NOT NULL,
    [MAXIMUMRETAILPRICE_IN] NUMERIC (32, 16) NOT NULL,
    [MODULE]                INT              NOT NULL,
    [PERCENT1]              NUMERIC (32, 16) NOT NULL,
    [PERCENT2]              NUMERIC (32, 16) NOT NULL,
    [PRICEUNIT]             NUMERIC (32, 16) NOT NULL,
    [QUANTITYAMOUNTFROM]    NUMERIC (32, 16) NOT NULL,
    [QUANTITYAMOUNTTO]      NUMERIC (32, 16) NOT NULL,
    [RELATION]              INT              NOT NULL,
    [SEARCHAGAIN]           INT              NOT NULL,
    [TODATE]                DATE             NOT NULL,
    [UNITID]                NVARCHAR (10)    NOT NULL,
    [MODIFIEDDATETIME]      DATETIME         NOT NULL,
    [DATAAREAID]            NVARCHAR (4)     NOT NULL,
    [ROWVERSION]            TIMESTAMP        NOT NULL,
    CONSTRAINT [I_PRICEDISCTABLE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_137462222_1904821809] UNIQUE CLUSTERED ([RELATION] ASC, [ITEMCODE] ASC, [ITEMRELATION] ASC, [ACCOUNTCODE] ASC, [ACCOUNTRELATION] ASC, [CURRENCY] ASC, [INVENTDIMID] ASC, [UNITID] ASC, [QUANTITYAMOUNTFROM] ASC, [RECID] ASC, [FROMDATE] ASC, [AGREEMENTHEADEREXT_RU] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[PRICEDISCTABLE].[IX_PRICEDISCTABLE_RELATION_VERSION]...';


GO
CREATE NONCLUSTERED INDEX [IX_PRICEDISCTABLE_RELATION_VERSION]
    ON [ax].[PRICEDISCTABLE]([RELATION] ASC, [ROWVERSION] ASC)
    INCLUDE([ITEMRELATION], [INVENTDIMID]);


GO
PRINT N'Creating [ax].[PRICEDISCTABLE].[IX_PRICEDISCTABLE_PRICE_BY_ITEM]...';


GO
CREATE NONCLUSTERED INDEX [IX_PRICEDISCTABLE_PRICE_BY_ITEM]
    ON [ax].[PRICEDISCTABLE]([ITEMRELATION] ASC, [RELATION] ASC, [ITEMCODE] ASC)
    INCLUDE([ACCOUNTCODE], [ACCOUNTRELATION], [INVENTDIMID], [CURRENCY], [FROMDATE], [TODATE], [DATAAREAID]);


GO
PRINT N'Creating [ax].[PRICEDISCTABLE].[IX_PRICEDISCTABLE_ACCT_REL_ITEM_ACCTREL]...';


GO
CREATE NONCLUSTERED INDEX [IX_PRICEDISCTABLE_ACCT_REL_ITEM_ACCTREL]
    ON [ax].[PRICEDISCTABLE]([ACCOUNTCODE] ASC, [RELATION] ASC, [ITEMCODE] ASC, [ACCOUNTRELATION] ASC)
    INCLUDE([ITEMRELATION]);


GO
PRINT N'Creating [ax].[PRICEDISCTABLE].[IX_PRICEDISCTABLE_ITEMCODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_PRICEDISCTABLE_ITEMCODE]
    ON [ax].[PRICEDISCTABLE]([ITEMCODE] ASC, [ACCOUNTCODE] ASC, [RELATION] ASC)
    INCLUDE([ITEMRELATION], [ACCOUNTRELATION], [INVENTDIMID]);


GO
PRINT N'Creating [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] (
    [FISCALVALUE]                  INT              NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TAXAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [TAXATIONCODE]                 NVARCHAR (3)     NOT NULL,
    [TAXATIONORIGIN]               INT              NOT NULL,
    [TAXBASEAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [TAXCODE]                      NVARCHAR (10)    NOT NULL,
    [TAXREDUCTIONPCT]              NUMERIC (32, 16) NOT NULL,
    [TAXTYPE]                      INT              NOT NULL,
    [TAXVALUE]                     NUMERIC (32, 16) NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1437421203_-1871252748] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [TAXTYPE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[MARKUPAUTOLINE]...';


GO
CREATE TABLE [ax].[MARKUPAUTOLINE] (
    [RECID]                     BIGINT           NOT NULL,
    [CURRENCYCODE]              NVARCHAR (3)     NOT NULL,
    [CUSTOMSASSESSABLEVALUE_IN] INT              NOT NULL,
    [FROMAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [KEEP]                      INT              NOT NULL,
    [LINENUM]                   NUMERIC (32, 16) NOT NULL,
    [MARKUPCATEGORY]            INT              NOT NULL,
    [MARKUPCODE]                NVARCHAR (10)    NOT NULL,
    [MARKUPCURRENCYCODE]        NVARCHAR (3)     NOT NULL,
    [MODULECATEGORY]            INT              NOT NULL,
    [MODULETYPE]                INT              NOT NULL,
    [NOTIONALCHARGES_IN]        INT              NOT NULL,
    [NOTIONALPCT_IN]            NUMERIC (32, 16) NOT NULL,
    [TABLERECID]                BIGINT           NOT NULL,
    [TABLETABLEID]              INT              NOT NULL,
    [TAXGROUP]                  NVARCHAR (10)    NOT NULL,
    [TAXITEMGROUP]              NVARCHAR (10)    NOT NULL,
    [TOAMOUNT]                  NUMERIC (32, 16) NOT NULL,
    [TXT]                       NVARCHAR (60)    NOT NULL,
    [VALUE]                     NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]                NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1293693211_-1942181553] PRIMARY KEY CLUSTERED ([TABLERECID] ASC, [TABLETABLEID] ASC, [LINENUM] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTERMINALCUSTOMFIELD]...';


GO
CREATE TABLE [ax].[RETAILTERMINALCUSTOMFIELD] (
    [RECID]         BIGINT        NOT NULL,
    [CAPTIONTEXTID] INT           NOT NULL,
    [NAME]          NVARCHAR (50) NOT NULL,
    [TYPE]          INT           NOT NULL,
    [ROWVERSION]    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTERMINALCUSTOMFIELD_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_2146898594_1555050992] UNIQUE NONCLUSTERED ([NAME] ASC, [TYPE] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCATEGORYATTRIBUTEGROUP]...';


GO
CREATE TABLE [ax].[ECORESCATEGORYATTRIBUTEGROUP] (
    [RECID]              BIGINT    NOT NULL,
    [ATTRIBUTEGROUP]     BIGINT    NOT NULL,
    [ATTRIBUTEGROUPTYPE] INT       NOT NULL,
    [CATEGORY]           BIGINT    NOT NULL,
    [MODIFIER]           INT       NOT NULL,
    [ROWVERSION]         TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESCATEGORYATTRIBUTEGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1480101260_-1614480561] UNIQUE NONCLUSTERED ([ATTRIBUTEGROUP] ASC, [CATEGORY] ASC, [MODIFIER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDLVMODEPRODUCTEXPLODED]...';


GO
CREATE TABLE [ax].[RETAILDLVMODEPRODUCTEXPLODED] (
    [RECID]      BIGINT        NOT NULL,
    [DLVMODE]    BIGINT        NOT NULL,
    [INVENTDIM]  NVARCHAR (20) NOT NULL,
    [ITEMID]     NVARCHAR (20) NOT NULL,
    [DATAAREAID] NVARCHAR (4)  NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILDLVMODEPRODUCTEXPLODED_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1711265534_-1243541637] UNIQUE NONCLUSTERED ([DLVMODE] ASC, [ITEMID] ASC, [INVENTDIM] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPERMISSIONS]...';


GO
CREATE TABLE [ax].[RETAILPERMISSIONS] (
    [RECID]          BIGINT         NOT NULL,
    [PERMISSIONID]   INT            NOT NULL,
    [PERMISSIONNAME] NVARCHAR (100) NOT NULL,
    [ROWVERSION]     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_-191668477_-407734873] PRIMARY KEY CLUSTERED ([PERMISSIONID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELPROFILE]...';


GO
CREATE TABLE [ax].[RETAILCHANNELPROFILE] (
    [RECID]              BIGINT        NOT NULL,
    [CHANNELPROFILETYPE] INT           NOT NULL,
    [NAME]               NVARCHAR (50) NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILCHANNELPROFILE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-384404477_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTERMINALDEVICE]...';


GO
CREATE TABLE [ax].[RETAILTERMINALDEVICE] (
    [RECID]            BIGINT        NOT NULL,
    [DEVICE]           BIGINT        NOT NULL,
    [TERMINALID]       NVARCHAR (10) NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTERMINALDEVICE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1106247877_1900032017] UNIQUE NONCLUSTERED ([TERMINALID] ASC),
    CONSTRAINT [I_-1106247877_-34442163] UNIQUE NONCLUSTERED ([DEVICE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTMIXANDMATCH]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTMIXANDMATCH] (
    [RECID]                   BIGINT           NOT NULL,
    [DEALPRICEVALUE]          NUMERIC (32, 16) NULL,
    [DISCOUNTAMOUNTVALUE]     NUMERIC (32, 16) NULL,
    [MIXANDMATCHDISCOUNTTYPE] INT              NULL,
    [NOOFLEASTEXPENSIVELINES] INT              NULL,
    [NUMBEROFTIMESAPPLICABLE] INT              NULL,
    [LEASTEXPENSIVEMODE]      INT              NULL,
    [DATAAREAID]              NVARCHAR (4)     NOT NULL,
    [ROWVERSION]              TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTMIXANDMATCH_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[CFOPTABLE_BR]...';


GO
CREATE TABLE [ax].[CFOPTABLE_BR] (
    [RECID]      BIGINT         NOT NULL,
    [CFOPID]     NVARCHAR (5)   NOT NULL,
    [NAME]       NVARCHAR (150) NOT NULL,
    [DATAAREAID] NVARCHAR (4)   NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_CFOPTABLE_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1535687849_-88317365] UNIQUE NONCLUSTERED ([CFOPID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTITEMGTIN]...';


GO
CREATE TABLE [ax].[INVENTITEMGTIN] (
    [RECID]                 BIGINT        NOT NULL,
    [DESCRIPTION]           NVARCHAR (60) NOT NULL,
    [GLOBALTRADEITEMNUMBER] NVARCHAR (14) NOT NULL,
    [GTINSETUP]             INT           NOT NULL,
    [INVENTDIMID]           NVARCHAR (20) NOT NULL,
    [ITEMID]                NVARCHAR (20) NOT NULL,
    [UNITID]                NVARCHAR (10) NOT NULL,
    [DATAAREAID]            NVARCHAR (4)  NOT NULL,
    [ROWVERSION]            TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1261397331_1429128816] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [INVENTDIMID] ASC, [UNITID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_1261397331_-948205258] UNIQUE NONCLUSTERED ([GLOBALTRADEITEMNUMBER] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDEVICE]...';


GO
CREATE TABLE [ax].[RETAILDEVICE] (
    [RECID]                        BIGINT         NOT NULL,
    [ACTIVATEDDATETIME]            DATETIME       NOT NULL,
    [ACTIVATEDDATETIMETZID]        INT            NOT NULL,
    [ACTIVATIONSTATUS]             INT            NOT NULL,
    [DEACTIVATECOMMENTS]           NVARCHAR (256) NOT NULL,
    [DEACTIVATEDDATETIME]          DATETIME       NOT NULL,
    [DEACTIVATEDDATETIMETZID]      INT            NOT NULL,
    [DESCRIPTION]                  NVARCHAR (50)  NOT NULL,
    [DEVICEID]                     NVARCHAR (64)  NOT NULL,
    [TERMINAL]                     NVARCHAR (10)  NOT NULL,
    [TYPE]                         BIGINT         NOT NULL,
    [DEVICETOKENDATA]              NVARCHAR (128) NOT NULL,
    [DEVICETOKENSALT]              NVARCHAR (128) NOT NULL,
    [DEVICETOKENISSUETIME]         DATETIME       NOT NULL,
    [DEVICETOKENISSUETIMETZID]     INT            NOT NULL,
    [USEINMEMORYDEVICEDATASTORAGE] INT            NOT NULL,
    [DEVICETOKENALGORITHM]         NVARCHAR (25)  NOT NULL,
    [MODIFIEDDATETIME]             DATETIME       NOT NULL,
    [ROWVERSION]                   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILDEVICE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1029059569_-34442163] UNIQUE NONCLUSTERED ([DEVICEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILATTRIBUTEFILTER]...';


GO
CREATE TABLE [ax].[RETAILATTRIBUTEFILTER] (
    [RECID]           BIGINT         NOT NULL,
    [ATTRIBUTE]       BIGINT         NOT NULL,
    [DISPLAYOPTION]   INT            NOT NULL,
    [DISPLAYTEMPLATE] INT            NOT NULL,
    [SORTDIRECTION]   INT            NOT NULL,
    [SORTOPTION]      INT            NOT NULL,
    [THRESHOLDVALUE]  NVARCHAR (200) NOT NULL,
    [ROWVERSION]      TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILATTRIBUTEFILTER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_413793475_1757139105] UNIQUE NONCLUSTERED ([ATTRIBUTE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILATTRIBUTEFILTER].[IX_RETAILATTRIBUTEFILTER]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILATTRIBUTEFILTER]
    ON [ax].[RETAILATTRIBUTEFILTER]([RECID] ASC)
    INCLUDE([ATTRIBUTE], [DISPLAYOPTION], [DISPLAYTEMPLATE], [THRESHOLDVALUE]);


GO
PRINT N'Creating [ax].[RETAILOFFLINEDATAEXPORTSCHEDULE]...';


GO
CREATE TABLE [ax].[RETAILOFFLINEDATAEXPORTSCHEDULE] (
    [RECID]          BIGINT    NOT NULL,
    [EXPORTTIME]     INT       NOT NULL,
    [OFFLINEPROFILE] BIGINT    NOT NULL,
    [ROWVERSION]     TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILOFFLINEDATAEXPORTSCHEDULE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_660589403_-484774988] UNIQUE NONCLUSTERED ([OFFLINEPROFILE] ASC, [EXPORTTIME] ASC)
);


GO
PRINT N'Creating [ax].[TAXATIONCODETABLE_BR]...';


GO
CREATE TABLE [ax].[TAXATIONCODETABLE_BR] (
    [RECID]            BIGINT        NOT NULL,
    [ATOCOTEPETAXCODE] NVARCHAR (3)  NOT NULL,
    [DESCRIPTION]      NVARCHAR (60) NOT NULL,
    [FISCALVALUE]      INT           NOT NULL,
    [FROMDATE]         DATE          NOT NULL,
    [INPUTCODE]        NCHAR (1)     NOT NULL,
    [OUTPUTCODE]       NCHAR (1)     NOT NULL,
    [TAXATIONCODE]     NVARCHAR (3)  NOT NULL,
    [TAXTYPE]          INT           NOT NULL,
    [TODATE]           DATE          NOT NULL,
    [DATAAREAID]       NVARCHAR (4)  NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_TAXATIONCODETABLE_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1348432140_1249524576] UNIQUE NONCLUSTERED ([TAXTYPE] ASC, [TAXATIONCODE] ASC, [FISCALVALUE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINVENTLINKEDITEM]...';


GO
CREATE TABLE [ax].[RETAILINVENTLINKEDITEM] (
    [RECID]        BIGINT           NOT NULL,
    [BLOCKED]      INT              NOT NULL,
    [ITEMID]       NVARCHAR (20)    NOT NULL,
    [LINKEDITEMID] NVARCHAR (20)    NOT NULL,
    [QTY]          NUMERIC (32, 16) NOT NULL,
    [UNIT]         NVARCHAR (10)    NOT NULL,
    [DATAAREAID]   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-126780815_-221054464] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [UNIT] ASC, [LINKEDITEMID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSZIPCODE]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSZIPCODE] (
    [RECID]           BIGINT        NOT NULL,
    [CITY]            NVARCHAR (60) NOT NULL,
    [CITYALIAS]       NVARCHAR (30) NOT NULL,
    [CITYRECID]       BIGINT        NOT NULL,
    [COUNTRYREGIONID] NVARCHAR (10) NOT NULL,
    [COUNTY]          NVARCHAR (10) NOT NULL,
    [DISTRICT]        BIGINT        NOT NULL,
    [DISTRICTNAME]    NVARCHAR (60) NOT NULL,
    [EVENODD]         INT           NOT NULL,
    [FROMNUM]         INT           NOT NULL,
    [STATE]           NVARCHAR (10) NOT NULL,
    [STREETNAME]      NVARCHAR (60) NOT NULL,
    [TIMEZONE]        INT           NOT NULL,
    [TONUM]           INT           NOT NULL,
    [ZIPCODE]         NVARCHAR (10) NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_LOGISTICSADDRESSZIPCODE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSZIPCODE].[IX_LOGISTICSADDRESSZIPCODE_CITYRECID]...';


GO
CREATE NONCLUSTERED INDEX [IX_LOGISTICSADDRESSZIPCODE_CITYRECID]
    ON [ax].[LOGISTICSADDRESSZIPCODE]([CITYRECID] ASC);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSZIPCODE].[IX_LOGISTICSADDRESSZIPCODE_COUNTRYREGIONID_ZIPCODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_LOGISTICSADDRESSZIPCODE_COUNTRYREGIONID_ZIPCODE]
    ON [ax].[LOGISTICSADDRESSZIPCODE]([COUNTRYREGIONID] ASC, [ZIPCODE] ASC);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSZIPCODE].[IX_LOGISTICSADDRESSZIPCODE_DISTRICT]...';


GO
CREATE NONCLUSTERED INDEX [IX_LOGISTICSADDRESSZIPCODE_DISTRICT]
    ON [ax].[LOGISTICSADDRESSZIPCODE]([DISTRICT] ASC);


GO
PRINT N'Creating [ax].[RETAILLISTINGSTATUSLOG]...';


GO
CREATE TABLE [ax].[RETAILLISTINGSTATUSLOG] (
    [ACTIONSTATUS]                 INT             NOT NULL,
    [APPLIEDACTION]                INT             NOT NULL,
    [CATALOG]                      BIGINT          NOT NULL,
    [CHANNEL]                      BIGINT          NOT NULL,
    [CHANNELLISTINGID]             NVARCHAR (50)   NOT NULL,
    [LANGUAGEID]                   NVARCHAR (7)    NOT NULL,
    [LISTINGMODIFIEDDATETIME]      DATETIME        NOT NULL,
    [LISTINGMODIFIEDDATETIMETZID]  INT             NOT NULL,
    [PROCESSED]                    INT             NOT NULL,
    [PRODUCT]                      BIGINT          NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT             IDENTITY (1, 1) NOT NULL,
    [STATUSDATETIME]               DATETIME        NOT NULL,
    [STATUSDATETIMETZID]           INT             NOT NULL,
    [STATUSMESSAGE]                NVARCHAR (2048) NOT NULL,
    [CHANNELBATCHID]               NVARCHAR (100)  NOT NULL,
    [CHANNELSTATE]                 NVARCHAR (MAX)  NULL,
    [ROWVERSION]                   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_-2129744063_-2139665100] PRIMARY KEY CLUSTERED ([PRODUCT] ASC, [CATALOG] ASC, [CHANNEL] ASC, [STATUSDATETIME] ASC, [LANGUAGEID] ASC),
    CONSTRAINT [I_RETAILLISTINGSTATUSLOG_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLISTINGSTATUSLOG].[IX_RETAILLISTINGSTATUSLOG_LISTINGMODIFIEDDATETIME]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILLISTINGSTATUSLOG_LISTINGMODIFIEDDATETIME]
    ON [ax].[RETAILLISTINGSTATUSLOG]([LISTINGMODIFIEDDATETIME] ASC);


GO
PRINT N'Creating [ax].[RETAILLISTINGSTATUSLOG].[IX_RETAILLISTINGSTATUSLOG_CHANNELBATCHID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILLISTINGSTATUSLOG_CHANNELBATCHID]
    ON [ax].[RETAILLISTINGSTATUSLOG]([CHANNELBATCHID] ASC);


GO
PRINT N'Creating [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]...';


GO
CREATE TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] (
    [ADDITIONALFISCALMEMORYINDEX]  INT              NOT NULL,
    [CFOP]                         NVARCHAR (5)     NOT NULL,
    [FISCALPRINTERSERIALNUMBER]    NVARCHAR (20)    NOT NULL,
    [FISCALVALUE]                  INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TAXAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [TAXATIONCODE]                 NVARCHAR (3)     NOT NULL,
    [TAXATIONORIGIN]               INT              NOT NULL,
    [TAXBASEAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [TAXBASEAMOUNTEXEMPT]          NUMERIC (32, 16) NOT NULL,
    [TAXBASEAMOUNTOTHER]           NUMERIC (32, 16) NOT NULL,
    [TAXCODE]                      NVARCHAR (10)    NOT NULL,
    [TAXTYPE]                      INT              NOT NULL,
    [TAXVALUE]                     NUMERIC (32, 16) NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TOTALIZERNAME]                NVARCHAR (10)    NOT NULL,
    [ZREPORTNUMBER]                INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1278174083_1617555836] PRIMARY KEY CLUSTERED ([FISCALPRINTERSERIALNUMBER] ASC, [ZREPORTNUMBER] ASC, [ADDITIONALFISCALMEMORYINDEX] ASC, [TOTALIZERNAME] ASC, [FISCALVALUE] ASC, [TAXATIONCODE] ASC, [TAXATIONORIGIN] ASC, [TAXTYPE] ASC, [TAXCODE] ASC, [TAXVALUE] ASC, [CFOP] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILZREPORTTOTALIZERTAXTRANS_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESSIZE]...';


GO
CREATE TABLE [ax].[ECORESSIZE] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (10) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESSIZE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_357393082_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE] (
    [RECID]                     BIGINT    NOT NULL,
    [DISTINCTPRODUCTVARIANT]    BIGINT    NOT NULL,
    [INSTANCERELATIONTYPE]      BIGINT    NOT NULL,
    [PRODUCTDIMENSIONATTRIBUTE] BIGINT    NOT NULL,
    [RELATIONTYPE]              BIGINT    NOT NULL,
    [ROWVERSION]                TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTVARIANTDIMENSIONVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-69226718_-1266844630] UNIQUE NONCLUSTERED ([DISTINCTPRODUCTVARIANT] ASC, [PRODUCTDIMENSIONATTRIBUTE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINFORMATIONSUBCODETABLE]...';


GO
CREATE TABLE [ax].[RETAILINFORMATIONSUBCODETABLE] (
    [RECID]           BIGINT           NOT NULL,
    [AMOUNTPERCENT]   NUMERIC (32, 16) NOT NULL,
    [DESCRIPTION]     NVARCHAR (60)    NOT NULL,
    [INFOCODEID]      NVARCHAR (10)    NOT NULL,
    [NEWSALESLINE]    INT              NOT NULL,
    [PRICETYPE]       INT              NOT NULL,
    [SUBCODEID]       NVARCHAR (10)    NOT NULL,
    [TRIGGERCODE]     NVARCHAR (20)    NOT NULL,
    [TRIGGERFUNCTION] INT              NOT NULL,
    [DATAAREAID]      NVARCHAR (4)     NOT NULL,
    [ROWVERSION]      TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-2013310740_1087960115] PRIMARY KEY CLUSTERED ([INFOCODEID] ASC, [SUBCODEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[PRICEDISCGROUP]...';


GO
CREATE TABLE [ax].[PRICEDISCGROUP] (
    [RECID]                       BIGINT        NOT NULL,
    [GROUPID]                     NVARCHAR (10) NOT NULL,
    [MODULE]                      INT           NOT NULL,
    [NAME]                        NVARCHAR (60) NOT NULL,
    [TYPE]                        INT           NOT NULL,
    [RETAILCHECKSALESPRICESTATUS] INT           NOT NULL,
    [RETAILPRICINGPRIORITYNUMBER] INT           NOT NULL,
    [DATAAREAID]                  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1621373531_2009434683] PRIMARY KEY CLUSTERED ([MODULE] ASC, [TYPE] ASC, [GROUPID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]...';


GO
CREATE TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] (
    [RECID]                 BIGINT         NOT NULL,
    [ATTRIBUTE]             BIGINT         NOT NULL,
    [ATTRIBUTERELATIONTYPE] INT            NOT NULL,
    [DATATYPE]              INT            NOT NULL,
    [HOSTCHANNEL]           BIGINT         NOT NULL,
    [KEYNAME]               NVARCHAR (80)  NOT NULL,
    [METADATA]              NVARCHAR (MAX) NULL,
    [METADATAVERSION]       INT            NOT NULL,
    [ORIGINID]              BIGINT         NOT NULL,
    [ROWVERSION]            TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1109106661_139093215] UNIQUE NONCLUSTERED ([HOSTCHANNEL] ASC, [KEYNAME] ASC),
    CONSTRAINT [I_1109106661_2083805687] UNIQUE NONCLUSTERED ([HOSTCHANNEL] ASC, [ATTRIBUTE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA].[IX_RETAILPRODUCTATTRIBUTECHANNELMETADATA_ATTRIBUTE]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPRODUCTATTRIBUTECHANNELMETADATA_ATTRIBUTE]
    ON [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]([ATTRIBUTE] ASC, [HOSTCHANNEL] ASC)
    INCLUDE([KEYNAME]);


GO
PRINT N'Creating [ax].[RETAILSHAREDBINGPARAMETERS]...';


GO
CREATE TABLE [ax].[RETAILSHAREDBINGPARAMETERS] (
    [RECID]      BIGINT         NOT NULL,
    [APIKEY]     NVARCHAR (128) NOT NULL,
    [KEY]        INT            NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILSHAREDBINGPARAMETERS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1544392866_2053804616] UNIQUE NONCLUSTERED ([KEY] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] (
    [CHANNEL]            BIGINT           NOT NULL,
    [ITEMID]             NVARCHAR (20)    NOT NULL,
    [LINENUM]            NUMERIC (32, 16) NOT NULL,
    [QTY]                NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTER] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]            NVARCHAR (10)    NOT NULL,
    [TERMINALID]         NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]      NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]  INT              NOT NULL,
    [VARIANTID]          NVARCHAR (10)    NOT NULL,
    [DATAAREAID]         NVARCHAR (4)     NOT NULL,
    [ROWVERSION]         TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-773381400_324085071] PRIMARY KEY NONCLUSTERED ([LINENUM] ASC, [CHANNEL] ASC, [TERMINALID] ASC, [STOREID] ASC, [TRANSACTIONID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_REPLICATIONCOUNTER] UNIQUE CLUSTERED ([REPLICATIONCOUNTER] ASC)
);


GO
PRINT N'Creating [ax].[TIMEZONEINFO]...';


GO
CREATE TABLE [ax].[TIMEZONEINFO] (
    [RECID]         BIGINT    NOT NULL,
    [ENDDATE]       DATETIME  NOT NULL,
    [ENDDATETZID]   INT       NOT NULL,
    [STARTDATE]     DATETIME  NOT NULL,
    [STARTDATETZID] INT       NOT NULL,
    [TIMEBIAS]      INT       NOT NULL,
    [TIMEZONEID]    INT       NOT NULL,
    [ROWVERSION]    TIMESTAMP NOT NULL,
    CONSTRAINT [I_1980065265_-1575185018] PRIMARY KEY CLUSTERED ([TIMEZONEID] ASC, [STARTDATE] ASC, [ENDDATE] ASC)
);


GO
PRINT N'Creating [ax].[OMOPERATINGUNIT]...';


GO
CREATE TABLE [ax].[OMOPERATINGUNIT] (
    [RECID]                 BIGINT       NOT NULL,
    [OMOPERATINGUNITNUMBER] NVARCHAR (8) NOT NULL,
    [OMOPERATINGUNITTYPE]   INT          NOT NULL,
    [ROWVERSION]            TIMESTAMP    NOT NULL,
    CONSTRAINT [I_OMOPERATINGUNIT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-901362831_1785045346] UNIQUE NONCLUSTERED ([OMOPERATINGUNITNUMBER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPERIODICDISCOUNT]...';


GO
CREATE TABLE [ax].[RETAILPERIODICDISCOUNT] (
    [RECID]                  BIGINT           NOT NULL,
    [CONCURRENCYMODE]        INT              NOT NULL,
    [CURRENCYCODE]           NVARCHAR (3)     NOT NULL,
    [DATEVALIDATIONTYPE]     INT              NOT NULL,
    [DESCRIPTION]            NVARCHAR (MAX)   NULL,
    [DISCLAIMER]             NVARCHAR (MAX)   NULL,
    [DISCOUNTPERCENTVALUE]   NUMERIC (32, 16) NOT NULL,
    [INSTANCERELATIONTYPE]   BIGINT           NOT NULL,
    [ISDISCOUNTCODEREQUIRED] INT              NOT NULL,
    [NAME]                   NVARCHAR (60)    NOT NULL,
    [OFFERID]                NVARCHAR (20)    NOT NULL,
    [PERIODICDISCOUNTTYPE]   INT              NOT NULL,
    [STATUS]                 INT              NOT NULL,
    [VALIDATIONPERIODID]     NVARCHAR (10)    NOT NULL,
    [VALIDFROM]              DATE             NOT NULL,
    [VALIDTO]                DATE             NOT NULL,
    [PRICINGPRIORITYNUMBER]  INT              NOT NULL,
    [RELATIONTYPE]           BIGINT           NOT NULL,
    [DATAAREAID]             NVARCHAR (4)     NOT NULL,
    [ROWVERSION]             TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILPERIODICDISCOUNT_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_444360761_1895356525] UNIQUE CLUSTERED ([OFFERID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPERIODICDISCOUNT].[IX_RETAILPERIODICDISCOUNT_NAME_VALIDDATE]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPERIODICDISCOUNT_NAME_VALIDDATE]
    ON [ax].[RETAILPERIODICDISCOUNT]([NAME] ASC, [VALIDFROM] ASC, [VALIDTO] ASC);


GO
PRINT N'Creating [ax].[RETAILPERIODICDISCOUNT].[IX_RETAILPERIODICDISCOUNT_OFFERID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPERIODICDISCOUNT_OFFERID]
    ON [ax].[RETAILPERIODICDISCOUNT]([OFFERID] ASC);


GO
PRINT N'Creating [ax].[RETAILUNIT]...';


GO
CREATE TABLE [ax].[RETAILUNIT] (
    [RECID]               BIGINT           NOT NULL,
    [MINDENOMINATOR]      NUMERIC (32, 16) NOT NULL,
    [UNITID]              NVARCHAR (10)    NOT NULL,
    [WEIGHTUNITOFMEASURE] INT              NOT NULL,
    [DATAAREAID]          NVARCHAR (4)     NOT NULL,
    [ROWVERSION]          TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-720078487_-36816785] PRIMARY KEY CLUSTERED ([UNITID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTOFFER]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTOFFER] (
    [RECID]      BIGINT       NOT NULL,
    [DISCONPOS]  INT          NULL,
    [DATAAREAID] NVARCHAR (4) NOT NULL,
    [ROWVERSION] TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTOFFER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILRELYINGPARTY]...';


GO
CREATE TABLE [ax].[RETAILRELYINGPARTY] (
    [RECID]      BIGINT         NOT NULL,
    [PROVIDERID] BIGINT         NOT NULL,
    [CLIENTID]   NVARCHAR (500) NOT NULL,
    [TYPE]       INT            NOT NULL,
    [USERTYPE]   INT            NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILRELYINGPARTY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_133452259_-94036775] UNIQUE NONCLUSTERED ([PROVIDERID] ASC, [CLIENTID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTAXTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONTAXTRANS] (
    [AMOUNT]                       NUMERIC (32, 16) NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [ISINCLUDEDINPRICE]            INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SALELINENUM]                  NUMERIC (32, 16) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TAXCODE]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-304018762_-36691966] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [TERMINALID] ASC, [STOREID] ASC, [TRANSACTIONID] ASC, [SALELINENUM] ASC, [TAXCODE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONTAXTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTAXTRANS].[IX_RETAILTRANSACTIONTAXTRANS_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONTAXTRANS_TRANSACTIONID]
    ON [ax].[RETAILTRANSACTIONTAXTRANS]([TRANSACTIONID] ASC);


GO
PRINT N'Creating [ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER]...';


GO
CREATE TABLE [ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER] (
    [RECID]                        BIGINT        NOT NULL,
    [RBOSALESTAXOVERRIDECODE]      NVARCHAR (25) NOT NULL,
    [RBOSALESTAXOVERRIDEGROUPCODE] NVARCHAR (25) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILSALESTAXOVERRIDEGROUPMEMBER_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1138682687_-1481761435] UNIQUE CLUSTERED ([RBOSALESTAXOVERRIDEGROUPCODE] ASC, [RBOSALESTAXOVERRIDECODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELPROFILEPROPERTY]...';


GO
CREATE TABLE [ax].[RETAILCHANNELPROFILEPROPERTY] (
    [RECID]          BIGINT          NOT NULL,
    [CHANNELPROFILE] BIGINT          NOT NULL,
    [KEY]            INT             NOT NULL,
    [VALUE]          NVARCHAR (1023) NOT NULL,
    [ROWVERSION]     TIMESTAMP       NOT NULL,
    CONSTRAINT [I_RETAILCHANNELPROFILEPROPERTY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCATEGORYHIERARCHYROLE]...';


GO
CREATE TABLE [ax].[ECORESCATEGORYHIERARCHYROLE] (
    [RECID]                      BIGINT    NOT NULL,
    [CATEGORYHIERARCHY]          BIGINT    NOT NULL,
    [NAMEDCATEGORYHIERARCHYROLE] INT       NOT NULL,
    [ROWVERSION]                 TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESCATEGORYHIERARCHYROLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_686403814_-1937137019] UNIQUE NONCLUSTERED ([NAMEDCATEGORYHIERARCHYROLE] ASC, [CATEGORYHIERARCHY] ASC)
);


GO
PRINT N'Creating [ax].[SYSTASKRECORDERFRAMEWORKLINE]...';


GO
CREATE TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE] (
    [RECID]                      BIGINT           NOT NULL,
    [DESCRIPTION]                NVARCHAR (MAX)   NULL,
    [FRAMEWORKLEVEL]             BIGINT           NOT NULL,
    [INDENTATIONLEVEL]           INT              NOT NULL,
    [ISSUPPORTED]                INT              NOT NULL,
    [MEASURES]                   NVARCHAR (MAX)   NULL,
    [MODULE]                     INT              NOT NULL,
    [NAME]                       NVARCHAR (255)   NOT NULL,
    [ORIGIN]                     NVARCHAR (10)    NOT NULL,
    [PARENTFRAMEWORKLINE]        BIGINT           NOT NULL,
    [SEQUENCE]                   INT              NOT NULL,
    [SYNCID]                     UNIQUEIDENTIFIER NOT NULL,
    [TASKRECORDEROPERATIONGROUP] INT              NOT NULL,
    [USAGEPROFILE]               INT              NOT NULL,
    [ROWVERSION]                 TIMESTAMP        NOT NULL,
    CONSTRAINT [I_SYSTASKRECORDERFRAMEWORKLINE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[JMGIPCACTIVITY]...';


GO
CREATE TABLE [ax].[JMGIPCACTIVITY] (
    [RECID]      BIGINT        NOT NULL,
    [ACTIVITY]   NVARCHAR (10) NOT NULL,
    [BREAKDROP]  INT           NOT NULL,
    [CATEGORY]   NVARCHAR (10) NOT NULL,
    [JOBID]      NVARCHAR (20) NOT NULL,
    [SIGNIN]     INT           NOT NULL,
    [SIGNINOUT]  INT           NOT NULL,
    [TYPE]       INT           NOT NULL,
    [DATAAREAID] NVARCHAR (4)  NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-765664409_828124743] PRIMARY KEY NONCLUSTERED ([ACTIVITY] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-765664409_1805009001] UNIQUE CLUSTERED ([CATEGORY] ASC, [ACTIVITY] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-765664409_-937149049] UNIQUE NONCLUSTERED ([JOBID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILBARCODEMASKCHARACTER]...';


GO
CREATE TABLE [ax].[RETAILBARCODEMASKCHARACTER] (
    [RECID]         BIGINT        NOT NULL,
    [CHARACTER]     NCHAR (1)     NOT NULL,
    [CHARACTERTYPE] INT           NOT NULL,
    [COMMENT]       NVARCHAR (50) NOT NULL,
    [DATAAREAID]    NVARCHAR (4)  NOT NULL,
    [ROWVERSION]    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-962323594_50008756] PRIMARY KEY CLUSTERED ([CHARACTERTYPE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-962323594_259853196] UNIQUE NONCLUSTERED ([CHARACTER] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONFISCALTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONFISCALTRANS] (
    [CHANNEL]                      BIGINT           NOT NULL,
    [CONTROLCODE]                  NVARCHAR (59)    NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [RECEIPTCOPY]                  INT              NOT NULL,
    [REGISTERID]                   NVARCHAR (17)    NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [CREATEDDATETIME]              DATETIME         NOT NULL,
    [MODIFIEDDATETIME]             DATETIME         NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1102142449_2094676863] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONFISCALTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[OMINTERNALORGANIZATION]...';


GO
CREATE TABLE [ax].[OMINTERNALORGANIZATION] (
    [RECID]            BIGINT    NOT NULL,
    [ORGANIZATIONTYPE] INT       NULL,
    [ROWVERSION]       TIMESTAMP NOT NULL,
    CONSTRAINT [I_OMINTERNALORGANIZATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES]...';


GO
CREATE TABLE [ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES] (
    [RECID]         BIGINT       NOT NULL,
    [ISDEFAULT]     INT          NOT NULL,
    [LANGUAGEID]    NVARCHAR (7) NOT NULL,
    [ONLINECHANNEL] BIGINT       NOT NULL,
    [ORIGINID]      BIGINT       NOT NULL,
    [ROWVERSION]    TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILPUBRETAILONLINECHANNELLANGUAGES_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_2045024010_985177417] UNIQUE NONCLUSTERED ([LANGUAGEID] ASC, [ONLINECHANNEL] ASC)
);


GO
PRINT N'Creating [ax].[UNITOFMEASURECONVERSION]...';


GO
CREATE TABLE [ax].[UNITOFMEASURECONVERSION] (
    [RECID]             BIGINT           NOT NULL,
    [DENOMINATOR]       INT              NOT NULL,
    [FACTOR]            NUMERIC (32, 16) NOT NULL,
    [FROMUNITOFMEASURE] BIGINT           NOT NULL,
    [INNEROFFSET]       NUMERIC (32, 16) NOT NULL,
    [NUMERATOR]         INT              NOT NULL,
    [OUTEROFFSET]       NUMERIC (32, 16) NOT NULL,
    [PRODUCT]           BIGINT           NOT NULL,
    [ROUNDING]          INT              NOT NULL,
    [TOUNITOFMEASURE]   BIGINT           NOT NULL,
    [MODIFIEDDATETIME]  DATETIME         NOT NULL,
    [ROWVERSION]        TIMESTAMP        NOT NULL,
    CONSTRAINT [I_UNITOFMEASURECONVERSION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1947979309_625545217] UNIQUE CLUSTERED ([PRODUCT] ASC, [FROMUNITOFMEASURE] ASC, [TOUNITOFMEASURE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBECORESCATEGORY]...';


GO
CREATE TABLE [ax].[RETAILPUBECORESCATEGORY] (
    [RECID]                         BIGINT         NOT NULL,
    [CATEGORYHIERARCHY]             BIGINT         NOT NULL,
    [CHANGESTATUS]                  INT            NOT NULL,
    [CHANNEL]                       BIGINT         NOT NULL,
    [CODE]                          NVARCHAR (20)  NOT NULL,
    [DEFAULTPROJECTGLOBALCATEGORY]  BIGINT         NOT NULL,
    [INSTANCERELATIONTYPE]          BIGINT         NOT NULL,
    [ISACTIVE]                      INT            NOT NULL,
    [ISCATEGORYATTRIBUTESINHERITED] INT            NOT NULL,
    [ISTANGIBLE]                    INT            NOT NULL,
    [NAME]                          NVARCHAR (254) NOT NULL,
    [NESTEDSETLEFT]                 BIGINT         NOT NULL,
    [NESTEDSETRIGHT]                BIGINT         NOT NULL,
    [ORIGINID]                      BIGINT         NOT NULL,
    [ORIGININSTANCERELATIONTYPE]    BIGINT         NOT NULL,
    [PARENTCATEGORY]                BIGINT         NOT NULL,
    [RELATIONTYPE]                  BIGINT         NOT NULL,
    [CREATEDDATETIME]               DATETIME       NOT NULL,
    [MODIFIEDDATETIME]              DATETIME       NOT NULL,
    [ROWVERSION]                    TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILPUBECORESCATEGORY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1427327759_516664720] UNIQUE NONCLUSTERED ([NAME] ASC, [CATEGORYHIERARCHY] ASC, [CHANNEL] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBECORESCATEGORY].[IX_RETAILPUBECORESCATEGORY_CHANNELORIGINID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBECORESCATEGORY_CHANNELORIGINID]
    ON [ax].[RETAILPUBECORESCATEGORY]([CHANNEL] ASC, [ORIGINID] ASC)
    INCLUDE([CATEGORYHIERARCHY], [NESTEDSETLEFT], [NESTEDSETRIGHT], [NAME]);


GO
PRINT N'Creating [ax].[RETAILPUBECORESCATEGORY].[IX_RETAILPUBECORESCATEGORY_CHANNELCATEGORYHIERARCHY]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBECORESCATEGORY_CHANNELCATEGORYHIERARCHY]
    ON [ax].[RETAILPUBECORESCATEGORY]([CHANNEL] ASC, [CATEGORYHIERARCHY] ASC)
    INCLUDE([PARENTCATEGORY], [NAME], [ORIGINID]);


GO
PRINT N'Creating [ax].[RETAILPUBECORESCATEGORY].[IX_RETAILPUBECORESCATEGORY_NESTEDSETLEFT_NESTEDSETRIGHT_ORIGINID_CHANNEL]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBECORESCATEGORY_NESTEDSETLEFT_NESTEDSETRIGHT_ORIGINID_CHANNEL]
    ON [ax].[RETAILPUBECORESCATEGORY]([NESTEDSETLEFT] ASC, [NESTEDSETRIGHT] ASC, [ORIGINID] ASC, [CHANNEL] ASC);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTLINEMULTIBUY]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTLINEMULTIBUY] (
    [RECID]      BIGINT       NOT NULL,
    [DATAAREAID] NVARCHAR (4) NOT NULL,
    [ROWVERSION] TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTLINEMULTIBUY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILBARCODEMASKSEGMENT]...';


GO
CREATE TABLE [ax].[RETAILBARCODEMASKSEGMENT] (
    [RECID]      BIGINT           NOT NULL,
    [CHAR]       NCHAR (1)        NOT NULL,
    [DECIMALS]   INT              NOT NULL,
    [LENGTH]     NUMERIC (32, 16) NOT NULL,
    [MASKID]     NVARCHAR (10)    NOT NULL,
    [SEGMENTNUM] INT              NOT NULL,
    [TYPE]       INT              NOT NULL,
    [DATAAREAID] NVARCHAR (4)     NOT NULL,
    [ROWVERSION] TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1809797708_-615227758] PRIMARY KEY CLUSTERED ([MASKID] ASC, [SEGMENTNUM] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOPERATIONS]...';


GO
CREATE TABLE [ax].[RETAILOPERATIONS] (
    [RECID]                BIGINT        NOT NULL,
    [OPERATIONID]          INT           NOT NULL,
    [CHECKUSERACCESS]      INT           NOT NULL,
    [OPERATIONNAME]        NVARCHAR (50) NOT NULL,
    [PERMISSIONID]         INT           NOT NULL,
    [PERMISSIONID2]        INT           NOT NULL,
    [USEROPERATION]        INT           NOT NULL,
    [ALLOWANONYMOUSACCESS] INT           NOT NULL,
    [ALLOWCUSTOMERACCESS]  INT           NOT NULL,
    [PERMISSIONIDEX]       INT           NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1234623639_-1629766275] PRIMARY KEY CLUSTERED ([OPERATIONID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINFOCODEGROUPSPECIFIC]...';


GO
CREATE TABLE [ax].[RETAILINFOCODEGROUPSPECIFIC] (
    [RECID]      BIGINT        NOT NULL,
    [GROUPID]    NVARCHAR (10) NOT NULL,
    [INFOCODEID] NVARCHAR (10) NOT NULL,
    [PRIORITY]   INT           NOT NULL,
    [DATAAREAID] NVARCHAR (4)  NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILINFOCODEGROUPSPECIFIC_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1342306497_887621465] UNIQUE NONCLUSTERED ([GROUPID] ASC, [INFOCODEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCONFIGURATIONSTORETABLE_BR]...';


GO
CREATE TABLE [ax].[RETAILCONFIGURATIONSTORETABLE_BR] (
    [RECID]                  BIGINT    NOT NULL,
    [RETAILCONFIGURATION_BR] BIGINT    NOT NULL,
    [RETAILSTORETABLE]       BIGINT    NOT NULL,
    [ROWVERSION]             TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILCONFIGURATIONSTORETABLE_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-180636695_586140477] UNIQUE NONCLUSTERED ([RETAILCONFIGURATION_BR] ASC, [RETAILSTORETABLE] ASC)
);


GO
PRINT N'Creating [ax].[HCMWORKER]...';


GO
CREATE TABLE [ax].[HCMWORKER] (
    [RECID]            BIGINT        NOT NULL,
    [PERSON]           BIGINT        NOT NULL,
    [PERSONNELNUMBER]  NVARCHAR (25) NOT NULL,
    [CREATEDDATETIME]  DATETIME      NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_HCMWORKER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_876116916_-738480416] UNIQUE NONCLUSTERED ([PERSON] ASC),
    CONSTRAINT [I_876116916_-738480417] UNIQUE NONCLUSTERED ([PERSONNELNUMBER] ASC)
);


GO
PRINT N'Creating [ax].[HCMWORKER].[IX_HCMWORKER_CODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_HCMWORKER_CODE]
    ON [ax].[HCMWORKER]([PERSONNELNUMBER] ASC);


GO
PRINT N'Creating [ax].[EFDOCWEBSERVICEPARAMETERS_BR]...';


GO
CREATE TABLE [ax].[EFDOCWEBSERVICEPARAMETERS_BR] (
    [RECID]       BIGINT         NOT NULL,
    [AUTHORITY]   NVARCHAR (10)  NOT NULL,
    [ENVIRONMENT] INT            NOT NULL,
    [URL]         NVARCHAR (255) NOT NULL,
    [VERSION]     NVARCHAR (5)   NOT NULL,
    [WEBSERVICE]  INT            NOT NULL,
    [ROWVERSION]  TIMESTAMP      NOT NULL,
    CONSTRAINT [I_EFDOCWEBSERVICEPARAMETERS_BR_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1799517855_-1981499299] UNIQUE CLUSTERED ([WEBSERVICE] ASC, [ENVIRONMENT] ASC, [VERSION] ASC, [AUTHORITY] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUTBUTTONGRIDZONE]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUTBUTTONGRIDZONE] (
    [RECID]        BIGINT        NOT NULL,
    [BUTTONGRIDID] NVARCHAR (10) NULL,
    [ROWVERSION]   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTILLLAYOUTBUTTONGRIDZONE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILHARDWARECONFIGURATION]...';


GO
CREATE TABLE [ax].[RETAILHARDWARECONFIGURATION] (
    [RECID]                BIGINT         NOT NULL,
    [DRAWERIP]             NVARCHAR (255) NOT NULL,
    [DRAWERPORT]           INT            NOT NULL,
    [DRAWER2IP]            NVARCHAR (255) NOT NULL,
    [DRAWER2PORT]          INT            NOT NULL,
    [PRINTERIP]            NVARCHAR (255) NOT NULL,
    [PRINTERPORT]          INT            NOT NULL,
    [PRINTER2IP]           NVARCHAR (255) NOT NULL,
    [PRINTER2PORT]         INT            NOT NULL,
    [PINPADIP]             NVARCHAR (255) NOT NULL,
    [PINPADPORT]           INT            NOT NULL,
    [TERMINALID]           NVARCHAR (10)  NOT NULL,
    [STOREHARDWARESTATION] BIGINT         NOT NULL,
    [ROWVERSION]           TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILHARDWARECONFIGURATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1543458631_791941630] UNIQUE NONCLUSTERED ([TERMINALID] ASC, [STOREHARDWARESTATION] ASC)
);


GO
PRINT N'Creating [ax].[UNITOFMEASURETRANSLATION]...';


GO
CREATE TABLE [ax].[UNITOFMEASURETRANSLATION] (
    [RECID]            BIGINT        NOT NULL,
    [DESCRIPTION]      NVARCHAR (60) NOT NULL,
    [LANGUAGEID]       NVARCHAR (7)  NOT NULL,
    [UNITOFMEASURE]    BIGINT        NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_UNITOFMEASURETRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_157860626_-1242300900] UNIQUE CLUSTERED ([UNITOFMEASURE] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION]...';


GO
CREATE TABLE [ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION] (
    [RECID]                      BIGINT        NOT NULL,
    [PROPERTYKEY]                NVARCHAR (60) NOT NULL,
    [SHIPCARRIERCOMPANYACCOUNTS] BIGINT        NOT NULL,
    [VALUE]                      NVARCHAR (60) NOT NULL,
    [DATAAREAID]                 NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                 TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILSHIPCARRIERACCOUNTCONFIGURATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_340920594_1680135326] UNIQUE NONCLUSTERED ([PROPERTYKEY] ASC, [SHIPCARRIERCOMPANYACCOUNTS] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILBUTTONGRID]...';


GO
CREATE TABLE [ax].[RETAILBUTTONGRID] (
    [RECID]               BIGINT        NOT NULL,
    [BUTTONGRIDID]        NVARCHAR (10) NOT NULL,
    [DEFAULTCOLOR]        INT           NOT NULL,
    [DEFAULTFONTSIZE]     INT           NOT NULL,
    [DEFAULTFONTSTYLE]    INT           NOT NULL,
    [FONT]                NVARCHAR (32) NOT NULL,
    [KEYBOARDUSED]        NVARCHAR (10) NOT NULL,
    [NAME]                NVARCHAR (50) NOT NULL,
    [SPACEBETWEENBUTTONS] INT           NOT NULL,
    [ROWVERSION]          TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-984773215_189016630] PRIMARY KEY CLUSTERED ([BUTTONGRIDID] ASC)
);


GO
PRINT N'Creating [ax].[EXCHANGERATE]...';


GO
CREATE TABLE [ax].[EXCHANGERATE] (
    [RECID]                    BIGINT           NOT NULL,
    [EXCHANGERATE]             NUMERIC (32, 16) NOT NULL,
    [EXCHANGERATECURRENCYPAIR] BIGINT           NOT NULL,
    [VALIDFROM]                DATE             NOT NULL,
    [VALIDTO]                  DATE             NOT NULL,
    [MODIFIEDDATETIME]         DATETIME         NOT NULL,
    [ROWVERSION]               TIMESTAMP        NOT NULL,
    CONSTRAINT [I_EXCHANGERATE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_555506149_-858666067] UNIQUE CLUSTERED ([EXCHANGERATECURRENCYPAIR] ASC, [VALIDFROM] ASC, [VALIDTO] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINFOCODETRANSLATION]...';


GO
CREATE TABLE [ax].[RETAILINFOCODETRANSLATION] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [INFOCODE]    BIGINT        NOT NULL,
    [LANGUAGEID]  NVARCHAR (7)  NOT NULL,
    [PROMPT]      NVARCHAR (60) NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILINFOCODETRANSLATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_202291299_1070488980] UNIQUE NONCLUSTERED ([INFOCODE] ASC, [LANGUAGEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[DOCUVALUE]...';


GO
CREATE TABLE [ax].[DOCUVALUE] (
    [RECID]      BIGINT          NOT NULL,
    [FILE]       VARBINARY (MAX) NULL,
    [ROWVERSION] TIMESTAMP       NOT NULL,
    CONSTRAINT [I_DOCUVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILZREPORT_BR]...';


GO
CREATE TABLE [ax].[RETAILZREPORT_BR] (
    [ACCOUNTINGDATE]               DATE             NOT NULL,
    [ADDITIONALFISCALMEMORYINDEX]  INT              NOT NULL,
    [COFINSAMOUNT]                 NUMERIC (32, 16) NOT NULL,
    [FINALGRANDTOTALAMOUNT]        NUMERIC (32, 16) NOT NULL,
    [FIRSTRECEIPTNUMBER]           INT              NOT NULL,
    [FISCALESTABLISHMENT]          NVARCHAR (10)    NOT NULL,
    [FISCALPRINTERSERIALNUMBER]    NVARCHAR (20)    NOT NULL,
    [FISCALRECEIPTMODEL]           NVARCHAR (3)     NOT NULL,
    [GROSSDAILYSALE]               NUMERIC (32, 16) NOT NULL,
    [INITIALGRANDTOTALAMOUNT]      NUMERIC (32, 16) NOT NULL,
    [ISSDISCOUNT]                  INT              NOT NULL,
    [LASTRECEIPTNUMBER]            INT              NOT NULL,
    [NETAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [PISAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [RESTARTOPERATIONNUMBER]       INT              NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TERMINALNUMBER]               INT              NOT NULL,
    [VERSION]                      INT              NOT NULL,
    [ZREPORTDATETIME]              DATETIME         NOT NULL,
    [ZREPORTDATETIMETZID]          INT              NOT NULL,
    [ZREPORTNUMBER]                INT              NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [VOUCHER]                      NVARCHAR (20)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-535303524_311289610] PRIMARY KEY CLUSTERED ([FISCALPRINTERSERIALNUMBER] ASC, [RESTARTOPERATIONNUMBER] ASC, [ADDITIONALFISCALMEMORYINDEX] ASC, [STOREID] ASC, [TERMINALID] ASC, [ZREPORTNUMBER] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILZREPORT_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILIMAGES]...';


GO
CREATE TABLE [ax].[RETAILIMAGES] (
    [RECID]      BIGINT          NOT NULL,
    [PICTUREID]  INT             NOT NULL,
    [PICTURE]    VARBINARY (MAX) NULL,
    [ROWVERSION] TIMESTAMP       NOT NULL,
    CONSTRAINT [I_-588735509_1340322720] PRIMARY KEY CLUSTERED ([PICTUREID] ASC)
);


GO
PRINT N'Creating [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]...';


GO
CREATE TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH] (
    [RECID]                BIGINT    NOT NULL,
    [ANCESTORORGANIZATION] BIGINT    NOT NULL,
    [DISTANCE]             INT       NOT NULL,
    [OMHIERARCHYTYPE]      BIGINT    NOT NULL,
    [ORGANIZATION]         BIGINT    NOT NULL,
    [VALIDFROM]            DATETIME  NOT NULL,
    [VALIDFROMTZID]        INT       NOT NULL,
    [VALIDTO]              DATETIME  NOT NULL,
    [VALIDTOTZID]          INT       NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_OMEXPLODEDORGANIZATIONSECURITYGRAPH_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-76086348_-916295028] UNIQUE CLUSTERED ([OMHIERARCHYTYPE] ASC, [DISTANCE] ASC, [ORGANIZATION] ASC, [VALIDFROM] ASC, [VALIDTO] ASC)
);


GO
PRINT N'Creating [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH].[IX_Organization_OMEXPLODEDORGANIZATIONSECURITYGRAPH]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organization_OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ON [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]([ORGANIZATION] ASC)
    INCLUDE([ANCESTORORGANIZATION], [OMHIERARCHYTYPE], [VALIDFROM], [VALIDTO]);


GO
PRINT N'Creating [ax].[ECORESDATETIMEVALUE]...';


GO
CREATE TABLE [ax].[ECORESDATETIMEVALUE] (
    [RECID]             BIGINT    NOT NULL,
    [DATETIMEVALUE]     DATETIME  NULL,
    [DATETIMEVALUETZID] INT       NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESDATETIMEVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCATEGORYTRANSLATION]...';


GO
CREATE TABLE [ax].[ECORESCATEGORYTRANSLATION] (
    [RECID]        BIGINT          NOT NULL,
    [CATEGORY]     BIGINT          NOT NULL,
    [DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [FRIENDLYNAME] NVARCHAR (254)  NOT NULL,
    [LANGUAGEID]   NVARCHAR (7)    NOT NULL,
    [SEARCHTEXT]   NVARCHAR (254)  NOT NULL,
    [ROWVERSION]   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_ECORESCATEGORYTRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1435627490_-888948581] UNIQUE CLUSTERED ([CATEGORY] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR]...';


GO
CREATE TABLE [ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR] (
    [RECID]                       BIGINT    NOT NULL,
    [ACCOUNTANTLOGISTICSLOCATION] BIGINT    NOT NULL,
    [LOCATIONROLE]                BIGINT    NOT NULL,
    [ROWVERSION]                  TIMESTAMP NOT NULL,
    CONSTRAINT [I_ACCOUNTANTLOGISTICSLOCATIONROLE_BR_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1576658753_-2080191547] UNIQUE CLUSTERED ([LOCATIONROLE] ASC, [ACCOUNTANTLOGISTICSLOCATION] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTVALIDATIONPERIOD]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD] (
    [RECID]                            BIGINT        NOT NULL,
    [ENDINGTIME]                       INT           NOT NULL,
    [ENDINGTIMEAFTERMIDNIGHT]          INT           NOT NULL,
    [FRIDAYENDINGTIME]                 INT           NOT NULL,
    [FRIDAYENDINGTIMEAFTERMIDNIGHT]    INT           NOT NULL,
    [FRIDAYSTARTINGTIME]               INT           NOT NULL,
    [FRIDAYTIMEWITHINBOUNDS]           INT           NOT NULL,
    [MONDAYENDINGTIME]                 INT           NOT NULL,
    [MONDAYENDINGTIMEAFTERMIDNIGHT]    INT           NOT NULL,
    [MONDAYSTARTINGTIME]               INT           NOT NULL,
    [MONDAYTIMEWITHINBOUNDS]           INT           NOT NULL,
    [NAME]                             NVARCHAR (60) NOT NULL,
    [PERIODID]                         NVARCHAR (10) NOT NULL,
    [SATURDAYENDINGTIME]               INT           NOT NULL,
    [SATURDAYENDINGTIMEAFTERMIDNIGHT]  INT           NOT NULL,
    [SATURDAYSTARTINGTIME]             INT           NOT NULL,
    [SATURDAYTIMEWITHINBOUNDS]         INT           NOT NULL,
    [STARTINGTIME]                     INT           NOT NULL,
    [SUNDAYENDINGTIME]                 INT           NOT NULL,
    [SUNDAYENDINGTIMEAFTERMIDNIGHT]    INT           NOT NULL,
    [SUNDAYSTARTINGTIME]               INT           NOT NULL,
    [SUNDAYTIMEWITHINBOUNDS]           INT           NOT NULL,
    [THUESDAYENDINGTIME]               INT           NOT NULL,
    [THUESDAYENDINGTIMEAFTERMIDNIGHT]  INT           NOT NULL,
    [THUESDAYSTARTINGTIME]             INT           NOT NULL,
    [THUESDAYTIMEWITHINBOUNDS]         INT           NOT NULL,
    [THURSDAYENDINGTIME]               INT           NOT NULL,
    [THURSDAYENDINGTIMEAFTERMIDNIGHT]  INT           NOT NULL,
    [THURSDAYSTARTINGTIME]             INT           NOT NULL,
    [THURSDAYTIMEWITHINBOUNDS]         INT           NOT NULL,
    [TIMEWITHINBOUNDS]                 INT           NOT NULL,
    [VALIDFROM]                        DATE          NOT NULL,
    [VALIDTO]                          DATE          NOT NULL,
    [WEDNESDAYENDINGTIME]              INT           NOT NULL,
    [WEDNESDAYENDINGTIMEAFTERMIDNIGHT] INT           NOT NULL,
    [WEDNESDAYSTARTINGTIME]            INT           NOT NULL,
    [WEDNESDAYTIMEWITHINBOUNDS]        INT           NOT NULL,
    [DATAAREAID]                       NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1032774252_-1360894778] PRIMARY KEY CLUSTERED ([PERIODID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSHIPCARRIERINTERFACE]...';


GO
CREATE TABLE [ax].[RETAILSHIPCARRIERINTERFACE] (
    [RECID]            BIGINT         NOT NULL,
    [CARRIERADAPTERID] NVARCHAR (10)  NOT NULL,
    [DESCRIPTION]      NVARCHAR (255) NOT NULL,
    [DATAAREAID]       NVARCHAR (4)   NOT NULL,
    [ROWVERSION]       TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILSHIPCARRIERINTERFACE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1914349796_1679934773] UNIQUE NONCLUSTERED ([CARRIERADAPTERID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[CUSTPACKINGSLIPTRANS]...';


GO
CREATE TABLE [ax].[CUSTPACKINGSLIPTRANS] (
    [RECID]              BIGINT           NOT NULL,
    [INVENTDIMID]        NVARCHAR (20)    NOT NULL,
    [ITEMID]             NVARCHAR (20)    NOT NULL,
    [LINENUM]            NUMERIC (32, 16) NOT NULL,
    [ORDERED]            NUMERIC (32, 16) NOT NULL,
    [PACKINGSLIPID]      NVARCHAR (20)    NOT NULL,
    [QTY]                NUMERIC (32, 16) NOT NULL,
    [REMAIN]             NUMERIC (32, 16) NOT NULL,
    [SALESID]            NVARCHAR (20)    NOT NULL,
    [SOURCEDOCUMENTLINE] BIGINT           NOT NULL,
    [CREATEDDATETIME]    DATETIME         NOT NULL,
    [DATAAREAID]         NVARCHAR (4)     NOT NULL,
    [ROWVERSION]         TIMESTAMP        NOT NULL,
    CONSTRAINT [I_CUSTPACKINGSLIPTRANS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_535734996_527453709] UNIQUE NONCLUSTERED ([SOURCEDOCUMENTLINE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[CUSTPACKINGSLIPTRANS].[IX_CUSTPACKINGSLIPTRANS_PACKINGSLIPID]...';


GO
CREATE NONCLUSTERED INDEX [IX_CUSTPACKINGSLIPTRANS_PACKINGSLIPID]
    ON [ax].[CUSTPACKINGSLIPTRANS]([PACKINGSLIPID] ASC);


GO
PRINT N'Creating [ax].[SYSTASKRECORDERLINEARTIFACT]...';


GO
CREATE TABLE [ax].[SYSTASKRECORDERLINEARTIFACT] (
    [RECID]         BIGINT         NOT NULL,
    [FILEPATH]      NVARCHAR (259) NOT NULL,
    [FRAMEWORKLINE] BIGINT         NOT NULL,
    [SOURCEXML]     NVARCHAR (MAX) NULL,
    [TYPE]          INT            NOT NULL,
    [ROWVERSION]    TIMESTAMP      NOT NULL,
    CONSTRAINT [I_SYSTASKRECORDERLINEARTIFACT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1788916388_-1400817003] UNIQUE NONCLUSTERED ([FRAMEWORKLINE] ASC, [TYPE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONINFOCODETRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS] (
    [AMOUNT]                       NUMERIC (32, 16) NOT NULL,
    [BUSINESSDATE]                 DATE             NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [COUNTER]                      INT              NOT NULL,
    [INFOAMOUNT]                   NUMERIC (32, 16) NOT NULL,
    [INFOCODEID]                   NVARCHAR (10)    NOT NULL,
    [INFORMATION]                  NVARCHAR (100)   NOT NULL,
    [INPUTTYPE]                    INT              NOT NULL,
    [ITEMTENDER]                   NVARCHAR (10)    NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [PARENTLINENUM]                NUMERIC (32, 16) NOT NULL,
    [REPLICATED]                   INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SOURCECODE]                   NVARCHAR (20)    NOT NULL,
    [SOURCECODE2]                  NVARCHAR (20)    NOT NULL,
    [SOURCECODE3]                  NVARCHAR (20)    NOT NULL,
    [STAFF]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                NVARCHAR (25)    NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [SUBINFOCODEID]                NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [TYPE]                         INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1348077048_-1126114694] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [TYPE] ASC, [INFOCODEID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONINFOCODETRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUTZONEREFERENCE]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUTZONEREFERENCE] (
    [RECID]      BIGINT        NOT NULL,
    [LAYOUTID]   NVARCHAR (10) NOT NULL,
    [ZONE]       BIGINT        NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTILLLAYOUTZONEREFERENCE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1413176897_-199417707] UNIQUE NONCLUSTERED ([ZONE] ASC, [LAYOUTID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSALESTAXOVERRIDE]...';


GO
CREATE TABLE [ax].[RETAILSALESTAXOVERRIDE] (
    [RECID]                   BIGINT        NOT NULL,
    [SOURCETAXGROUP]          NVARCHAR (10) NOT NULL,
    [SOURCEITEMTAXGROUP]      NVARCHAR (10) NOT NULL,
    [ADDITIONALDESCRIPTION]   NVARCHAR (60) NOT NULL,
    [CODE]                    NVARCHAR (25) NOT NULL,
    [DESCRIPTION]             NVARCHAR (60) NOT NULL,
    [DESTINATIONITEMTAXGROUP] NVARCHAR (10) NOT NULL,
    [DESTINATIONTAXGROUP]     NVARCHAR (10) NOT NULL,
    [OVERRIDEBY]              INT           NOT NULL,
    [OVERRIDEFROM]            INT           NOT NULL,
    [OVERRIDETO]              INT           NOT NULL,
    [OVERRIDETYPE]            INT           NOT NULL,
    [STATUS]                  INT           NOT NULL,
    [DATAAREAID]              NVARCHAR (4)  NOT NULL,
    [ROWVERSION]              TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILSALESTAXOVERRIDE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1829403140_776425418] UNIQUE CLUSTERED ([CODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[PRICEPARAMETERS]...';


GO
CREATE TABLE [ax].[PRICEPARAMETERS] (
    [RECID]                    BIGINT       NOT NULL,
    [KEY]                      INT          NOT NULL,
    [PURCHENDACCOUNTALL]       INT          NOT NULL,
    [PURCHENDALLALL]           INT          NOT NULL,
    [PURCHENDGROUPALL]         INT          NOT NULL,
    [PURCHLINEACCOUNTALL]      INT          NOT NULL,
    [PURCHLINEACCOUNTGROUP]    INT          NOT NULL,
    [PURCHLINEACCOUNTITEM]     INT          NOT NULL,
    [PURCHLINEALLALL]          INT          NOT NULL,
    [PURCHLINEALLGROUP]        INT          NOT NULL,
    [PURCHLINEALLITEM]         INT          NOT NULL,
    [PURCHLINEGROUPALL]        INT          NOT NULL,
    [PURCHLINEGROUPGROUP]      INT          NOT NULL,
    [PURCHLINEGROUPITEM]       INT          NOT NULL,
    [PURCHMULTILNACCOUNTALL]   INT          NOT NULL,
    [PURCHMULTILNACCOUNTGROUP] INT          NOT NULL,
    [PURCHMULTILNALLALL]       INT          NOT NULL,
    [PURCHMULTILNALLGROUP]     INT          NOT NULL,
    [PURCHMULTILNGROUPALL]     INT          NOT NULL,
    [PURCHMULTILNGROUPGROUP]   INT          NOT NULL,
    [PURCHPRICEACCOUNTITEM]    INT          NOT NULL,
    [PURCHPRICEALLITEM]        INT          NOT NULL,
    [PURCHPRICEGROUPITEM]      INT          NOT NULL,
    [SALESENDACCOUNTALL]       INT          NOT NULL,
    [SALESENDALLALL]           INT          NOT NULL,
    [SALESENDGROUPALL]         INT          NOT NULL,
    [SALESLINEACCOUNTALL]      INT          NOT NULL,
    [SALESLINEACCOUNTGROUP]    INT          NOT NULL,
    [SALESLINEACCOUNTITEM]     INT          NOT NULL,
    [SALESLINEALLALL]          INT          NOT NULL,
    [SALESLINEALLGROUP]        INT          NOT NULL,
    [SALESLINEALLITEM]         INT          NOT NULL,
    [SALESLINEGROUPALL]        INT          NOT NULL,
    [SALESLINEGROUPGROUP]      INT          NOT NULL,
    [SALESLINEGROUPITEM]       INT          NOT NULL,
    [SALESMULTILNACCOUNTALL]   INT          NOT NULL,
    [SALESMULTILNACCOUNTGROUP] INT          NOT NULL,
    [SALESMULTILNALLALL]       INT          NOT NULL,
    [SALESMULTILNALLGROUP]     INT          NOT NULL,
    [SALESMULTILNGROUPALL]     INT          NOT NULL,
    [SALESMULTILNGROUPGROUP]   INT          NOT NULL,
    [SALESPRICEACCOUNTITEM]    INT          NOT NULL,
    [SALESPRICEALLITEM]        INT          NOT NULL,
    [SALESPRICEGROUPITEM]      INT          NOT NULL,
    [DATAAREAID]               NVARCHAR (4) NOT NULL,
    [ROWVERSION]               TIMESTAMP    NOT NULL,
    CONSTRAINT [I_327828059_-1273337705] PRIMARY KEY CLUSTERED ([KEY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBRETAILCATALOGPRICEGROUP]...';


GO
CREATE TABLE [ax].[RETAILPUBRETAILCATALOGPRICEGROUP] (
    [RECID]            BIGINT    NOT NULL,
    [CATALOG]          BIGINT    NOT NULL,
    [ORIGIN]           BIGINT    NOT NULL,
    [ORIGINRECVERSION] INT       NOT NULL,
    [PRICEDISCGROUP]   BIGINT    NOT NULL,
    [ROWVERSION]       TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBRETAILCATALOGPRICEGROUP_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-191513906_1077282324] UNIQUE CLUSTERED ([CATALOG] ASC, [PRICEDISCGROUP] ASC),
    CONSTRAINT [I_-191513906_-162312163] UNIQUE NONCLUSTERED ([ORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP]...';


GO
CREATE TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP] (
    [RECID]                    BIGINT    NOT NULL,
    [DIMENSIONFIELDID]         INT       NOT NULL,
    [ISACTIVE]                 INT       NOT NULL,
    [ISALLOWBLANKISSUEENABLED] INT       NOT NULL,
    [ISSALESPROCESSACTIVATED]  INT       NOT NULL,
    [TRACKINGDIMENSIONGROUP]   BIGINT    NOT NULL,
    [ROWVERSION]               TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1701906886_1841106920] UNIQUE CLUSTERED ([TRACKINGDIMENSIONGROUP] ASC, [DIMENSIONFIELDID] ASC)
);


GO
PRINT N'Creating [ax].[DBVERSION]...';


GO
CREATE TABLE [ax].[DBVERSION] (
    [VersionType]   NVARCHAR (50) NOT NULL,
    [VersionNumber] INT           NOT NULL,
    [VersionString] NVARCHAR (50) NULL,
    CONSTRAINT [PK_DBVERSION] PRIMARY KEY CLUSTERED ([VersionType] ASC, [VersionNumber] ASC)
);


GO
PRINT N'Creating [ax].[LEDGER]...';


GO
CREATE TABLE [ax].[LEDGER] (
    [RECID]                   BIGINT        NOT NULL,
    [ACCOUNTINGCURRENCY]      NVARCHAR (3)  NOT NULL,
    [BUDGETEXCHANGERATETYPE]  BIGINT        NOT NULL,
    [CHARTOFACCOUNTS]         BIGINT        NOT NULL,
    [DEFAULTEXCHANGERATETYPE] BIGINT        NOT NULL,
    [DESCRIPTION]             NVARCHAR (60) NOT NULL,
    [FISCALCALENDAR]          BIGINT        NOT NULL,
    [ISBUDGETCONTROLENABLED]  INT           NOT NULL,
    [NAME]                    NVARCHAR (20) NOT NULL,
    [PRIMARYFORLEGALENTITY]   BIGINT        NOT NULL,
    [REPORTINGCURRENCY]       NVARCHAR (3)  NOT NULL,
    [ROWVERSION]              TIMESTAMP     NOT NULL,
    CONSTRAINT [I_LEDGER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-103131727_-1565480838] UNIQUE NONCLUSTERED ([PRIMARYFORLEGALENTITY] ASC),
    CONSTRAINT [I_-103131727_-1966747349] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[CUSTGROUP]...';


GO
CREATE TABLE [ax].[CUSTGROUP] (
    [RECID]      BIGINT        NOT NULL,
    [CUSTGROUP]  NVARCHAR (10) NOT NULL,
    [NAME]       NVARCHAR (60) NOT NULL,
    [DATAAREAID] NVARCHAR (4)  NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1620308668_1086213528] PRIMARY KEY CLUSTERED ([CUSTGROUP] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[DLVMODE]...';


GO
CREATE TABLE [ax].[DLVMODE] (
    [RECID]                  BIGINT        NOT NULL,
    [CODE]                   NVARCHAR (10) NOT NULL,
    [MARKUPGROUP]            NVARCHAR (10) NOT NULL,
    [SHIPCARRIERACCOUNTCODE] NVARCHAR (20) NOT NULL,
    [SHIPCARRIERDLVTYPE]     INT           NOT NULL,
    [SHIPCARRIERID]          NVARCHAR (10) NOT NULL,
    [SHIPCARRIERNAME]        NVARCHAR (20) NOT NULL,
    [TXT]                    NVARCHAR (60) NOT NULL,
    [DATAAREAID]             NVARCHAR (4)  NOT NULL,
    [ROWVERSION]             TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1052277315_776425418] PRIMARY KEY CLUSTERED ([CODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[HCMJOB]...';


GO
CREATE TABLE [ax].[HCMJOB] (
    [RECID]            BIGINT        NOT NULL,
    [JOBID]            NVARCHAR (25) NOT NULL,
    [MAXIMUMPOSITIONS] INT           NOT NULL,
    [CREATEDDATETIME]  DATETIME      NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_HCMJOB_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1678374987_-689341552] UNIQUE NONCLUSTERED ([JOBID] ASC)
);


GO
PRINT N'Creating [ax].[HCMJOB].[IX_HCMJOB_CODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_HCMJOB_CODE]
    ON [ax].[HCMJOB]([RECID] ASC);


GO
PRINT N'Creating [ax].[LOGISTICSELECTRONICADDRESS]...';


GO
CREATE TABLE [ax].[LOGISTICSELECTRONICADDRESS] (
    [RECID]             BIGINT         NOT NULL,
    [COUNTRYREGIONCODE] NVARCHAR (5)   NOT NULL,
    [DESCRIPTION]       NVARCHAR (60)  NOT NULL,
    [ISINSTANTMESSAGE]  INT            NOT NULL,
    [ISMOBILEPHONE]     INT            NOT NULL,
    [ISPRIMARY]         INT            NOT NULL,
    [ISPRIVATE]         INT            NOT NULL,
    [LOCATION]          BIGINT         NOT NULL,
    [LOCATOR]           NVARCHAR (255) NOT NULL,
    [LOCATOREXTENSION]  NVARCHAR (10)  NOT NULL,
    [TYPE]              INT            NOT NULL,
    [ROWVERSION]        TIMESTAMP      NOT NULL,
    CONSTRAINT [I_LOGISTICSELECTRONICADDRESS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSELECTRONICADDRESS].[IX_LOGISTICSELECTRONICADDRESS_PRIV_LOC_PRIM_MOBILE]...';


GO
CREATE NONCLUSTERED INDEX [IX_LOGISTICSELECTRONICADDRESS_PRIV_LOC_PRIM_MOBILE]
    ON [ax].[LOGISTICSELECTRONICADDRESS]([ISPRIVATE] ASC, [LOCATION] ASC, [ISPRIMARY] ASC, [ISMOBILEPHONE] ASC)
    INCLUDE([RECID], [DESCRIPTION], [LOCATOR], [LOCATOREXTENSION], [TYPE]);


GO
PRINT N'Creating [ax].[LOGISTICSELECTRONICADDRESS].[IX_LOGISTICSELECTRONICADDRESS_PRIM_PRIV_TYP]...';


GO
CREATE NONCLUSTERED INDEX [IX_LOGISTICSELECTRONICADDRESS_PRIM_PRIV_TYP]
    ON [ax].[LOGISTICSELECTRONICADDRESS]([ISPRIMARY] ASC, [ISPRIVATE] ASC, [TYPE] ASC);


GO
PRINT N'Creating [ax].[TAXCOLLECTLIMIT]...';


GO
CREATE TABLE [ax].[TAXCOLLECTLIMIT] (
    [RECID]       BIGINT           NOT NULL,
    [TAXCODE]     NVARCHAR (10)    NOT NULL,
    [TAXFROMDATE] DATE             NOT NULL,
    [TAXMAX]      NUMERIC (32, 16) NOT NULL,
    [TAXMIN]      NUMERIC (32, 16) NOT NULL,
    [TAXTODATE]   DATE             NOT NULL,
    [DATAAREAID]  NVARCHAR (4)     NOT NULL,
    [ROWVERSION]  TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-594010114_-1078995487] PRIMARY KEY CLUSTERED ([TAXCODE] ASC, [RECID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILREPORTPERMISSIONGROUP]...';


GO
CREATE TABLE [ax].[RETAILREPORTPERMISSIONGROUP] (
    [RECID]                         BIGINT    NOT NULL,
    [RETAILCHANNELREPORTRECID]      BIGINT    NOT NULL,
    [RETAILPOSPERMISSIONGROUPRECID] BIGINT    NOT NULL,
    [ROWVERSION]                    TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILREPORTPERMISSIONGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1465487581_-738656301] UNIQUE NONCLUSTERED ([RETAILPOSPERMISSIONGROUPRECID] ASC, [RETAILCHANNELREPORTRECID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTDIMCOMBINATION]...';


GO
CREATE TABLE [ax].[INVENTDIMCOMBINATION] (
    [RECID]                  BIGINT        NOT NULL,
    [DISTINCTPRODUCTVARIANT] BIGINT        NOT NULL,
    [INVENTDIMID]            NVARCHAR (20) NOT NULL,
    [ITEMID]                 NVARCHAR (20) NOT NULL,
    [RETAILVARIANTID]        NVARCHAR (10) NOT NULL,
    [CREATEDDATETIME]        DATETIME      NOT NULL,
    [DATAAREAID]             NVARCHAR (4)  NOT NULL,
    [ROWVERSION]             TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-804010625_1429128816] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [INVENTDIMID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-804010625_-474954108] UNIQUE NONCLUSTERED ([DISTINCTPRODUCTVARIANT] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTDIMCOMBINATION].[IX_INVENTDIMCOMBINATION_DISTPRODUCTVARIANT]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTDIMCOMBINATION_DISTPRODUCTVARIANT]
    ON [ax].[INVENTDIMCOMBINATION]([DISTINCTPRODUCTVARIANT] ASC);


GO
PRINT N'Creating [ax].[INVENTDIMCOMBINATION].[IX_INVENTDIMCOMBINATION_RETAILVARIANTID_DATAAREAID]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTDIMCOMBINATION_RETAILVARIANTID_DATAAREAID]
    ON [ax].[INVENTDIMCOMBINATION]([RETAILVARIANTID] ASC, [DATAAREAID] ASC);


GO
PRINT N'Creating [ax].[INVENTDIMCOMBINATION].[IX_INVENTDIMCOMBINATION_DATAAREAID]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTDIMCOMBINATION_DATAAREAID]
    ON [ax].[INVENTDIMCOMBINATION]([DATAAREAID] ASC)
    INCLUDE([DISTINCTPRODUCTVARIANT], [RETAILVARIANTID]);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUT]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUT] (
    [RECID]                    BIGINT          NOT NULL,
    [LAYOUTID]                 NVARCHAR (10)   NOT NULL,
    [CASHCHANGERLAYOUTXML]     NVARCHAR (MAX)  NULL,
    [CUSTOMERLAYOUTID]         NVARCHAR (10)   NOT NULL,
    [CUSTOMERLAYOUTXML]        NVARCHAR (MAX)  NULL,
    [DEVICETYPE]               BIGINT          NOT NULL,
    [HEIGHT]                   INT             NOT NULL,
    [IMG_CASHCHANGERLAYOUTXML] VARBINARY (MAX) NULL,
    [LAYOUTXML]                NVARCHAR (MAX)  NULL,
    [NAME]                     NVARCHAR (50)   NOT NULL,
    [RECEIPTID]                NVARCHAR (10)   NOT NULL,
    [RECEIPTITEMSLAYOUTXML]    NVARCHAR (MAX)  NULL,
    [RECEIPTPAYMENTLAYOUTXML]  NVARCHAR (MAX)  NULL,
    [TOTALID]                  NVARCHAR (10)   NOT NULL,
    [TOTALSLAYOUTXML]          NVARCHAR (MAX)  NULL,
    [WIDTH]                    INT             NOT NULL,
    [LAYOUTXMLPORTRAIT]        NVARCHAR (MAX)  NULL,
    [STARTSCREEN]              INT             NOT NULL,
    [ROWVERSION]               TIMESTAMP       NOT NULL,
    CONSTRAINT [I_-1652157140_1814737115] PRIMARY KEY CLUSTERED ([LAYOUTID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOFFLINEPRODUCTSCATEGORY]...';


GO
CREATE TABLE [ax].[RETAILOFFLINEPRODUCTSCATEGORY] (
    [RECID]          BIGINT    NOT NULL,
    [ECORESCATEGORY] BIGINT    NOT NULL,
    [OFFLINEPROFILE] BIGINT    NOT NULL,
    [ROWVERSION]     TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILOFFLINEPRODUCTSCATEGORY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_937703204_1682559564] UNIQUE NONCLUSTERED ([OFFLINEPROFILE] ASC, [ECORESCATEGORY] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYTIERTRANSLATION]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYTIERTRANSLATION] (
    [RECID]       BIGINT         NOT NULL,
    [DESCRIPTION] NVARCHAR (255) NOT NULL,
    [LANGUAGEID]  NVARCHAR (7)   NOT NULL,
    [LOYALTYTIER] BIGINT         NOT NULL,
    [ROWVERSION]  TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYTIERTRANSLATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_822357336_-1167379206] UNIQUE NONCLUSTERED ([LANGUAGEID] ASC, [LOYALTYTIER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILONLINECHANNELPUBLISHSTATUS]...';


GO
CREATE TABLE [ax].[RETAILONLINECHANNELPUBLISHSTATUS] (
    [RECID]                BIGINT         NOT NULL,
    [ONLINECHANNEL]        BIGINT         NOT NULL,
    [PUBLISHSTATUS]        INT            NOT NULL,
    [PUBLISHSTATUSMESSAGE] NVARCHAR (MAX) NULL,
    [CREATEDDATETIME]      DATETIME       NOT NULL,
    [MODIFIEDDATETIME]     DATETIME       NOT NULL,
    [ROWVERSION]           TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILONLINECHANNELPUBLISHSTATUS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-664677306_1180044546] UNIQUE NONCLUSTERED ([ONLINECHANNEL] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONSERVICEPROFILE]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE] (
    [RECID]                     BIGINT         NOT NULL,
    [LANGUAGE]                  NVARCHAR (7)   NOT NULL,
    [NAME]                      NVARCHAR (60)  NOT NULL,
    [PROFILEID]                 NVARCHAR (10)  NOT NULL,
    [SECURITYOFF]               INT            NOT NULL,
    [SERVERSERVICENAME]         NVARCHAR (50)  NOT NULL,
    [TSSTAFF]                   INT            NOT NULL,
    [REPORTEXECUTIONTIMEOUT]    INT            NOT NULL,
    [TRANSFERFILECHUNKSIZE]     INT            NOT NULL,
    [USERID]                    NVARCHAR (255) NOT NULL,
    [SERVICEHOSTURL]            NVARCHAR (255) NOT NULL,
    [ISSUERURI]                 NVARCHAR (255) NOT NULL,
    [IDENTITYPROVIDER]          NVARCHAR (255) NOT NULL,
    [IDENTITYPROVIDERCLAIMTYPE] NVARCHAR (255) NOT NULL,
    [ISSUEDTOKENTYPE]           NVARCHAR (255) NOT NULL,
    [AUDIENCEURN]               NVARCHAR (255) NOT NULL,
    [ROWVERSION]                TIMESTAMP      NOT NULL,
    CONSTRAINT [I_-439203455_-2102841330] PRIMARY KEY CLUSTERED ([PROFILEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALPRINTER_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALPRINTER_BR] (
    [ADDITIONALFISCALMEMORYINDEX]  INT           NOT NULL,
    [FISCALESTABLISHMENT]          NVARCHAR (10) NOT NULL,
    [FISCALRECEIPTMODEL]           NVARCHAR (3)  NOT NULL,
    [MANUFACTURER]                 NVARCHAR (20) NOT NULL,
    [MODELNUMBER]                  NVARCHAR (30) NOT NULL,
    [NATIONALCODE]                 NVARCHAR (6)  NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT           IDENTITY (1, 1) NOT NULL,
    [RESTARTOPERATIONNUMBER]       INT           NOT NULL,
    [SERIALNUMBER]                 NVARCHAR (20) NOT NULL,
    [SOFTWAREDATE]                 DATE          NOT NULL,
    [SOFTWAREVERSION]              NVARCHAR (10) NOT NULL,
    [STOREID]                      NVARCHAR (10) NOT NULL,
    [TERMINALID]                   NVARCHAR (10) NOT NULL,
    [TERMINALNUMBER]               INT           NOT NULL,
    [TYPE]                         NVARCHAR (10) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-802645346_100835462] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [SERIALNUMBER] ASC, [RESTARTOPERATIONNUMBER] ASC, [ADDITIONALFISCALMEMORYINDEX] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALPRINTER_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILBARCODEMASKTABLE]...';


GO
CREATE TABLE [ax].[RETAILBARCODEMASKTABLE] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (50) NOT NULL,
    [MASK]        NVARCHAR (80) NOT NULL,
    [MASKID]      NVARCHAR (10) NOT NULL,
    [PREFIX]      NVARCHAR (22) NOT NULL,
    [SYMBOLOGY]   INT           NOT NULL,
    [TYPE]        INT           NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_614044725_-483433874] PRIMARY KEY CLUSTERED ([MASKID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_614044725_1444299457] UNIQUE NONCLUSTERED ([MASK] ASC, [TYPE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPARAMETERS]...';


GO
CREATE TABLE [ax].[RETAILPARAMETERS] (
    [RECID]                                  BIGINT           NOT NULL,
    [MIXANDMATCHACTIVITYTYPE]                NVARCHAR (10)    NOT NULL,
    [AUTOMATICRETURNOFLOYALTYPAYMENT_RU]     INT              NOT NULL,
    [AWARDPOINTSFORPARTIALREDEMPTION_RU]     INT              NOT NULL,
    [CANCELLATIONCHARGE]                     NUMERIC (32, 16) NOT NULL,
    [CANCELLATIONCHARGECODE]                 NVARCHAR (10)    NOT NULL,
    [DEFAULTCUSTOMERPOSTING]                 INT              NOT NULL,
    [DEFAULTORDERTYPE]                       INT              NOT NULL,
    [DISCOUNTOFFERACTIVITYTYPE]              NVARCHAR (10)    NOT NULL,
    [EANLICENSENO]                           NVARCHAR (10)    NOT NULL,
    [ELECTRONICDELIVERYMODECODE]             NVARCHAR (10)    NOT NULL,
    [EXPIRATIONDATE]                         INT              NOT NULL,
    [GIFTCARDITEM]                           NVARCHAR (20)    NOT NULL,
    [ITEMLABELLASTACTION]                    NVARCHAR (10)    NOT NULL,
    [ITEMLABELSFORNEGATIVESTOCK]             INT              NOT NULL,
    [ITEMSALESSTATISTICSON]                  INT              NOT NULL,
    [KEY]                                    INT              NOT NULL,
    [MINIMUMDEPOSITFORSALESORDER]            NUMERIC (32, 16) NOT NULL,
    [MINIMUMPASSWORDLENGTH]                  INT              NOT NULL,
    [MULTIBUYACTIVITYTYPE]                   NVARCHAR (10)    NOT NULL,
    [PAYMENTSTATISTICS]                      INT              NOT NULL,
    [PICKUPDELIVERYMODECODE]                 NVARCHAR (10)    NOT NULL,
    [POSTCUSTDISC]                           INT              NOT NULL,
    [POSTINFOCODEDISC]                       INT              NOT NULL,
    [POSTLINEDISC]                           INT              NOT NULL,
    [POSTPERIODICDISC]                       INT              NOT NULL,
    [POSTTOTALDISC]                          INT              NOT NULL,
    [PROCESSGIFTCARDSASPREPAYMENTS_RU]       INT              NOT NULL,
    [PROCESSRETURNSASINORIGINALSALESHIFT_RU] INT              NOT NULL,
    [PROPOSEREFUNDPAYMENTAMOUNT_RU]          INT              NOT NULL,
    [RECEIPTOPTION]                          INT              NOT NULL,
    [REQUIRENUMERICCHAR]                     INT              NOT NULL,
    [REQUIRESPECIALCHAR]                     INT              NOT NULL,
    [REQUIREUPPERCASE]                       INT              NOT NULL,
    [SHELFLABELLASTACTION]                   NVARCHAR (10)    NOT NULL,
    [SHIPPINGCHARGECODE]                     NVARCHAR (10)    NOT NULL,
    [STAFFSTATISTICS]                        INT              NOT NULL,
    [TERMINALSTATISTICS]                     INT              NOT NULL,
    [USEGIFTCARDPOLICIES]                    INT              NOT NULL,
    [LOCKOUTTHRESHOLD]                       INT              NOT NULL,
    [LOCKOUTDURATION]                        INT              NOT NULL,
    [LOGINCOUNTERRESETDURATION]              INT              NOT NULL,
    [PASSWORDEXPIRYINTERVAL]                 INT              NOT NULL,
    [PASSWORDEXPIRYNOTIFICATIONTHRESHOLD]    INT              NOT NULL,
    [DISCOUNTALGORITHMMODE]                  INT              NOT NULL,
    [MAXBESTDEALSTEPCOUNT]                   INT              NOT NULL,
    [DATAAREAID]                             NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                             TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1854178713_2053771816] PRIMARY KEY CLUSTERED ([KEY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESTRACKINGDIMENSIONGROUPITEM]...';


GO
CREATE TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPITEM] (
    [RECID]                  BIGINT        NOT NULL,
    [ITEMDATAAREAID]         NVARCHAR (10) NOT NULL,
    [ITEMID]                 NVARCHAR (20) NOT NULL,
    [TRACKINGDIMENSIONGROUP] BIGINT        NOT NULL,
    [ROWVERSION]             TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESTRACKINGDIMENSIONGROUPITEM_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-174369730_1322497665] UNIQUE CLUSTERED ([ITEMID] ASC, [ITEMDATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[TAXFISCALCLASSIFICATION_BR]...';


GO
CREATE TABLE [ax].[TAXFISCALCLASSIFICATION_BR] (
    [RECID]                  BIGINT           NOT NULL,
    [APPROXTAXVALUEIMPORTED] NUMERIC (32, 16) NOT NULL,
    [APPROXTAXVALUENATIONAL] NUMERIC (32, 16) NOT NULL,
    [FISCALCLASSIFICATIONID] NVARCHAR (10)    NOT NULL,
    [DATAAREAID]             NVARCHAR (4)     NOT NULL,
    [ROWVERSION]             TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1219540014_944565509] PRIMARY KEY CLUSTERED ([FISCALCLASSIFICATIONID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALRECEIPT_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALRECEIPT_BR] (
    [ACCOUNTINGDATE]               DATE             NOT NULL,
    [ADDITIONALFISCALMEMORYINDEX]  INT              NOT NULL,
    [CONSUMERCNPJCPFNUMBER]        NVARCHAR (20)    NOT NULL,
    [CONSUMERNAME]                 NVARCHAR (100)   NOT NULL,
    [FISCALESTABLISHMENT]          NVARCHAR (10)    NOT NULL,
    [FISCALPRINTERSERIALNUMBER]    NVARCHAR (20)    NOT NULL,
    [FISCALRECEIPTDATETIME]        DATETIME         NOT NULL,
    [FISCALRECEIPTDATETIMETZID]    INT              NOT NULL,
    [FISCALRECEIPTMODEL]           NVARCHAR (3)     NOT NULL,
    [FISCALRECEIPTNUMBER]          INT              NOT NULL,
    [PRINTEDTOTALDISCOUNTAMOUNT]   NUMERIC (32, 16) NOT NULL,
    [PRINTEDTOTALSURCHARGEAMOUNT]  NUMERIC (32, 16) NOT NULL,
    [QUANTITYDECIMALS]             INT              NOT NULL,
    [RECEIPTNUMBER]                INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STATUS]                       INT              NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TOTALAMOUNT]                  NUMERIC (32, 16) NOT NULL,
    [TOTALDISCOUNTAMOUNT]          NUMERIC (32, 16) NOT NULL,
    [TOTALSURCHARGEAMOUNT]         NUMERIC (32, 16) NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [UNITDECIMALS]                 INT              NOT NULL,
    [VOIDEDAFTERENDRECEIPT]        INT              NOT NULL,
    [ZREPORTNUMBER]                INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1580227714_-397801874] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALRECEIPT_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[INVENTSITE]...';


GO
CREATE TABLE [ax].[INVENTSITE] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (60) NOT NULL,
    [SITEID]     NVARCHAR (10) NOT NULL,
    [DATAAREAID] NVARCHAR (4)  NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1527024543_-870687852] PRIMARY KEY CLUSTERED ([SITEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERSIZE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTMASTERSIZE] (
    [RECID]                         BIGINT    NOT NULL,
    [SIZE]                          BIGINT    NOT NULL,
    [SIZEPRODUCTDIMENSIONATTRIBUTE] BIGINT    NOT NULL,
    [SIZEPRODUCTMASTER]             BIGINT    NOT NULL,
    [ROWVERSION]                    TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTMASTERSIZE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1630785697_410463323] UNIQUE NONCLUSTERED ([SIZEPRODUCTMASTER] ASC, [SIZEPRODUCTDIMENSIONATTRIBUTE] ASC, [SIZE] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERSIZE].[IX_ECORESPRODUCTMASTERSIZE_SIZE]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTMASTERSIZE_SIZE]
    ON [ax].[ECORESPRODUCTMASTERSIZE]([SIZE] ASC)
    INCLUDE([SIZEPRODUCTMASTER]);


GO
PRINT N'Creating [ax].[RETAILFORMLAYOUT]...';


GO
CREATE TABLE [ax].[RETAILFORMLAYOUT] (
    [RECID]          BIGINT         NOT NULL,
    [FORMLAYOUTID]   NVARCHAR (10)  NOT NULL,
    [DESCRIPTION]    NVARCHAR (255) NOT NULL,
    [FOOTERXML]      NVARCHAR (MAX) NULL,
    [HEADERXML]      NVARCHAR (MAX) NULL,
    [LAYOUTTYPE]     INT            NOT NULL,
    [LINESXML]       NVARCHAR (MAX) NULL,
    [PRINTASSLIP]    INT            NOT NULL,
    [PRINTBEHAVIOUR] INT            NOT NULL,
    [PROMPTQUESTION] INT            NOT NULL,
    [TITLE]          NVARCHAR (30)  NOT NULL,
    [UPPERCASE]      INT            NOT NULL,
    [ROWVERSION]     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_1005248327_-609586253] PRIMARY KEY CLUSTERED ([FORMLAYOUTID] ASC)
);


GO
PRINT N'Creating [ax].[EXCHANGERATECURRENCYPAIR]...';


GO
CREATE TABLE [ax].[EXCHANGERATECURRENCYPAIR] (
    [RECID]                     BIGINT       NOT NULL,
    [EXCHANGERATEDISPLAYFACTOR] INT          NOT NULL,
    [EXCHANGERATETYPE]          BIGINT       NOT NULL,
    [FROMCURRENCYCODE]          NVARCHAR (3) NOT NULL,
    [TOCURRENCYCODE]            NVARCHAR (3) NOT NULL,
    [MODIFIEDDATETIME]          DATETIME     NOT NULL,
    [ROWVERSION]                TIMESTAMP    NOT NULL,
    CONSTRAINT [I_EXCHANGERATECURRENCYPAIR_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1152046774_-946998140] UNIQUE CLUSTERED ([FROMCURRENCYCODE] ASC, [TOCURRENCYCODE] ASC, [EXCHANGERATETYPE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTCODE]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTCODE] (
    [RECID]           BIGINT        NOT NULL,
    [BARCODE]         NVARCHAR (80) NOT NULL,
    [DISCOUNTCODE]    NVARCHAR (15) NOT NULL,
    [DISCOUNTOFFERID] NVARCHAR (20) NOT NULL,
    [DATAAREAID]      NVARCHAR (4)  NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTCODE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1508518185_626142578] UNIQUE NONCLUSTERED ([DISCOUNTCODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTCODE].[IX_RetailDiscountCode_DISCOUNTCODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_RetailDiscountCode_DISCOUNTCODE]
    ON [ax].[RETAILDISCOUNTCODE]([DISCOUNTCODE] ASC);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTCODE].[IX_RetailDiscountCode_DISCOUNTOFFERID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RetailDiscountCode_DISCOUNTOFFERID]
    ON [ax].[RETAILDISCOUNTCODE]([DISCOUNTOFFERID] ASC);


GO
PRINT N'Creating [ax].[RETAILPOSBATCHTAXTRANS]...';


GO
CREATE TABLE [ax].[RETAILPOSBATCHTAXTRANS] (
    [BATCHID]            BIGINT           NOT NULL,
    [CHANNEL]            BIGINT           NOT NULL,
    [REPLICATIONCOUNTER] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]            NVARCHAR (10)    NOT NULL,
    [TAXAMOUNT]          NUMERIC (32, 16) NOT NULL,
    [TAXCODE]            NVARCHAR (10)    NOT NULL,
    [TERMINALID]         NVARCHAR (10)    NOT NULL,
    [DATAAREAID]         NVARCHAR (4)     NOT NULL,
    [ROWVERSION]         TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1026698850_1545619050] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [BATCHID] ASC, [TAXCODE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILPOSBATCHTAXTRANS_REPLICATIONCOUNTER] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTER] ASC)
);


GO
PRINT N'Creating [ax].[ECORESBOOLEANVALUE]...';


GO
CREATE TABLE [ax].[ECORESBOOLEANVALUE] (
    [RECID]        BIGINT    NOT NULL,
    [BOOLEANVALUE] INT       NULL,
    [ROWVERSION]   TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESBOOLEANVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILHARDWARESTATION]...';


GO
CREATE TABLE [ax].[RETAILHARDWARESTATION] (
    [RECID]                     BIGINT         NOT NULL,
    [HARDWARESTATIONID]         NVARCHAR (20)  NOT NULL,
    [HARDWARESTATIONNAME]       NVARCHAR (250) NOT NULL,
    [HARDWAREPROFILEID]         NVARCHAR (10)  NOT NULL,
    [HARDWARESTATIONPORTNUMBER] INT            NOT NULL,
    [ROWVERSION]                TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILHARDWARESTATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1085640273_-1537991155] UNIQUE NONCLUSTERED ([HARDWARESTATIONID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTENDERTYPETABLE]...';


GO
CREATE TABLE [ax].[RETAILTENDERTYPETABLE] (
    [RECID]        BIGINT        NOT NULL,
    [NAME]         NVARCHAR (60) NOT NULL,
    [TENDERTYPEID] NVARCHAR (10) NOT NULL,
    [ROWVERSION]   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_2122422669_-467433995] PRIMARY KEY CLUSTERED ([TENDERTYPEID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCATEGORYATTRIBUTELOOKUP]...';


GO
CREATE TABLE [ax].[ECORESCATEGORYATTRIBUTELOOKUP] (
    [RECID]                   BIGINT    NOT NULL,
    [ATTRIBUTE]               BIGINT    NOT NULL,
    [ATTRIBUTEGROUPATTRIBUTE] BIGINT    NOT NULL,
    [CATEGORY]                BIGINT    NOT NULL,
    [CATEGORYATTRIBUTE]       BIGINT    NOT NULL,
    [ATTRIBUTEGROUPTYPE]      INT       NOT NULL,
    [ROWVERSION]              TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESCATEGORYATTRIBUTELOOKUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1521133457_-2122509987] UNIQUE NONCLUSTERED ([CATEGORY] ASC, [ATTRIBUTE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPOSITIONPOSPERMISSION]...';


GO
CREATE TABLE [ax].[RETAILPOSITIONPOSPERMISSION] (
    [RECID]                                 BIGINT           NOT NULL,
    [ALLOWBLINDCLOSE]                       INT              NOT NULL,
    [ALLOWCHANGENOVOID]                     INT              NOT NULL,
    [ALLOWCHANGEPERIPHERALSTATION]          INT              NOT NULL,
    [ALLOWCREATEORDER]                      INT              NOT NULL,
    [ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU] INT              NOT NULL,
    [ALLOWEDITORDER]                        INT              NOT NULL,
    [ALLOWFLOATINGTENDERDECLARATION]        INT              NOT NULL,
    [ALLOWKITDISASSEMBLY]                   INT              NOT NULL,
    [ALLOWMULTIPLELOGINS]                   INT              NOT NULL,
    [ALLOWMULTIPLESHIFTLOGON]               INT              NOT NULL,
    [ALLOWNOTSAMEDATERETURN_RU]             INT              NOT NULL,
    [ALLOWOPENDRAWERONLY]                   INT              NOT NULL,
    [ALLOWPASSWORDCHANGE]                   INT              NOT NULL,
    [ALLOWPRICEOVERRIDE]                    INT              NOT NULL,
    [ALLOWRESETPASSWORD]                    INT              NOT NULL,
    [ALLOWRETRIEVEORDER]                    INT              NOT NULL,
    [ALLOWRETURNOFNONRETURNABLEITEM_RU]     INT              NOT NULL,
    [ALLOWSALESTAXCHANGE]                   INT              NOT NULL,
    [ALLOWTENDERDECLARATION]                INT              NOT NULL,
    [ALLOWTRANSACTIONSUSPENSION]            INT              NOT NULL,
    [ALLOWTRANSACTIONVOIDING]               INT              NOT NULL,
    [ALLOWXREPORTPRINTING]                  INT              NOT NULL,
    [ALLOWZREPORTPRINTING]                  INT              NOT NULL,
    [MANAGEDEVICE]                          INT              NOT NULL,
    [MANAGERPRIVILEGES]                     INT              NOT NULL,
    [MAXIMUMDISCOUNTPCT]                    NUMERIC (32, 16) NOT NULL,
    [MAXLINEDISCOUNTAMOUNT]                 NUMERIC (32, 16) NOT NULL,
    [MAXLINERETURNAMOUNT]                   NUMERIC (32, 16) NOT NULL,
    [MAXTOTALDISCOUNTAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [MAXTOTALDISCOUNTPCT]                   NUMERIC (32, 16) NOT NULL,
    [MAXTOTALRETURNAMOUNT]                  NUMERIC (32, 16) NOT NULL,
    [NAME]                                  NVARCHAR (60)    NOT NULL,
    [POSITION]                              BIGINT           NOT NULL,
    [POSPERMISSIONGROUP]                    BIGINT           NOT NULL,
    [USEHANDHELD]                           INT              NOT NULL,
    [VIEWTIMECLOCKENTRIES]                  INT              NOT NULL,
    [ALLOWMANAGESHAREDSHIFT]                INT              NOT NULL,
    [ALLOWSETUPLABELPRINTER]                INT              NOT NULL,
    [ALLOWUSESHAREDSHIFT]                   INT              NOT NULL,
    [ALLOWTASKGUIDES]                       INT              NOT NULL,
    [ROWVERSION]                            TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILPOSITIONPOSPERMISSION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_562388273_-1074520080] UNIQUE NONCLUSTERED ([POSITION] ASC)
);


GO
PRINT N'Creating [ax].[RETAILBUTTONGRIDBUTTONS]...';


GO
CREATE TABLE [ax].[RETAILBUTTONGRIDBUTTONS] (
    [RECID]                BIGINT          NOT NULL,
    [ACTION]               INT             NOT NULL,
    [ACTIONPROPERTY]       NVARCHAR (1000) NOT NULL,
    [BACKCOLOR]            INT             NOT NULL,
    [BACKCOLOR2]           INT             NOT NULL,
    [BORDERCOLOR]          INT             NOT NULL,
    [BUTTONGRIDID]         NVARCHAR (10)   NOT NULL,
    [COL]                  INT             NOT NULL,
    [COLOUR]               INT             NOT NULL,
    [COLSPAN]              INT             NOT NULL,
    [DISPLAYTEXT]          NVARCHAR (50)   NOT NULL,
    [FONTCOLOR]            INT             NOT NULL,
    [FONTSIZE]             INT             NOT NULL,
    [FONTSTYLE]            INT             NOT NULL,
    [GRADIENTMODE]         INT             NOT NULL,
    [ID]                   INT             NOT NULL,
    [IMAGEALIGNMENT]       INT             NOT NULL,
    [NEWIMAGEALIGNMENT]    INT             NOT NULL,
    [NEWTEXTALIGNMENT]     INT             NOT NULL,
    [PICTUREID]            INT             NOT NULL,
    [ROWNUM]               INT             NOT NULL,
    [ROWSPAN]              INT             NOT NULL,
    [USECUSTOMLOOKANDFEEL] INT             NOT NULL,
    [ROWVERSION]           TIMESTAMP       NOT NULL,
    CONSTRAINT [I_-2770370_-1012477802] PRIMARY KEY CLUSTERED ([ID] ASC, [BUTTONGRIDID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINVENTAVAILABILITYPARAMETERS]...';


GO
CREATE TABLE [ax].[RETAILINVENTAVAILABILITYPARAMETERS] (
    [RECID]           BIGINT    NOT NULL,
    [KEY]             INT       NOT NULL,
    [LASTINVENTTRANS] BIGINT    NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILINVENTAVAILABILITYPARAMETERS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] (
    [AMOUNTCUR]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDERED]               NUMERIC (32, 16) NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TENDERTYPE]                   NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_818850008_-1103390687] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONPAYMENTTRANS_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTEGROUPATTRIBUTE]...';


GO
CREATE TABLE [ax].[ECORESATTRIBUTEGROUPATTRIBUTE] (
    [RECID]          BIGINT    NOT NULL,
    [ATTRIBUTE]      BIGINT    NOT NULL,
    [ATTRIBUTEGROUP] BIGINT    NOT NULL,
    [DEFAULTVALUE]   BIGINT    NOT NULL,
    [ROWVERSION]     TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESATTRIBUTEGROUPATTRIBUTE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_461708616_-255559742] UNIQUE NONCLUSTERED ([ATTRIBUTEGROUP] ASC, [ATTRIBUTE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBRETAILCHANNELTABLE]...';


GO
CREATE TABLE [ax].[RETAILPUBRETAILCHANNELTABLE] (
    [RECID]                      BIGINT        NOT NULL,
    [CATEGORYHIERARCHY]          BIGINT        NOT NULL,
    [CHANNELTYPE]                INT           NOT NULL,
    [CURRENCY]                   NVARCHAR (3)  NOT NULL,
    [DEFAULTCUSTACCOUNT]         NVARCHAR (20) NOT NULL,
    [DEFAULTCUSTDATAAREAID]      NVARCHAR (10) NOT NULL,
    [INSTANCERELATIONTYPE]       BIGINT        NOT NULL,
    [INTERNALORGANIZATION]       BIGINT        NOT NULL,
    [INVENTLOCATION]             NVARCHAR (10) NOT NULL,
    [INVENTLOCATIONDATAAREAID]   NVARCHAR (10) NOT NULL,
    [OMOPERATINGUNITID]          BIGINT        NOT NULL,
    [ORIGINID]                   BIGINT        NOT NULL,
    [ORIGININSTANCERELATIONTYPE] BIGINT        NOT NULL,
    [PRICEINCLUDESSALESTAX]      INT           NOT NULL,
    [TRANSACTIONSERVICEPROFILE]  NVARCHAR (10) NOT NULL,
    [RELATIONTYPE]               BIGINT        NOT NULL,
    [ROWVERSION]                 TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILPUBRETAILCHANNELTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1526824446_-1636812754] UNIQUE NONCLUSTERED ([OMOPERATINGUNITID] ASC),
    CONSTRAINT [I_-1526824446_-1962010936] UNIQUE NONCLUSTERED ([ORIGINID] ASC)
);


GO
PRINT N'Creating [ax].[TAXCOMPONENTTABLE_IN]...';


GO
CREATE TABLE [ax].[TAXCOMPONENTTABLE_IN] (
    [RECID]      BIGINT        NOT NULL,
    [COMPONENT]  NVARCHAR (15) NOT NULL,
    [TAXTYPE]    INT           NOT NULL,
    [DATAAREAID] NVARCHAR (4)  NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_TAXCOMPONENTTABLE_IN_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1073210900_1038721528] UNIQUE NONCLUSTERED ([COMPONENT] ASC, [TAXTYPE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINVENTAVAILABILITY]...';


GO
CREATE TABLE [ax].[RETAILINVENTAVAILABILITY] (
    [RECID]           BIGINT           NOT NULL,
    [AVAILPHYSICAL]   NUMERIC (32, 16) NOT NULL,
    [INVENTDIMRECID]  BIGINT           NOT NULL,
    [ITEMRECID]       BIGINT           NOT NULL,
    [LASTINVENTTRANS] BIGINT           NOT NULL,
    [ROWVERSION]      TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILINVENTAVAILABILITY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-155348074_789383996] UNIQUE NONCLUSTERED ([ITEMRECID] ASC, [INVENTDIMRECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINVENTAVAILABILITY].[IX_RETAILINVENTAVAILABILITY_RECID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILINVENTAVAILABILITY_RECID]
    ON [ax].[RETAILINVENTAVAILABILITY]([INVENTDIMRECID] ASC)
    INCLUDE([ITEMRECID], [LASTINVENTTRANS], [RECID]);


GO
PRINT N'Creating [ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP]...';


GO
CREATE TABLE [ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP] (
    [RECID]                BIGINT    NOT NULL,
    [ATTRIBUTEGROUP]       BIGINT    NOT NULL,
    [INTERNALORGANIZATION] BIGINT    NOT NULL,
    [MODIFIER]             INT       NOT NULL,
    [ORIGIN]               BIGINT    NOT NULL,
    [ORIGINRECVERSION]     INT       NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBINTERNALORGATTRIBUTEGROUP_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1409114826_52244696] UNIQUE CLUSTERED ([INTERNALORGANIZATION] ASC, [MODIFIER] ASC, [ATTRIBUTEGROUP] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSFORMATHEADING]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSFORMATHEADING] (
    [RECID]           BIGINT         NOT NULL,
    [ADDRFORMAT]      NVARCHAR (10)  NOT NULL,
    [NAME]            NVARCHAR (100) NOT NULL,
    [UPDATETOADDRESS] INT            NOT NULL,
    [ROWVERSION]      TIMESTAMP      NOT NULL,
    CONSTRAINT [I_940083590_1389798729] PRIMARY KEY CLUSTERED ([ADDRFORMAT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKITCOMPONENT]...';


GO
CREATE TABLE [ax].[RETAILKITCOMPONENT] (
    [RECID]               BIGINT           NOT NULL,
    [COMPONENT]           BIGINT           NOT NULL,
    [DONOTSHOWATREGISTER] INT              NOT NULL,
    [KIT]                 BIGINT           NOT NULL,
    [QUANTITY]            NUMERIC (32, 16) NOT NULL,
    [UNITOFMEASURE]       BIGINT           NOT NULL,
    [CREATEDDATETIME]     DATETIME         NOT NULL,
    [MODIFIEDDATETIME]    DATETIME         NOT NULL,
    [ROWVERSION]          TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILKITCOMPONENT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKITCOMPONENT].[IX_RETAILKITCOMPONENT_KIT_COMPONENT]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILKITCOMPONENT_KIT_COMPONENT]
    ON [ax].[RETAILKITCOMPONENT]([KIT] ASC, [COMPONENT] ASC)
    INCLUDE([RECID], [QUANTITY], [UNITOFMEASURE]);


GO
PRINT N'Creating [ax].[RETAILLOYALTYEARNSCHEMELINE]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE] (
    [RECID]                             BIGINT           NOT NULL,
    [FROMACTIVITYAMOUNTCURRENCY]        NVARCHAR (3)     NOT NULL,
    [FROMACTIVITYAMOUNTQTY]             NUMERIC (32, 16) NOT NULL,
    [FROMACTIVITYRETAILGROUPMEMBERLINE] BIGINT           NOT NULL,
    [FROMACTIVITYTYPE]                  INT              NOT NULL,
    [LOYALTYSCHEME]                     BIGINT           NOT NULL,
    [LOYALTYTIER]                       BIGINT           NOT NULL,
    [TOREWARDPOINT]                     BIGINT           NOT NULL,
    [TOREWARDPOINTAMOUNTQTY]            NUMERIC (32, 16) NOT NULL,
    [VALIDFROM]                         DATE             NOT NULL,
    [VALIDTO]                           DATE             NOT NULL,
    [LINENUM]                           NUMERIC (32, 16) NOT NULL,
    [ROWVERSION]                        TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYEARNSCHEMELINE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-818822738_-1976788570] UNIQUE NONCLUSTERED ([LOYALTYSCHEME] ASC, [LINENUM] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBINVENTDIMCHANNELMETADATA]...';


GO
CREATE TABLE [ax].[RETAILPUBINVENTDIMCHANNELMETADATA] (
    [RECID]            BIGINT    NOT NULL,
    [DIMENSIONFIELDID] INT       NOT NULL,
    [HOSTCHANNEL]      BIGINT    NOT NULL,
    [ISREFINABLE]      INT       NOT NULL,
    [ORIGINID]         BIGINT    NOT NULL,
    [ROWVERSION]       TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBINVENTDIMCHANNELMETADATA_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-447666564_-1092555162] UNIQUE NONCLUSTERED ([HOSTCHANNEL] ASC, [DIMENSIONFIELDID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] (
    [POSCURRENCY]                  NVARCHAR (3)     NOT NULL,
    [AMOUNTCUR]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTMST]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDERED]               NUMERIC (32, 16) NOT NULL,
    [BUSINESSDATE]                 DATE             NOT NULL,
    [CARDID]                       NVARCHAR (10)    NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [CURRENCY]                     NVARCHAR (3)     NOT NULL,
    [EXCHRATE]                     NUMERIC (32, 16) NOT NULL,
    [EXCHRATEMST]                  NUMERIC (32, 16) NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [QTY]                          NUMERIC (32, 16) NOT NULL,
    [RECEIPTID]                    NVARCHAR (18)    NOT NULL,
    [REPLICATED]                   INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SHIFT]                        NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                    DATE             NOT NULL,
    [STAFF]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                NVARCHAR (25)    NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TENDERTYPE]                   NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1233709243_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONTENDERDECLARATIONTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] (
    [AMOUNT]                       NUMERIC (32, 16) NOT NULL,
    [CARDAUTHORIZATIONNUMBER]      NVARCHAR (20)    NOT NULL,
    [CARDLOGO]                     INT              NOT NULL,
    [CARDPROCESSORCNPJCPF]         NVARCHAR (20)    NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [PAYMENTTYPE]                  INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TENDERTYPEID]                 NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-502091823_292746041] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDRAWERPOOL]...';


GO
CREATE TABLE [ax].[RETAILDRAWERPOOL] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (50) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILDRAWERPOOL_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-940250670_-1966747349] UNIQUE CLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[CURRENCY]...';


GO
CREATE TABLE [ax].[CURRENCY] (
    [RECID]             BIGINT           NOT NULL,
    [CURRENCYCODE]      NVARCHAR (3)     NOT NULL,
    [CURRENCYCODEISO]   NVARCHAR (3)     NOT NULL,
    [ROUNDOFFPRICE]     NUMERIC (32, 16) NOT NULL,
    [ROUNDOFFPURCH]     NUMERIC (32, 16) NOT NULL,
    [ROUNDOFFSALES]     NUMERIC (32, 16) NOT NULL,
    [ROUNDOFFTYPEPRICE] INT              NOT NULL,
    [ROUNDOFFTYPEPURCH] INT              NOT NULL,
    [ROUNDOFFTYPESALES] INT              NOT NULL,
    [SYMBOL]            NVARCHAR (5)     NOT NULL,
    [TXT]               NVARCHAR (60)    NOT NULL,
    [ROWVERSION]        TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1650711867_1955152843] PRIMARY KEY CLUSTERED ([CURRENCYCODE] ASC)
);


GO
PRINT N'Creating [ax].[EXCEPTIONCODETABLE_BR]...';


GO
CREATE TABLE [ax].[EXCEPTIONCODETABLE_BR] (
    [RECID]                     BIGINT           NOT NULL,
    [APPROXTAXVALUEIMPORTED]    NUMERIC (32, 16) NOT NULL,
    [APPROXTAXVALUENATIONAL]    NUMERIC (32, 16) NOT NULL,
    [EXCEPTIONCODE]             NVARCHAR (10)    NOT NULL,
    [TAXFISCALCLASSIFICATIONID] NVARCHAR (10)    NOT NULL,
    [DATAAREAID]                NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                TIMESTAMP        NOT NULL,
    CONSTRAINT [I_EXCEPTIONCODETABLE_BR_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_671712487_-482247933] UNIQUE CLUSTERED ([TAXFISCALCLASSIFICATIONID] ASC, [EXCEPTIONCODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALPRINTERCONFIGTABLE]...';


GO
CREATE TABLE [ax].[RETAILFISCALPRINTERCONFIGTABLE] (
    [RECID]       BIGINT         NOT NULL,
    [CONFIGID]    NVARCHAR (10)  NOT NULL,
    [DESCRIPTION] NVARCHAR (60)  NOT NULL,
    [XMLCONTENT]  NVARCHAR (MAX) NULL,
    [ROWVERSION]  TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILFISCALPRINTERCONFIGTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1205142427_690327387] UNIQUE NONCLUSTERED ([CONFIGID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKEYBOARDMAPPINGTABLE]...';


GO
CREATE TABLE [ax].[RETAILKEYBOARDMAPPINGTABLE] (
    [RECID]             BIGINT        NOT NULL,
    [KEYBOARDMAPPINGID] NVARCHAR (10) NOT NULL,
    [DESCRIPTION]       NVARCHAR (60) NOT NULL,
    [ROWVERSION]        TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1200005738_96064522] PRIMARY KEY CLUSTERED ([KEYBOARDMAPPINGID] ASC)
);


GO
PRINT N'Creating [ax].[SHIPCARRIERSTAGING]...';


GO
CREATE TABLE [ax].[SHIPCARRIERSTAGING] (
    [RECID]          BIGINT        NOT NULL,
    [PACKINGSLIPID]  NVARCHAR (20) NOT NULL,
    [SHIPDATE]       DATE          NOT NULL,
    [TRACKINGNUMBER] NVARCHAR (30) NOT NULL,
    [ROWVERSION]     TIMESTAMP     NOT NULL,
    CONSTRAINT [I_SHIPCARRIERSTAGING_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPERMISSIONSGROUP]...';


GO
CREATE TABLE [ax].[RETAILPERMISSIONSGROUP] (
    [RECID]               BIGINT         NOT NULL,
    [PERMISSIONID]        INT            NOT NULL,
    [PERMISSIONGROUPID]   INT            NOT NULL,
    [PERMISSIONGROUPNAME] NVARCHAR (100) NOT NULL,
    [ROWVERSION]          TIMESTAMP      NOT NULL,
    CONSTRAINT [I_-62135338_-79811882] PRIMARY KEY NONCLUSTERED ([PERMISSIONGROUPID] ASC, [PERMISSIONID] ASC),
    CONSTRAINT [I_RETAILPERMISSIONSGROUP_RECID] UNIQUE CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSHAREDPARAMETERS]...';


GO
CREATE TABLE [ax].[RETAILSHAREDPARAMETERS] (
    [RECID]                         BIGINT        NOT NULL,
    [CATALOGDEFAULTATTRIBUTEGROUP]  BIGINT        NOT NULL,
    [CATEGORYDEFAULTATTRIBUTEGROUP] BIGINT        NOT NULL,
    [CUSTOMERDEFAULTATTRIBUTEGROUP] BIGINT        NOT NULL,
    [DEVICETOKENALGORITHM]          NVARCHAR (25) NOT NULL,
    [EARNLOYALTYOFFLINE]            INT           NOT NULL,
    [EFTPASSWORDENCRYPTION]         NVARCHAR (25) NOT NULL,
    [EXCHANGERATETYPE]              BIGINT        NOT NULL,
    [IMAGESATTRIBUTETYPE]           BIGINT        NOT NULL,
    [KEY]                           INT           NOT NULL,
    [LOCALSTOREID]                  NVARCHAR (10) NOT NULL,
    [PRODUCTDEFAULTATTRIBUTEGROUP]  BIGINT        NOT NULL,
    [STAFFPASSWORDHASH]             NVARCHAR (25) NOT NULL,
    [TRANSACTIONSERVICEPROFILE]     NVARCHAR (10) NOT NULL,
    [TSPASSWORDENCRYPTION]          NVARCHAR (25) NOT NULL,
    [VIDEOSATTRIBUTETYPE]           BIGINT        NOT NULL,
    [WORKERDEFAULTATTRIBUTEGROUP]   BIGINT        NOT NULL,
    [CONSUMEREFDOCCSCENCRYPTION]    NVARCHAR (25) NOT NULL,
    [DEVICETOKENEXPIRATION]         INT           NOT NULL,
    [DEFAULTHWSSELFSERVICEPKG]      BIGINT        NOT NULL,
    [ROWVERSION]                    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILSHAREDPARAMETERS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-820738956_2053804616] UNIQUE NONCLUSTERED ([KEY] ASC),
    CONSTRAINT [I_-820738956_328776135] UNIQUE NONCLUSTERED ([DEFAULTHWSSELFSERVICEPKG] ASC)
);


GO
PRINT N'Creating [ax].[RETAILAFFILIATIONPRICEGROUP]...';


GO
CREATE TABLE [ax].[RETAILAFFILIATIONPRICEGROUP] (
    [RECID]             BIGINT    NOT NULL,
    [PRICEDISCGROUP]    BIGINT    NOT NULL,
    [RETAILAFFILIATION] BIGINT    NOT NULL,
    [RETAILLOYALTYTIER] BIGINT    NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILAFFILIATIONPRICEGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1865738683_869720144] UNIQUE NONCLUSTERED ([RETAILAFFILIATION] ASC, [PRICEDISCGROUP] ASC, [RETAILLOYALTYTIER] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSLOCATIONROLE]...';


GO
CREATE TABLE [ax].[LOGISTICSLOCATIONROLE] (
    [RECID]           BIGINT        NOT NULL,
    [ISCONTACTINFO]   INT           NOT NULL,
    [ISPOSTALADDRESS] INT           NOT NULL,
    [NAME]            NVARCHAR (40) NOT NULL,
    [TYPE]            INT           NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_LOGISTICSLOCATIONROLE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_517951034_516664720] UNIQUE CLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[ECORESSTYLE]...';


GO
CREATE TABLE [ax].[ECORESSTYLE] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (10) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESSTYLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_967371264_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYCARDTIER]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYCARDTIER] (
    [RECID]       BIGINT    NOT NULL,
    [AFFILIATION] BIGINT    NOT NULL,
    [LOYALTYCARD] BIGINT    NOT NULL,
    [LOYALTYTIER] BIGINT    NOT NULL,
    [VALIDFROM]   DATE      NOT NULL,
    [VALIDTO]     DATE      NOT NULL,
    [ROWVERSION]  TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYCARDTIER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTHEMEPALLET]...';


GO
CREATE TABLE [ax].[RETAILTHEMEPALLET] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (60) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTHEMEPALLET_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFUNCTIONALITYPROFILE]...';


GO
CREATE TABLE [ax].[RETAILFUNCTIONALITYPROFILE] (
    [RECID]                                  BIGINT           NOT NULL,
    [PROFILEID]                              NVARCHAR (10)    NOT NULL,
    [ADDTAXONPRICES]                         INT              NOT NULL,
    [AGGREGATEITEMS]                         INT              NOT NULL,
    [AGGREGATEITEMSFORPRINTING]              INT              NOT NULL,
    [AGGREGATEPAYMENTS]                      INT              NOT NULL,
    [AMOUNTDECIMALPLACES]                    NVARCHAR (10)    NOT NULL,
    [AMOUNTROUNDINGTO]                       NUMERIC (32, 16) NOT NULL,
    [APPLYDISCOUNTONUNITPRICES]              INT              NOT NULL,
    [AUDITENABLED]                           INT              NOT NULL,
    [BACKUPTRAININGTRANSACTIONS]             INT              NOT NULL,
    [BLOCKEDCLOSEDACCOUNT]                   INT              NOT NULL,
    [CENTRALTABLESERVER]                     NVARCHAR (256)   NOT NULL,
    [CENTRALTABLESERVERPORT]                 NVARCHAR (10)    NOT NULL,
    [CURRENCYSYMBOL]                         NVARCHAR (10)    NOT NULL,
    [DAYSCUSTOMERHISTORY]                    INT              NOT NULL,
    [DAYSTRANSACTIONSEXISTS]                 INT              NOT NULL,
    [DECIMALNOTREQUIREDFORMINORCURRENCYUNIT] INT              NOT NULL,
    [DISCOUNTATTOTAL]                        NVARCHAR (10)    NOT NULL,
    [DISPLAYSECONDARYTOTALCURRENCY]          INT              NOT NULL,
    [ENDOFTRANSACTION]                       NVARCHAR (10)    NOT NULL,
    [EODBANKTOTALSVERIFICATION]              INT              NOT NULL,
    [INCLUDEKITCOMPONENTS]                   INT              NOT NULL,
    [ITEMNOTONFILE]                          NVARCHAR (10)    NOT NULL,
    [LIMITSTAFFLISTTOSTORE]                  INT              NOT NULL,
    [LINEITEMTAXCHANGE]                      NVARCHAR (10)    NOT NULL,
    [MANUALCALCULATEDISCOUNTS]               INT              NOT NULL,
    [MARKDOWN]                               NVARCHAR (10)    NOT NULL,
    [MARKUP]                                 NVARCHAR (10)    NOT NULL,
    [MAXIMUMPRICE]                           NUMERIC (32, 16) NOT NULL,
    [MAXIMUMQTY]                             NUMERIC (32, 16) NOT NULL,
    [MAXIMUMSTORETRANSLOG]                   INT              NOT NULL,
    [MAXTRANSACTIONSEARCHRESULTS]            INT              NOT NULL,
    [MINIMUMPASSWORDLENGTH]                  INT              NOT NULL,
    [MULTIBLEITEMSYMBOL]                     NVARCHAR (10)    NOT NULL,
    [MUSTKEYINPRICEIFZERO]                   INT              NOT NULL,
    [NAME]                                   NVARCHAR (60)    NOT NULL,
    [NEGATIVEADJUSTMENT]                     NVARCHAR (10)    NOT NULL,
    [NEGATIVESALESLINE]                      NVARCHAR (10)    NOT NULL,
    [NOSALE]                                 NVARCHAR (10)    NOT NULL,
    [NOTAXUSED]                              INT              NOT NULL,
    [OVERRIDEPRICE]                          NVARCHAR (10)    NOT NULL,
    [PRICEDECIMALPLACES]                     NVARCHAR (10)    NOT NULL,
    [PRICEROUNDINGTO]                        NUMERIC (32, 16) NOT NULL,
    [PRINTXREPORTONTERMINAL]                 INT              NOT NULL,
    [REFUNDSALE]                             NVARCHAR (10)    NOT NULL,
    [REQUIREAMOUNTDECLARATION]               INT              NOT NULL,
    [RETAILRECEIPTPROFILE]                   NVARCHAR (10)    NOT NULL,
    [SALESPERSON]                            NVARCHAR (10)    NOT NULL,
    [SALESPERSONMODE]                        INT              NOT NULL,
    [SECONDARYTOTALCURRENCY]                 NVARCHAR (3)     NOT NULL,
    [SERIALNUMBER]                           NVARCHAR (10)    NOT NULL,
    [SHOWSTAFFLISTATLOGON]                   INT              NOT NULL,
    [SKIPTAXONRECEIPT]                       INT              NOT NULL,
    [STAFFBARCODELOGON]                      INT              NOT NULL,
    [STAFFBARCODELOGONREQUIRESPASSWORD]      INT              NOT NULL,
    [STAFFCARDLOGON]                         INT              NOT NULL,
    [STAFFCARDLOGONREQUIRESPASSWORD]         INT              NOT NULL,
    [STARTOFTRANSACTION]                     NVARCHAR (10)    NOT NULL,
    [SUPPORTEDCOUNTRYREGIONISOCODE]          NCHAR (2)        NOT NULL,
    [TAENABLEREGISTRATION]                   INT              NOT NULL,
    [TAXREGISTRATIONNUMBERONRECEIPT]         INT              NOT NULL,
    [TENDERDECLARATION]                      NVARCHAR (10)    NOT NULL,
    [TRANSACTIONDELETEREMINDER]              INT              NOT NULL,
    [TRANSACTIONTAXCHANGE]                   NVARCHAR (10)    NOT NULL,
    [TSCENTRALTABLESERVER]                   INT              NOT NULL,
    [TSCUSTOMER]                             INT              NOT NULL,
    [TSDATAENTRIES]                          INT              NOT NULL,
    [TSFLOATINGCASHIER]                      INT              NOT NULL,
    [TSINVENTORYLOOKUP]                      INT              NOT NULL,
    [TSRESENDDELAY]                          INT              NOT NULL,
    [TSSENDTRANSACTIONS]                     INT              NOT NULL,
    [TSSENDVOIDTRANSACTIONS]                 INT              NOT NULL,
    [TSSTAFF]                                INT              NOT NULL,
    [TSSUSPENDRETRIEVETRANSACTIONS]          INT              NOT NULL,
    [TSTRANSACTIONRESENDLIMIT]               INT              NOT NULL,
    [TSUPDATEREPLICATIONCOUNTER]             INT              NOT NULL,
    [VOIDISPRESSED]                          NVARCHAR (10)    NOT NULL,
    [VOIDPAYMENT]                            NVARCHAR (10)    NOT NULL,
    [VOIDTRANSACTION]                        NVARCHAR (10)    NOT NULL,
    [CANCELREASON]                           NVARCHAR (10)    NOT NULL,
    [CONTINGENCYREASON]                      NVARCHAR (10)    NOT NULL,
    [CREATEOFFLINECUSTOMERORDERS]            INT              NOT NULL,
    [CREATEASYNCCUSTOMERS]                   INT              NOT NULL,
    [SEARCHCUSTOMERSINAX]                    INT              NOT NULL,
    [MODIFIEDDATETIME]                       DATETIME         NOT NULL,
    [ROWVERSION]                             TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-953240733_-2102841330] PRIMARY KEY CLUSTERED ([PROFILEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILZREPORTTOTALIZER_BR]...';


GO
CREATE TABLE [ax].[RETAILZREPORTTOTALIZER_BR] (
    [ADDITIONALFISCALMEMORYINDEX]  INT              NOT NULL,
    [FISCALPRINTERSERIALNUMBER]    NVARCHAR (20)    NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TOTALIZERAMOUNT]              NUMERIC (32, 16) NOT NULL,
    [TOTALIZERNAME]                NVARCHAR (10)    NOT NULL,
    [TOTALIZERSINTEGRANAME]        NVARCHAR (10)    NOT NULL,
    [ZREPORTNUMBER]                INT              NOT NULL,
    [TAXAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [TAXVALUE]                     NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1519526632_1172547349] PRIMARY KEY CLUSTERED ([FISCALPRINTERSERIALNUMBER] ASC, [ADDITIONALFISCALMEMORYINDEX] ASC, [STOREID] ASC, [TERMINALID] ASC, [ZREPORTNUMBER] ASC, [TOTALIZERNAME] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILZREPORTTOTALIZER_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTEVALUE]...';


GO
CREATE TABLE [ax].[ECORESATTRIBUTEVALUE] (
    [RECID]         BIGINT    NOT NULL,
    [ATTRIBUTE]     BIGINT    NOT NULL,
    [INSTANCEVALUE] BIGINT    NOT NULL,
    [VALUE]         BIGINT    NOT NULL,
    [ROWVERSION]    TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESATTRIBUTEVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTEVALUE].[IX_ECORESATTRIBUTEVALUE_INSTANCEVALUE]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESATTRIBUTEVALUE_INSTANCEVALUE]
    ON [ax].[ECORESATTRIBUTEVALUE]([INSTANCEVALUE] ASC)
    INCLUDE([ATTRIBUTE], [VALUE]);


GO
PRINT N'Creating [ax].[ECORESPRODUCTTRANSLATION]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTTRANSLATION] (
    [RECID]       BIGINT          NOT NULL,
    [DESCRIPTION] NVARCHAR (1000) NOT NULL,
    [LANGUAGEID]  NVARCHAR (7)    NOT NULL,
    [NAME]        NVARCHAR (60)   NOT NULL,
    [PRODUCT]     BIGINT          NOT NULL,
    [ROWVERSION]  TIMESTAMP       NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTTRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1618573415_168464721] UNIQUE NONCLUSTERED ([RECID] ASC, [PRODUCT] ASC, [LANGUAGEID] ASC),
    CONSTRAINT [I_-1618573415_-1991811118] UNIQUE CLUSTERED ([PRODUCT] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTTRANSLATION].[IX_ECORESPRODUCTTRANSLATION_PRODUCT_TRANSLATION]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTTRANSLATION_PRODUCT_TRANSLATION]
    ON [ax].[ECORESPRODUCTTRANSLATION]([PRODUCT] ASC, [LANGUAGEID] ASC)
    INCLUDE([DESCRIPTION], [NAME]);


GO
PRINT N'Creating [ax].[RETAILLOYALTYREWARDPOINT]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYREWARDPOINT] (
    [RECID]               BIGINT        NOT NULL,
    [EXPIRATIONTIMEUNIT]  INT           NOT NULL,
    [EXPIRATIONTIMEVALUE] INT           NOT NULL,
    [REDEEMABLE]          INT           NOT NULL,
    [REDEEMRANKING]       INT           NOT NULL,
    [REWARDPOINTCURRENCY] NVARCHAR (3)  NOT NULL,
    [REWARDPOINTID]       NVARCHAR (64) NOT NULL,
    [REWARDPOINTTYPE]     INT           NOT NULL,
    [ROWVERSION]          TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYREWARDPOINT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_493823852_315656331] UNIQUE NONCLUSTERED ([REWARDPOINTID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTABLE]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONTABLE] (
    [TERMINAL]                      NVARCHAR (10)    NOT NULL,
    [AMOUNTTOACCOUNT]               NUMERIC (32, 16) NOT NULL,
    [BATCHID]                       BIGINT           NOT NULL,
    [BATCHTERMINALID]               NVARCHAR (10)    NOT NULL,
    [BUSINESSDATE]                  DATE             NOT NULL,
    [CHANNEL]                       BIGINT           NOT NULL,
    [CHANNELREFERENCEID]            NVARCHAR (50)    NOT NULL,
    [COMMENT]                       NVARCHAR (60)    NOT NULL,
    [COSTAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [COUNTER]                       INT              NOT NULL,
    [CREATEDOFFLINE]                INT              NOT NULL,
    [CREATEDONPOSTERMINAL]          NVARCHAR (10)    NOT NULL,
    [CURRENCY]                      NVARCHAR (3)     NOT NULL,
    [CUSTACCOUNT]                   NVARCHAR (38)    NOT NULL,
    [CUSTDISCAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [CUSTPURCHASEORDER]             NVARCHAR (20)    NOT NULL,
    [DESCRIPTION]                   NVARCHAR (150)   NOT NULL,
    [DISCAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [DLVMODE]                       NVARCHAR (10)    NOT NULL,
    [ENTRYSTATUS]                   INT              NOT NULL,
    [EXCHRATE]                      NUMERIC (32, 16) NOT NULL,
    [FISCALDOCUMENTID]              NVARCHAR (80)    NOT NULL,
    [FISCALSERIALID]                NVARCHAR (80)    NOT NULL,
    [GROSSAMOUNT]                   NUMERIC (32, 16) NOT NULL,
    [INCLUDEDINSTATISTICS]          INT              NOT NULL,
    [INCOMEEXPENSEAMOUNT]           NUMERIC (32, 16) NOT NULL,
    [INFOCODEDISCGROUP]             NVARCHAR (10)    NOT NULL,
    [INVENTLOCATIONID]              NVARCHAR (10)    NOT NULL,
    [INVENTSITEID]                  NVARCHAR (10)    NOT NULL,
    [INVOICECOMMENT]                NVARCHAR (60)    NOT NULL,
    [ITEMSPOSTED]                   INT              NOT NULL,
    [LOGISTICSPOSTALADDRESS]        BIGINT           NOT NULL,
    [LOYALTYCARDID]                 NVARCHAR (30)    NOT NULL,
    [LOYALTYDISCAMOUNT_RU]          NUMERIC (32, 16) NOT NULL,
    [NETAMOUNT]                     NUMERIC (32, 16) NOT NULL,
    [NUMBEROFINVOICES]              INT              NOT NULL,
    [NUMBEROFITEMLINES]             NUMERIC (32, 16) NOT NULL,
    [NUMBEROFITEMS]                 NUMERIC (32, 16) NOT NULL,
    [NUMBEROFPAYMENTLINES]          INT              NOT NULL,
    [OPENDRAWER]                    INT              NOT NULL,
    [PAYMENTAMOUNT]                 NUMERIC (32, 16) NOT NULL,
    [POSTASSHIPMENT]                INT              NOT NULL,
    [RECEIPTDATEREQUESTED]          DATE             NOT NULL,
    [RECEIPTEMAIL]                  NVARCHAR (80)    NOT NULL,
    [RECEIPTID]                     NVARCHAR (18)    NOT NULL,
    [REFUNDRECEIPTID]               NVARCHAR (18)    NOT NULL,
    [REPLICATED]                    INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN]  INT              IDENTITY (1, 1) NOT NULL,
    [RETRIEVEDFROMRECEIPTID]        NVARCHAR (18)    NOT NULL,
    [ROUNDEDAMOUNT]                 NUMERIC (32, 16) NOT NULL,
    [SALEISRETURNSALE]              INT              NOT NULL,
    [SALESINVOICEAMOUNT]            NUMERIC (32, 16) NOT NULL,
    [SALESORDERAMOUNT]              NUMERIC (32, 16) NOT NULL,
    [SALESORDERID]                  NVARCHAR (20)    NOT NULL,
    [SALESPAYMENTDIFFERENCE]        NUMERIC (32, 16) NOT NULL,
    [SHIFT]                         NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                     DATE             NOT NULL,
    [SHIPPINGDATEREQUESTED]         DATE             NOT NULL,
    [SKIPAGGREGATION]               INT              NOT NULL,
    [STAFF]                         NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                 NVARCHAR (25)    NOT NULL,
    [STORE]                         NVARCHAR (10)    NOT NULL,
    [TIMEWHENTOTALPRESSED]          INT              NOT NULL,
    [TIMEWHENTRANSCLOSED]           INT              NOT NULL,
    [TOACCOUNT]                     INT              NOT NULL,
    [TOTALDISCAMOUNT]               NUMERIC (32, 16) NOT NULL,
    [TOTALMANUALDISCOUNTAMOUNT]     NUMERIC (32, 16) NOT NULL,
    [TOTALMANUALDISCOUNTPERCENTAGE] NUMERIC (32, 16) NOT NULL,
    [TRANSACTIONID]                 NVARCHAR (44)    NOT NULL,
    [TRANSCODE]                     INT              NOT NULL,
    [TRANSDATE]                     DATE             NOT NULL,
    [TRANSTABLEID]                  INT              NOT NULL,
    [TRANSTIME]                     INT              NOT NULL,
    [TYPE]                          INT              NOT NULL,
    [WRONGSHIFT]                    INT              NOT NULL,
    [CUSTACCOUNTASYNC]              NVARCHAR (38)    NOT NULL,
    [CREATEDDATETIME]               DATETIME         NOT NULL,
    [MODIFIEDDATETIME]              DATETIME         NOT NULL,
    [DATAAREAID]                    NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                    TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1558077251_-1679712867] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONTABLE_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTABLE].[IX_RETAILTRANSACTIONTABLE_ENTRYSTATUS]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONTABLE_ENTRYSTATUS]
    ON [ax].[RETAILTRANSACTIONTABLE]([ENTRYSTATUS] ASC);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTABLE].[IX_RETAILTRANSACTIONTABLE_PAYMENTAMOUNT]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONTABLE_PAYMENTAMOUNT]
    ON [ax].[RETAILTRANSACTIONTABLE]([PAYMENTAMOUNT] ASC);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONTABLE].[IX_RETAILTRANSACTIONTABLE_MODIFIEDDATETIME]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONTABLE_MODIFIEDDATETIME]
    ON [ax].[RETAILTRANSACTIONTABLE]([MODIFIEDDATETIME] ASC);


GO
PRINT N'Creating [ax].[RETAILINVENTTABLE]...';


GO
CREATE TABLE [ax].[RETAILINVENTTABLE] (
    [RECID]                    BIGINT        NOT NULL,
    [BARCODESETUPID]           NVARCHAR (10) NOT NULL,
    [BASECOMPARISONUNITCODE]   NVARCHAR (10) NOT NULL,
    [BLOCKEDONPOS]             INT           NOT NULL,
    [DATEBLOCKED]              DATE          NOT NULL,
    [DATETOACTIVATEITEM]       DATE          NOT NULL,
    [DATETOBEBLOCKED]          DATE          NOT NULL,
    [ITEMID]                   NVARCHAR (20) NOT NULL,
    [KEYINGINPRICE]            INT           NOT NULL,
    [KEYINGINQTY]              INT           NOT NULL,
    [MUSTKEYINCOMMENT]         INT           NOT NULL,
    [NODISCOUNTALLOWED]        INT           NOT NULL,
    [PRINTVARIANTSSHELFLABELS] INT           NOT NULL,
    [PROHIBITRETURN_RU]        INT           NOT NULL,
    [QTYBECOMESNEGATIVE]       INT           NOT NULL,
    [SCALEITEM]                INT           NOT NULL,
    [USEEANSTANDARDBARCODE]    INT           NOT NULL,
    [ZEROPRICEVALID]           INT           NOT NULL,
    [DATAAREAID]               NVARCHAR (4)  NOT NULL,
    [ROWVERSION]               TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1553584605_1428044496] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILINVENTTABLE].[IX_RETAILINVENTTABLE_ITEM]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILINVENTTABLE_ITEM]
    ON [ax].[RETAILINVENTTABLE]([ITEMID] ASC)
    INCLUDE([NODISCOUNTALLOWED]);


GO
PRINT N'Creating [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]...';


GO
CREATE TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE] (
    [RECID]                 BIGINT        NOT NULL,
    [ACCOUNTNUM]            NVARCHAR (10) NOT NULL,
    [ACCOUNTTYPE]           INT           NOT NULL,
    [MESSAGELINE1]          NVARCHAR (30) NOT NULL,
    [MESSAGELINE2]          NVARCHAR (30) NOT NULL,
    [NAME]                  NVARCHAR (60) NOT NULL,
    [NAMEALIAS]             NVARCHAR (20) NOT NULL,
    [SLIPTEXT1]             NVARCHAR (30) NOT NULL,
    [SLIPTEXT2]             NVARCHAR (30) NOT NULL,
    [STOREID]               NVARCHAR (10) NOT NULL,
    [MODIFIEDTRANSACTIONID] BIGINT        NOT NULL,
    [DATAAREAID]            NVARCHAR (4)  NOT NULL,
    [ROWVERSION]            TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1430111471_-2115689213] PRIMARY KEY CLUSTERED ([STOREID] ASC, [ACCOUNTNUM] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTVARIANTSIZE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTVARIANTSIZE] (
    [RECID]      BIGINT    NOT NULL,
    [SIZE]       BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTVARIANTSIZE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[CUSTPARAMETERS]...';


GO
CREATE TABLE [ax].[CUSTPARAMETERS] (
    [RECID]           BIGINT        NOT NULL,
    [TAXGROUP_RU]     NVARCHAR (10) NOT NULL,
    [TAXITEMGROUP_RU] NVARCHAR (10) NOT NULL,
    [KEY]             INT           NOT NULL,
    [DATAAREAID]      NVARCHAR (4)  NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_3799951_-1273337705] PRIMARY KEY CLUSTERED ([KEY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTORECASHDECLARATIONTABLE]...';


GO
CREATE TABLE [ax].[RETAILSTORECASHDECLARATIONTABLE] (
    [RECID]      BIGINT           NOT NULL,
    [AMOUNT]     NUMERIC (32, 16) NOT NULL,
    [CURRENCY]   NVARCHAR (3)     NOT NULL,
    [STOREID]    NVARCHAR (10)    NOT NULL,
    [TYPE]       INT              NOT NULL,
    [DATAAREAID] NVARCHAR (4)     NOT NULL,
    [ROWVERSION] TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-293880745_1360347954] PRIMARY KEY CLUSTERED ([STOREID] ASC, [CURRENCY] ASC, [TYPE] ASC, [AMOUNT] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOFFLINETABLECOLUMNS]...';


GO
CREATE TABLE [ax].[RETAILOFFLINETABLECOLUMNS] (
    [RECID]          BIGINT        NOT NULL,
    [SYNCCOLUMNNAME] NVARCHAR (40) NOT NULL,
    [SYNCTABLE]      BIGINT        NOT NULL,
    [ROWVERSION]     TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILOFFLINETABLECOLUMNS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]...';


GO
CREATE TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE] (
    [RECID]                BIGINT           NOT NULL,
    [ATTRIBUTE]            BIGINT           NOT NULL,
    [CATALOG]              BIGINT           NOT NULL,
    [DATETIMEVALUE]        DATETIME         NOT NULL,
    [DATETIMEVALUETZID]    INT              NOT NULL,
    [FLOATVALUE]           NUMERIC (32, 16) NOT NULL,
    [INTERNALORGANIZATION] BIGINT           NOT NULL,
    [INTVALUE]             INT              NOT NULL,
    [LANGUAGEID]           NVARCHAR (7)     NOT NULL,
    [PRODUCT]              BIGINT           NOT NULL,
    [TEXTVALUE]            NVARCHAR (1999)  NOT NULL,
    [UNITOFMEASURE]        BIGINT           NOT NULL,
    [ROWVERSION]           TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILPUBPRODUCTATTRIBUTEVALUE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-2054803486_-1059221112] UNIQUE CLUSTERED ([CATALOG] ASC, [ATTRIBUTE] ASC, [PRODUCT] ASC, [INTERNALORGANIZATION] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE].[IX_RETAILPUBPRODUCTATTRIBUTEVALUE_INTERNALORGANIZATION]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBPRODUCTATTRIBUTEVALUE_INTERNALORGANIZATION]
    ON [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]([INTERNALORGANIZATION] ASC);


GO
PRINT N'Creating [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE].[IX_RETAILPUBPRODUCTATTRIBUTEVALUE_PRODUCT]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBPRODUCTATTRIBUTEVALUE_PRODUCT]
    ON [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]([PRODUCT] ASC)
    INCLUDE([DATETIMEVALUE], [DATETIMEVALUETZID], [FLOATVALUE], [INTVALUE], [TEXTVALUE], [UNITOFMEASURE], [LANGUAGEID], [CATALOG], [INTERNALORGANIZATION], [ATTRIBUTE]);


GO
PRINT N'Creating [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE].[IX_RETAILPUBPRODUCTATTRIBUTEVALUE_LANGUAGEID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBPRODUCTATTRIBUTEVALUE_LANGUAGEID]
    ON [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]([LANGUAGEID] ASC);


GO
PRINT N'Creating [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE].[IX_RETAILPUBPRODUCTATTRIBUTEVALUE_ATTRIBUTE]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBPRODUCTATTRIBUTEVALUE_ATTRIBUTE]
    ON [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]([ATTRIBUTE] ASC);


GO
PRINT N'Creating [ax].[DIRPARTYLOCATION]...';


GO
CREATE TABLE [ax].[DIRPARTYLOCATION] (
    [RECID]                  BIGINT         NOT NULL,
    [ATTENTIONTOADDRESSLINE] NVARCHAR (255) NOT NULL,
    [ISLOCATIONOWNER]        INT            NOT NULL,
    [ISPOSTALADDRESS]        INT            NOT NULL,
    [ISPRIMARY]              INT            NOT NULL,
    [ISPRIVATE]              INT            NOT NULL,
    [ISROLEDELIVERY]         INT            NOT NULL,
    [LOCATION]               BIGINT         NOT NULL,
    [PARTY]                  BIGINT         NOT NULL,
    [ROWVERSION]             TIMESTAMP      NOT NULL,
    CONSTRAINT [I_DIRPARTYLOCATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1696019432_-1627387636] UNIQUE CLUSTERED ([PARTY] ASC, [LOCATION] ASC)
);


GO
PRINT N'Creating [ax].[DIRPARTYLOCATION].[IX_DIRPARTYLOCATION_CODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_DIRPARTYLOCATION_CODE]
    ON [ax].[DIRPARTYLOCATION]([LOCATION] ASC, [ISPOSTALADDRESS] ASC, [ISPRIMARY] ASC)
    INCLUDE([PARTY]);


GO
PRINT N'Creating [ax].[RETAILPOSBATCHTENDERTRANS]...';


GO
CREATE TABLE [ax].[RETAILPOSBATCHTENDERTRANS] (
    [ADDTOTENDERAMOUNT]      NUMERIC (32, 16) NOT NULL,
    [ADDTOTENDERAMOUNTCUR]   NUMERIC (32, 16) NOT NULL,
    [BANKDROPAMOUNT]         NUMERIC (32, 16) NOT NULL,
    [BANKDROPAMOUNTCUR]      NUMERIC (32, 16) NOT NULL,
    [BATCHID]                BIGINT           NOT NULL,
    [CARDTYPEID]             NVARCHAR (10)    NOT NULL,
    [CHANGEAMOUNT]           NUMERIC (32, 16) NOT NULL,
    [CHANGEAMOUNTCUR]        NUMERIC (32, 16) NOT NULL,
    [CHANNEL]                BIGINT           NOT NULL,
    [COUNT]                  INT              NOT NULL,
    [COUNTINGREQUIRED]       INT              NOT NULL,
    [CURRENCY]               NVARCHAR (3)     NOT NULL,
    [DECLARETENDERAMOUNT]    NUMERIC (32, 16) NOT NULL,
    [DECLARETENDERAMOUNTCUR] NUMERIC (32, 16) NOT NULL,
    [REMOVETENDERAMOUNT]     NUMERIC (32, 16) NOT NULL,
    [REMOVETENDERAMOUNTCUR]  NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTER]     INT              IDENTITY (1, 1) NOT NULL,
    [SAFEDROPAMOUNT]         NUMERIC (32, 16) NOT NULL,
    [SAFEDROPAMOUNTCUR]      NUMERIC (32, 16) NOT NULL,
    [STARTINGAMOUNT]         NUMERIC (32, 16) NOT NULL,
    [STARTINGAMOUNTCUR]      NUMERIC (32, 16) NOT NULL,
    [STOREID]                NVARCHAR (10)    NOT NULL,
    [TENDEREDAMOUNT]         NUMERIC (32, 16) NOT NULL,
    [TENDEREDAMOUNTCUR]      NUMERIC (32, 16) NOT NULL,
    [TENDERTYPEID]           NVARCHAR (10)    NOT NULL,
    [TERMINALID]             NVARCHAR (10)    NOT NULL,
    [DATAAREAID]             NVARCHAR (4)     NOT NULL,
    [ROWVERSION]             TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1239242545_-1990270058] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [BATCHID] ASC, [TENDERTYPEID] ASC, [CARDTYPEID] ASC, [CURRENCY] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILPOSBATCHTENDERTRANS_REPLICATIONCOUNTER] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTER] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSLOCATION]...';


GO
CREATE TABLE [ax].[LOGISTICSLOCATION] (
    [RECID]            BIGINT        NOT NULL,
    [DESCRIPTION]      NVARCHAR (60) NOT NULL,
    [DUNSNUMBERRECID]  BIGINT        NOT NULL,
    [ISPOSTALADDRESS]  INT           NOT NULL,
    [LOCATIONID]       NVARCHAR (30) NOT NULL,
    [PARENTLOCATION]   BIGINT        NOT NULL,
    [CREATEDDATETIME]  DATETIME      NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_LOGISTICSLOCATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1358324402_760607746] UNIQUE NONCLUSTERED ([LOCATIONID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSLOCATION].[IX_LOGISTICSLOCATION_ISPOSTAL_PARENTLOC_RECID]...';


GO
CREATE NONCLUSTERED INDEX [IX_LOGISTICSLOCATION_ISPOSTAL_PARENTLOC_RECID]
    ON [ax].[LOGISTICSLOCATION]([ISPOSTALADDRESS] ASC, [PARENTLOCATION] ASC, [RECID] ASC)
    INCLUDE([LOCATIONID]);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONSALESTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONSALESTRANS] (
    [TAXGROUP]                       NVARCHAR (10)    NOT NULL,
    [TAXITEMGROUP]                   NVARCHAR (10)    NOT NULL,
    [TERMINALID]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                  NVARCHAR (44)    NOT NULL,
    [STORE]                          NVARCHAR (10)    NOT NULL,
    [BARCODE]                        NVARCHAR (80)    NOT NULL,
    [BUSINESSDATE]                   DATE             NOT NULL,
    [CATALOG]                        BIGINT           NOT NULL,
    [CHANNEL]                        BIGINT           NOT NULL,
    [COMMENT]                        NVARCHAR (60)    NOT NULL,
    [COSTAMOUNT]                     NUMERIC (32, 16) NOT NULL,
    [COUNTER]                        INT              NOT NULL,
    [CUSTACCOUNT]                    NVARCHAR (38)    NOT NULL,
    [CUSTDISCAMOUNT]                 NUMERIC (32, 16) NOT NULL,
    [CUSTINVOICEDISCAMOUNT]          NUMERIC (32, 16) NOT NULL,
    [DISCAMOUNT]                     NUMERIC (32, 16) NOT NULL,
    [DISCAMOUNTFROMSTDPRICE]         NUMERIC (32, 16) NOT NULL,
    [DISCGROUPID]                    NVARCHAR (10)    NOT NULL,
    [DISCOFFERID]                    NVARCHAR (40)    NOT NULL,
    [DISCOUNTAMOUNTFORPRINTING]      NUMERIC (32, 16) NOT NULL,
    [DLVMODE]                        NVARCHAR (10)    NOT NULL,
    [ELECTRONICDELIVERYEMAIL]        NVARCHAR (80)    NOT NULL,
    [ELECTRONICDELIVERYEMAILCONTENT] NVARCHAR (400)   NOT NULL,
    [GIFTCARD]                       INT              NOT NULL,
    [INFOCODEDISCAMOUNT]             NUMERIC (32, 16) NOT NULL,
    [INVENTBATCHID]                  NVARCHAR (20)    NOT NULL,
    [INVENTDIMID]                    NVARCHAR (20)    NOT NULL,
    [INVENTLOCATIONID]               NVARCHAR (10)    NOT NULL,
    [INVENTSERIALID]                 NVARCHAR (20)    NOT NULL,
    [INVENTSITEID]                   NVARCHAR (10)    NOT NULL,
    [INVENTTRANSID]                  NVARCHAR (20)    NOT NULL,
    [ITEMCORRECTEDLINE]              INT              NOT NULL,
    [ITEMID]                         NVARCHAR (20)    NOT NULL,
    [ITEMIDSCANNED]                  INT              NOT NULL,
    [ITEMPOSTINGGROUP]               NVARCHAR (20)    NOT NULL,
    [KEYBOARDITEMENTRY]              INT              NOT NULL,
    [LINEDSCAMOUNT]                  NUMERIC (32, 16) NOT NULL,
    [LINEMANUALDISCOUNTAMOUNT]       NUMERIC (32, 16) NOT NULL,
    [LINEMANUALDISCOUNTPERCENTAGE]   NUMERIC (32, 16) NOT NULL,
    [LINENUM]                        NUMERIC (32, 16) NOT NULL,
    [LINEWASDISCOUNTED]              INT              NOT NULL,
    [LINKEDITEMNOTORIGINAL]          INT              NOT NULL,
    [LISTINGID]                      NVARCHAR (50)    NOT NULL,
    [LOGISTICSPOSTALADDRESS]         BIGINT           NOT NULL,
    [LOYALTYDISCAMOUNT_RU]           NUMERIC (32, 16) NOT NULL,
    [LOYALTYDISCPCT_RU]              NUMERIC (32, 16) NOT NULL,
    [NETAMOUNT]                      NUMERIC (32, 16) NOT NULL,
    [NETAMOUNTINCLTAX]               NUMERIC (32, 16) NOT NULL,
    [NETPRICE]                       NUMERIC (32, 16) NOT NULL,
    [ORIGINALOFLINKEDITEMLIST]       INT              NOT NULL,
    [ORIGINALPRICE]                  NUMERIC (32, 16) NOT NULL,
    [ORIGINALTAXGROUP]               NVARCHAR (10)    NOT NULL,
    [ORIGINALTAXITEMGROUP]           NVARCHAR (10)    NOT NULL,
    [PERIODICDISCAMOUNT]             NUMERIC (32, 16) NOT NULL,
    [PERIODICDISCGROUP]              NVARCHAR (10)    NOT NULL,
    [PERIODICDISCTYPE]               INT              NOT NULL,
    [PERIODICPERCENTAGEDISCOUNT]     NUMERIC (32, 16) NOT NULL,
    [PRESCRIPTIONID]                 NVARCHAR (10)    NOT NULL,
    [PRICE]                          NUMERIC (32, 16) NOT NULL,
    [PRICECHANGE]                    INT              NOT NULL,
    [PRICEINBARCODE]                 INT              NOT NULL,
    [PURCHID]                        NVARCHAR (20)    NOT NULL,
    [QTY]                            NUMERIC (32, 16) NOT NULL,
    [RECEIPTDATEREQUESTED]           DATE             NOT NULL,
    [RECEIPTID]                      NVARCHAR (18)    NOT NULL,
    [REPLICATED]                     INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN]   INT              IDENTITY (1, 1) NOT NULL,
    [RETURNLINENUM]                  NUMERIC (32, 16) NOT NULL,
    [RETURNNOSALE]                   INT              NOT NULL,
    [RETURNQTY]                      NUMERIC (32, 16) NOT NULL,
    [RETURNSTORE]                    NVARCHAR (10)    NOT NULL,
    [RETURNTERMINALID]               NVARCHAR (10)    NOT NULL,
    [RETURNTRANSACTIONID]            NVARCHAR (44)    NOT NULL,
    [RFIDTAGID]                      NVARCHAR (24)    NOT NULL,
    [SCALEITEM]                      INT              NOT NULL,
    [SECTION]                        NVARCHAR (10)    NOT NULL,
    [SHELF]                          NVARCHAR (10)    NOT NULL,
    [SHIFT]                          NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                      DATE             NOT NULL,
    [SHIPPINGDATEREQUESTED]          DATE             NOT NULL,
    [STAFFID]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                  NVARCHAR (25)    NOT NULL,
    [STDNETPRICE]                    NUMERIC (32, 16) NOT NULL,
    [TAXAMOUNT]                      NUMERIC (32, 16) NOT NULL,
    [TOTALDISCAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [TOTALDISCINFOCODELINENUM]       NUMERIC (32, 16) NOT NULL,
    [TOTALDISCPCT]                   NUMERIC (32, 16) NOT NULL,
    [TOTALROUNDEDAMOUNT]             NUMERIC (32, 16) NOT NULL,
    [TRANSACTIONCODE]                INT              NOT NULL,
    [TRANSACTIONSTATUS]              INT              NOT NULL,
    [TRANSDATE]                      DATE             NOT NULL,
    [TRANSTIME]                      INT              NOT NULL,
    [UNIT]                           NVARCHAR (10)    NOT NULL,
    [UNITPRICE]                      NUMERIC (32, 16) NOT NULL,
    [UNITQTY]                        NUMERIC (32, 16) NOT NULL,
    [VARIANTID]                      NVARCHAR (10)    NOT NULL,
    [WEIGHTITEM]                     INT              NOT NULL,
    [WEIGHTMANUALLYENTERED]          INT              NOT NULL,
    [CUSTACCOUNTASYNC]               NVARCHAR (38)    NOT NULL,
    [FULFILLMENTSTOREID]             NVARCHAR (10)    NOT NULL,
    [CREATEDDATETIME]                DATETIME         NOT NULL,
    [MODIFIEDDATETIME]               DATETIME         NOT NULL,
    [CREATEDTRANSACTIONID]           BIGINT           NOT NULL,
    [MODIFIEDTRANSACTIONID]          BIGINT           NOT NULL,
    [DATAAREAID]                     NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                     TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-351364655_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONSALESTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONSALESTRANS].[IX_RETAILTRANSACTIONSALESTRANS_INVENTDIMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONSALESTRANS_INVENTDIMID]
    ON [ax].[RETAILTRANSACTIONSALESTRANS]([INVENTDIMID] ASC)
    INCLUDE([TRANSACTIONID], [ITEMID], [QTY], [STORE], [TERMINALID]);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONSALESTRANS].[IX_RETAILTRANSACTIONSALESTRANS_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONSALESTRANS_TRANSACTIONID]
    ON [ax].[RETAILTRANSACTIONSALESTRANS]([TRANSACTIONID] ASC, [CREATEDDATETIME] ASC)
    INCLUDE([BARCODE], [COMMENT], [CUSTACCOUNT], [DISCAMOUNT], [DLVMODE], [FULFILLMENTSTOREID], [GIFTCARD], [INVENTLOCATIONID], [INVENTSERIALID], [INVENTSITEID], [ITEMID], [LINEDSCAMOUNT], [LINEMANUALDISCOUNTAMOUNT], [LINEMANUALDISCOUNTPERCENTAGE], [LINENUM], [LISTINGID], [LOGISTICSPOSTALADDRESS], [NETAMOUNT], [NETAMOUNTINCLTAX], [ORIGINALPRICE], [PERIODICDISCAMOUNT], [PERIODICPERCENTAGEDISCOUNT], [PRICE], [QTY], [RECEIPTID], [RETURNLINENUM], [RETURNNOSALE], [RETURNQTY], [RETURNSTORE], [RETURNTERMINALID], [RETURNTRANSACTIONID], [STORE], [TAXAMOUNT], [TAXGROUP], [TAXITEMGROUP], [TERMINALID], [TOTALDISCAMOUNT], [TOTALDISCPCT], [TRANSACTIONSTATUS], [TRANSDATE], [TRANSTIME], [UNIT], [VARIANTID], [DATAAREAID]);


GO
PRINT N'Creating [ax].[RETAILCHANNELTABLE_IN]...';


GO
CREATE TABLE [ax].[RETAILCHANNELTABLE_IN] (
    [RECID]                BIGINT        NOT NULL,
    [INTERSTATETAXGROUP]   NVARCHAR (10) NOT NULL,
    [RETAILCHANNELTABLE]   BIGINT        NOT NULL,
    [TAXGROUPDATAAREAID]   NVARCHAR (10) NOT NULL,
    [ISAPPLYINTERSTATETAX] INT           NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILCHANNELTABLE_IN_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_702564154_1874758675] UNIQUE CLUSTERED ([RETAILCHANNELTABLE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONORDERINVOICETRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS] (
    [AMOUNTCUR]                    NUMERIC (32, 16) NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [INVOICEID]                    NVARCHAR (20)    NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SALESID]                      NVARCHAR (20)    NOT NULL,
    [SALESORDERINVOICETYPE]        INT              NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_751503198_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONORDERINVOICETRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGTRANSLATION]...';


GO
CREATE TABLE [ax].[RETAILPUBCATALOGTRANSLATION] (
    [RECID]        BIGINT          NOT NULL,
    [CATALOG]      BIGINT          NOT NULL,
    [DESCRIPTION]  NVARCHAR (128)  NOT NULL,
    [FRIENDLYNAME] NVARCHAR (60)   NOT NULL,
    [IMAGE]        NVARCHAR (1999) NOT NULL,
    [LANGUAGE]     NVARCHAR (7)    NOT NULL,
    [ORIGIN]       BIGINT          NOT NULL,
    [ROWVERSION]   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_RETAILPUBCATALOGTRANSLATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-897518270_-162312163] UNIQUE NONCLUSTERED ([ORIGIN] ASC),
    CONSTRAINT [I_-897518270_-1799725725] UNIQUE NONCLUSTERED ([CATALOG] ASC, [LANGUAGE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILEFDOCCONTINGENCYMODE]...';


GO
CREATE TABLE [ax].[RETAILEFDOCCONTINGENCYMODE] (
    [CHANNEL]                      BIGINT         NOT NULL,
    [CONTINGENCYMODE]              INT            NOT NULL,
    [CONTINGENCYREASON]            NVARCHAR (255) NOT NULL,
    [DATETIME]                     DATETIME       NOT NULL,
    [DATETIMETZID]                 INT            NOT NULL,
    [DATETIMEOFFSET]               BIGINT         NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT            IDENTITY (1, 1) NOT NULL,
    [STAFF]                        NVARCHAR (25)  NOT NULL,
    [STOREID]                      NVARCHAR (10)  NOT NULL,
    [TERMINALID]                   NVARCHAR (10)  NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)   NOT NULL,
    [ROWVERSION]                   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_-1634362540_-680585927] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STOREID] ASC, [TERMINALID] ASC, [DATETIME] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILEFDOCCONTINGENCYMODE_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT]...';


GO
CREATE TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT] (
    [RECID]                  BIGINT    NOT NULL,
    [PRODUCT]                BIGINT    NOT NULL,
    [TRACKINGDIMENSIONGROUP] BIGINT    NOT NULL,
    [ROWVERSION]             TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESTRACKINGDIMENSIONGROUPPRODUCT_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1127445604_1005329023] UNIQUE CLUSTERED ([PRODUCT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTHEMEACCENT]...';


GO
CREATE TABLE [ax].[RETAILTHEMEACCENT] (
    [RECID]      BIGINT        NOT NULL,
    [ACCENTID]   NVARCHAR (20) NOT NULL,
    [NAME]       NVARCHAR (60) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTHEMEACCENT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYTIER]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYTIER] (
    [RECID]             BIGINT           NOT NULL,
    [AFFILIATION]       BIGINT           NOT NULL,
    [TIERID]            NVARCHAR (64)    NOT NULL,
    [TIERLEVEL]         NUMERIC (32, 16) NOT NULL,
    [VALIDDATEINTERVAL] NVARCHAR (10)    NOT NULL,
    [ROWVERSION]        TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYTIER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1384088785_-1841329999] UNIQUE NONCLUSTERED ([AFFILIATION] ASC, [TIERLEVEL] ASC),
    CONSTRAINT [I_-1384088785_-2103951646] UNIQUE NONCLUSTERED ([AFFILIATION] ASC, [TIERID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOFFLINESCOPE]...';


GO
CREATE TABLE [ax].[RETAILOFFLINESCOPE] (
    [RECID]            BIGINT         NOT NULL,
    [DESCRIPTION]      NVARCHAR (256) NOT NULL,
    [LASTSYNCTIME]     DATETIME       NOT NULL,
    [LASTSYNCTIMETZID] INT            NOT NULL,
    [SYNCDIRECTION]    INT            NOT NULL,
    [SYNCFREQUENCY]    INT            NOT NULL,
    [ROWVERSION]       TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILOFFLINESCOPE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1144720460_-1781313101] UNIQUE NONCLUSTERED ([DESCRIPTION] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTIMAGE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTIMAGE] (
    [RECID]        BIGINT          NOT NULL,
    [DEFAULTIMAGE] INT             NOT NULL,
    [MEDIUMSIZE]   VARBINARY (MAX) NULL,
    [REFRECORD]    BIGINT          NOT NULL,
    [ROWVERSION]   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTIMAGE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTITEMGROUPITEM]...';


GO
CREATE TABLE [ax].[INVENTITEMGROUPITEM] (
    [RECID]               BIGINT        NOT NULL,
    [ITEMDATAAREAID]      NVARCHAR (10) NOT NULL,
    [ITEMGROUPDATAAREAID] NVARCHAR (10) NOT NULL,
    [ITEMGROUPID]         NVARCHAR (10) NOT NULL,
    [ITEMID]              NVARCHAR (20) NOT NULL,
    [ROWVERSION]          TIMESTAMP     NOT NULL,
    CONSTRAINT [I_INVENTITEMGROUPITEM_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-313455423_1429128816] UNIQUE CLUSTERED ([ITEMID] ASC, [ITEMDATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTORETENDERTYPECARDTABLE]...';


GO
CREATE TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE] (
    [RECID]                     BIGINT           NOT NULL,
    [ACCOUNTTYPE]               INT              NOT NULL,
    [ALLOWMANUALINPUT]          INT              NOT NULL,
    [CARDFEE]                   NUMERIC (32, 16) NOT NULL,
    [CARDNUMBERSWIPED]          INT              NOT NULL,
    [CARDTYPEID]                NVARCHAR (10)    NOT NULL,
    [CASHBACKLIMIT]             NUMERIC (32, 16) NOT NULL,
    [CHANNEL]                   BIGINT           NOT NULL,
    [CHECKEXPIREDDATE]          INT              NOT NULL,
    [CHECKMODULUS]              INT              NOT NULL,
    [COUNTINGREQUIRED]          INT              NOT NULL,
    [ENTERFLEETINFO]            INT              NOT NULL,
    [MANUALAUTHORIZATION]       INT              NOT NULL,
    [MAXNORMALDIFFERENCEAMOUNT] NUMERIC (32, 16) NOT NULL,
    [NAME]                      NVARCHAR (60)    NOT NULL,
    [PROCESSLOCALLY]            INT              NOT NULL,
    [SAMECARDALLOWED]           INT              NOT NULL,
    [TENDERTYPEID]              NVARCHAR (10)    NOT NULL,
    [MODIFIEDDATETIME]          DATETIME         NOT NULL,
    [DATAAREAID]                NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1457976754_939570618] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [TENDERTYPEID] ASC, [CARDTYPEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTLOCATION]...';


GO
CREATE TABLE [ax].[INVENTLOCATION] (
    [RECID]              BIGINT        NOT NULL,
    [INVENTLOCATIONID]   NVARCHAR (10) NOT NULL,
    [INVENTLOCATIONTYPE] INT           NOT NULL,
    [INVENTSITEID]       NVARCHAR (10) NOT NULL,
    [NAME]               NVARCHAR (60) NOT NULL,
    [DATAAREAID]         NVARCHAR (4)  NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [I_448739807_1141804996] PRIMARY KEY CLUSTERED ([INVENTLOCATIONID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ACCOUNTANTLOGISTICSLOCATION_BR]...';


GO
CREATE TABLE [ax].[ACCOUNTANTLOGISTICSLOCATION_BR] (
    [RECID]           BIGINT    NOT NULL,
    [ACCOUNTANT]      BIGINT    NOT NULL,
    [ISDEFAULT]       INT       NOT NULL,
    [ISPOSTALADDRESS] INT       NOT NULL,
    [ISPRIMARY]       INT       NOT NULL,
    [ISPRIVATE]       INT       NOT NULL,
    [LOCATION]        BIGINT    NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_ACCOUNTANTLOGISTICSLOCATION_BR_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1306553661_1643352582] UNIQUE CLUSTERED ([ACCOUNTANT] ASC, [LOCATION] ASC)
);


GO
PRINT N'Creating [ax].[INVENTITEMGROUP]...';


GO
CREATE TABLE [ax].[INVENTITEMGROUP] (
    [RECID]       BIGINT        NOT NULL,
    [ITEMGROUPID] NVARCHAR (10) NOT NULL,
    [NAME]        NVARCHAR (60) NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1805098484_2044944007] PRIMARY KEY CLUSTERED ([ITEMGROUPID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[DOCUREF]...';


GO
CREATE TABLE [ax].[DOCUREF] (
    [RECID]        BIGINT        NOT NULL,
    [REFCOMPANYID] NVARCHAR (10) NOT NULL,
    [REFRECID]     BIGINT        NOT NULL,
    [REFTABLEID]   INT           NOT NULL,
    [VALUERECID]   BIGINT        NOT NULL,
    [ROWVERSION]   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1415236568_2053811909] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] (
    [ACCOUNTTYPE]                  INT              NOT NULL,
    [AMOUNT]                       NUMERIC (32, 16) NOT NULL,
    [BUSINESSDATE]                 DATE             NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [COUNTER]                      INT              NOT NULL,
    [INCOMEEXEPENSEACCOUNT]        NVARCHAR (10)    NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [RECEIPTID]                    NVARCHAR (18)    NOT NULL,
    [REPLICATED]                   INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SHIFT]                        NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                    DATE             NOT NULL,
    [STAFF]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                NVARCHAR (25)    NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1072989706_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONINCOMEEXPENSETRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESINTVALUE]...';


GO
CREATE TABLE [ax].[ECORESINTVALUE] (
    [RECID]            BIGINT    NOT NULL,
    [INTUNITOFMEASURE] BIGINT    NULL,
    [INTVALUE]         INT       NULL,
    [ROWVERSION]       TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESINTVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONADDRESSTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS] (
    [CHANNEL]                      BIGINT           NOT NULL,
    [CITY]                         NVARCHAR (60)    NOT NULL,
    [COUNTRYREGIONID]              NVARCHAR (10)    NOT NULL,
    [COUNTY]                       NVARCHAR (10)    NOT NULL,
    [DELIVERYNAME]                 NVARCHAR (100)   NOT NULL,
    [DISTRICTNAME]                 NVARCHAR (60)    NOT NULL,
    [EMAIL]                        NVARCHAR (80)    NOT NULL,
    [EMAILCONTENT]                 NVARCHAR (400)   NOT NULL,
    [PHONE]                        NVARCHAR (20)    NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SALELINENUM]                  NUMERIC (32, 16) NOT NULL,
    [SALESNAME]                    NVARCHAR (60)    NOT NULL,
    [STATE]                        NVARCHAR (10)    NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [STREET]                       NVARCHAR (250)   NOT NULL,
    [STREETNUMBER]                 NVARCHAR (20)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [ZIPCODE]                      NVARCHAR (10)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_2016080543_-1586875080] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [SALELINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONADDRESSTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONADDRESSTRANS].[IX_RETAILTRANSACTIONADDRESSTRANS_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONADDRESSTRANS_TRANSACTIONID]
    ON [ax].[RETAILTRANSACTIONADDRESSTRANS]([TRANSACTIONID] ASC);


GO
PRINT N'Creating [ax].[RETAILSTORETENDERTYPETABLE]...';


GO
CREATE TABLE [ax].[RETAILSTORETENDERTYPETABLE] (
    [RECID]                      BIGINT           NOT NULL,
    [CHANGETENDERID]             NVARCHAR (10)    NOT NULL,
    [ABOVEMINIMUMTENDERID]       NVARCHAR (10)    NOT NULL,
    [ACCOUNTTYPE]                INT              NOT NULL,
    [ALLOWFLOAT]                 INT              NOT NULL,
    [ALLOWOVERTENDER]            INT              NOT NULL,
    [ALLOWRETURNNEGATIVE]        INT              NOT NULL,
    [ALLOWUNDERTENDER]           INT              NOT NULL,
    [ASKFORDATE]                 INT              NOT NULL,
    [CHANGELINEONRECEIPT]        NVARCHAR (20)    NOT NULL,
    [CHANNEL]                    BIGINT           NOT NULL,
    [CHECKPAYEE]                 NVARCHAR (40)    NOT NULL,
    [COMPRESSPAYMENTENTRIES]     INT              NOT NULL,
    [COUNTINGREQUIRED]           INT              NOT NULL,
    [ENDORSECHECK]               INT              NOT NULL,
    [ENDORSMENTLINE1]            NVARCHAR (40)    NOT NULL,
    [ENDORSMENTLINE2]            NVARCHAR (40)    NOT NULL,
    [FISCALPRINTERTENDERTYPE_BR] NVARCHAR (20)    NOT NULL,
    [FRONTOFCHECK]               INT              NOT NULL,
    [FUNCTION]                   INT              NOT NULL,
    [LINENUMINTRANSACTION]       NVARCHAR (10)    NOT NULL,
    [MAXCOUNTINGDIFFERENCE]      NUMERIC (32, 16) NOT NULL,
    [MAXIMUMAMOUNTALLOWED]       NUMERIC (32, 16) NOT NULL,
    [MAXIMUMAMOUNTENTERED]       NUMERIC (32, 16) NOT NULL,
    [MAXIMUMOVERTENDERAMOUNT]    NUMERIC (32, 16) NOT NULL,
    [MAXRECOUNT]                 INT              NOT NULL,
    [MINIMUMAMOUNTALLOWED]       NUMERIC (32, 16) NOT NULL,
    [MINIMUMAMOUNTENTERED]       NUMERIC (32, 16) NOT NULL,
    [MINIMUMCHANGEAMOUNT]        NUMERIC (32, 16) NOT NULL,
    [MULTIPLYINTENDEROPERATIONS] INT              NOT NULL,
    [NAME]                       NVARCHAR (60)    NOT NULL,
    [OPENDRAWER]                 INT              NOT NULL,
    [PAYACCOUNTBILL]             INT              NOT NULL,
    [POSCOUNTENTRIES]            INT              NOT NULL,
    [POSOPERATION]               INT              NOT NULL,
    [ROUNDING]                   NUMERIC (32, 16) NOT NULL,
    [ROUNDINGMETHOD]             INT              NOT NULL,
    [SEEKAUTHORIZATION]          INT              NOT NULL,
    [SIGCAPENABLED]              INT              NOT NULL,
    [SIGCAPMINAMOUNT]            NUMERIC (32, 16) NOT NULL,
    [SLIPBACKINPRINTER]          NVARCHAR (20)    NOT NULL,
    [SLIPFRONTINPRINTER]         NVARCHAR (20)    NOT NULL,
    [TAKENTOBANK]                INT              NOT NULL,
    [TAKENTOSAFE]                INT              NOT NULL,
    [TENDERTYPEID]               NVARCHAR (10)    NOT NULL,
    [UNDERTENDERAMOUNT]          NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]                 NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                 TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1697922944_-828827534] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [TENDERTYPEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCOLOR]...';


GO
CREATE TABLE [ax].[ECORESCOLOR] (
    [RECID]      BIGINT        NOT NULL,
    [NAME]       NVARCHAR (10) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESCOLOR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1935030618_516664720] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[ECORESTEXTVALUETRANSLATION]...';


GO
CREATE TABLE [ax].[ECORESTEXTVALUETRANSLATION] (
    [RECID]          BIGINT          NOT NULL,
    [LANGUAGE]       NVARCHAR (7)    NOT NULL,
    [TEXTVALUE]      NVARCHAR (1999) NOT NULL,
    [TEXTVALUETABLE] BIGINT          NOT NULL,
    [ROWVERSION]     TIMESTAMP       NOT NULL,
    CONSTRAINT [I_ECORESTEXTVALUETRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1489278364_1876204403] UNIQUE CLUSTERED ([TEXTVALUETABLE] ASC, [LANGUAGE] ASC)
);


GO
PRINT N'Creating [ax].[TAXINFORMATIONLEGALENTITY_IN]...';


GO
CREATE TABLE [ax].[TAXINFORMATIONLEGALENTITY_IN] (
    [RECID]       BIGINT        NOT NULL,
    [LEGALENTITY] BIGINT        NOT NULL,
    [PANNUMBER]   NVARCHAR (10) NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_TAXINFORMATIONLEGALENTITY_IN_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_2121961721_-427987640] UNIQUE CLUSTERED ([LEGALENTITY] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE]...';


GO
CREATE TABLE [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE] (
    [RECID]          BIGINT        NOT NULL,
    [ATTRIBUTE]      BIGINT        NOT NULL,
    [ATTRIBUTEVALUE] BIGINT        NOT NULL,
    [CATEGORY]       BIGINT        NOT NULL,
    [HOSTCHANNEL]    BIGINT        NOT NULL,
    [KEYNAME]        NVARCHAR (80) NOT NULL,
    [ORIGINID]       BIGINT        NOT NULL,
    [ROWVERSION]     TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1690411622_-379952457] UNIQUE NONCLUSTERED ([HOSTCHANNEL] ASC, [CATEGORY] ASC, [KEYNAME] ASC),
    CONSTRAINT [I_1690411622_-975995985] UNIQUE NONCLUSTERED ([HOSTCHANNEL] ASC, [CATEGORY] ASC, [ATTRIBUTE] ASC)
);


GO
PRINT N'Creating [ax].[ECORESFLOATVALUE]...';


GO
CREATE TABLE [ax].[ECORESFLOATVALUE] (
    [RECID]              BIGINT           NOT NULL,
    [FLOATUNITOFMEASURE] BIGINT           NULL,
    [FLOATVALUE]         NUMERIC (32, 16) NULL,
    [ROWVERSION]         TIMESTAMP        NOT NULL,
    CONSTRAINT [I_ECORESFLOATVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOG]...';


GO
CREATE TABLE [ax].[RETAILPUBCATALOG] (
    [RECID]                 BIGINT       NOT NULL,
    [ENABLESNAPSHOT]        INT          NOT NULL,
    [ORIGIN]                BIGINT       NOT NULL,
    [OWNER]                 BIGINT       NOT NULL,
    [PUBLISHEDDATETIME]     DATETIME     NOT NULL,
    [PUBLISHEDDATETIMETZID] INT          NOT NULL,
    [PUBLISHEDVALIDFROM]    DATE         NOT NULL,
    [PUBLISHEDVALIDTO]      DATE         NOT NULL,
    [STATE]                 INT          NOT NULL,
    [VALIDFROM]             DATE         NOT NULL,
    [VALIDFROMDATETIME]     DATETIME     NOT NULL,
    [VALIDFROMDATETIMETZID] INT          NOT NULL,
    [VALIDTO]               DATE         NOT NULL,
    [CREATEDDATETIME]       DATETIME     NOT NULL,
    [MODIFIEDDATETIME]      DATETIME     NOT NULL,
    [MODIFIEDBY]            NVARCHAR (8) NOT NULL,
    [ROWVERSION]            TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILPUBCATALOG_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1981983829_-162312163] UNIQUE CLUSTERED ([ORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOG].[IX_RETAILPUBCATALOG_VALIDFROM_VALIDTO]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBCATALOG_VALIDFROM_VALIDTO]
    ON [ax].[RETAILPUBCATALOG]([VALIDFROM] ASC, [VALIDTO] ASC)
    INCLUDE([ORIGIN]);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONSAFETENDERTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS] (
    [AMOUNTCUR]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTCURPOS]                 NUMERIC (32, 16) NOT NULL,
    [AMOUNTMST]                    NUMERIC (32, 16) NOT NULL,
    [AMOUNTMSTPOS]                 NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDERED]               NUMERIC (32, 16) NOT NULL,
    [AMOUNTTENDEREDPOS]            NUMERIC (32, 16) NOT NULL,
    [BUSINESSDATE]                 DATE             NOT NULL,
    [CARDORACCOUNT]                NVARCHAR (30)    NOT NULL,
    [CARDTYPEID]                   NVARCHAR (10)    NOT NULL,
    [CHANGELINE]                   INT              NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [COUNTER]                      NUMERIC (32, 16) NOT NULL,
    [CURRENCY]                     NVARCHAR (3)     NOT NULL,
    [EXCHRATE]                     NUMERIC (32, 16) NOT NULL,
    [EXCHRATEMST]                  NUMERIC (32, 16) NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [MANAGERSKEYLIVE]              INT              NOT NULL,
    [MESSAGENUM]                   INT              NOT NULL,
    [QTY]                          NUMERIC (32, 16) NOT NULL,
    [REPLICATED]                   INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SHIFT]                        NVARCHAR (10)    NOT NULL,
    [SHIFTDATE]                    DATE             NOT NULL,
    [STAFF]                        NVARCHAR (25)    NOT NULL,
    [STATEMENTCODE]                NVARCHAR (25)    NOT NULL,
    [STATEMENTID]                  NVARCHAR (20)    NOT NULL,
    [STATUSTYPE]                   INT              NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TENDERTYPE]                   NVARCHAR (10)    NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TRANSACTIONSTATUS]            INT              NOT NULL,
    [TRANSDATE]                    DATE             NOT NULL,
    [TRANSTIME]                    INT              NOT NULL,
    [CREATEDDATETIME]              DATETIME         NOT NULL,
    [MODIFIEDDATETIME]             DATETIME         NOT NULL,
    [CREATEDTRANSACTIONID]         BIGINT           NOT NULL,
    [MODIFIEDTRANSACTIONID]        BIGINT           NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-2051633402_133413727] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [STATEMENTID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONSAFETENDERTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLABELCHANGEJOURNALTRANS]...';


GO
CREATE TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS] (
    [RECID]            BIGINT           NOT NULL,
    [CONFIRMED]        INT              NOT NULL,
    [ITEMID]           NVARCHAR (20)    NOT NULL,
    [JOURNALNUM]       NVARCHAR (20)    NOT NULL,
    [LINENUM]          NUMERIC (32, 16) NOT NULL,
    [PRICE]            NUMERIC (32, 16) NOT NULL,
    [PRICEVALIDONDATE] DATE             NOT NULL,
    [STOREID]          NVARCHAR (10)    NOT NULL,
    [VARIANTID]        NVARCHAR (10)    NOT NULL,
    [DATAAREAID]       NVARCHAR (4)     NOT NULL,
    [ROWVERSION]       TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILLABELCHANGEJOURNALTRANS_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-595316974_-1543235722] UNIQUE NONCLUSTERED ([JOURNALNUM] ASC, [ITEMID] ASC, [VARIANTID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-595316974_-1971274046] UNIQUE CLUSTERED ([JOURNALNUM] ASC, [LINENUM] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] (
    [CHANNEL]                      BIGINT           NOT NULL,
    [FISCALVALUE]                  INT              NOT NULL,
    [INCLUDEDTAX]                  INT              NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [RETAINEDTAX]                  INT              NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TAXAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [TAXAMOUNTOTHER]               NUMERIC (32, 16) NOT NULL,
    [TAXATIONCODE]                 NVARCHAR (3)     NOT NULL,
    [TAXATIONORIGIN]               INT              NOT NULL,
    [TAXBASEAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [TAXBASEAMOUNTEXEMPT]          NUMERIC (32, 16) NOT NULL,
    [TAXBASEAMOUNTOTHER]           NUMERIC (32, 16) NOT NULL,
    [TAXCODE]                      NVARCHAR (10)    NOT NULL,
    [TAXVALUE]                     NUMERIC (32, 16) NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TYPE]                         INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1267310048_292746041] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [TAXCODE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALDOCUMENTTAXTRANS_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[OMHIERARCHYPURPOSE]...';


GO
CREATE TABLE [ax].[OMHIERARCHYPURPOSE] (
    [RECID]            BIGINT    NOT NULL,
    [HIERARCHYPURPOSE] INT       NOT NULL,
    [HIERARCHYTYPE]    BIGINT    NOT NULL,
    [ISDEFAULT]        INT       NOT NULL,
    [ROWVERSION]       TIMESTAMP NOT NULL,
    CONSTRAINT [I_OMHIERARCHYPURPOSE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_269376623_-1726555760] UNIQUE CLUSTERED ([HIERARCHYPURPOSE] ASC, [HIERARCHYTYPE] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION] (
    [RECID]                       BIGINT          NOT NULL,
    [DESCRIPTION]                 NVARCHAR (1000) NOT NULL,
    [LANGUAGEID]                  NVARCHAR (7)    NOT NULL,
    [NAME]                        NVARCHAR (60)   NOT NULL,
    [PRODUCTMASTERDIMENSIONVALUE] BIGINT          NOT NULL,
    [ROWVERSION]                  TIMESTAMP       NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTMASTERDIMVALUETRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1147335506_-973044609] UNIQUE CLUSTERED ([PRODUCTMASTERDIMENSIONVALUE] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESREFERENCEVALUE]...';


GO
CREATE TABLE [ax].[ECORESREFERENCEVALUE] (
    [RECID]      BIGINT    NOT NULL,
    [REFFIELDID] INT       NULL,
    [REFRECID]   BIGINT    NULL,
    [REFTABLEID] INT       NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESREFERENCEVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCONFIGURATION_BR]...';


GO
CREATE TABLE [ax].[RETAILCONFIGURATION_BR] (
    [RECID]      BIGINT        NOT NULL,
    [PURPOSE]    INT           NOT NULL,
    [TYPE]       INT           NOT NULL,
    [VALUE]      NVARCHAR (20) NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILCONFIGURATION_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESINSTANCEVALUE]...';


GO
CREATE TABLE [ax].[ECORESINSTANCEVALUE] (
    [RECID]                BIGINT    NOT NULL,
    [INSTANCERELATIONTYPE] BIGINT    NOT NULL,
    [RELATIONTYPE]         BIGINT    NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESINSTANCEVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUTIMAGEZONE]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUTIMAGEZONE] (
    [RECID]      BIGINT    NOT NULL,
    [PICTUREID]  INT       NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILTILLLAYOUTIMAGEZONE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILIDENTITYPROVIDER]...';


GO
CREATE TABLE [ax].[RETAILIDENTITYPROVIDER] (
    [RECID]      BIGINT         NOT NULL,
    [NAME]       NVARCHAR (50)  NOT NULL,
    [ISSUER]     NVARCHAR (500) NOT NULL,
    [TYPE]       INT            NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILIDENTITYPROVIDER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1367816050_1261055018] UNIQUE NONCLUSTERED ([ISSUER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKEYBOARDMAPPINGTRANS]...';


GO
CREATE TABLE [ax].[RETAILKEYBOARDMAPPINGTRANS] (
    [RECID]             BIGINT          NOT NULL,
    [ACTION]            INT             NOT NULL,
    [ACTIONPROPERTY]    NVARCHAR (1000) NOT NULL,
    [ASCIIVALUE]        INT             NOT NULL,
    [KEYBOARDMAPPINGID] NVARCHAR (10)   NOT NULL,
    [KEYCHAR]           NCHAR (1)       NOT NULL,
    [ROWVERSION]        TIMESTAMP       NOT NULL,
    CONSTRAINT [I_-1979216936_-159151230] PRIMARY KEY CLUSTERED ([KEYBOARDMAPPINGID] ASC, [ASCIIVALUE] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION] (
    [RECID]           BIGINT         NOT NULL,
    [COUNTRYREGIONID] NVARCHAR (10)  NOT NULL,
    [LANGUAGEID]      NVARCHAR (7)   NOT NULL,
    [LONGNAME]        NVARCHAR (255) NOT NULL,
    [SHORTNAME]       NVARCHAR (255) NOT NULL,
    [ROWVERSION]      TIMESTAMP      NOT NULL,
    CONSTRAINT [I_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_96499510_-1112445765] UNIQUE CLUSTERED ([COUNTRYREGIONID] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTE]...';


GO
CREATE TABLE [ax].[ECORESATTRIBUTE] (
    [RECID]             BIGINT        NOT NULL,
    [ATTRIBUTEMODIFIER] INT           NOT NULL,
    [ATTRIBUTETYPE]     BIGINT        NOT NULL,
    [NAME]              NVARCHAR (60) NOT NULL,
    [ROWVERSION]        TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESATTRIBUTE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPOSPERMISSIONGROUP]...';


GO
CREATE TABLE [ax].[RETAILPOSPERMISSIONGROUP] (
    [RECID]                                 BIGINT           NOT NULL,
    [ALLOWBLINDCLOSE]                       INT              NOT NULL,
    [ALLOWCHANGENOVOID]                     INT              NOT NULL,
    [ALLOWCHANGEPERIPHERALSTATION]          INT              NOT NULL,
    [ALLOWCREATEORDER]                      INT              NOT NULL,
    [ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU] INT              NOT NULL,
    [ALLOWEDITORDER]                        INT              NOT NULL,
    [ALLOWFLOATINGTENDERDECLARATION]        INT              NOT NULL,
    [ALLOWKITDISASSEMBLY]                   INT              NOT NULL,
    [ALLOWMULTIPLELOGINS]                   INT              NOT NULL,
    [ALLOWMULTIPLESHIFTLOGON]               INT              NOT NULL,
    [ALLOWNOTSAMEDATERETURN_RU]             INT              NOT NULL,
    [ALLOWOPENDRAWERONLY]                   INT              NOT NULL,
    [ALLOWPASSWORDCHANGE]                   INT              NOT NULL,
    [ALLOWPRICEOVERRIDE]                    INT              NOT NULL,
    [ALLOWRESETPASSWORD]                    INT              NOT NULL,
    [ALLOWRETRIEVEORDER]                    INT              NOT NULL,
    [ALLOWRETURNOFNONRETURNABLEITEM_RU]     INT              NOT NULL,
    [ALLOWSALESTAXCHANGE]                   INT              NOT NULL,
    [ALLOWTENDERDECLARATION]                INT              NOT NULL,
    [ALLOWTRANSACTIONSUSPENSION]            INT              NOT NULL,
    [ALLOWTRANSACTIONVOIDING]               INT              NOT NULL,
    [ALLOWXREPORTPRINTING]                  INT              NOT NULL,
    [ALLOWZREPORTPRINTING]                  INT              NOT NULL,
    [MANAGEDEVICE]                          INT              NOT NULL,
    [MANAGERPRIVILEGES]                     INT              NOT NULL,
    [MAXIMUMDISCOUNTPCT]                    NUMERIC (32, 16) NOT NULL,
    [MAXLINEDISCOUNTAMOUNT]                 NUMERIC (32, 16) NOT NULL,
    [MAXLINERETURNAMOUNT]                   NUMERIC (32, 16) NOT NULL,
    [MAXTOTALDISCOUNTAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [MAXTOTALDISCOUNTPCT]                   NUMERIC (32, 16) NOT NULL,
    [MAXTOTALRETURNAMOUNT]                  NUMERIC (32, 16) NOT NULL,
    [NAME]                                  NVARCHAR (60)    NOT NULL,
    [POSPERMISSIONGROUPID]                  NVARCHAR (10)    NOT NULL,
    [USEHANDHELD]                           INT              NOT NULL,
    [VIEWTIMECLOCKENTRIES]                  INT              NOT NULL,
    [ALLOWMANAGESHAREDSHIFT]                INT              NOT NULL,
    [ALLOWSETUPLABELPRINTER]                INT              NOT NULL,
    [ALLOWUSESHAREDSHIFT]                   INT              NOT NULL,
    [ALLOWTASKGUIDES]                       INT              NOT NULL,
    [ROWVERSION]                            TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILPOSPERMISSIONGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1827980109_-143086023] UNIQUE NONCLUSTERED ([POSPERMISSIONGROUPID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPOSPERMISSIONGROUP].[IX_RETAILPOSPERMISSIONGROUP_CODE]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPOSPERMISSIONGROUP_CODE]
    ON [ax].[RETAILPOSPERMISSIONGROUP]([RECID] ASC);


GO
PRINT N'Creating [ax].[RETAILMULTIBUYDISCOUNTLINE]...';


GO
CREATE TABLE [ax].[RETAILMULTIBUYDISCOUNTLINE] (
    [RECID]        BIGINT           NOT NULL,
    [MULTIBUYID]   NVARCHAR (40)    NOT NULL,
    [PRICEDISCPCT] NUMERIC (32, 16) NOT NULL,
    [QTYLOWEST]    NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILMULTIBUYDISCOUNTLINE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-320805805_294269066] UNIQUE NONCLUSTERED ([MULTIBUYID] ASC, [QTYLOWEST] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYREWARDPOINTTRANSLATION]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYREWARDPOINTTRANSLATION] (
    [RECID]       BIGINT         NOT NULL,
    [DESCRIPTION] NVARCHAR (255) NOT NULL,
    [LANGUAGEID]  NVARCHAR (7)   NOT NULL,
    [REWARDPOINT] BIGINT         NOT NULL,
    [ROWVERSION]  TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYREWARDPOINTTRANSLATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1988105865_1050693241] UNIQUE NONCLUSTERED ([LANGUAGEID] ASC, [REWARDPOINT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILOFFLINEPROFILESCOPES]...';


GO
CREATE TABLE [ax].[RETAILOFFLINEPROFILESCOPES] (
    [RECID]      BIGINT    NOT NULL,
    [PROFILEID]  BIGINT    NOT NULL,
    [SCOPEID]    BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILOFFLINEPROFILESCOPES_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTINSTANCEVALUE]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTINSTANCEVALUE] (
    [RECID]      BIGINT    NOT NULL,
    [PRODUCT]    BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTINSTANCEVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1181257446_-474954108] UNIQUE NONCLUSTERED ([PRODUCT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR] (
    [FISCALVALUE]                  INT              NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TAXAMOUNT]                    NUMERIC (32, 16) NOT NULL,
    [TAXATIONCODE]                 NVARCHAR (3)     NOT NULL,
    [TAXBASEAMOUNT]                NUMERIC (32, 16) NOT NULL,
    [TAXCODE]                      NVARCHAR (10)    NOT NULL,
    [TAXTYPE]                      INT              NOT NULL,
    [TAXVALUE]                     NUMERIC (32, 16) NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TOTALIZERINDEX]               INT              NOT NULL,
    [TOTALIZERNAME]                NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [TAXATIONORIGIN]               INT              NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_711206165_-1871252748] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [TAXTYPE] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALRECEIPTTAXTRANS_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[MARKUPTABLE]...';


GO
CREATE TABLE [ax].[MARKUPTABLE] (
    [RECID]                   BIGINT           NOT NULL,
    [CUSTOMERLEDGERDIMENSION] BIGINT           NOT NULL,
    [CUSTPOSTING]             INT              NOT NULL,
    [CUSTTYPE]                INT              NOT NULL,
    [ISLETTEROFCREDIT_SA]     INT              NOT NULL,
    [MARKUPCODE]              NVARCHAR (10)    NOT NULL,
    [MAXAMOUNT]               NUMERIC (32, 16) NOT NULL,
    [MODULETYPE]              INT              NOT NULL,
    [TAXITEMGROUP]            NVARCHAR (10)    NOT NULL,
    [TXT]                     NVARCHAR (60)    NOT NULL,
    [USEINMATCHING]           INT              NOT NULL,
    [VENDORLEDGERDIMENSION]   BIGINT           NOT NULL,
    [VENDPOSTING]             INT              NOT NULL,
    [VENDTYPE]                INT              NOT NULL,
    [DATAAREAID]              NVARCHAR (4)     NOT NULL,
    [ROWVERSION]              TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1530831318_-1628860358] PRIMARY KEY CLUSTERED ([MODULETYPE] ASC, [MARKUPCODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUTSTORE]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUTSTORE] (
    [RECID]      BIGINT        NOT NULL,
    [LAYOUTID]   NVARCHAR (10) NOT NULL,
    [STORE]      BIGINT        NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTILLLAYOUTSTORE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-343952049_1504114108] UNIQUE NONCLUSTERED ([STORE] ASC, [LAYOUTID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSCOUNTRYREGION]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION] (
    [RECID]              BIGINT        NOT NULL,
    [ADDRESSUSEZIPPLUS4] INT           NOT NULL,
    [ADDRFORMAT]         NVARCHAR (10) NOT NULL,
    [BACENCODE_BR]       NVARCHAR (4)  NOT NULL,
    [COUNTRYREGIONID]    NVARCHAR (10) NOT NULL,
    [CURRENCYCODE]       NVARCHAR (3)  NOT NULL,
    [ISIMMUTABLE]        INT           NOT NULL,
    [ISOCODE]            NCHAR (2)     NOT NULL,
    [TIMEZONE]           INT           NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [I_128014817_-305463479] PRIMARY KEY CLUSTERED ([COUNTRYREGIONID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGINTERNALORG]...';


GO
CREATE TABLE [ax].[RETAILPUBCATALOGINTERNALORG] (
    [RECID]                BIGINT    NOT NULL,
    [CATALOG]              BIGINT    NOT NULL,
    [INTERNALORGANIZATION] BIGINT    NOT NULL,
    [ORIGIN]               BIGINT    NOT NULL,
    [ORIGINRECVERSION]     INT       NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBCATALOGINTERNALORG_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-756910420_102317915] UNIQUE CLUSTERED ([CATALOG] ASC, [INTERNALORGANIZATION] ASC),
    CONSTRAINT [I_-756910420_-162312163] UNIQUE NONCLUSTERED ([ORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[DIRADDRESSBOOK]...';


GO
CREATE TABLE [ax].[DIRADDRESSBOOK] (
    [RECID]            BIGINT        NOT NULL,
    [DESCRIPTION]      NVARCHAR (60) NOT NULL,
    [NAME]             NVARCHAR (10) NOT NULL,
    [CREATEDDATETIME]  DATETIME      NOT NULL,
    [MODIFIEDDATETIME] DATETIME      NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_DIRADDRESSBOOK_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_2048506466_910918470] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[ECORESCURRENCYVALUE]...';


GO
CREATE TABLE [ax].[ECORESCURRENCYVALUE] (
    [RECID]         BIGINT           NOT NULL,
    [CURRENCYCODE]  NVARCHAR (3)     NOT NULL,
    [CURRENCYVALUE] NUMERIC (32, 16) NULL,
    [ROWVERSION]    TIMESTAMP        NOT NULL,
    CONSTRAINT [I_ECORESCURRENCYVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTILLLAYOUTZONE]...';


GO
CREATE TABLE [ax].[RETAILTILLLAYOUTZONE] (
    [RECID]      BIGINT        NOT NULL,
    [DEVICETYPE] BIGINT        NOT NULL,
    [ZONEID]     NVARCHAR (20) NOT NULL,
    [ZONENAME]   NVARCHAR (60) NOT NULL,
    [ZONETYPE]   INT           NOT NULL,
    [ROWVERSION] TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTILLLAYOUTZONE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[FISCALESTABLISHMENTINVENTSITE_BR]...';


GO
CREATE TABLE [ax].[FISCALESTABLISHMENTINVENTSITE_BR] (
    [RECID]                  BIGINT        NOT NULL,
    [FISCALESTABLISHMENT_BR] BIGINT        NOT NULL,
    [INVENTSITE]             NVARCHAR (10) NOT NULL,
    [DATAAREAID]             NVARCHAR (4)  NOT NULL,
    [ROWVERSION]             TIMESTAMP     NOT NULL,
    CONSTRAINT [I_FISCALESTABLISHMENTINVENTSITE_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1215761809_-1854860068] UNIQUE NONCLUSTERED ([INVENTSITE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILMIXANDMATCHLINEGROUPS]...';


GO
CREATE TABLE [ax].[RETAILMIXANDMATCHLINEGROUPS] (
    [RECID]                BIGINT        NOT NULL,
    [DISCOUNTLINECOLORID]  INT           NOT NULL,
    [MIXANDMATCHID]        NVARCHAR (20) NOT NULL,
    [MIXANDMATCHLINEGROUP] NVARCHAR (10) NOT NULL,
    [NUMBEROFITEMSNEEDED]  INT           NOT NULL,
    [DATAAREAID]           NVARCHAR (4)  NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_149219285_708740483] PRIMARY KEY CLUSTERED ([MIXANDMATCHID] ASC, [MIXANDMATCHLINEGROUP] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTAXFILTERS]...';


GO
CREATE TABLE [ax].[RETAILTAXFILTERS] (
    [RECID]           BIGINT        NOT NULL,
    [CITY]            BIGINT        NOT NULL,
    [COUNTRYREGIONID] NVARCHAR (10) NOT NULL,
    [COUNTYID]        NVARCHAR (10) NOT NULL,
    [DISTRICT]        BIGINT        NOT NULL,
    [STATEID]         NVARCHAR (10) NOT NULL,
    [TAXGROUPHEADING] NVARCHAR (10) NOT NULL,
    [ZIPCODE]         BIGINT        NOT NULL,
    [DATAAREAID]      NVARCHAR (4)  NOT NULL,
    [ROWVERSION]      TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILTAXFILTERS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-491764871_-845285617] UNIQUE NONCLUSTERED ([DISTRICT] ASC, [ZIPCODE] ASC, [CITY] ASC, [COUNTYID] ASC, [STATEID] ASC, [COUNTRYREGIONID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[LANGUAGETABLE]...';


GO
CREATE TABLE [ax].[LANGUAGETABLE] (
    [RECID]               BIGINT       NOT NULL,
    [LABELFILE]           INT          NOT NULL,
    [LANGUAGEID]          NVARCHAR (7) NOT NULL,
    [USERDEFINEDLANGUAGE] INT          NOT NULL,
    [ROWVERSION]          TIMESTAMP    NOT NULL,
    CONSTRAINT [I_-1680185576_-1273337705] PRIMARY KEY CLUSTERED ([LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTERMINALCOUNTER]...';


GO
CREATE TABLE [ax].[RETAILTERMINALCOUNTER] (
    [COUNTERTYPE]  INT              NOT NULL,
    [COUNTERVALUE] NUMERIC (32, 16) NOT NULL,
    [STORE]        NVARCHAR (10)    NOT NULL,
    [TERMINAL]     NVARCHAR (10)    NOT NULL,
    [DATAAREAID]   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1066430109_-1643801984] PRIMARY KEY CLUSTERED ([STORE] ASC, [TERMINAL] ASC, [COUNTERTYPE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKITVARIANTCOMPONENT]...';


GO
CREATE TABLE [ax].[RETAILKITVARIANTCOMPONENT] (
    [RECID]          BIGINT           NOT NULL,
    [COMPONENT]      BIGINT           NOT NULL,
    [COMPONENTRECID] BIGINT           NOT NULL,
    [KITVARIANT]     BIGINT           NOT NULL,
    [QUANTITY]       NUMERIC (32, 16) NOT NULL,
    [UNITOFMEASURE]  BIGINT           NOT NULL,
    [ROWVERSION]     TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILKITVARIANTCOMPONENT_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1748165813_1499849031] UNIQUE CLUSTERED ([KITVARIANT] ASC, [COMPONENT] ASC, [COMPONENTRECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKITVARIANTCOMPONENT].[IX_RETAILKITVARIANTCOMPONENT_COMPONENT]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILKITVARIANTCOMPONENT_COMPONENT]
    ON [ax].[RETAILKITVARIANTCOMPONENT]([COMPONENT] ASC)
    INCLUDE([KITVARIANT]);


GO
PRINT N'Creating [ax].[INVENTITEMSALESSETUP]...';


GO
CREATE TABLE [ax].[INVENTITEMSALESSETUP] (
    [RECID]                   BIGINT        NOT NULL,
    [INVENTDIMID]             NVARCHAR (20) NOT NULL,
    [INVENTDIMIDDEFAULT]      NVARCHAR (20) NOT NULL,
    [ITEMID]                  NVARCHAR (20) NOT NULL,
    [MANDATORYINVENTLOCATION] INT           NOT NULL,
    [MANDATORYINVENTSITE]     INT           NOT NULL,
    [DATAAREAID]              NVARCHAR (4)  NOT NULL,
    [ROWVERSION]              TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1618439284_1798859704] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [INVENTDIMID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILRECEIPTPROFILE]...';


GO
CREATE TABLE [ax].[RETAILRECEIPTPROFILE] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [PROFILEID]   NVARCHAR (10) NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-254036412_1714895286] PRIMARY KEY CLUSTERED ([PROFILEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILKITRELEASEDSUBSTITUTECHARGE]...';


GO
CREATE TABLE [ax].[RETAILKITRELEASEDSUBSTITUTECHARGE] (
    [RECID]                  BIGINT           NOT NULL,
    [KITCOMPONENTSUBSTITUTE] BIGINT           NOT NULL,
    [SUBSTITUTECHARGE]       NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]             NVARCHAR (4)     NOT NULL,
    [ROWVERSION]             TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILKITRELEASEDSUBSTITUTECHARGE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPOSSEEDDATA]...';


GO
CREATE TABLE [ax].[RETAILPOSSEEDDATA] (
    [DATATYPE]    INT           NOT NULL,
    [DATAVALUE]   BIGINT        NOT NULL,
    [STORENUMBER] NVARCHAR (10) NOT NULL,
    [TERMINALID]  NVARCHAR (10) NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1653969084_-308865658] PRIMARY KEY CLUSTERED ([DATATYPE] ASC, [STORENUMBER] ASC, [TERMINALID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[TAXDATA]...';


GO
CREATE TABLE [ax].[TAXDATA] (
    [RECID]                BIGINT           NOT NULL,
    [SALESTAXFORMTYPES_IN] BIGINT           NOT NULL,
    [TAXCODE]              NVARCHAR (10)    NOT NULL,
    [TAXFROMDATE]          DATE             NOT NULL,
    [TAXLIMITMAX]          NUMERIC (32, 16) NOT NULL,
    [TAXLIMITMIN]          NUMERIC (32, 16) NOT NULL,
    [TAXREDUCTIONPCT_BR]   NUMERIC (32, 16) NOT NULL,
    [TAXTODATE]            DATE             NOT NULL,
    [TAXVALUE]             NUMERIC (32, 16) NOT NULL,
    [VATEXEMPTPCT]         NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]           NVARCHAR (4)     NOT NULL,
    [ROWVERSION]           TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1794926035_2112191097] PRIMARY KEY CLUSTERED ([TAXCODE] ASC, [TAXFROMDATE] ASC, [TAXTODATE] ASC, [TAXLIMITMIN] ASC, [RECID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILRECEIPTMASKS]...';


GO
CREATE TABLE [ax].[RETAILRECEIPTMASKS] (
    [RECID]            BIGINT        NOT NULL,
    [FUNCPROFILEID]    NVARCHAR (10) NOT NULL,
    [ISINDEPENDENT]    INT           NOT NULL,
    [MASK]             NVARCHAR (18) NOT NULL,
    [RECEIPTTRANSTYPE] INT           NOT NULL,
    [ROWVERSION]       TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1819627460_-1375636276] PRIMARY KEY CLUSTERED ([FUNCPROFILEID] ASC, [RECEIPTTRANSTYPE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS] (
    [AFFILIATION]                  BIGINT        NOT NULL,
    [CHANNEL]                      BIGINT        NOT NULL,
    [LOYALTYTIER]                  BIGINT        NOT NULL,
    [RECEIPTID]                    NVARCHAR (18) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT           IDENTITY (1, 1) NOT NULL,
    [STAFFID]                      NVARCHAR (25) NOT NULL,
    [STOREID]                      NVARCHAR (10) NOT NULL,
    [TERMINALID]                   NVARCHAR (10) NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44) NOT NULL,
    [CREATEDDATETIME]              DATETIME      NOT NULL,
    [MODIFIEDDATETIME]             DATETIME      NOT NULL,
    [CREATEDTRANSACTIONID]         BIGINT        NOT NULL,
    [MODIFIEDTRANSACTIONID]        BIGINT        NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_290532277_-1746289153] PRIMARY KEY NONCLUSTERED ([AFFILIATION] ASC, [LOYALTYTIER] ASC, [CHANNEL] ASC, [STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONAFFILIATIONTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE CLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTETRANSLATION]...';


GO
CREATE TABLE [ax].[ECORESATTRIBUTETRANSLATION] (
    [RECID]        BIGINT         NOT NULL,
    [ATTRIBUTE]    BIGINT         NOT NULL,
    [DESCRIPTION]  NVARCHAR (255) NOT NULL,
    [FRIENDLYNAME] NVARCHAR (120) NOT NULL,
    [HELPTEXT]     NVARCHAR (255) NOT NULL,
    [LANGUAGE]     NVARCHAR (7)   NOT NULL,
    [ROWVERSION]   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_ECORESATTRIBUTETRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1990869088_2081875952] UNIQUE CLUSTERED ([ATTRIBUTE] ASC, [LANGUAGE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGPRODUCTRELATION]...';


GO
CREATE TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATION] (
    [RECID]               BIGINT    NOT NULL,
    [CATALOGPRODUCT]      BIGINT    NOT NULL,
    [ORIGIN]              BIGINT    NOT NULL,
    [PRODUCTRELATIONTYPE] BIGINT    NOT NULL,
    [RELATEDPRODUCT]      BIGINT    NOT NULL,
    [ROWVERSION]          TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBCATALOGPRODUCTRELATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-756004594_1082545321] UNIQUE NONCLUSTERED ([CATALOGPRODUCT] ASC, [ORIGIN] ASC),
    CONSTRAINT [I_-756004594_-777987643] UNIQUE CLUSTERED ([CATALOGPRODUCT] ASC, [PRODUCTRELATIONTYPE] ASC, [RELATEDPRODUCT] ASC)
);


GO
PRINT N'Creating [ax].[INVENTTABLE]...';


GO
CREATE TABLE [ax].[INVENTTABLE] (
    [RECID]                      BIGINT           NOT NULL,
    [ITEMID]                     NVARCHAR (20)    NOT NULL,
    [ABCCONTRIBUTIONMARGIN]      INT              NOT NULL,
    [ABCREVENUE]                 INT              NOT NULL,
    [ABCTIEUP]                   INT              NOT NULL,
    [ABCVALUE]                   INT              NOT NULL,
    [ALTITEMID]                  NVARCHAR (20)    NOT NULL,
    [APPROXTAXVALUE_BR]          NUMERIC (32, 16) NOT NULL,
    [BATCHNUMGROUPID]            NVARCHAR (10)    NOT NULL,
    [COSTMODEL]                  INT              NOT NULL,
    [DENSITY]                    NUMERIC (32, 16) NOT NULL,
    [DEPTH]                      NUMERIC (32, 16) NOT NULL,
    [EXCEPTIONCODE_BR]           NVARCHAR (10)    NOT NULL,
    [GROSSDEPTH]                 NUMERIC (32, 16) NOT NULL,
    [GROSSHEIGHT]                NUMERIC (32, 16) NOT NULL,
    [GROSSWIDTH]                 NUMERIC (32, 16) NOT NULL,
    [HEIGHT]                     NUMERIC (32, 16) NOT NULL,
    [INVENTPRODUCTTYPE_BR]       NVARCHAR (10)    NOT NULL,
    [ITEMBUYERGROUPID]           NVARCHAR (10)    NOT NULL,
    [ITEMDIMCOSTPRICE]           INT              NOT NULL,
    [ITEMTYPE]                   INT              NOT NULL,
    [NAMEALIAS]                  NVARCHAR (20)    NOT NULL,
    [NETWEIGHT]                  NUMERIC (32, 16) NOT NULL,
    [PRIMARYVENDORID]            NVARCHAR (20)    NOT NULL,
    [PRODGROUPID]                NVARCHAR (10)    NOT NULL,
    [PRODPOOLID]                 NVARCHAR (10)    NOT NULL,
    [PRODUCT]                    BIGINT           NOT NULL,
    [PROJCATEGORYID]             NVARCHAR (30)    NOT NULL,
    [PROPERTYID]                 NVARCHAR (10)    NOT NULL,
    [PURCHMODEL]                 INT              NOT NULL,
    [REQGROUPID]                 NVARCHAR (10)    NOT NULL,
    [SALESCONTRIBUTIONRATIO]     NUMERIC (32, 16) NOT NULL,
    [SALESMODEL]                 INT              NOT NULL,
    [SALESPERCENTMARKUP]         NUMERIC (32, 16) NOT NULL,
    [SALESPRICEMODELBASIC]       INT              NOT NULL,
    [SERIALNUMGROUPID]           NVARCHAR (10)    NOT NULL,
    [SORTCODE]                   INT              NOT NULL,
    [TARAWEIGHT]                 NUMERIC (32, 16) NOT NULL,
    [TAXATIONORIGIN_BR]          INT              NOT NULL,
    [TAXFISCALCLASSIFICATION_BR] NVARCHAR (10)    NOT NULL,
    [TAXSERVICECODE_BR]          NVARCHAR (10)    NOT NULL,
    [UNITVOLUME]                 NUMERIC (32, 16) NOT NULL,
    [USEALTITEMID]               INT              NOT NULL,
    [WIDTH]                      NUMERIC (32, 16) NOT NULL,
    [WMSPICKINGQTYTIME]          INT              NOT NULL,
    [DATAAREAID]                 NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                 TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-137955366_1429128816] PRIMARY KEY CLUSTERED ([ITEMID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-137955366_-474954108] UNIQUE NONCLUSTERED ([PRODUCT] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[INVENTTABLE].[IX_INVENTTABLE_PRODUCT_DATAAREAID_ITEM]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTTABLE_PRODUCT_DATAAREAID_ITEM]
    ON [ax].[INVENTTABLE]([PRODUCT] ASC, [DATAAREAID] ASC, [ITEMID] ASC);


GO
PRINT N'Creating [ax].[INVENTTABLE].[IX_INVENTTABLE_RECID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_INVENTTABLE_RECID]
    ON [ax].[INVENTTABLE]([RECID] ASC)
    INCLUDE([PRODUCT]);


GO
PRINT N'Creating [ax].[INVENTTABLE].[IX_INVENTTABLE_PRODUCT]...';


GO
CREATE NONCLUSTERED INDEX [IX_INVENTTABLE_PRODUCT]
    ON [ax].[INVENTTABLE]([PRODUCT] ASC)
    INCLUDE([RECID]);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSFORMATLINES]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSFORMATLINES] (
    [RECID]         BIGINT           NOT NULL,
    [ADDRFORMAT]    NVARCHAR (10)    NOT NULL,
    [DATAENTRYONLY] INT              NOT NULL,
    [ELEMENT]       INT              NOT NULL,
    [EXPAND]        INT              NOT NULL,
    [INACTIVE]      INT              NOT NULL,
    [LINENUM]       NUMERIC (32, 16) NOT NULL,
    [NUMOFSPACES]   INT              NOT NULL,
    [SEPARATOR]     NVARCHAR (10)    NOT NULL,
    [SEPARATORCRLF] INT              NOT NULL,
    [SPECIAL]       INT              NOT NULL,
    [ROWVERSION]    TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-900029417_819092615] PRIMARY KEY CLUSTERED ([ADDRFORMAT] ASC, [LINENUM] ASC),
    CONSTRAINT [I_-900029417_1662335864] UNIQUE NONCLUSTERED ([ADDRFORMAT] ASC, [ELEMENT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBECORESCATEGORYTRANSLATION]...';


GO
CREATE TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION] (
    [RECID]        BIGINT          NOT NULL,
    [CATEGORY]     BIGINT          NOT NULL,
    [CHANNEL]      BIGINT          NOT NULL,
    [DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [FRIENDLYNAME] NVARCHAR (254)  NOT NULL,
    [LANGUAGEID]   NVARCHAR (7)    NOT NULL,
    [ORIGINID]     BIGINT          NOT NULL,
    [SEARCHTEXT]   NVARCHAR (254)  NOT NULL,
    [ROWVERSION]   TIMESTAMP       NOT NULL,
    CONSTRAINT [I_RETAILPUBECORESCATEGORYTRANSLATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1633956436_-888948581] UNIQUE CLUSTERED ([CHANNEL] ASC, [CATEGORY] ASC, [LANGUAGEID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBECORESCATEGORYTRANSLATION].[IX_RETAILPUBECORESCATEGORYTRANSLATION_FRIENDLYNAME]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBECORESCATEGORYTRANSLATION_FRIENDLYNAME]
    ON [ax].[RETAILPUBECORESCATEGORYTRANSLATION]([FRIENDLYNAME] ASC);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTTHRESHOLDTIERS]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTTHRESHOLDTIERS] (
    [RECID]           BIGINT           NOT NULL,
    [AMOUNTTHRESHOLD] NUMERIC (32, 16) NOT NULL,
    [DISCOUNTMETHOD]  INT              NOT NULL,
    [DISCOUNTVALUE]   NUMERIC (32, 16) NOT NULL,
    [OFFERID]         NVARCHAR (20)    NOT NULL,
    [DATAAREAID]      NVARCHAR (4)     NOT NULL,
    [ROWVERSION]      TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTTHRESHOLDTIERS_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSALESTAXOVERRIDEGROUP]...';


GO
CREATE TABLE [ax].[RETAILSALESTAXOVERRIDEGROUP] (
    [RECID]       BIGINT        NOT NULL,
    [CODE]        NVARCHAR (25) NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILSALESTAXOVERRIDEGROUP_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1275102027_776425418] UNIQUE CLUSTERED ([CODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILMEDIAPRODUCTRELATION]...';


GO
CREATE TABLE [ax].[RETAILMEDIAPRODUCTRELATION] (
    [RECID]                BIGINT    NOT NULL,
    [MEDIARESOURCE]        BIGINT    NOT NULL,
    [PRODUCT]              BIGINT    NOT NULL,
    [CATALOG]              BIGINT    NOT NULL,
    [INTERNALORGANIZATION] BIGINT    NOT NULL,
    [ISDEFAULT]            INT       NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILMEDIAPRODUCTRELATION_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1181535486_-1920435397] UNIQUE CLUSTERED ([PRODUCT] ASC, [MEDIARESOURCE] ASC, [CATALOG] ASC, [INTERNALORGANIZATION] ASC)
);


GO
PRINT N'Creating [ax].[PLFISCALTAXTABLE]...';


GO
CREATE TABLE [ax].[PLFISCALTAXTABLE] (
    [RECID]             BIGINT        NOT NULL,
    [FISCALPRINTERCODE] NVARCHAR (20) NOT NULL,
    [FISCALTAXCODE]     INT           NOT NULL,
    [TAXCODE]           NVARCHAR (10) NOT NULL,
    [DATAAREAID]        NVARCHAR (4)  NOT NULL,
    [ROWVERSION]        TIMESTAMP     NOT NULL,
    CONSTRAINT [I_1142401777_-1211354216] PRIMARY KEY CLUSTERED ([TAXCODE] ASC, [FISCALPRINTERCODE] ASC, [FISCALTAXCODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTLINEMIXANDMATCH]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTLINEMIXANDMATCH] (
    [RECID]               BIGINT        NOT NULL,
    [DISCOUNTTYPE]        INT           NULL,
    [LINEGROUP]           NVARCHAR (10) NULL,
    [NUMBEROFITEMSNEEDED] INT           NULL,
    [DATAAREAID]          NVARCHAR (4)  NOT NULL,
    [ROWVERSION]          TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTLINEMIXANDMATCH_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILCHANNELTABLE]...';


GO
CREATE TABLE [ax].[RETAILCHANNELTABLE] (
    [RECID]                      BIGINT        NOT NULL,
    [CHANNELTIMEZONE]            INT           NOT NULL,
    [CHANNELTIMEZONEINFOID]      NVARCHAR (60) NOT NULL,
    [CHANNELTYPE]                INT           NOT NULL,
    [CURRENCY]                   NVARCHAR (3)  NOT NULL,
    [DEFAULTCUSTACCOUNT]         NVARCHAR (20) NOT NULL,
    [DEFAULTCUSTDATAAREAID]      NVARCHAR (10) NOT NULL,
    [EVENTNOTIFICATIONPROFILEID] NVARCHAR (20) NOT NULL,
    [INSTANCERELATIONTYPE]       BIGINT        NOT NULL,
    [INVENTLOCATION]             NVARCHAR (10) NOT NULL,
    [INVENTLOCATIONDATAAREAID]   NVARCHAR (10) NOT NULL,
    [OMOPERATINGUNITID]          BIGINT        NOT NULL,
    [PRICEINCLUDESSALESTAX]      INT           NOT NULL,
    [TRANSACTIONSERVICEPROFILE]  NVARCHAR (10) NOT NULL,
    [DISPLAYTAXPERTAXCOMPONENT]  INT           NOT NULL,
    [RETAILCHANNELID]            NVARCHAR (15) NOT NULL,
    [RELATIONTYPE]               BIGINT        NOT NULL,
    [ROWVERSION]                 TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILCHANNELTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-922331912_-1636812754] UNIQUE NONCLUSTERED ([OMOPERATINGUNITID] ASC),
    CONSTRAINT [I_-922331912_69820500] UNIQUE NONCLUSTERED ([RETAILCHANNELID] ASC)
);


GO
PRINT N'Creating [ax].[DIRADDRESSBOOKPARTY]...';


GO
CREATE TABLE [ax].[DIRADDRESSBOOKPARTY] (
    [RECID]       BIGINT    NOT NULL,
    [ADDRESSBOOK] BIGINT    NOT NULL,
    [PARTY]       BIGINT    NOT NULL,
    [ROWVERSION]  TIMESTAMP NOT NULL,
    CONSTRAINT [I_DIRADDRESSBOOKPARTY_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_996533606_589292146] UNIQUE CLUSTERED ([PARTY] ASC, [ADDRESSBOOK] ASC)
);


GO
PRINT N'Creating [ax].[INVENTSITELOGISTICSLOCATIONROLE]...';


GO
CREATE TABLE [ax].[INVENTSITELOGISTICSLOCATIONROLE] (
    [RECID]                 BIGINT    NOT NULL,
    [LOCATIONROLE]          BIGINT    NOT NULL,
    [SITELOGISTICSLOCATION] BIGINT    NOT NULL,
    [ROWVERSION]            TIMESTAMP NOT NULL,
    CONSTRAINT [I_INVENTSITELOGISTICSLOCATIONROLE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-241465997_-936801066] UNIQUE CLUSTERED ([SITELOGISTICSLOCATION] ASC, [LOCATIONROLE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTOREADDRESSBOOK]...';


GO
CREATE TABLE [ax].[RETAILSTOREADDRESSBOOK] (
    [RECID]           BIGINT    NOT NULL,
    [ADDRESSBOOK]     BIGINT    NOT NULL,
    [ADDRESSBOOKTYPE] INT       NOT NULL,
    [STORERECID]      BIGINT    NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILSTOREADDRESSBOOK_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTANDARDATTRIBUTE]...';


GO
CREATE TABLE [ax].[RETAILSTANDARDATTRIBUTE] (
    [RECID]               BIGINT    NOT NULL,
    [ATTRIBUTE]           BIGINT    NOT NULL,
    [STANDARDATTRIBUTEID] INT       NOT NULL,
    [ROWVERSION]          TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILSTANDARDATTRIBUTE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1439487436_-1724774169] UNIQUE CLUSTERED ([STANDARDATTRIBUTEID] ASC),
    CONSTRAINT [I_1439487436_1757139105] UNIQUE NONCLUSTERED ([ATTRIBUTE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALPRINTERREPORT_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALPRINTERREPORT_BR] (
    [ADDITIONALFISCALMEMORYINDEX]  INT           NOT NULL,
    [CREDITDEBITRECEIPTNUMBER]     INT           NOT NULL,
    [FISCALPRINTERSERIALNUMBER]    NVARCHAR (20) NOT NULL,
    [MANAGEMENTREPORTNUMBER]       INT           NOT NULL,
    [NONFISCALOPERATIONNUMBER]     INT           NOT NULL,
    [RECEIPTNUMBER]                INT           NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT           IDENTITY (1, 1) NOT NULL,
    [REPORTDATETIME]               DATETIME      NOT NULL,
    [REPORTDATETIMETZID]           INT           NOT NULL,
    [REPORTTYPE]                   NCHAR (2)     NOT NULL,
    [RESTARTOPERATIONNUMBER]       INT           NOT NULL,
    [STOREID]                      NVARCHAR (10) NOT NULL,
    [TERMINALID]                   NVARCHAR (10) NOT NULL,
    [TRANSACTIONDATETIME]          DATETIME      NOT NULL,
    [TRANSACTIONDATETIMETZID]      INT           NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)  NOT NULL,
    [ROWVERSION]                   TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-1122718616_-645973167] PRIMARY KEY CLUSTERED ([FISCALPRINTERSERIALNUMBER] ASC, [ADDITIONALFISCALMEMORYINDEX] ASC, [RESTARTOPERATIONNUMBER] ASC, [RECEIPTNUMBER] ASC, [TRANSACTIONID] ASC, [STOREID] ASC, [TERMINALID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALPRINTERREPORT_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTORELOCATORGROUP]...';


GO
CREATE TABLE [ax].[RETAILSTORELOCATORGROUP] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [NAME]        NVARCHAR (25) NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILSTORELOCATORGROUP_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-660604317_-1966747349] UNIQUE NONCLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILMEDIAANDMASTERENTITYRELATION]...';


GO
CREATE TABLE [ax].[RETAILMEDIAANDMASTERENTITYRELATION] (
    [RECID]             BIGINT    NOT NULL,
    [MEDIARESOURCEID]   INT       NOT NULL,
    [MASTERENTITYTYPE]  INT       NOT NULL,
    [MASTERENTITYRECID] BIGINT    NOT NULL,
    [ISDEFAULT]         INT       NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILMEDIAANDMASTERENTITYRELATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTTHRESHOLD]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTTHRESHOLD] (
    [RECID]                 BIGINT       NOT NULL,
    [COUNTNONDISCOUNTITEMS] INT          NULL,
    [DATAAREAID]            NVARCHAR (4) NOT NULL,
    [ROWVERSION]            TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTTHRESHOLD_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILASSORTMENTLOOKUP]...';


GO
CREATE TABLE [ax].[RETAILASSORTMENTLOOKUP] (
    [RECID]           BIGINT    NOT NULL,
    [ASSORTMENTID]    BIGINT    NOT NULL,
    [LINETYPE]        INT       NOT NULL,
    [PRODUCTID]       BIGINT    NOT NULL,
    [VALIDFROM]       DATE      NOT NULL,
    [VALIDTO]         DATE      NOT NULL,
    [VARIANTID]       BIGINT    NOT NULL,
    [CREATEDDATETIME] DATETIME  NOT NULL,
    [ROWVERSION]      TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILASSORTMENTLOOKUP_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1305966847_-835757873] UNIQUE CLUSTERED ([ASSORTMENTID] ASC, [PRODUCTID] ASC, [VARIANTID] ASC, [LINETYPE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILASSORTMENTLOOKUP].[IX_RETAILASSORTMENTLOOKUP_PRODUCTID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILASSORTMENTLOOKUP_PRODUCTID]
    ON [ax].[RETAILASSORTMENTLOOKUP]([PRODUCTID] ASC)
    INCLUDE([ASSORTMENTID], [LINETYPE], [VALIDFROM], [VALIDTO], [VARIANTID]);


GO
PRINT N'Creating [ax].[RETAILMEDIATEMPLATE]...';


GO
CREATE TABLE [ax].[RETAILMEDIATEMPLATE] (
    [RECID]            BIGINT         NOT NULL,
    [MASTERENTITYTYPE] INT            NOT NULL,
    [IMAGEINDEX]       INT            NOT NULL,
    [IMAGEURL]         NVARCHAR (MAX) NULL,
    [ISDEFAULT]        INT            NOT NULL,
    [ROWVERSION]       TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILMEDIATEMPLATE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1625247853_2081799500] UNIQUE CLUSTERED ([MASTERENTITYTYPE] ASC, [IMAGEINDEX] ASC)
);


GO
PRINT N'Creating [ax].[RETURNREASONCODEGROUP]...';


GO
CREATE TABLE [ax].[RETURNREASONCODEGROUP] (
    [RECID]             BIGINT        NOT NULL,
    [DESCRIPTION]       NVARCHAR (60) NOT NULL,
    [REASONCODEGROUPID] NVARCHAR (10) NOT NULL,
    [DATAAREAID]        NVARCHAR (4)  NOT NULL,
    [ROWVERSION]        TIMESTAMP     NOT NULL,
    CONSTRAINT [I_2093345496_-1411316249] PRIMARY KEY CLUSTERED ([REASONCODEGROUPID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDLVMODECHANNELEXPLODED]...';


GO
CREATE TABLE [ax].[RETAILDLVMODECHANNELEXPLODED] (
    [RECID]           BIGINT       NOT NULL,
    [DLVMODE]         BIGINT       NOT NULL,
    [OMOPERATINGUNIT] BIGINT       NOT NULL,
    [DATAAREAID]      NVARCHAR (4) NOT NULL,
    [ROWVERSION]      TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILDLVMODECHANNELEXPLODED_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-750738950_-724959869] UNIQUE NONCLUSTERED ([OMOPERATINGUNIT] ASC, [DLVMODE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILGROUPMEMBERLINE]...';


GO
CREATE TABLE [ax].[RETAILGROUPMEMBERLINE] (
    [RECID]      BIGINT    NOT NULL,
    [CATEGORY]   BIGINT    NOT NULL,
    [PRODUCT]    BIGINT    NOT NULL,
    [VARIANT]    BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILGROUPMEMBERLINE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILGROUPMEMBERLINE].[IX_RETAILGROUPMEMBERLINE_PVC]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILGROUPMEMBERLINE_PVC]
    ON [ax].[RETAILGROUPMEMBERLINE]([VARIANT] ASC, [PRODUCT] ASC, [CATEGORY] ASC)
    INCLUDE([RECID])
    ON [PRIMARY];


GO
PRINT N'Creating [ax].[EFDRETURNCODE_BR]...';


GO
CREATE TABLE [ax].[EFDRETURNCODE_BR] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [MESSAGETYPE] INT           NOT NULL,
    [RETURNCODE]  NVARCHAR (10) NOT NULL,
    [STATUS]      INT           NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_EFDRETURNCODE_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1287343197_1753177196] UNIQUE NONCLUSTERED ([RETURNCODE] ASC, [MESSAGETYPE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONDISCOUNTTRANS]...';


GO
CREATE TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS] (
    [AMOUNT]                       NUMERIC (32, 16) NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [CUSTOMERDISCOUNTTYPE]         INT              NOT NULL,
    [DEALPRICE]                    NUMERIC (32, 16) NOT NULL,
    [DISCOUNTAMOUNT]               NUMERIC (32, 16) NOT NULL,
    [DISCOUNTCODE]                 NVARCHAR (15)    NOT NULL,
    [DISCOUNTORIGINTYPE]           INT              NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [MANUALDISCOUNTTYPE]           INT              NOT NULL,
    [PERCENTAGE]                   NUMERIC (32, 16) NOT NULL,
    [PERIODICDISCOUNTOFFERID]      NVARCHAR (20)    NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SALELINENUM]                  NUMERIC (32, 16) NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-363309914_372431339] PRIMARY KEY NONCLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [TRANSACTIONID] ASC, [SALELINENUM] ASC, [CHANNEL] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILTRANSACTIONDISCOUNTTRANS_REPLICATIONCOUNTERFROMORIGIN] UNIQUE CLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILTRANSACTIONDISCOUNTTRANS].[IX_RETAILTRANSACTIONDISCOUNTTRANS_TRANSACTIONID]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILTRANSACTIONDISCOUNTTRANS_TRANSACTIONID]
    ON [ax].[RETAILTRANSACTIONDISCOUNTTRANS]([TRANSACTIONID] ASC);


GO
PRINT N'Creating [ax].[SYSTASKRECORDERFRAMEWORK]...';


GO
CREATE TABLE [ax].[SYSTASKRECORDERFRAMEWORK] (
    [RECID]       BIGINT           NOT NULL,
    [FRAMEWORKID] NVARCHAR (30)    NOT NULL,
    [NAME]        NVARCHAR (60)    NOT NULL,
    [PUBLISHER]   NVARCHAR (60)    NOT NULL,
    [SYNCID]      UNIQUEIDENTIFIER NOT NULL,
    [ROWVERSION]  TIMESTAMP        NOT NULL,
    CONSTRAINT [I_SYSTASKRECORDERFRAMEWORK_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-2131136272_-201728307] UNIQUE CLUSTERED ([FRAMEWORKID] ASC, [PUBLISHER] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSCITY]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSCITY] (
    [RECID]           BIGINT         NOT NULL,
    [CITYKEY]         NVARCHAR (100) NOT NULL,
    [COUNTRYREGIONID] NVARCHAR (10)  NOT NULL,
    [COUNTYID]        NVARCHAR (10)  NOT NULL,
    [DESCRIPTION]     NVARCHAR (60)  NOT NULL,
    [IBGECODE_BR]     NVARCHAR (7)   NOT NULL,
    [NAME]            NVARCHAR (60)  NOT NULL,
    [STATEID]         NVARCHAR (10)  NOT NULL,
    [ROWVERSION]      TIMESTAMP      NOT NULL,
    CONSTRAINT [I_LOGISTICSADDRESSCITY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1311835896_-387131792] UNIQUE NONCLUSTERED ([CITYKEY] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTAFFCREDENTIALTABLE]...';


GO
CREATE TABLE [ax].[RETAILSTAFFCREDENTIALTABLE] (
    [RECID]                        BIGINT         NOT NULL,
    [STAFFID]                      NVARCHAR (25)  NOT NULL,
    [GRANTTYPE]                    NVARCHAR (256) NOT NULL,
    [CREDENTIALID]                 NVARCHAR (256) NOT NULL,
    [HASHEDCREDENTIAL]             NVARCHAR (524) NOT NULL,
    [SALT]                         NVARCHAR (524) NOT NULL,
    [HASHALGORITHM]                NVARCHAR (50)  NOT NULL,
    [DELETEDDATETIME]              DATETIME       NOT NULL,
    [DELETEDDATETIMETZID]          INT            NOT NULL,
    [ADDITIONALAUTHENTICATIONDATA] NVARCHAR (MAX) NULL,
    [ROWVERSION]                   TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILSTAFFCREDENTIALTABLE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1549313072_-1249216424] UNIQUE NONCLUSTERED ([STAFFID] ASC, [GRANTTYPE] ASC, [DELETEDDATETIME] ASC),
    CONSTRAINT [I_1549313072_-1870433993] UNIQUE NONCLUSTERED ([CREDENTIALID] ASC, [GRANTTYPE] ASC, [DELETEDDATETIME] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTVARIANTCOLOR]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTVARIANTCOLOR] (
    [RECID]      BIGINT    NOT NULL,
    [COLOR]      BIGINT    NOT NULL,
    [ROWVERSION] TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTVARIANTCOLOR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTVARIANTCOLOR].[IX_ECORESPRODUCTVARIANTCOLOR_COLOR]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTVARIANTCOLOR_COLOR]
    ON [ax].[ECORESPRODUCTVARIANTCOLOR]([COLOR] ASC)
    INCLUDE([RECID]);


GO
PRINT N'Creating [ax].[FISCALESTABLISHMENT_BR]...';


GO
CREATE TABLE [ax].[FISCALESTABLISHMENT_BR] (
    [RECID]                          BIGINT         NOT NULL,
    [ACCOUNTANT_BR]                  BIGINT         NOT NULL,
    [CCMNUM_BR]                      NVARCHAR (20)  NOT NULL,
    [CNPJCPFNUM_BR]                  NVARCHAR (20)  NOT NULL,
    [DIRPARTYLOCATION]               BIGINT         NOT NULL,
    [EFDOCAUTHORITY]                 NVARCHAR (10)  NOT NULL,
    [EFDOCDIGITALCERTIFICATESUBJECT] NVARCHAR (960) NOT NULL,
    [FISCALESTABLISHMENTID]          NVARCHAR (10)  NOT NULL,
    [IENUM_BR]                       NVARCHAR (20)  NOT NULL,
    [NAME]                           NVARCHAR (60)  NOT NULL,
    [CONSUMEREFDOCAUTHORITY]         NVARCHAR (10)  NOT NULL,
    [CONSUMEREFDOCCSC]               NVARCHAR (MAX) NULL,
    [CONSUMEREFDOCCSCTOKEN]          NVARCHAR (6)   NOT NULL,
    [CONSUMEREFDOCENVIRONMENT]       INT            NOT NULL,
    [CONSUMEREFDOCVERSION]           INT            NOT NULL,
    [DATAAREAID]                     NVARCHAR (4)   NOT NULL,
    [ROWVERSION]                     TIMESTAMP      NOT NULL,
    CONSTRAINT [I_FISCALESTABLISHMENT_BR_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1629009360_1165620475] UNIQUE NONCLUSTERED ([FISCALESTABLISHMENTID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_1629009360_1402367493] UNIQUE NONCLUSTERED ([DIRPARTYLOCATION] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESATTRIBUTETYPE]...';


GO
CREATE TABLE [ax].[ECORESATTRIBUTETYPE] (
    [RECID]         BIGINT        NOT NULL,
    [DATATYPE]      INT           NOT NULL,
    [ISENUMERATION] INT           NOT NULL,
    [ISHIDDEN]      INT           NOT NULL,
    [NAME]          NVARCHAR (60) NOT NULL,
    [ROWVERSION]    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESATTRIBUTETYPE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1716185735_516664720] UNIQUE CLUSTERED ([NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALDOCUMENTLINE_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR] (
    [APPROXIMATETAXAMOUNT]         NUMERIC (32, 16) NOT NULL,
    [CFOP]                         NVARCHAR (5)     NOT NULL,
    [CHANNEL]                      BIGINT           NOT NULL,
    [DESCRIPTION]                  NVARCHAR (1000)  NOT NULL,
    [FISCALCLASSIFICATION]         NVARCHAR (10)    NOT NULL,
    [GLOBALTRADEITEMNUMBER]        NVARCHAR (14)    NOT NULL,
    [ITEMID]                       NVARCHAR (20)    NOT NULL,
    [ITEMTYPE]                     INT              NOT NULL,
    [LINEAMOUNT]                   NUMERIC (32, 16) NOT NULL,
    [LINEDISCOUNT]                 NUMERIC (32, 16) NOT NULL,
    [LINENUM]                      NUMERIC (32, 16) NOT NULL,
    [QUANTITY]                     NUMERIC (32, 16) NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [SERVICECODE]                  NVARCHAR (10)    NOT NULL,
    [STORE]                        NVARCHAR (10)    NOT NULL,
    [TAXATIONORIGIN]               INT              NOT NULL,
    [TERMINAL]                     NVARCHAR (10)    NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [UNIT]                         NVARCHAR (10)    NOT NULL,
    [UNITPRICE]                    NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_363001915_292746041] PRIMARY KEY CLUSTERED ([CHANNEL] ASC, [STORE] ASC, [TERMINAL] ASC, [TRANSACTIONID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALDOCUMENTLINE_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDLVMODEADDRESSEXPLODED]...';


GO
CREATE TABLE [ax].[RETAILDLVMODEADDRESSEXPLODED] (
    [RECID]         BIGINT        NOT NULL,
    [COUNTRYREGION] NVARCHAR (10) NOT NULL,
    [DLVMODE]       BIGINT        NOT NULL,
    [STATE]         NVARCHAR (10) NOT NULL,
    [DATAAREAID]    NVARCHAR (4)  NOT NULL,
    [ROWVERSION]    TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILDLVMODEADDRESSEXPLODED_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1442873101_1977120800] UNIQUE NONCLUSTERED ([STATE] ASC, [DLVMODE] ASC, [COUNTRYREGION] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSDISTRICT]...';


GO
CREATE TABLE [ax].[LOGISTICSADDRESSDISTRICT] (
    [RECID]              BIGINT        NOT NULL,
    [CITY]               BIGINT        NOT NULL,
    [COUNTRYREGIONID_RU] NVARCHAR (10) NOT NULL,
    [COUNTYID_RU]        NVARCHAR (10) NOT NULL,
    [DESCRIPTION]        NVARCHAR (60) NOT NULL,
    [NAME]               NVARCHAR (60) NOT NULL,
    [PROPERTIES_RU]      BIGINT        NOT NULL,
    [STATEID_RU]         NVARCHAR (10) NOT NULL,
    [ROWVERSION]         TIMESTAMP     NOT NULL,
    CONSTRAINT [I_LOGISTICSADDRESSDISTRICT_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-1765824537_246310896] UNIQUE CLUSTERED ([NAME] ASC, [CITY] ASC, [COUNTRYREGIONID_RU] ASC, [STATEID_RU] ASC, [COUNTYID_RU] ASC)
);


GO
PRINT N'Creating [ax].[LOGISTICSADDRESSDISTRICT].[IX_ADDRESSDISTRICT_CITY_COUNTRY_RU]...';


GO
CREATE NONCLUSTERED INDEX [IX_ADDRESSDISTRICT_CITY_COUNTRY_RU]
    ON [ax].[LOGISTICSADDRESSDISTRICT]([CITY] ASC, [COUNTRYREGIONID_RU] ASC)
    INCLUDE([COUNTYID_RU], [DESCRIPTION], [NAME], [STATEID_RU]);


GO
PRINT N'Creating [ax].[ECORESPRODUCT]...';


GO
CREATE TABLE [ax].[ECORESPRODUCT] (
    [RECID]                BIGINT        NOT NULL,
    [DISPLAYPRODUCTNUMBER] NVARCHAR (70) NOT NULL,
    [INSTANCERELATIONTYPE] BIGINT        NOT NULL,
    [PRODUCTTYPE]          INT           NOT NULL,
    [SEARCHNAME]           NVARCHAR (20) NOT NULL,
    [RELATIONTYPE]         BIGINT        NOT NULL,
    [ROWVERSION]           TIMESTAMP     NOT NULL,
    CONSTRAINT [I_ECORESPRODUCT_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-441108210_532903983] UNIQUE NONCLUSTERED ([DISPLAYPRODUCTNUMBER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILSTORELOCATORGROUPOWNER]...';


GO
CREATE TABLE [ax].[RETAILSTORELOCATORGROUPOWNER] (
    [RECID]        BIGINT    NOT NULL,
    [CHANNEL]      BIGINT    NOT NULL,
    [LOCATORGROUP] BIGINT    NOT NULL,
    [ROWVERSION]   TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILSTORELOCATORGROUPOWNER_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-2009456858_-276372453] UNIQUE NONCLUSTERED ([CHANNEL] ASC, [LOCATORGROUP] ASC)
);


GO
PRINT N'Creating [ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP]...';


GO
CREATE TABLE [ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP] (
    [RECID]             BIGINT    NOT NULL,
    [ASSORTMENTID]      BIGINT    NOT NULL,
    [OMOPERATINGUNITID] BIGINT    NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILASSORTMENTLOOKUPCHANNELGROUP_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-789342849_-1871154347] UNIQUE CLUSTERED ([OMOPERATINGUNITID] ASC, [ASSORTMENTID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILASYNCCUSTOMER]...';


GO
CREATE TABLE [ax].[RETAILASYNCCUSTOMER] (
    [ONLINECUSTCREATED]            INT              NOT NULL,
    [CUSTACCOUNTASYNC]             NVARCHAR (38)    NOT NULL,
    [CUSTACCOUNT]                  NVARCHAR (20)    NOT NULL,
    [CUSTNAME]                     NVARCHAR (100)   NOT NULL,
    [CUSTGROUP]                    NVARCHAR (10)    NOT NULL,
    [CURRENCY]                     NVARCHAR (3)     NOT NULL,
    [LANGUAGEID]                   NVARCHAR (7)     NOT NULL,
    [STREET]                       NVARCHAR (250)   NOT NULL,
    [ZIPCODE]                      NVARCHAR (10)    NOT NULL,
    [STATE]                        NVARCHAR (10)    NOT NULL,
    [COUNTY]                       NVARCHAR (10)    NOT NULL,
    [PHONE]                        NVARCHAR (20)    NOT NULL,
    [CELLULARPHONE]                NVARCHAR (20)    NOT NULL,
    [EMAIL]                        NVARCHAR (255)   NOT NULL,
    [URL]                          NVARCHAR (255)   NOT NULL,
    [MULTILINEDISC]                NVARCHAR (10)    NOT NULL,
    [ENDDISC]                      NVARCHAR (10)    NOT NULL,
    [LINEDISC]                     NVARCHAR (10)    NOT NULL,
    [PRICEGROUP]                   NVARCHAR (10)    NOT NULL,
    [TAXGROUP]                     NVARCHAR (10)    NOT NULL,
    [CREDITMAX]                    NUMERIC (32, 16) NOT NULL,
    [BLOCKED]                      INT              NOT NULL,
    [ORGANIZATIONID]               NVARCHAR (10)    NOT NULL,
    [USEPURCHREQUEST]              INT              NOT NULL,
    [VATNUM]                       NVARCHAR (20)    NOT NULL,
    [INVOICEACCOUNT]               NVARCHAR (20)    NOT NULL,
    [MANDATORYCREDITLIMIT]         INT              NOT NULL,
    [CONTACTPERSONID]              NVARCHAR (20)    NOT NULL,
    [USEORDERNUMBERREFERENCE]      INT              NOT NULL,
    [RECEIPTOPTION]                INT              NOT NULL,
    [RECEIPTEMAIL]                 NVARCHAR (80)    NOT NULL,
    [CITY]                         NVARCHAR (60)    NOT NULL,
    [COUNTRY]                      NVARCHAR (10)    NOT NULL,
    [IDENTIFICATIONNUMBER]         NVARCHAR (50)    NOT NULL,
    [STORERECID]                   BIGINT           NOT NULL,
    [RELATIONSHIPTYPE]             BIGINT           NOT NULL,
    [STREETNUMBER]                 NVARCHAR (20)    NOT NULL,
    [DISTRICTNAME]                 NVARCHAR (60)    NOT NULL,
    [BUILDINGCOMPLEMENT]           NVARCHAR (60)    NOT NULL,
    [CNPJCPFNUM_BR]                NVARCHAR (20)    NOT NULL,
    [ADDRESSNAME]                  NVARCHAR (100)   NOT NULL,
    [ADDRESSPHONE]                 NVARCHAR (20)    NOT NULL,
    [ADDRESSEMAIL]                 NVARCHAR (255)   NOT NULL,
    [ADDRESSURL]                   NVARCHAR (255)   NOT NULL,
    [ADDRESSTAXGROUP]              NVARCHAR (10)    NOT NULL,
    [FIRSTNAME]                    NVARCHAR (25)    NOT NULL,
    [MIDDLENAME]                   NVARCHAR (25)    NOT NULL,
    [LASTNAME]                     NVARCHAR (25)    NOT NULL,
    [PHONEEXTENSION]               NVARCHAR (10)    NOT NULL,
    [RETAILCUSTAFFILIATIONS]       NVARCHAR (MAX)   NULL,
    [ADDRESSTYPE]                  INT              NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_1824445729_-1304406153] PRIMARY KEY NONCLUSTERED ([CUSTACCOUNTASYNC] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILASYNCCUSTOMER_REPLICATIONCOUNTERFROMORIGIN] UNIQUE CLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETURNREASONCODE]...';


GO
CREATE TABLE [ax].[RETURNREASONCODE] (
    [RECID]             BIGINT        NOT NULL,
    [DESCRIPTION]       NVARCHAR (60) NOT NULL,
    [REASONCODEGROUPID] NVARCHAR (10) NOT NULL,
    [REASONCODEID]      NVARCHAR (10) NOT NULL,
    [DATAAREAID]        NVARCHAR (4)  NOT NULL,
    [ROWVERSION]        TIMESTAMP     NOT NULL,
    CONSTRAINT [I_-572885641_1545914556] PRIMARY KEY CLUSTERED ([REASONCODEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPOSTHEME]...';


GO
CREATE TABLE [ax].[RETAILPOSTHEME] (
    [RECID]      BIGINT         NOT NULL,
    [DEVICETYPE] BIGINT         NOT NULL,
    [NAME]       NVARCHAR (100) NOT NULL,
    [ROWVERSION] TIMESTAMP      NOT NULL,
    CONSTRAINT [I_RETAILPOSTHEME_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_955159962_516664720] UNIQUE NONCLUSTERED ([DEVICETYPE] ASC, [NAME] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPOSBATCHTABLE]...';


GO
CREATE TABLE [ax].[RETAILPOSBATCHTABLE] (
    [TERMINALID]           NVARCHAR (10)    NOT NULL,
    [BATCHID]              BIGINT           NOT NULL,
    [CHANNEL]              BIGINT           NOT NULL,
    [CLOSEDATE]            DATE             NOT NULL,
    [CLOSEDATETIMEUTC]     DATETIME         NOT NULL,
    [CLOSEDATETIMEUTCTZID] INT              NOT NULL,
    [CLOSEDATTERMINAL]     NVARCHAR (10)    NOT NULL,
    [CLOSETIME]            INT              NOT NULL,
    [CUSTOMERSCOUNT]       INT              NOT NULL,
    [DISCOUNTTOTAL]        NUMERIC (32, 16) NOT NULL,
    [LOGONSCOUNT]          INT              NOT NULL,
    [NOSALECOUNT]          INT              NOT NULL,
    [PAIDTOACCOUNTTOTAL]   NUMERIC (32, 16) NOT NULL,
    [POSTED]               INT              NOT NULL,
    [REPLICATIONCOUNTER]   INT              IDENTITY (1, 1) NOT NULL,
    [RETURNSTOTAL]         NUMERIC (32, 16) NOT NULL,
    [ROUNDEDAMOUNTTOTAL]   NUMERIC (32, 16) NOT NULL,
    [SALESCOUNT]           INT              NOT NULL,
    [SALESTOTAL]           NUMERIC (32, 16) NOT NULL,
    [STAFFID]              NVARCHAR (25)    NOT NULL,
    [STARTDATE]            DATE             NOT NULL,
    [STARTDATETIMEUTC]     DATETIME         NOT NULL,
    [STARTDATETIMEUTCTZID] INT              NOT NULL,
    [STARTTIME]            INT              NOT NULL,
    [STATUS]               INT              NOT NULL,
    [STOREID]              NVARCHAR (10)    NOT NULL,
    [TAXTOTAL]             NUMERIC (32, 16) NOT NULL,
    [TRANSACTIONSCOUNT]    INT              NOT NULL,
    [VOIDSCOUNT]           INT              NOT NULL,
    [GOODSSOLDQTY]         NUMERIC (32, 16) NOT NULL,
    [PRICEOVERRIDETOTAL]   NUMERIC (32, 16) NOT NULL,
    [RECEIPTCOPIESCOUNT]   INT              NOT NULL,
    [RECEIPTCOPIESTOTAL]   NUMERIC (32, 16) NOT NULL,
    [RETURNSCOUNT]         INT              NOT NULL,
    [RETURNSGRANDTOTAL]    NUMERIC (32, 16) NOT NULL,
    [SALESGRANDTOTAL]      NUMERIC (32, 16) NOT NULL,
    [SERVICESSOLDQTY]      NUMERIC (32, 16) NOT NULL,
    [SUSPENDEDCOUNT]       INT              NOT NULL,
    [SUSPENDEDTOTAL]       NUMERIC (32, 16) NOT NULL,
    [TRAININGCOUNT]        INT              NOT NULL,
    [TRAININGTOTAL]        NUMERIC (32, 16) NOT NULL,
    [DATAAREAID]           NVARCHAR (4)     NOT NULL,
    [ROWVERSION]           TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-1033447763_133955128] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [BATCHID] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILPOSBATCHTABLE_REPLICATIONCOUNTER] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTER] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPERIODICDISCOUNTLINE]...';


GO
CREATE TABLE [ax].[RETAILPERIODICDISCOUNTLINE] (
    [RECID]                  BIGINT           NOT NULL,
    [DISCOUNTPERCENTORVALUE] NUMERIC (32, 16) NOT NULL,
    [INSTANCERELATIONTYPE]   BIGINT           NOT NULL,
    [ISDISCOUNTCODEREQUIRED] INT              NOT NULL,
    [LINENUM]                NUMERIC (32, 16) NOT NULL,
    [NAME]                   NVARCHAR (60)    NOT NULL,
    [OFFERID]                NVARCHAR (20)    NOT NULL,
    [RETAILGROUPMEMBERLINE]  BIGINT           NOT NULL,
    [STATUS]                 INT              NOT NULL,
    [UNITOFMEASURE]          BIGINT           NOT NULL,
    [RELATIONTYPE]           BIGINT           NOT NULL,
    [DATAAREAID]             NVARCHAR (4)     NOT NULL,
    [ROWVERSION]             TIMESTAMP        NOT NULL,
    CONSTRAINT [I_RETAILPERIODICDISCOUNTLINE_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-2095525985_1217888543] UNIQUE CLUSTERED ([OFFERID] ASC, [LINENUM] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_-2095525985_-470159237] UNIQUE NONCLUSTERED ([RETAILGROUPMEMBERLINE] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTCATEGORY]...';


GO
CREATE TABLE [ax].[ECORESPRODUCTCATEGORY] (
    [RECID]             BIGINT    NOT NULL,
    [CATEGORY]          BIGINT    NOT NULL,
    [CATEGORYHIERARCHY] BIGINT    NOT NULL,
    [PRODUCT]           BIGINT    NOT NULL,
    [MODIFIEDDATETIME]  DATETIME  NOT NULL,
    [ROWVERSION]        TIMESTAMP NOT NULL,
    CONSTRAINT [I_ECORESPRODUCTCATEGORY_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_474291702_345072579] UNIQUE CLUSTERED ([PRODUCT] ASC, [CATEGORY] ASC)
);


GO
PRINT N'Creating [ax].[ECORESPRODUCTCATEGORY].[IX_ECORESPRODUCTCATEGORY_CATEGORYHIERARCHY]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTCATEGORY_CATEGORYHIERARCHY]
    ON [ax].[ECORESPRODUCTCATEGORY]([CATEGORYHIERARCHY] ASC)
    INCLUDE([PRODUCT], [CATEGORY]);


GO
PRINT N'Creating [ax].[ECORESPRODUCTCATEGORY].[IX_ECORESPRODUCTCATEGORY_VERSION]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTCATEGORY_VERSION]
    ON [ax].[ECORESPRODUCTCATEGORY]([ROWVERSION] ASC)
    INCLUDE([CATEGORY], [PRODUCT]);


GO
PRINT N'Creating [ax].[ECORESPRODUCTCATEGORY].[IX_ECORESPRODUCTCATEGORY_CATEGORY]...';


GO
CREATE NONCLUSTERED INDEX [IX_ECORESPRODUCTCATEGORY_CATEGORY]
    ON [ax].[ECORESPRODUCTCATEGORY]([CATEGORY] ASC)
    INCLUDE([PRODUCT]);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGPRODUCT]...';


GO
CREATE TABLE [ax].[RETAILPUBCATALOGPRODUCT] (
    [RECID]            BIGINT    NOT NULL,
    [CATALOG]          BIGINT    NOT NULL,
    [ORIGIN]           BIGINT    NOT NULL,
    [PRODUCT]          BIGINT    NOT NULL,
    [USEHIERARCHY]     INT       NOT NULL,
    [CREATEDDATETIME]  DATETIME  NOT NULL,
    [MODIFIEDDATETIME] DATETIME  NOT NULL,
    [ROWVERSION]       TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBCATALOGPRODUCT_RECID] PRIMARY KEY NONCLUSTERED ([RECID] ASC),
    CONSTRAINT [I_144266078_-162312163] UNIQUE NONCLUSTERED ([ORIGIN] ASC),
    CONSTRAINT [I_144266078_1631511146] UNIQUE CLUSTERED ([CATALOG] ASC, [PRODUCT] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBCATALOGPRODUCT].[IX_RETAILPUBCATALOGPRODUCT_PRODUCT]...';


GO
CREATE NONCLUSTERED INDEX [IX_RETAILPUBCATALOGPRODUCT_PRODUCT]
    ON [ax].[RETAILPUBCATALOGPRODUCT]([PRODUCT] ASC)
    INCLUDE([CATALOG]);


GO
PRINT N'Creating [ax].[RETAILINFORMATIONSUBCODETRANSLATION]...';


GO
CREATE TABLE [ax].[RETAILINFORMATIONSUBCODETRANSLATION] (
    [RECID]       BIGINT        NOT NULL,
    [DESCRIPTION] NVARCHAR (60) NOT NULL,
    [INFOSUBCODE] BIGINT        NOT NULL,
    [LANGUAGEID]  NVARCHAR (7)  NOT NULL,
    [DATAAREAID]  NVARCHAR (4)  NOT NULL,
    [ROWVERSION]  TIMESTAMP     NOT NULL,
    CONSTRAINT [I_RETAILINFORMATIONSUBCODETRANSLATION_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1974585269_-310291638] UNIQUE NONCLUSTERED ([INFOSUBCODE] ASC, [LANGUAGEID] ASC, [DATAAREAID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILFISCALDOCUMENTMODEL2_BR]...';


GO
CREATE TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR] (
    [CONSUMERCNPJCPFNUMBER]        NVARCHAR (20)    NOT NULL,
    [FISCALDOCUMENTACCOUNTNUM]     NVARCHAR (20)    NOT NULL,
    [FISCALDOCUMENTDATE]           DATE             NOT NULL,
    [FISCALDOCUMENTNUMBER]         NVARCHAR (20)    NOT NULL,
    [FISCALDOCUMENTSERIES]         NVARCHAR (3)     NOT NULL,
    [REPLICATIONCOUNTERFROMORIGIN] INT              IDENTITY (1, 1) NOT NULL,
    [STATUS]                       INT              NOT NULL,
    [STOREID]                      NVARCHAR (10)    NOT NULL,
    [TERMINALID]                   NVARCHAR (10)    NOT NULL,
    [TOTALAMOUNT]                  NUMERIC (32, 16) NOT NULL,
    [TOTALDISCOUNTAMOUNT]          NUMERIC (32, 16) NOT NULL,
    [TOTALSURCHARGEAMOUNT]         NUMERIC (32, 16) NOT NULL,
    [TRANSACTIONID]                NVARCHAR (44)    NOT NULL,
    [DATAAREAID]                   NVARCHAR (4)     NOT NULL,
    [ROWVERSION]                   TIMESTAMP        NOT NULL,
    CONSTRAINT [I_-536311148_419671329] PRIMARY KEY CLUSTERED ([STOREID] ASC, [TERMINALID] ASC, [FISCALDOCUMENTDATE] ASC, [FISCALDOCUMENTSERIES] ASC, [FISCALDOCUMENTNUMBER] ASC, [DATAAREAID] ASC),
    CONSTRAINT [I_RETAILFISCALDOCUMENTMODEL2_BR_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED ([REPLICATIONCOUNTERFROMORIGIN] ASC)
);


GO
PRINT N'Creating [ax].[RETAILLOYALTYSCHEMECHANNEL]...';


GO
CREATE TABLE [ax].[RETAILLOYALTYSCHEMECHANNEL] (
    [RECID]                  BIGINT    NOT NULL,
    [LOYALTYSCHEME]          BIGINT    NOT NULL,
    [OMHIERARCHYTYPE]        BIGINT    NOT NULL,
    [OMINTERNALORGANIZATION] BIGINT    NOT NULL,
    [ROWVERSION]             TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILLOYALTYSCHEMECHANNEL_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_-836280753_-1434205541] UNIQUE NONCLUSTERED ([LOYALTYSCHEME] ASC, [OMINTERNALORGANIZATION] ASC, [OMHIERARCHYTYPE] ASC)
);


GO
PRINT N'Creating [ax].[RETAILDISCOUNTMULTIBUY]...';


GO
CREATE TABLE [ax].[RETAILDISCOUNTMULTIBUY] (
    [RECID]                BIGINT       NOT NULL,
    [MULTIBUYDISCOUNTTYPE] INT          NULL,
    [DATAAREAID]           NVARCHAR (4) NOT NULL,
    [ROWVERSION]           TIMESTAMP    NOT NULL,
    CONSTRAINT [I_RETAILDISCOUNTMULTIBUY_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]...';


GO
CREATE TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED] (
    [RECID]                BIGINT    NOT NULL,
    [ANCESTORINTERNALORG]  BIGINT    NOT NULL,
    [DISTANCE]             INT       NOT NULL,
    [INTERNALORGANIZATION] BIGINT    NOT NULL,
    [VALIDFROM]            DATETIME  NOT NULL,
    [VALIDFROMTZID]        INT       NOT NULL,
    [VALIDTO]              DATETIME  NOT NULL,
    [VALIDTOTZID]          INT       NOT NULL,
    [ROWVERSION]           TIMESTAMP NOT NULL,
    CONSTRAINT [I_RETAILPUBINTORGINHERITANCEEXPLODED_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC),
    CONSTRAINT [I_1617694060_-824416454] UNIQUE NONCLUSTERED ([VALIDFROM] ASC, [VALIDTO] ASC, [INTERNALORGANIZATION] ASC, [ANCESTORINTERNALORG] ASC)
);


GO
PRINT N'Creating [ax].[ECORESTEXTVALUE]...';


GO
CREATE TABLE [ax].[ECORESTEXTVALUE] (
    [RECID]      BIGINT          NOT NULL,
    [TEXTVALUE]  NVARCHAR (1999) NOT NULL,
    [ROWVERSION] TIMESTAMP       NOT NULL,
    CONSTRAINT [I_ECORESTEXTVALUE_RECID] PRIMARY KEY CLUSTERED ([RECID] ASC)
);


GO
PRINT N'Creating unnamed constraint on [crt].[RETAILSHIPMENTPUBLISHINGSTATUS]...';


GO
ALTER TABLE [crt].[RETAILSHIPMENTPUBLISHINGSTATUS]
    ADD DEFAULT (GETUTCDATE()) FOR [LASTMODIFIEDDATETIME];


GO
PRINT N'Creating [crt].[DF_PURCHASERECEIVEDNOWQTY]...';


GO
ALTER TABLE [crt].[PICKINGLISTLINE]
    ADD CONSTRAINT [DF_PURCHASERECEIVEDNOWQTY] DEFAULT 0 FOR [PURCHASERECEIVEDNOW];


GO
PRINT N'Creating [crt].[DF_PURCHASERECEIVED]...';


GO
ALTER TABLE [crt].[PURCHASEORDERLINE]
    ADD CONSTRAINT [DF_PURCHASERECEIVED] DEFAULT 0 FOR [PURCHASERECEIVED];


GO
PRINT N'Creating [crt].[DF_PURCHASEQUANTITY]...';


GO
ALTER TABLE [crt].[PURCHASEORDERLINE]
    ADD CONSTRAINT [DF_PURCHASEQUANTITY] DEFAULT 0 FOR [PURCHASEQUANTITY];


GO
PRINT N'Creating [crt].[DF_QUANTITYORDERED]...';


GO
ALTER TABLE [crt].[PURCHASEORDERLINE]
    ADD CONSTRAINT [DF_QUANTITYORDERED] DEFAULT 0 FOR [QUANTITYORDERED];


GO
PRINT N'Creating [crt].[DF_PURCHASERECEIVEDNOW]...';


GO
ALTER TABLE [crt].[PURCHASEORDERLINE]
    ADD CONSTRAINT [DF_PURCHASERECEIVEDNOW] DEFAULT 0 FOR [PURCHASERECEIVEDNOW];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSIONLOG]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSIONLOG]
    ADD DEFAULT ('') FOR [MESSAGE];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSIONLOG]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSIONLOG]
    ADD DEFAULT 0 FOR [STATUS];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSIONLOG]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSIONLOG]
    ADD DEFAULT GETDATE() FOR [DATECREATED];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSION]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSION]
    ADD DEFAULT ('') FOR [CHECKSUM];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSION]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSION]
    ADD DEFAULT ('') FOR [MESSAGE];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSION]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSION]
    ADD DEFAULT 0 FOR [FILESIZE];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSION]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSION]
    ADD DEFAULT 0 FOR [STATUS];


GO
PRINT N'Creating unnamed constraint on [crt].[RETAILUPGRADEHISTORY]...';


GO
ALTER TABLE [crt].[RETAILUPGRADEHISTORY]
    ADD DEFAULT GETUTCDATE() FOR [DATEAPPLIED];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSIONDATAFILEHISTORY]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSIONDATAFILEHISTORY]
    ADD DEFAULT ('') FOR [DATAFILENAME];


GO
PRINT N'Creating unnamed constraint on [crt].[DOWNLOADSESSIONDATAFILEHISTORY]...';


GO
ALTER TABLE [crt].[DOWNLOADSESSIONDATAFILEHISTORY]
    ADD DEFAULT GETDATE() FOR [DATECREATED];


GO
PRINT N'Creating unnamed constraint on [crt].[TABLEREPLICATIONLOG]...';


GO
ALTER TABLE [crt].[TABLEREPLICATIONLOG]
    ADD DEFAULT 0 FOR [FILTERMIN];


GO
PRINT N'Creating unnamed constraint on [crt].[TABLEREPLICATIONLOG]...';


GO
ALTER TABLE [crt].[TABLEREPLICATIONLOG]
    ADD DEFAULT 0 FOR [FILTERMAX];


GO
PRINT N'Creating unnamed constraint on [crt].[UPLOADSESSION]...';


GO
ALTER TABLE [crt].[UPLOADSESSION]
    ADD DEFAULT GetDate() FOR [DATECREATED];


GO
PRINT N'Creating unnamed constraint on [crt].[UPLOADSESSION]...';


GO
ALTER TABLE [crt].[UPLOADSESSION]
    ADD DEFAULT 0 FOR [STATUS];


GO
PRINT N'Creating unnamed constraint on [crt].[UPLOADSESSION]...';


GO
ALTER TABLE [crt].[UPLOADSESSION]
    ADD DEFAULT 0 FOR [FILESIZE];


GO
PRINT N'Creating unnamed constraint on [crt].[UPLOADSESSION]...';


GO
ALTER TABLE [crt].[UPLOADSESSION]
    ADD DEFAULT ('') FOR [JOBID];


GO
PRINT N'Creating unnamed constraint on [crt].[UPLOADSESSION]...';


GO
ALTER TABLE [crt].[UPLOADSESSION]
    ADD DEFAULT ('') FOR [CHECKSUM];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__SYNCS__975EB44E]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__SYNCS__975EB44E] DEFAULT ((37001)) FOR [SYNCSTOPTIMETZID];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__SYNCS__966A9015]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__SYNCS__966A9015] DEFAULT ('1900-01-01 00:00:00.000') FOR [SYNCSTOPTIME];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__TERMI__9852D887]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__TERMI__9852D887] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__TOTAL__9299FF31]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__TOTAL__9299FF31] DEFAULT ((0)) FOR [TOTALUPLOADEDOK];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__TOTAL__938E236A]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__TOTAL__938E236A] DEFAULT ((0)) FOR [TOTALUPLOADEDERR];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__TOTAL__91A5DAF8]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__TOTAL__91A5DAF8] DEFAULT ((0)) FOR [TOTALUPLOADED];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__SYNCS__95766BDC]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__SYNCS__95766BDC] DEFAULT ((37001)) FOR [SYNCSTARTTIMETZID];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__SYNCS__948247A3]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__SYNCS__948247A3] DEFAULT ('1900-01-01 00:00:00.000') FOR [SYNCSTARTTIME];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__LOGTI__9BED01A2]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__LOGTI__9BED01A2] DEFAULT ('1900-01-01 00:00:00.000') FOR [LOGTIME];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__LOGTI__9CE125DB]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__LOGTI__9CE125DB] DEFAULT ((37001)) FOR [LOGTIMETZID];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__TOTAL__9FBD9286]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__TOTAL__9FBD9286] DEFAULT ((0)) FOR [TOTALDOWNLOADEDOK];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__TOTAL__90B1B6BF]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__TOTAL__90B1B6BF] DEFAULT ((0)) FOR [TOTALDOWNLOADEDERR];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__SCOPE__9DD54A14]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__SCOPE__9DD54A14] DEFAULT ((0)) FOR [SCOPEID];


GO
PRINT N'Creating [crt].[DF__RETAILOFF__TOTAL__9EC96E4D]...';


GO
ALTER TABLE [crt].[RETAILOFFLINESYNCLOG]
    ADD CONSTRAINT [DF__RETAILOFF__TOTAL__9EC96E4D] DEFAULT ((0)) FOR [TOTALDOWNLOADED];


GO
PRINT N'Creating unnamed constraint on [crt].[RETAILCUSTOMEREMAILACTIVATION]...';


GO
ALTER TABLE [crt].[RETAILCUSTOMEREMAILACTIVATION]
    ADD DEFAULT NEWSEQUENTIALID() FOR [ACTIVATIONID];


GO
PRINT N'Creating [crt].[DF_QTYREMAINRECEIVE]...';


GO
ALTER TABLE [crt].[TRANSFERORDERLINE]
    ADD CONSTRAINT [DF_QTYREMAINRECEIVE] DEFAULT 0 FOR [QUANTITYREMAINRECEIVE];


GO
PRINT N'Creating [crt].[DF_QTYRECEIVED]...';


GO
ALTER TABLE [crt].[TRANSFERORDERLINE]
    ADD CONSTRAINT [DF_QTYRECEIVED] DEFAULT 0 FOR [QUANTITYRECEIVED];


GO
PRINT N'Creating [crt].[DF_QTYSHIPNOW]...';


GO
ALTER TABLE [crt].[TRANSFERORDERLINE]
    ADD CONSTRAINT [DF_QTYSHIPNOW] DEFAULT 0 FOR [QUANTITYSHIPNOW];


GO
PRINT N'Creating [crt].[DF_QTYRECEIVENOW]...';


GO
ALTER TABLE [crt].[TRANSFERORDERLINE]
    ADD CONSTRAINT [DF_QTYRECEIVENOW] DEFAULT 0 FOR [QUANTITYRECEIVENOW];


GO
PRINT N'Creating [crt].[DF_QTYTRANSFER]...';


GO
ALTER TABLE [crt].[TRANSFERORDERLINE]
    ADD CONSTRAINT [DF_QTYTRANSFER] DEFAULT 0 FOR [QUANTITYTRANSFERRED];


GO
PRINT N'Creating [crt].[DF_QTYREMAINSHIP]...';


GO
ALTER TABLE [crt].[TRANSFERORDERLINE]
    ADD CONSTRAINT [DF_QTYREMAINSHIP] DEFAULT 0 FOR [QUANTITYREMAINSHIP];


GO
PRINT N'Creating [crt].[DF_QTYSHIPPED]...';


GO
ALTER TABLE [crt].[TRANSFERORDERLINE]
    ADD CONSTRAINT [DF_QTYSHIPPED] DEFAULT 0 FOR [QUANTITYSHIPPED];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXBASIS]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXBASIS] DEFAULT ((0)) FOR [TAXBASIS];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXPERCENTAGE]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXPERCENTAGE] DEFAULT ((0)) FOR [TAXPERCENTAGE];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXCOMPONENT]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXCOMPONENT] DEFAULT ('') FOR [TAXCOMPONENT];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TRANSACTIONID]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXFORMULA]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXFORMULA] DEFAULT ('') FOR [TAXFORMULA];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_SALELINENUM]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_SALELINENUM] DEFAULT ((0)) FOR [SALELINENUM];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXISINCLUDEDINPRICE]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXISINCLUDEDINPRICE] DEFAULT ((0)) FOR [TAXISINCLUDEDINPRICE];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_CHANNEL]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TERMINALID]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_STOREID]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXCODE]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXISEXEMPT]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXISEXEMPT] DEFAULT ((0)) FOR [TAXISEXEMPT];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_TAXITEMGROUP]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [crt].[DF_RETAILTRANSACTIONTAXTRANS_IN_ISTAXONTAX]...';


GO
ALTER TABLE [crt].[RETAILTRANSACTIONTAXTRANS_IN]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_IN_ISTAXONTAX] DEFAULT ((0)) FOR [ISTAXONTAX];


GO
PRINT N'Creating unnamed constraint on [crt].[OFFLINEDATABASEMETADATA]...';


GO
ALTER TABLE [crt].[OFFLINEDATABASEMETADATA]
    ADD DEFAULT (0) FOR [CHANNELID];


GO
PRINT N'Creating [ax].[DF_COMPANYDEFAULTLOCATION_LEGALENTITY]...';


GO
ALTER TABLE [ax].[COMPANYDEFAULTLOCATION]
    ADD CONSTRAINT [DF_COMPANYDEFAULTLOCATION_LEGALENTITY] DEFAULT ((0)) FOR [LEGALENTITY];


GO
PRINT N'Creating [ax].[DF_COMPANYDEFAULTLOCATION_PARTYLOCATIONROLE]...';


GO
ALTER TABLE [ax].[COMPANYDEFAULTLOCATION]
    ADD CONSTRAINT [DF_COMPANYDEFAULTLOCATION_PARTYLOCATIONROLE] DEFAULT ((0)) FOR [PARTYLOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_VALIDTO]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_VALIDTO] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_ASSIGNMENTREASONCODE]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_ASSIGNMENTREASONCODE] DEFAULT ((0)) FOR [ASSIGNMENTREASONCODE];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_VALIDTOTZID]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_VALIDTOTZID] DEFAULT ((37001)) FOR [VALIDTOTZID];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_POSITION]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_POSITION] DEFAULT ((0)) FOR [POSITION];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_VALIDFROM]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_VALIDFROM] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_WORKER]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_WORKER] DEFAULT ((0)) FOR [WORKER];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONWORKERASSIGNMENT_VALIDFROMTZID]...';


GO
ALTER TABLE [ax].[HCMPOSITIONWORKERASSIGNMENT]
    ADD CONSTRAINT [DF_HCMPOSITIONWORKERASSIGNMENT_VALIDFROMTZID] DEFAULT ((37001)) FOR [VALIDFROMTZID];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIARESOURCE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILMEDIARESOURCE]
    ADD CONSTRAINT [DF_RETAILMEDIARESOURCE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIARESOURCE_RESOURCEID]...';


GO
ALTER TABLE [ax].[RETAILMEDIARESOURCE]
    ADD CONSTRAINT [DF_RETAILMEDIARESOURCE_RESOURCEID] DEFAULT ((0)) FOR [RESOURCEID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_PROTOCOLNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_PROTOCOLNUMBER] DEFAULT ('') FOR [PROTOCOLNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_CANCELACCOUNTINGDATE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_CANCELACCOUNTINGDATE] DEFAULT ('1900-01-01 00:00:00.000') FOR [CANCELACCOUNTINGDATE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_STORE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_CANCELREASONCOMMENT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_CANCELREASONCOMMENT] DEFAULT ('') FOR [CANCELREASONCOMMENT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_ACCESSKEY]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_ACCESSKEY] DEFAULT ('') FOR [ACCESSKEY];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_MESSAGESTATUS]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_MESSAGESTATUS] DEFAULT ((0)) FOR [MESSAGESTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_RETURNCODEDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_RETURNCODEDESCRIPTION] DEFAULT ('') FOR [RETURNCODEDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTCANCEL_BR_CANCELACCOUNTINGDATETZID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTCANCEL_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTCANCEL_BR_CANCELACCOUNTINGDATETZID] DEFAULT ((37001)) FOR [CANCELACCOUNTINGDATETZID];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_DEPARTMENT]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_DEPARTMENT] DEFAULT ((0)) FOR [DEPARTMENT];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_VALIDTO]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_VALIDTO] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_POSITIONTYPE]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_POSITIONTYPE] DEFAULT ((0)) FOR [POSITIONTYPE];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_DESCRIPTION]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_VALIDTOTZID]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_VALIDTOTZID] DEFAULT ((37001)) FOR [VALIDTOTZID];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_TITLE]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_TITLE] DEFAULT ((0)) FOR [TITLE];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_FULLTIMEEQUIVALENCY]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_FULLTIMEEQUIVALENCY] DEFAULT ((0)) FOR [FULLTIMEEQUIVALENCY];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_VALIDFROM]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_VALIDFROM] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_JOB]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_JOB] DEFAULT ((0)) FOR [JOB];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_VALIDFROMTZID]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_VALIDFROMTZID] DEFAULT ((37001)) FOR [VALIDFROMTZID];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_COMPLOCATION]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_COMPLOCATION] DEFAULT ((0)) FOR [COMPLOCATION];


GO
PRINT N'Creating [ax].[DF_HCMPOSITIONDETAIL_POSITION]...';


GO
ALTER TABLE [ax].[HCMPOSITIONDETAIL]
    ADD CONSTRAINT [DF_HCMPOSITIONDETAIL_POSITION] DEFAULT ((0)) FOR [POSITION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_FISCALDOCUMENTSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_FISCALDOCUMENTSERIALNUMBER] DEFAULT ('') FOR [FISCALDOCUMENTSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_KPKNUMBER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_KPKNUMBER] DEFAULT ('') FOR [KPKNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_EKLZSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_EKLZSERIALNUMBER] DEFAULT ('') FOR [EKLZSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_FISCALPRINTERSHIFTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_FISCALPRINTERSHIFTID] DEFAULT ('') FOR [FISCALPRINTERSHIFTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_FISCALPRINTERSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_FISCALPRINTERSERIALNUMBER] DEFAULT ('') FOR [FISCALPRINTERSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RU_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE_RU]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RU_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_ISCAPTUREFAILED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_ISCAPTUREFAILED] DEFAULT ((0)) FOR [ISCAPTUREFAILED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_EXCHRATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_EXCHRATE] DEFAULT ((0)) FOR [EXCHRATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_GIFTCARDID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_GIFTCARDID] DEFAULT ('') FOR [GIFTCARDID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CARDTYPEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CARDTYPEID] DEFAULT ('') FOR [CARDTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CASHDOCID_RU]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CASHDOCID_RU] DEFAULT ('') FOR [CASHDOCID_RU];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_TENDERTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_TENDERTYPE] DEFAULT ('') FOR [TENDERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_LOYALTYCARDID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_LOYALTYCARDID] DEFAULT ('') FOR [LOYALTYCARDID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_MESSAGENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_MESSAGENUM] DEFAULT ((0)) FOR [MESSAGENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_AMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_AMOUNTCUR] DEFAULT ((0)) FOR [AMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_AMOUNTTENDERED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_AMOUNTTENDERED] DEFAULT ((0)) FOR [AMOUNTTENDERED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CREDITVOUCHERID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CREDITVOUCHERID] DEFAULT ('') FOR [CREDITVOUCHERID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_AUTHENTICATIONCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_AUTHENTICATIONCODE] DEFAULT ('') FOR [AUTHENTICATIONCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CARDORACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CARDORACCOUNT] DEFAULT ('') FOR [CARDORACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_ISPAYMENTCAPTURED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_ISPAYMENTCAPTURED] DEFAULT ((0)) FOR [ISPAYMENTCAPTURED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_EXCHRATEMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_EXCHRATEMST] DEFAULT ((0)) FOR [EXCHRATEMST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_ISPREPAYMENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_ISPREPAYMENT] DEFAULT ((0)) FOR [ISPREPAYMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_CHANGELINE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_CHANGELINE] DEFAULT ((0)) FOR [CHANGELINE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_MANAGERKEYLIVE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_MANAGERKEYLIVE] DEFAULT ((0)) FOR [MANAGERKEYLIVE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_QTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_AMOUNTMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_AMOUNTMST] DEFAULT ((0)) FOR [AMOUNTMST];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_TAXGROUPROUNDING]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_TAXGROUPROUNDING] DEFAULT ((0)) FOR [TAXGROUPROUNDING];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_SEARCHFIELD2]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_SEARCHFIELD2] DEFAULT ('') FOR [SEARCHFIELD2];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_TAXGROUPSETUP]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_TAXGROUPSETUP] DEFAULT ((0)) FOR [TAXGROUPSETUP];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_SEARCHFIELD1]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_SEARCHFIELD1] DEFAULT ('') FOR [SEARCHFIELD1];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_TAXGROUP]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_TAXPRINTDETAIL]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_TAXPRINTDETAIL] DEFAULT ((0)) FOR [TAXPRINTDETAIL];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_TAXGROUPNAME]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_TAXGROUPNAME] DEFAULT ('') FOR [TAXGROUPNAME];


GO
PRINT N'Creating [ax].[DF_TAXGROUPHEADING_TAXREVERSEONCASHDISC]...';


GO
ALTER TABLE [ax].[TAXGROUPHEADING]
    ADD CONSTRAINT [DF_TAXGROUPHEADING_TAXREVERSEONCASHDISC] DEFAULT ((0)) FOR [TAXREVERSEONCASHDISC];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_SALESID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_SALESID] DEFAULT ('') FOR [SALESID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_LASTINVENTTRANS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_LASTINVENTTRANS] DEFAULT ((0)) FOR [LASTINVENTTRANS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_RETRYCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_RETRYCOUNT] DEFAULT ((0)) FOR [RETRYCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_STATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_ERRORDETAIL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_ERRORDETAIL] DEFAULT ('') FOR [ERRORDETAIL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERSTATUS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERSTATUS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERSTATUS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURE_SYSTEMOFUNITS]...';


GO
ALTER TABLE [ax].[UNITOFMEASURE]
    ADD CONSTRAINT [DF_UNITOFMEASURE_SYSTEMOFUNITS] DEFAULT ((0)) FOR [SYSTEMOFUNITS];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[UNITOFMEASURE]
    ADD CONSTRAINT [DF_UNITOFMEASURE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURE_DECIMALPRECISION]...';


GO
ALTER TABLE [ax].[UNITOFMEASURE]
    ADD CONSTRAINT [DF_UNITOFMEASURE_DECIMALPRECISION] DEFAULT ((0)) FOR [DECIMALPRECISION];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURE_UNITOFMEASURECLASS]...';


GO
ALTER TABLE [ax].[UNITOFMEASURE]
    ADD CONSTRAINT [DF_UNITOFMEASURE_UNITOFMEASURECLASS] DEFAULT ((0)) FOR [UNITOFMEASURECLASS];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURE_SYMBOL]...';


GO
ALTER TABLE [ax].[UNITOFMEASURE]
    ADD CONSTRAINT [DF_UNITOFMEASURE_SYMBOL] DEFAULT ('') FOR [SYMBOL];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEDEFAULTVALUE_VALUE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEDEFAULTVALUE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEDEFAULTVALUE_VALUE] DEFAULT ((0)) FOR [VALUE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEDEFAULTVALUE_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEDEFAULTVALUE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEDEFAULTVALUE_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODESETUP_BR_TAXTYPE]...';


GO
ALTER TABLE [ax].[TAXATIONCODESETUP_BR]
    ADD CONSTRAINT [DF_TAXATIONCODESETUP_BR_TAXTYPE] DEFAULT ((0)) FOR [TAXTYPE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODESETUP_BR_MANDATORY]...';


GO
ALTER TABLE [ax].[TAXATIONCODESETUP_BR]
    ADD CONSTRAINT [DF_TAXATIONCODESETUP_BR_MANDATORY] DEFAULT ((0)) FOR [MANDATORY];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATETYPE_NAME]...';


GO
ALTER TABLE [ax].[EXCHANGERATETYPE]
    ADD CONSTRAINT [DF_EXCHANGERATETYPE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATETYPE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[EXCHANGERATETYPE]
    ADD CONSTRAINT [DF_EXCHANGERATETYPE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTPROFILELINE_RECEIPTTYPE]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTPROFILELINE]
    ADD CONSTRAINT [DF_RETAILRECEIPTPROFILELINE_RECEIPTTYPE] DEFAULT ((0)) FOR [RECEIPTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTPROFILELINE_FORMLAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTPROFILELINE]
    ADD CONSTRAINT [DF_RETAILRECEIPTPROFILELINE_FORMLAYOUTID] DEFAULT ('') FOR [FORMLAYOUTID];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTPROFILELINE_PROFILEID]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTPROFILELINE]
    ADD CONSTRAINT [DF_RETAILRECEIPTPROFILELINE_PROFILEID] DEFAULT ('') FOR [PROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTCATEGORY_CATALOGPRODUCT]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTCATEGORY_CATALOGPRODUCT] DEFAULT ((0)) FOR [CATALOGPRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTCATEGORY_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTCATEGORY_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTCATEGORY_CATEGORY]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTCATEGORY_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTCATEGORY_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTCATEGORY_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTCATEGORY_CATEGORYHIERARCHY]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTCATEGORY_CATEGORYHIERARCHY] DEFAULT ((0)) FOR [CATEGORYHIERARCHY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTCATEGORY_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTCATEGORY_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTCATEGORY_INCLUDEEXCLUDETYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTCATEGORY_INCLUDEEXCLUDETYPE] DEFAULT ((0)) FOR [INCLUDEEXCLUDETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILKIT_STATUS]...';


GO
ALTER TABLE [ax].[RETAILKIT]
    ADD CONSTRAINT [DF_RETAILKIT_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_RETAILKIT_DISCONTINUEKIT]...';


GO
ALTER TABLE [ax].[RETAILKIT]
    ADD CONSTRAINT [DF_RETAILKIT_DISCONTINUEKIT] DEFAULT ((0)) FOR [DISCONTINUEKIT];


GO
PRINT N'Creating [ax].[DF_RETAILKIT_PRODUCTMASTER]...';


GO
ALTER TABLE [ax].[RETAILKIT]
    ADD CONSTRAINT [DF_RETAILKIT_PRODUCTMASTER] DEFAULT ((0)) FOR [PRODUCTMASTER];


GO
PRINT N'Creating [ax].[DF_RETAILKIT_DISASSEMBLYATREGISTERALLOWED]...';


GO
ALTER TABLE [ax].[RETAILKIT]
    ADD CONSTRAINT [DF_RETAILKIT_DISASSEMBLYATREGISTERALLOWED] DEFAULT ((0)) FOR [DISASSEMBLYATREGISTERALLOWED];


GO
PRINT N'Creating [ax].[DF_INVENTSITEDEFAULTLOCATION_SITEID]...';


GO
ALTER TABLE [ax].[INVENTSITEDEFAULTLOCATION]
    ADD CONSTRAINT [DF_INVENTSITEDEFAULTLOCATION_SITEID] DEFAULT ('') FOR [SITEID];


GO
PRINT N'Creating [ax].[DF_INVENTSITEDEFAULTLOCATION_SITELOGISTICSLOCATIONROLE]...';


GO
ALTER TABLE [ax].[INVENTSITEDEFAULTLOCATION]
    ADD CONSTRAINT [DF_INVENTSITEDEFAULTLOCATION_SITELOGISTICSLOCATIONROLE] DEFAULT ((0)) FOR [SITELOGISTICSLOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_MIDDLENAME]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_MIDDLENAME] DEFAULT ('') FOR [MIDDLENAME];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_VALIDFROMTZID]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_VALIDFROMTZID] DEFAULT ((37001)) FOR [VALIDFROMTZID];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_LASTNAME]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_LASTNAME] DEFAULT ('') FOR [LASTNAME];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_VALIDTOTZID]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_VALIDTOTZID] DEFAULT ((37001)) FOR [VALIDTOTZID];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_VALIDFROM]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_VALIDFROM] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_FIRSTNAME]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_FIRSTNAME] DEFAULT ('') FOR [FIRSTNAME];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_VALIDTO]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_VALIDTO] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_DIRPERSONNAME_PERSON]...';


GO
ALTER TABLE [ax].[DIRPERSONNAME]
    ADD CONSTRAINT [DF_DIRPERSONNAME_PERSON] DEFAULT ((0)) FOR [PERSON];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTSTAFF_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTSTAFF]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTSTAFF_STAFF] DEFAULT ((0)) FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTSTAFF_LAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTSTAFF]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTSTAFF_LAYOUTID] DEFAULT ('') FOR [LAYOUTID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILSTORETABLE_TAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILSTORETABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILSTORETABLE_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILSTORETABLE_STORENUMBER]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILSTORETABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILSTORETABLE_STORENUMBER] DEFAULT ('') FOR [STORENUMBER];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_RETURNRELATION]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_RETURNRELATION] DEFAULT ('') FOR [RETURNRELATION];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_ITEMCODE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_ITEMCODE] DEFAULT ((0)) FOR [ITEMCODE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_DLVMODERELATION]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_DLVMODERELATION] DEFAULT ('') FOR [DLVMODERELATION];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_MODULETYPE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_MODULETYPE] DEFAULT ((0)) FOR [MODULETYPE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_MODULECATEGORY]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_MODULECATEGORY] DEFAULT ((0)) FOR [MODULECATEGORY];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_DLVMODECODE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_DLVMODECODE] DEFAULT ((0)) FOR [DLVMODECODE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_MARKUPRETURN]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_MARKUPRETURN] DEFAULT ((0)) FOR [MARKUPRETURN];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_ACCOUNTRELATION]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_ACCOUNTRELATION] DEFAULT ('') FOR [ACCOUNTRELATION];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_ACCOUNTCODE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_ACCOUNTCODE] DEFAULT ((0)) FOR [ACCOUNTCODE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOTABLE_ITEMRELATION]...';


GO
ALTER TABLE [ax].[MARKUPAUTOTABLE]
    ADD CONSTRAINT [DF_MARKUPAUTOTABLE_ITEMRELATION] DEFAULT ('') FOR [ITEMRELATION];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODE_INFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODE]
    ADD CONSTRAINT [DF_RETAILINFOCODE_INFOCODEID] DEFAULT ('') FOR [INFOCODEID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_RETAILVARIANTID]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_RETAILVARIANTID] DEFAULT ('') FOR [RETAILVARIANTID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_UNITID]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_UNITID] DEFAULT ('') FOR [UNITID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_QTY]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_INVENTDIMID]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_USEFORINPUT]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_USEFORINPUT] DEFAULT ((0)) FOR [USEFORINPUT];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_BARCODESETUPID]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_BARCODESETUPID] DEFAULT ('') FOR [BARCODESETUPID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_RETAILSHOWFORITEM]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_RETAILSHOWFORITEM] DEFAULT ((0)) FOR [RETAILSHOWFORITEM];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_ITEMBARCODE]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_ITEMBARCODE] DEFAULT ('') FOR [ITEMBARCODE];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_BLOCKED]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_BLOCKED] DEFAULT ((0)) FOR [BLOCKED];


GO
PRINT N'Creating [ax].[DF_INVENTITEMBARCODE_USEFORPRINTING]...';


GO
ALTER TABLE [ax].[INVENTITEMBARCODE]
    ADD CONSTRAINT [DF_INVENTITEMBARCODE_USEFORPRINTING] DEFAULT ((0)) FOR [USEFORPRINTING];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXCALCULATIONDATETYPE]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXCALCULATIONDATETYPE] DEFAULT ((0)) FOR [TAXCALCULATIONDATETYPE];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_CUSTOMS_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_CUSTOMS_IN] DEFAULT ((0)) FOR [CUSTOMS_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXSPECIFYLINE]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXSPECIFYLINE] DEFAULT ((0)) FOR [TAXSPECIFYLINE];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_REPORTADJUSTMENT]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_REPORTADJUSTMENT] DEFAULT ((0)) FOR [REPORTADJUSTMENT];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_CASHDISCONINVOICE]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_CASHDISCONINVOICE] DEFAULT ((0)) FOR [CASHDISCONINVOICE];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXLESSCASHDISC]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXLESSCASHDISC] DEFAULT ((0)) FOR [TAXLESSCASHDISC];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_VENDORCALCULATIONDATETYPE_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_VENDORCALCULATIONDATETYPE_IN] DEFAULT ((0)) FOR [VENDORCALCULATIONDATETYPE_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_JOURNALINCLTAX]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_JOURNALINCLTAX] DEFAULT ((0)) FOR [JOURNALINCLTAX];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_EXCISE_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_EXCISE_IN] DEFAULT ((0)) FOR [EXCISE_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_VALIDATETAXCODE]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_VALIDATETAXCODE] DEFAULT ((0)) FOR [VALIDATETAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_REVERSEONCASHDISC]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_REVERSEONCASHDISC] DEFAULT ((0)) FOR [REVERSEONCASHDISC];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXONOVERPAYMENT]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXONOVERPAYMENT] DEFAULT ((0)) FOR [TAXONOVERPAYMENT];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_CHECKINTERSECTION]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_CHECKINTERSECTION] DEFAULT ((0)) FOR [CHECKINTERSECTION];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_EXIMINCENTIVESCHEMES_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_EXIMINCENTIVESCHEMES_IN] DEFAULT ((0)) FOR [EXIMINCENTIVESCHEMES_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_SALESTAX_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_SALESTAX_IN] DEFAULT ((0)) FOR [SALESTAX_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXRECOVERABLE_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXRECOVERABLE_IN] DEFAULT ((0)) FOR [TAXRECOVERABLE_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_CONDITIONALTAX]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_CONDITIONALTAX] DEFAULT ((0)) FOR [CONDITIONALTAX];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_MANDATORYTAXDIRECTION]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_MANDATORYTAXDIRECTION] DEFAULT ((0)) FOR [MANDATORYTAXDIRECTION];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_ALLOWDUPLICATES]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_ALLOWDUPLICATES] DEFAULT ((0)) FOR [ALLOWDUPLICATES];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXGROUP]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_SERVICETAX_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_SERVICETAX_IN] DEFAULT ((0)) FOR [SERVICETAX_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_CUSTOMERCALCULATIONDATETYPE_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_CUSTOMERCALCULATIONDATETYPE_IN] DEFAULT ((0)) FOR [CUSTOMERCALCULATIONDATETYPE_IN];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXREPORT_JP]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXREPORT_JP] DEFAULT ((0)) FOR [TAXREPORT_JP];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_PURCHTAXONOPERATIONS]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_PURCHTAXONOPERATIONS] DEFAULT ((0)) FOR [PURCHTAXONOPERATIONS];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_CALCULATEPRINCIPLE]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_CALCULATEPRINCIPLE] DEFAULT ((0)) FOR [CALCULATEPRINCIPLE];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_TAXITEMGROUP]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_TAXPARAMETERS_VAT_IN]...';


GO
ALTER TABLE [ax].[TAXPARAMETERS]
    ADD CONSTRAINT [DF_TAXPARAMETERS_VAT_IN] DEFAULT ((0)) FOR [VAT_IN];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPRICEGROUP_PRICEGROUP]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILCHANNELPRICEGROUP_PRICEGROUP] DEFAULT ((0)) FOR [PRICEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPRICEGROUP_RETAILCHANNEL]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILCHANNELPRICEGROUP_RETAILCHANNEL] DEFAULT ((0)) FOR [RETAILCHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_VALUE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_VALUE] DEFAULT ((0)) FOR [VALUE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_TAXITEMGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_MARKUPLINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_MARKUPLINENUM] DEFAULT ((0)) FOR [MARKUPLINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_METHOD]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_METHOD] DEFAULT ((0)) FOR [METHOD];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_TAXAMOUNTINCLUSIVE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_TAXAMOUNTINCLUSIVE] DEFAULT ((0)) FOR [TAXAMOUNTINCLUSIVE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_TAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_CALCULATEDAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_CALCULATEDAMOUNT] DEFAULT ((0)) FOR [CALCULATEDAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_TAXAMOUNTEXCLUSIVE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_TAXAMOUNTEXCLUSIVE] DEFAULT ((0)) FOR [TAXAMOUNTEXCLUSIVE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_SALELINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_SALELINENUM] DEFAULT ((0)) FOR [SALELINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_MARKUPCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_MARKUPCODE] DEFAULT ('') FOR [MARKUPCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONMARKUPTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONMARKUPTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONMARKUPTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_COUNTY]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_COUNTY] DEFAULT ('') FOR [COUNTY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_PHONE]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_PHONE] DEFAULT ('') FOR [PHONE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_STREET]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_STREET] DEFAULT ('') FOR [STREET];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_STATE]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_STATE] DEFAULT ('') FOR [STATE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_URL]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_URL] DEFAULT ('') FOR [URL];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_TAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_ZIP]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_ZIP] DEFAULT ('') FOR [ZIP];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_EMAIL]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_EMAIL] DEFAULT ('') FOR [EMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_STREETNUMBER]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_STREETNUMBER] DEFAULT ('') FOR [STREETNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_CITY]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_CITY] DEFAULT ('') FOR [CITY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_COUNTRY]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_COUNTRY] DEFAULT ('') FOR [COUNTRY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_MAKEPOSTALADDRESSPRIMARY]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_MAKEPOSTALADDRESSPRIMARY] DEFAULT ((0)) FOR [MAKEPOSTALADDRESSPRIMARY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_ROLE]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_ROLE] DEFAULT ((0)) FOR [ROLE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_DISTRICTNAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_DISTRICTNAME] DEFAULT ('') FOR [DISTRICTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_BUILDINGCOMPLIMENT]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_BUILDINGCOMPLIMENT] DEFAULT ('') FOR [BUILDINGCOMPLIMENT];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_ADDRESSID]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_ADDRESSID] DEFAULT ('') FOR [ADDRESSID];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_CUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_CUSTACCOUNT] DEFAULT ('') FOR [CUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_CUSTNAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_CUSTNAME] DEFAULT ('') FOR [CUSTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_ONLINEADDRESSCREATED]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_ONLINEADDRESSCREATED] DEFAULT ((0)) FOR [ONLINEADDRESSCREATED];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCADDRESS_CUSTACCOUNTASYNC]...';


GO
ALTER TABLE [ax].[RETAILASYNCADDRESS]
    ADD CONSTRAINT [DF_RETAILASYNCADDRESS_CUSTACCOUNTASYNC] DEFAULT ('') FOR [CUSTACCOUNTASYNC];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETABLE_IN_SHOWTAXONTAX]...';


GO
ALTER TABLE [ax].[RETAILSTORETABLE_IN]
    ADD CONSTRAINT [DF_RETAILSTORETABLE_IN_SHOWTAXONTAX] DEFAULT ((0)) FOR [SHOWTAXONTAX];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETABLE_IN_TAXDETAILSTYPE]...';


GO
ALTER TABLE [ax].[RETAILSTORETABLE_IN]
    ADD CONSTRAINT [DF_RETAILSTORETABLE_IN_TAXDETAILSTYPE] DEFAULT ((0)) FOR [TAXDETAILSTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETABLE_IN_SALESTAXFORMTYPES]...';


GO
ALTER TABLE [ax].[RETAILSTORETABLE_IN]
    ADD CONSTRAINT [DF_RETAILSTORETABLE_IN_SALESTAXFORMTYPES] DEFAULT ((0)) FOR [SALESTAXFORMTYPES];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETABLE_IN_RETAILSTORETABLE]...';


GO
ALTER TABLE [ax].[RETAILSTORETABLE_IN]
    ADD CONSTRAINT [DF_RETAILSTORETABLE_IN_RETAILSTORETABLE] DEFAULT ((0)) FOR [RETAILSTORETABLE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_COMMENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_COMMENT] DEFAULT ('') FOR [COMMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_CUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_CUSTACCOUNT] DEFAULT ('') FOR [CUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONLOGISTICSLOCATIONROLE_LOCATIONLOGISTICSLOCATION]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_INVENTLOCATIONLOGISTICSLOCATIONROLE_LOCATIONLOGISTICSLOCATION] DEFAULT ((0)) FOR [LOCATIONLOGISTICSLOCATION];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONLOGISTICSLOCATIONROLE_LOCATIONROLE]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_INVENTLOCATIONLOGISTICSLOCATIONROLE_LOCATIONROLE] DEFAULT ((0)) FOR [LOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_RETAILLOG_CODEUNIT]...';


GO
ALTER TABLE [ax].[RETAILLOG]
    ADD CONSTRAINT [DF_RETAILLOG_CODEUNIT] DEFAULT ('') FOR [CODEUNIT];


GO
PRINT N'Creating [ax].[DF_RETAILLOG_LOGDATE]...';


GO
ALTER TABLE [ax].[RETAILLOG]
    ADD CONSTRAINT [DF_RETAILLOG_LOGDATE] DEFAULT ('1900-01-01') FOR [LOGDATE];


GO
PRINT N'Creating [ax].[DF_RETAILLOG_RETAILLOGID]...';


GO
ALTER TABLE [ax].[RETAILLOG]
    ADD CONSTRAINT [DF_RETAILLOG_RETAILLOGID] DEFAULT ((0)) FOR [RETAILLOGID];


GO
PRINT N'Creating [ax].[DF_RETAILLOG_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILLOG]
    ADD CONSTRAINT [DF_RETAILLOG_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILLOG_DURATIONINMILLISEC]...';


GO
ALTER TABLE [ax].[RETAILLOG]
    ADD CONSTRAINT [DF_RETAILLOG_DURATIONINMILLISEC] DEFAULT ((0)) FOR [DURATIONINMILLISEC];


GO
PRINT N'Creating [ax].[DF_RETAILLOG_LOGLEVEL]...';


GO
ALTER TABLE [ax].[RETAILLOG]
    ADD CONSTRAINT [DF_RETAILLOG_LOGLEVEL] DEFAULT ((0)) FOR [LOGLEVEL];


GO
PRINT N'Creating [ax].[DF_RETAILLOG_STOREID]...';


GO
ALTER TABLE [ax].[RETAILLOG]
    ADD CONSTRAINT [DF_RETAILLOG_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_FROMREWARDPOINT]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_FROMREWARDPOINT] DEFAULT ((0)) FOR [FROMREWARDPOINT];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_TOREWARDTYPE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_TOREWARDTYPE] DEFAULT ((0)) FOR [TOREWARDTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_TOREWARDAMOUNTCURRENCY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_TOREWARDAMOUNTCURRENCY] DEFAULT ('') FOR [TOREWARDAMOUNTCURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_TORETAILGROUPMEMBERLINE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_TORETAILGROUPMEMBERLINE] DEFAULT ((0)) FOR [TORETAILGROUPMEMBERLINE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_LOYALTYSCHEME]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_LOYALTYSCHEME] DEFAULT ((0)) FOR [LOYALTYSCHEME];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_TOREWARDAMOUNTQTY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_TOREWARDAMOUNTQTY] DEFAULT ((0)) FOR [TOREWARDAMOUNTQTY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_FROMREWARDPOINTAMOUNTQTY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_FROMREWARDPOINTAMOUNTQTY] DEFAULT ((0)) FOR [FROMREWARDPOINTAMOUNTQTY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_LOYALTYTIER]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_LOYALTYTIER] DEFAULT ((0)) FOR [LOYALTYTIER];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREDEEMSCHEMELINE_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREDEEMSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYREDEEMSCHEMELINE_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKINDUSTRYMAP_INDUSTRY]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKINDUSTRYMAP_INDUSTRY] DEFAULT ((0)) FOR [INDUSTRY];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKINDUSTRYMAP_GENERATEPROCESSDATA]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKINDUSTRYMAP_GENERATEPROCESSDATA] DEFAULT ((0)) FOR [GENERATEPROCESSDATA];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKINDUSTRYMAP_FRAMEWORK]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKINDUSTRYMAP_FRAMEWORK] DEFAULT ((0)) FOR [FRAMEWORK];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARD_CARDNUMBER]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARD]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARD_CARDNUMBER] DEFAULT ('') FOR [CARDNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARD_PARTY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARD]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARD_PARTY] DEFAULT ((0)) FOR [PARTY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARD_CARDTENDERTYPE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARD]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARD_CARDTENDERTYPE] DEFAULT ((0)) FOR [CARDTENDERTYPE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_CANCELSALES]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_CANCELSALES] DEFAULT ((0)) FOR [CANCELSALES];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_BOLTRAILERLOADED]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_BOLTRAILERLOADED] DEFAULT ((0)) FOR [BOLTRAILERLOADED];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_DELETEHEADING]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_DELETEHEADING] DEFAULT ((0)) FOR [DELETEHEADING];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_CUSTQUOTATIONTYPEID]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_CUSTQUOTATIONTYPEID] DEFAULT ('') FOR [CUSTQUOTATIONTYPEID];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_BOLFREIGHTCOUNTED]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_BOLFREIGHTCOUNTED] DEFAULT ((0)) FOR [BOLFREIGHTCOUNTED];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_DELIVERY2INVOICE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_DELIVERY2INVOICE] DEFAULT ('') FOR [DELIVERY2INVOICE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_BOLFREIGHTEDBY]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_BOLFREIGHTEDBY] DEFAULT ((0)) FOR [BOLFREIGHTEDBY];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_DELETELINE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_DELETELINE] DEFAULT ((0)) FOR [DELETELINE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_BOLLANGUAGEID]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_BOLLANGUAGEID] DEFAULT ('') FOR [BOLLANGUAGEID];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_OVERDELIVERY]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_OVERDELIVERY] DEFAULT ((0)) FOR [OVERDELIVERY];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_PICKINGLISTDEFAULTLANGUAGE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_PICKINGLISTDEFAULTLANGUAGE] DEFAULT ((0)) FOR [PICKINGLISTDEFAULTLANGUAGE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_ORDERTYPE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_ORDERTYPE] DEFAULT ((0)) FOR [ORDERTYPE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_MARKUPLINE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_MARKUPLINE] DEFAULT ((0)) FOR [MARKUPLINE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_ACCESLEVELINVOICED]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_ACCESLEVELINVOICED] DEFAULT ((0)) FOR [ACCESLEVELINVOICED];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_ORDERENTRYSTATISTICS]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_ORDERENTRYSTATISTICS] DEFAULT ((0)) FOR [ORDERENTRYSTATISTICS];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_BOLFREIGHTCHARGETERMS]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_BOLFREIGHTCHARGETERMS] DEFAULT ((0)) FOR [BOLFREIGHTCHARGETERMS];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_DISC]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_DISC] DEFAULT ((0)) FOR [DISC];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_MARKUPHEADING]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_MARKUPHEADING] DEFAULT ((0)) FOR [MARKUPHEADING];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_BILLOFLADING]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_BILLOFLADING] DEFAULT ((0)) FOR [BILLOFLADING];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_BOLCARRIERNAME]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_BOLCARRIERNAME] DEFAULT ('') FOR [BOLCARRIERNAME];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_LEADTIMESALESDEFAULT]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_LEADTIMESALESDEFAULT] DEFAULT ((0)) FOR [LEADTIMESALESDEFAULT];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_USESETTLEEXCHRATE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_USESETTLEEXCHRATE] DEFAULT ((0)) FOR [USESETTLEEXCHRATE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SUMMARYUPDATEBY]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SUMMARYUPDATEBY] DEFAULT ((0)) FOR [SUMMARYUPDATEBY];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_VALIDDAYS]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_VALIDDAYS] DEFAULT ((0)) FOR [VALIDDAYS];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SPLITDELIVERYPICKINGLIST]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SPLITDELIVERYPICKINGLIST] DEFAULT ((0)) FOR [SPLITDELIVERYPICKINGLIST];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SPLITDELIVERYPACKINGSLIP]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SPLITDELIVERYPACKINGSLIP] DEFAULT ((0)) FOR [SPLITDELIVERYPACKINGSLIP];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SPLITDELIVERYINVOICE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SPLITDELIVERYINVOICE] DEFAULT ((0)) FOR [SPLITDELIVERYINVOICE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SUMMARYERRORTOLERANCE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SUMMARYERRORTOLERANCE] DEFAULT ((0)) FOR [SUMMARYERRORTOLERANCE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SUBDELIVERY]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SUBDELIVERY] DEFAULT ((0)) FOR [SUBDELIVERY];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SETTLEVOUCHER]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SETTLEVOUCHER] DEFAULT ((0)) FOR [SETTLEVOUCHER];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SALESPOOLID]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SALESPOOLID] DEFAULT ('') FOR [SALESPOOLID];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SALESORIGINID]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SALESORIGINID] DEFAULT ('') FOR [SALESORIGINID];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_RESERVATION]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_RESERVATION] DEFAULT ((0)) FOR [RESERVATION];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SPLITDELIVERYCONFIRMATION]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SPLITDELIVERYCONFIRMATION] DEFAULT ((0)) FOR [SPLITDELIVERYCONFIRMATION];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_SHIPPINGSTAT]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_SHIPPINGSTAT] DEFAULT ((0)) FOR [SHIPPINGSTAT];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_QUOTATIONNUMOFDAYSFOLLOWUPDATE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_QUOTATIONNUMOFDAYSFOLLOWUPDATE] DEFAULT ((0)) FOR [QUOTATIONNUMOFDAYSFOLLOWUPDATE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_PROMPTTRANSFER]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_PROMPTTRANSFER] DEFAULT ((0)) FOR [PROMPTTRANSFER];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_QUOTATIONNUMOFDAYSEXPIRYDATE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_QUOTATIONNUMOFDAYSEXPIRYDATE] DEFAULT ((0)) FOR [QUOTATIONNUMOFDAYSEXPIRYDATE];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_PREPRINTLEVELSHIPPINGLABEL]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_PREPRINTLEVELSHIPPINGLABEL] DEFAULT ((0)) FOR [PREPRINTLEVELSHIPPINGLABEL];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_POSTPACKINGSLIP]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_POSTPACKINGSLIP] DEFAULT ((0)) FOR [POSTPACKINGSLIP];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_REDUCEPICKINGLIST]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_REDUCEPICKINGLIST] DEFAULT ((0)) FOR [REDUCEPICKINGLIST];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_REDUCEPACKINGSLIP]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_REDUCEPACKINGSLIP] DEFAULT ((0)) FOR [REDUCEPACKINGSLIP];


GO
PRINT N'Creating [ax].[DF_SALESPARAMETERS_REDUCEINVOICE]...';


GO
ALTER TABLE [ax].[SALESPARAMETERS]
    ADD CONSTRAINT [DF_SALESPARAMETERS_REDUCEINVOICE] DEFAULT ((0)) FOR [REDUCEINVOICE];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_ACTION]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_ACTION] DEFAULT ((0)) FOR [ACTION];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_FONTSIZE]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_FONTSIZE] DEFAULT ((0)) FOR [FONTSIZE];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_COLOUR]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_COLOUR] DEFAULT ('') FOR [COLOUR];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_ROWNUM]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_ROWNUM] DEFAULT ((0)) FOR [ROWNUM];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_FONTSTYLE]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_FONTSTYLE] DEFAULT ((0)) FOR [FONTSTYLE];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_ACTIONPROPERTY]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_ACTIONPROPERTY] DEFAULT ('') FOR [ACTIONPROPERTY];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_DISPLAYTEXT]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_DISPLAYTEXT] DEFAULT ('') FOR [DISPLAYTEXT];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_ID]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_ID] DEFAULT ((0)) FOR [ID];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROLB_BUTTONCONTROLID]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROLB]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROLB_BUTTONCONTROLID] DEFAULT ((0)) FOR [BUTTONCONTROLID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_PRINTEDLINEDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_PRINTEDLINEDISCOUNTAMOUNT] DEFAULT ((0)) FOR [PRINTEDLINEDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_UNITPRICE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_UNITPRICE] DEFAULT ((0)) FOR [UNITPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_UNIT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_UNIT] DEFAULT ('') FOR [UNIT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_CFOP]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_CFOP] DEFAULT ('') FOR [CFOP];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_CANCELLEDQUANTITY]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_CANCELLEDQUANTITY] DEFAULT ((0)) FOR [CANCELLEDQUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_LINESURCHARGEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_LINESURCHARGEAMOUNT] DEFAULT ((0)) FOR [LINESURCHARGEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_LINEDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_LINEDISCOUNTAMOUNT] DEFAULT ((0)) FOR [LINEDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_LINEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_LINEAMOUNT] DEFAULT ((0)) FOR [LINEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_ITEMTYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_ITEMTYPE] DEFAULT ('') FOR [ITEMTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_QUANTITY]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_QUANTITY] DEFAULT ((0)) FOR [QUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTLINE_BR_PRINTEDLINESURCHARGEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTLINE_BR_PRINTEDLINESURCHARGEAMOUNT] DEFAULT ((0)) FOR [PRINTEDLINESURCHARGEAMOUNT];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATIONROLE_PARTYLOCATION]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATIONROLE]
    ADD CONSTRAINT [DF_DIRPARTYLOCATIONROLE_PARTYLOCATION] DEFAULT ((0)) FOR [PARTYLOCATION];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATIONROLE_LOCATIONROLE]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATIONROLE]
    ADD CONSTRAINT [DF_DIRPARTYLOCATIONROLE_LOCATIONROLE] DEFAULT ((0)) FOR [LOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCHANNELATTRIBUTE_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[RETAILPUBCHANNELATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBCHANNELATTRIBUTE_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCHANNELATTRIBUTE_ATTRIBUTEVALUE]...';


GO
ALTER TABLE [ax].[RETAILPUBCHANNELATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBCHANNELATTRIBUTE_ATTRIBUTEVALUE] DEFAULT ((0)) FOR [ATTRIBUTEVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCHANNELATTRIBUTE_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPUBCHANNELATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBCHANNELATTRIBUTE_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_INPUTREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_INPUTREQUIRED] DEFAULT ((0)) FOR [INPUTREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_REFTABLEID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_REFTABLEID] DEFAULT ((0)) FOR [REFTABLEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_REFRELATION]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_REFRELATION] DEFAULT ('') FOR [REFRELATION];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_SEQUENCE]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_SEQUENCE] DEFAULT ((0)) FOR [SEQUENCE];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_WHENREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_WHENREQUIRED] DEFAULT ((0)) FOR [WHENREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_REFRELATION2]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_REFRELATION2] DEFAULT ('') FOR [REFRELATION2];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_INFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_INFOCODEID] DEFAULT ('') FOR [INFOCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLESPECIFIC_REFRELATION3]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLESPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLESPECIFIC_REFRELATION3] DEFAULT ('') FOR [REFRELATION3];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONDEFAULTLOCATION_LOCATIONLOGISTICSLOCATIONROLE]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONDEFAULTLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATIONDEFAULTLOCATION_LOCATIONLOGISTICSLOCATIONROLE] DEFAULT ((0)) FOR [LOCATIONLOGISTICSLOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONDEFAULTLOCATION_INVENTLOCATIONID]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONDEFAULTLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATIONDEFAULTLOCATION_INVENTLOCATIONID] DEFAULT ('') FOR [INVENTLOCATIONID];


GO
PRINT N'Creating [ax].[DF_FORMULADESIGNER_IN_TAXABLEBASIS]...';


GO
ALTER TABLE [ax].[FORMULADESIGNER_IN]
    ADD CONSTRAINT [DF_FORMULADESIGNER_IN_TAXABLEBASIS] DEFAULT ((0)) FOR [TAXABLEBASIS];


GO
PRINT N'Creating [ax].[DF_FORMULADESIGNER_IN_TAXCODE]...';


GO
ALTER TABLE [ax].[FORMULADESIGNER_IN]
    ADD CONSTRAINT [DF_FORMULADESIGNER_IN_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_FORMULADESIGNER_IN_CALCEXP]...';


GO
ALTER TABLE [ax].[FORMULADESIGNER_IN]
    ADD CONSTRAINT [DF_FORMULADESIGNER_IN_CALCEXP] DEFAULT ('') FOR [CALCEXP];


GO
PRINT N'Creating [ax].[DF_FORMULADESIGNER_IN_TAXITEMGROUP]...';


GO
ALTER TABLE [ax].[FORMULADESIGNER_IN]
    ADD CONSTRAINT [DF_FORMULADESIGNER_IN_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_FORMULADESIGNER_IN_CALCEXP1]...';


GO
ALTER TABLE [ax].[FORMULADESIGNER_IN]
    ADD CONSTRAINT [DF_FORMULADESIGNER_IN_CALCEXP1] DEFAULT ('') FOR [CALCEXP1];


GO
PRINT N'Creating [ax].[DF_FORMULADESIGNER_IN_ID]...';


GO
ALTER TABLE [ax].[FORMULADESIGNER_IN]
    ADD CONSTRAINT [DF_FORMULADESIGNER_IN_ID] DEFAULT ((0)) FOR [ID];


GO
PRINT N'Creating [ax].[DF_FORMULADESIGNER_IN_PRICEINCLTAX]...';


GO
ALTER TABLE [ax].[FORMULADESIGNER_IN]
    ADD CONSTRAINT [DF_FORMULADESIGNER_IN_PRICEINCLTAX] DEFAULT ((0)) FOR [PRICEINCLTAX];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELREPORT_REPORTID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELREPORT]
    ADD CONSTRAINT [DF_RETAILCHANNELREPORT_REPORTID] DEFAULT ('') FOR [REPORTID];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELREPORT_REPORTNAME]...';


GO
ALTER TABLE [ax].[RETAILCHANNELREPORT]
    ADD CONSTRAINT [DF_RETAILCHANNELREPORT_REPORTNAME] DEFAULT ('') FOR [REPORTNAME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTVARIANTCONFIGURATION_CONFIGURATION]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTVARIANTCONFIGURATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTVARIANTCONFIGURATION_CONFIGURATION] DEFAULT ((0)) FOR [CONFIGURATION];


GO
PRINT N'Creating [ax].[DF_RETAILCONNDATABASEPROFILE_SERVER]...';


GO
ALTER TABLE [ax].[RETAILCONNDATABASEPROFILE]
    ADD CONSTRAINT [DF_RETAILCONNDATABASEPROFILE_SERVER] DEFAULT ('') FOR [SERVER];


GO
PRINT N'Creating [ax].[DF_RETAILCONNDATABASEPROFILE_DATABASE]...';


GO
ALTER TABLE [ax].[RETAILCONNDATABASEPROFILE]
    ADD CONSTRAINT [DF_RETAILCONNDATABASEPROFILE_DATABASE] DEFAULT ('') FOR [DATABASE];


GO
PRINT N'Creating [ax].[DF_RETAILCONNDATABASEPROFILE_NAME]...';


GO
ALTER TABLE [ax].[RETAILCONNDATABASEPROFILE]
    ADD CONSTRAINT [DF_RETAILCONNDATABASEPROFILE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_UNREALIZEDTAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_UNREALIZEDTAX] DEFAULT ((0)) FOR [UNREALIZEDTAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEINCOMINGCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEINCOMINGCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDBASEINCOMINGCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEUSETAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEUSETAX] DEFAULT ((0)) FOR [REPFIELDBASEUSETAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_INCLUDEDTAX_BR]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_INCLUDEDTAX_BR] DEFAULT ((0)) FOR [INCLUDEDTAX_BR];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_PAYMENTTAXCODE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_PAYMENTTAXCODE] DEFAULT ('') FOR [PAYMENTTAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXINCLUDEINTAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXINCLUDEINTAX] DEFAULT ((0)) FOR [TAXINCLUDEINTAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXCOMPONENTTABLE_IN]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXCOMPONENTTABLE_IN] DEFAULT ((0)) FOR [TAXCOMPONENTTABLE_IN];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXTYPE_SG]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXTYPE_SG] DEFAULT ((0)) FOR [TAXTYPE_SG];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXBASE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXBASE] DEFAULT ((0)) FOR [TAXBASE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REVENUECODE_BR]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REVENUECODE_BR] DEFAULT ('') FOR [REVENUECODE_BR];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXSUBSTITUTION_BR]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXSUBSTITUTION_BR] DEFAULT ((0)) FOR [TAXSUBSTITUTION_BR];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDUSETAXOFFSET]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDUSETAXOFFSET] DEFAULT ((0)) FOR [REPFIELDUSETAXOFFSET];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXOUTGOINGCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXOUTGOINGCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDTAXOUTGOINGCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXPURCHASETAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXPURCHASETAX] DEFAULT ((0)) FOR [TAXPURCHASETAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXBORDERNUMREQ_FI]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXBORDERNUMREQ_FI] DEFAULT ((0)) FOR [TAXBORDERNUMREQ_FI];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXACCOUNTGROUP]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXACCOUNTGROUP] DEFAULT ('') FOR [TAXACCOUNTGROUP];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXTYPE_BR]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXTYPE_BR] DEFAULT ((0)) FOR [TAXTYPE_BR];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDUSETAXOFFSETCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDUSETAXOFFSETCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDUSETAXOFFSETCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDUSETAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDUSETAX] DEFAULT ((0)) FOR [REPFIELDUSETAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXROUNDOFF]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXROUNDOFF] DEFAULT ((0)) FOR [TAXROUNDOFF];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXINCOMINGCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXINCOMINGCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDTAXINCOMINGCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXPACKAGINGTAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXPACKAGINGTAX] DEFAULT ((0)) FOR [TAXPACKAGINGTAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXFREESALES]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXFREESALES] DEFAULT ((0)) FOR [REPFIELDTAXFREESALES];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEUSETAXOFFSETCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEUSETAXOFFSETCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDBASEUSETAXOFFSETCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXNAME]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXNAME] DEFAULT ('') FOR [TAXNAME];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXROUNDOFFTYPE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXROUNDOFFTYPE] DEFAULT ((0)) FOR [TAXROUNDOFFTYPE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_RETAINEDTAX_BR]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_RETAINEDTAX_BR] DEFAULT ((0)) FOR [RETAINEDTAX_BR];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDUSETAXCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDUSETAXCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDUSETAXCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXPERIOD]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXPERIOD] DEFAULT ('') FOR [TAXPERIOD];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXOUTGOING]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXOUTGOING] DEFAULT ((0)) FOR [REPFIELDTAXOUTGOING];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXFREESALESCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXFREESALESCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDTAXFREESALESCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXONTAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXONTAX] DEFAULT ('') FOR [TAXONTAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXFREEBUY]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXFREEBUY] DEFAULT ((0)) FOR [REPFIELDTAXFREEBUY];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEOUTGOING]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEOUTGOING] DEFAULT ((0)) FOR [REPFIELDBASEOUTGOING];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEUSETAXCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEUSETAXCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDBASEUSETAXCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_NEGATIVETAX]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_NEGATIVETAX] DEFAULT ((0)) FOR [NEGATIVETAX];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXCODE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXJURISDICTIONCODE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXJURISDICTIONCODE] DEFAULT ('') FOR [TAXJURISDICTIONCODE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_PRINTCODE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_PRINTCODE] DEFAULT ('') FOR [PRINTCODE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXUNIT]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXUNIT] DEFAULT ('') FOR [TAXUNIT];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXCOUNTRYREGIONTYPE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXCOUNTRYREGIONTYPE] DEFAULT ((0)) FOR [TAXCOUNTRYREGIONTYPE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXINCOMING]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXINCOMING] DEFAULT ((0)) FOR [REPFIELDTAXINCOMING];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDTAXFREEBUYCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDTAXFREEBUYCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDTAXFREEBUYCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXPACKAGINGSORT]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXPACKAGINGSORT] DEFAULT ('') FOR [TAXPACKAGINGSORT];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEUSETAXOFFSET]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEUSETAXOFFSET] DEFAULT ((0)) FOR [REPFIELDBASEUSETAXOFFSET];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_NOTEUSALESLIST]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_NOTEUSALESLIST] DEFAULT ((0)) FOR [NOTEUSALESLIST];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_CUSTOMSPRACTICE_FI]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_CUSTOMSPRACTICE_FI] DEFAULT ((0)) FOR [CUSTOMSPRACTICE_FI];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEINCOMING]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEINCOMING] DEFAULT ((0)) FOR [REPFIELDBASEINCOMING];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXLIMITBASE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXLIMITBASE] DEFAULT ((0)) FOR [TAXLIMITBASE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_REPFIELDBASEOUTGOINGCREDITNOTE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_REPFIELDBASEOUTGOINGCREDITNOTE] DEFAULT ((0)) FOR [REPFIELDBASEOUTGOINGCREDITNOTE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXCURRENCYCODE]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXCURRENCYCODE] DEFAULT ('') FOR [TAXCURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXWRITESELECTION]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXWRITESELECTION] DEFAULT ((0)) FOR [TAXWRITESELECTION];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXTYPE_IN]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXTYPE_IN] DEFAULT ((0)) FOR [TAXTYPE_IN];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXCALCMETHOD]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXCALCMETHOD] DEFAULT ((0)) FOR [TAXCALCMETHOD];


GO
PRINT N'Creating [ax].[DF_TAXTABLE_TAXATIONCODETABLE_BR]...';


GO
ALTER TABLE [ax].[TAXTABLE]
    ADD CONSTRAINT [DF_TAXTABLE_TAXATIONCODETABLE_BR] DEFAULT ((0)) FOR [TAXATIONCODETABLE_BR];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTCOLOR]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROL]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTCOLOR] DEFAULT ('') FOR [DEFAULTCOLOR];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTFONTSTYLE]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROL]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTFONTSTYLE] DEFAULT ((0)) FOR [DEFAULTFONTSTYLE];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTFONT]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROL]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTFONT] DEFAULT ('') FOR [DEFAULTFONT];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROL_NAME]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROL]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROL_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROL_BUTTONCONTROLID]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROL]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROL_BUTTONCONTROLID] DEFAULT ((0)) FOR [BUTTONCONTROLID];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTFONTSIZE]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDBUTTONCONTROL]
    ADD CONSTRAINT [DF_RETAILKEYBOARDBUTTONCONTROL_DEFAULTFONTSIZE] DEFAULT ((0)) FOR [DEFAULTFONTSIZE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTTENDEREDPOS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTTENDEREDPOS] DEFAULT ((0)) FOR [AMOUNTTENDEREDPOS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_QTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MESSAGENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MESSAGENUM] DEFAULT ((0)) FOR [MESSAGENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STATUSTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STATUSTYPE] DEFAULT ((0)) FOR [STATUSTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTCUR] DEFAULT ((0)) FOR [AMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TENDERTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TENDERTYPE] DEFAULT ('') FOR [TENDERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_EXCHRATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_EXCHRATE] DEFAULT ((0)) FOR [EXCHRATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_BANKBAGNO]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_BANKBAGNO] DEFAULT ('') FOR [BANKBAGNO];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CREATEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CREATEDTRANSACTIONID] DEFAULT ((0)) FOR [CREATEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CARDTYPEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CARDTYPEID] DEFAULT ('') FOR [CARDTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTMST] DEFAULT ((0)) FOR [AMOUNTMST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_EXCHRATEMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_EXCHRATEMST] DEFAULT ((0)) FOR [EXCHRATEMST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CARDORACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CARDORACCOUNT] DEFAULT ('') FOR [CARDORACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTCURPOS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTCURPOS] DEFAULT ((0)) FOR [AMOUNTCURPOS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MANAGERSKEYLIVE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MANAGERSKEYLIVE] DEFAULT ((0)) FOR [MANAGERSKEYLIVE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTTENDERED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTTENDERED] DEFAULT ((0)) FOR [AMOUNTTENDERED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MODIFIEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_MODIFIEDTRANSACTIONID] DEFAULT ((0)) FOR [MODIFIEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CHANGELINE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_CHANGELINE] DEFAULT ((0)) FOR [CHANGELINE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTMSTPOS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONBANKEDTENDERTRANS_AMOUNTMSTPOS] DEFAULT ((0)) FOR [AMOUNTMSTPOS];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_NAME]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_FULLSCREENMODE]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_FULLSCREENMODE] DEFAULT ((0)) FOR [FULLSCREENMODE];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_SCREENWIDTH]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_SCREENWIDTH] DEFAULT ((0)) FOR [SCREENWIDTH];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_PICTUREIDPORTRAIT]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_PICTUREIDPORTRAIT] DEFAULT ((0)) FOR [PICTUREIDPORTRAIT];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_HIDECURSOR]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_HIDECURSOR] DEFAULT ((0)) FOR [HIDECURSOR];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_DESIGNALLOWEDONPOS]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_DESIGNALLOWEDONPOS] DEFAULT ((0)) FOR [DESIGNALLOWEDONPOS];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_POSSKINNAME]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_POSSKINNAME] DEFAULT ('') FOR [POSSKINNAME];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_FONTSCHEME]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_FONTSCHEME] DEFAULT ((0)) FOR [FONTSCHEME];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_SCREENHEIGHT]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_SCREENHEIGHT] DEFAULT ((0)) FOR [SCREENHEIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_PALLET]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_PALLET] DEFAULT ('') FOR [PALLET];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_PROFILEID]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_PROFILEID] DEFAULT ('') FOR [PROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_PICTUREID]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_PICTUREID] DEFAULT ((0)) FOR [PICTUREID];


GO
PRINT N'Creating [ax].[DF_RETAILVISUALPROFILE_BACKGROUNDPICTUREID]...';


GO
ALTER TABLE [ax].[RETAILVISUALPROFILE]
    ADD CONSTRAINT [DF_RETAILVISUALPROFILE_BACKGROUNDPICTUREID] DEFAULT ((0)) FOR [BACKGROUNDPICTUREID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION_PRODUCTRELATION]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION_PRODUCTRELATION] DEFAULT ((0)) FOR [PRODUCTRELATION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION_CATALOGPRODUCT]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION_CATALOGPRODUCT] DEFAULT ((0)) FOR [CATALOGPRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_PASSWORDLASTUPDATEDOPERATION]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_PASSWORDLASTUPDATEDOPERATION] DEFAULT ((0)) FOR [PASSWORDLASTUPDATEDOPERATION];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_PASSWORDHASHALGORITHM]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_PASSWORDHASHALGORITHM] DEFAULT ('') FOR [PASSWORDHASHALGORITHM];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_IMAGE]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_IMAGE] DEFAULT ('') FOR [IMAGE];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_PASSWORDDATA]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_PASSWORDDATA] DEFAULT ('') FOR [PASSWORDDATA];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_CONTINUEONTSERRORS]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_CONTINUEONTSERRORS] DEFAULT ((0)) FOR [CONTINUEONTSERRORS];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_PASSWORD]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_PASSWORD] DEFAULT ('') FOR [PASSWORD];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_PASSWORDLASTCHANGEDDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_PASSWORDLASTCHANGEDDATETIMETZID] DEFAULT ((37001)) FOR [PASSWORDLASTCHANGEDDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_PASSWORDSALT]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_PASSWORDSALT] DEFAULT ('') FOR [PASSWORDSALT];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_CHANGEPASSWORD]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_CHANGEPASSWORD] DEFAULT ((0)) FOR [CHANGEPASSWORD];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_EMPLOYMENTTYPE]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_EMPLOYMENTTYPE] DEFAULT ((0)) FOR [EMPLOYMENTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_CULTURENAME]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_CULTURENAME] DEFAULT ('') FOR [CULTURENAME];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_NAMEONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_NAMEONRECEIPT] DEFAULT ('') FOR [NAMEONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_BLOCKED]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_BLOCKED] DEFAULT ((0)) FOR [BLOCKED];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_PASSWORDLASTCHANGEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_PASSWORDLASTCHANGEDDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [PASSWORDLASTCHANGEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_STAFFID]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_STAFFID] DEFAULT ('') FOR [STAFFID];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILSTAFFTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDTABLE_NAME]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDTABLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDTABLE_CARDTYPEID]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDTABLE_CARDTYPEID] DEFAULT ('') FOR [CARDTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDTABLE_CARDTYPES]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDTABLE_CARDTYPES] DEFAULT ((0)) FOR [CARDTYPES];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDTABLE_CARDISSUER]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDTABLE_CARDISSUER] DEFAULT ('') FOR [CARDISSUER];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLEEXT_LIVECHANNELDATABASE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLEEXT]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLEEXT_LIVECHANNELDATABASE] DEFAULT ((0)) FOR [LIVECHANNELDATABASE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLEEXT_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLEEXT]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLEEXT_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLEEXT_CHANNELPROFILE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLEEXT]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLEEXT_CHANNELPROFILE] DEFAULT ((0)) FOR [CHANNELPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_RECEIPTOPTION]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_RECEIPTOPTION] DEFAULT ((0)) FOR [RECEIPTOPTION];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_NONCHARGABLEACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_NONCHARGABLEACCOUNT] DEFAULT ((0)) FOR [NONCHARGABLEACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_ACCOUNTNUM]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_ACCOUNTNUM] DEFAULT ('') FOR [ACCOUNTNUM];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_REQUIRESAPPROVAL]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_REQUIRESAPPROVAL] DEFAULT ((0)) FOR [REQUIRESAPPROVAL];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_POSTASSHIPMENT]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_POSTASSHIPMENT] DEFAULT ((0)) FOR [POSTASSHIPMENT];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_RECEIPTEMAIL]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_RECEIPTEMAIL] DEFAULT ('') FOR [RECEIPTEMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_IMAGE]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_IMAGE] DEFAULT ('') FOR [IMAGE];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTTABLE_USEORDERNUMBERREFERENCE]...';


GO
ALTER TABLE [ax].[RETAILCUSTTABLE]
    ADD CONSTRAINT [DF_RETAILCUSTTABLE_USEORDERNUMBERREFERENCE] DEFAULT ((0)) FOR [USEORDERNUMBERREFERENCE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTY_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTY_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTY_COUNTYID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTY_COUNTYID] DEFAULT ('') FOR [COUNTYID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTY_STATEID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTY_STATEID] DEFAULT ('') FOR [STATEID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTY_COUNTYCODE_SP]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTY_COUNTYCODE_SP] DEFAULT ('') FOR [COUNTYCODE_SP];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTY_NAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTY_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILTHEMEACCENTCOLOR_COLOR]...';


GO
ALTER TABLE [ax].[RETAILTHEMEACCENTCOLOR]
    ADD CONSTRAINT [DF_RETAILTHEMEACCENTCOLOR_COLOR] DEFAULT ((0)) FOR [COLOR];


GO
PRINT N'Creating [ax].[DF_RETAILTHEMEACCENTCOLOR_PALLET]...';


GO
ALTER TABLE [ax].[RETAILTHEMEACCENTCOLOR]
    ADD CONSTRAINT [DF_RETAILTHEMEACCENTCOLOR_PALLET] DEFAULT ((0)) FOR [PALLET];


GO
PRINT N'Creating [ax].[DF_RETAILTHEMEACCENTCOLOR_ACCENT]...';


GO
ALTER TABLE [ax].[RETAILTHEMEACCENTCOLOR]
    ADD CONSTRAINT [DF_RETAILTHEMEACCENTCOLOR_ACCENT] DEFAULT ((0)) FOR [ACCENT];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEMECHANNELEXPLODED_LOYALTYSCHEME]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEMECHANNELEXPLODED_LOYALTYSCHEME] DEFAULT ((0)) FOR [LOYALTYSCHEME];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEMECHANNELEXPLODED_OMOPERATINGUNIT]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEMECHANNELEXPLODED_OMOPERATINGUNIT] DEFAULT ((0)) FOR [OMOPERATINGUNIT];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICETYPES_TYPE]...';


GO
ALTER TABLE [ax].[RETAILDEVICETYPES]
    ADD CONSTRAINT [DF_RETAILDEVICETYPES_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICETYPES_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILDEVICETYPES]
    ADD CONSTRAINT [DF_RETAILDEVICETYPES_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICETYPES_DESIGNERFORM]...';


GO
ALTER TABLE [ax].[RETAILDEVICETYPES]
    ADD CONSTRAINT [DF_RETAILDEVICETYPES_DESIGNERFORM] DEFAULT ((0)) FOR [DESIGNERFORM];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_CONSUMEREFDSYNCPROCESS]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_CONSUMEREFDSYNCPROCESS] DEFAULT ((0)) FOR [CONSUMEREFDSYNCPROCESS];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_AUTHORITYID]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_AUTHORITYID] DEFAULT ('') FOR [AUTHORITYID];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_AUTHORITYTYPE]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_AUTHORITYTYPE] DEFAULT ((0)) FOR [AUTHORITYTYPE];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_CANCELASEVENT]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_CANCELASEVENT] DEFAULT ((0)) FOR [CANCELASEVENT];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_CONVERTACCENTEDCHARACTERS]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_CONVERTACCENTEDCHARACTERS] DEFAULT ((0)) FOR [CONVERTACCENTEDCHARACTERS];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_DESCRIPTION]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_CONSUMEREFDOCINQUIRYURL]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_CONSUMEREFDOCINQUIRYURL] DEFAULT ('') FOR [CONSUMEREFDOCINQUIRYURL];


GO
PRINT N'Creating [ax].[DF_EFDOCAUTHORITY_BR_CONSUMEREFDOCMAXAMOUNTWITHOUTCUSTOMER]...';


GO
ALTER TABLE [ax].[EFDOCAUTHORITY_BR]
    ADD CONSTRAINT [DF_EFDOCAUTHORITY_BR_CONSUMEREFDOCMAXAMOUNTWITHOUTCUSTOMER] DEFAULT ((0)) FOR [CONSUMEREFDOCMAXAMOUNTWITHOUTCUSTOMER];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTSTYLEID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTSTYLEID] DEFAULT ('') FOR [INVENTSTYLEID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_CONFIGID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_CONFIGID] DEFAULT ('') FOR [CONFIGID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTGTDID_RU]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTGTDID_RU] DEFAULT ('') FOR [INVENTGTDID_RU];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTSERIALID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTSERIALID] DEFAULT ('') FOR [INVENTSERIALID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTBATCHID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTBATCHID] DEFAULT ('') FOR [INVENTBATCHID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_WMSLOCATIONID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_WMSLOCATIONID] DEFAULT ('') FOR [WMSLOCATIONID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTLOCATIONID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTLOCATIONID] DEFAULT ('') FOR [INVENTLOCATIONID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTSITEID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTSITEID] DEFAULT ('') FOR [INVENTSITEID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_WMSPALLETID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_WMSPALLETID] DEFAULT ('') FOR [WMSPALLETID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTCOLORID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTCOLORID] DEFAULT ('') FOR [INVENTCOLORID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTOWNERID_RU]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTOWNERID_RU] DEFAULT ('') FOR [INVENTOWNERID_RU];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTSIZEID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTSIZEID] DEFAULT ('') FOR [INVENTSIZEID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTDIMID]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_SHA1HASHHEX]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_SHA1HASHHEX] DEFAULT ('') FOR [SHA1HASHHEX];


GO
PRINT N'Creating [ax].[DF_INVENTDIM_INVENTPROFILEID_RU]...';


GO
ALTER TABLE [ax].[INVENTDIM]
    ADD CONSTRAINT [DF_INVENTDIM_INVENTPROFILEID_RU] DEFAULT ('') FOR [INVENTPROFILEID_RU];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENTSUBSTITUTE_UNITOFMEASURE]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENTSUBSTITUTE]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENTSUBSTITUTE_UNITOFMEASURE] DEFAULT ((0)) FOR [UNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENTSUBSTITUTE_QUANTITY]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENTSUBSTITUTE]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENTSUBSTITUTE_QUANTITY] DEFAULT ((0)) FOR [QUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENTSUBSTITUTE_KITCOMPONENT]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENTSUBSTITUTE]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENTSUBSTITUTE_KITCOMPONENT] DEFAULT ((0)) FOR [KITCOMPONENT];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENTSUBSTITUTE_SUBSTITUTEPRODUCT]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENTSUBSTITUTE]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENTSUBSTITUTE_SUBSTITUTEPRODUCT] DEFAULT ((0)) FOR [SUBSTITUTEPRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILDRAWERPOOLDEVICE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILDRAWERPOOLDEVICE]
    ADD CONSTRAINT [DF_RETAILDRAWERPOOLDEVICE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILDRAWERPOOLDEVICE_NAME]...';


GO
ALTER TABLE [ax].[RETAILDRAWERPOOLDEVICE]
    ADD CONSTRAINT [DF_RETAILDRAWERPOOLDEVICE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILDRAWERPOOLDEVICE_DRAWERPOOL]...';


GO
ALTER TABLE [ax].[RETAILDRAWERPOOLDEVICE]
    ADD CONSTRAINT [DF_RETAILDRAWERPOOLDEVICE_DRAWERPOOL] DEFAULT ((0)) FOR [DRAWERPOOL];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSSTATE_NAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSSTATE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSSTATE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSSTATE_TIMEZONE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSSTATE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSSTATE_TIMEZONE] DEFAULT ((0)) FOR [TIMEZONE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSSTATE_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSSTATE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSSTATE_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSSTATE_STATEID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSSTATE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSSTATE_STATEID] DEFAULT ('') FOR [STATEID];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTRELATIONTYPE_NAME]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTRELATIONTYPE]
    ADD CONSTRAINT [DF_ECORESPRODUCTRELATIONTYPE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_DATEUPDATED]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_DATEUPDATED] DEFAULT ('1900-01-01') FOR [DATEUPDATED];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_FIRSTINVERSION]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_FIRSTINVERSION] DEFAULT ('') FOR [FIRSTINVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_MODULEID]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_MODULEID] DEFAULT ((0)) FOR [MODULEID];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_TEXTID]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_TEXTID] DEFAULT ((0)) FOR [TEXTID];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_DATECREATED]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_DATECREATED] DEFAULT ('1900-01-01') FOR [DATECREATED];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_ERRORTEXT]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_ERRORTEXT] DEFAULT ((0)) FOR [ERRORTEXT];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILLANGUAGETEXT_TEXT]...';


GO
ALTER TABLE [ax].[RETAILLANGUAGETEXT]
    ADD CONSTRAINT [DF_RETAILLANGUAGETEXT_TEXT] DEFAULT ('') FOR [TEXT];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERCOMPANYACCOUNTS_CARRIERNAME]...';


GO
ALTER TABLE [ax].[SHIPCARRIERCOMPANYACCOUNTS]
    ADD CONSTRAINT [DF_SHIPCARRIERCOMPANYACCOUNTS_CARRIERNAME] DEFAULT ('') FOR [CARRIERNAME];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERCOMPANYACCOUNTS_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[SHIPCARRIERCOMPANYACCOUNTS]
    ADD CONSTRAINT [DF_SHIPCARRIERCOMPANYACCOUNTS_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERCOMPANYACCOUNTS_ACCOUNTCODE]...';


GO
ALTER TABLE [ax].[SHIPCARRIERCOMPANYACCOUNTS]
    ADD CONSTRAINT [DF_SHIPCARRIERCOMPANYACCOUNTS_ACCOUNTCODE] DEFAULT ('') FOR [ACCOUNTCODE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERPARAMETERS_FILEPATH]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERPARAMETERS]
    ADD CONSTRAINT [DF_SYSTASKRECORDERPARAMETERS_FILEPATH] DEFAULT ('') FOR [FILEPATH];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERPARAMETERS_TEMPLATEPATH]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERPARAMETERS]
    ADD CONSTRAINT [DF_SYSTASKRECORDERPARAMETERS_TEMPLATEPATH] DEFAULT ('') FOR [TEMPLATEPATH];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERPARAMETERS]
    ADD CONSTRAINT [DF_SYSTASKRECORDERPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_BRAZILPARAMETERS_LINKEDFISCALDOCUMENTMODEL02ICMS]...';


GO
ALTER TABLE [ax].[BRAZILPARAMETERS]
    ADD CONSTRAINT [DF_BRAZILPARAMETERS_LINKEDFISCALDOCUMENTMODEL02ICMS] DEFAULT ('') FOR [LINKEDFISCALDOCUMENTMODEL02ICMS];


GO
PRINT N'Creating [ax].[DF_BRAZILPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[BRAZILPARAMETERS]
    ADD CONSTRAINT [DF_BRAZILPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_BRAZILPARAMETERS_LINKEDFISCALDOCUMENTMODEL02PIS]...';


GO
ALTER TABLE [ax].[BRAZILPARAMETERS]
    ADD CONSTRAINT [DF_BRAZILPARAMETERS_LINKEDFISCALDOCUMENTMODEL02PIS] DEFAULT ('') FOR [LINKEDFISCALDOCUMENTMODEL02PIS];


GO
PRINT N'Creating [ax].[DF_BRAZILPARAMETERS_LINKEDFISCALDOCUMENTMODEL02COFINS]...';


GO
ALTER TABLE [ax].[BRAZILPARAMETERS]
    ADD CONSTRAINT [DF_BRAZILPARAMETERS_LINKEDFISCALDOCUMENTMODEL02COFINS] DEFAULT ('') FOR [LINKEDFISCALDOCUMENTMODEL02COFINS];


GO
PRINT N'Creating [ax].[DF_BRAZILPARAMETERS_APPROXTAXVALUESOURCE]...';


GO
ALTER TABLE [ax].[BRAZILPARAMETERS]
    ADD CONSTRAINT [DF_BRAZILPARAMETERS_APPROXTAXVALUESOURCE] DEFAULT ('') FOR [APPROXTAXVALUESOURCE];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFEXTENDEDLOGON_LOGONTYPE]...';


GO
ALTER TABLE [ax].[RETAILSTAFFEXTENDEDLOGON]
    ADD CONSTRAINT [DF_RETAILSTAFFEXTENDEDLOGON_LOGONTYPE] DEFAULT ((0)) FOR [LOGONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFEXTENDEDLOGON_LOGONDATA]...';


GO
ALTER TABLE [ax].[RETAILSTAFFEXTENDEDLOGON]
    ADD CONSTRAINT [DF_RETAILSTAFFEXTENDEDLOGON_LOGONDATA] DEFAULT ('') FOR [LOGONDATA];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFEXTENDEDLOGON_LOGONKEY]...';


GO
ALTER TABLE [ax].[RETAILSTAFFEXTENDEDLOGON]
    ADD CONSTRAINT [DF_RETAILSTAFFEXTENDEDLOGON_LOGONKEY] DEFAULT ('') FOR [LOGONKEY];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFEXTENDEDLOGON_STAFF]...';


GO
ALTER TABLE [ax].[RETAILSTAFFEXTENDEDLOGON]
    ADD CONSTRAINT [DF_RETAILSTAFFEXTENDEDLOGON_STAFF] DEFAULT ((0)) FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPJOUR_PACKINGSLIPID]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPJOUR]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPJOUR_PACKINGSLIPID] DEFAULT ('') FOR [PACKINGSLIPID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPJOUR_SHIPCARRIERID]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPJOUR]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPJOUR_SHIPCARRIERID] DEFAULT ('') FOR [SHIPCARRIERID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPJOUR_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPJOUR]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPJOUR_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPJOUR_SALESID]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPJOUR]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPJOUR_SALESID] DEFAULT ('') FOR [SALESID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPJOUR_SOURCEDOCUMENTHEADER]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPJOUR]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPJOUR_SOURCEDOCUMENTHEADER] DEFAULT ((0)) FOR [SOURCEDOCUMENTHEADER];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATION_NAME]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATION]
    ADD CONSTRAINT [DF_RETAILAFFILIATION_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATION_AFFILIATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATION]
    ADD CONSTRAINT [DF_RETAILAFFILIATION_AFFILIATIONTYPE] DEFAULT ((0)) FOR [AFFILIATIONTYPE];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATION_IN_REGISTRATIONLOCATION]...';


GO
ALTER TABLE [ax].[TAXINFORMATION_IN]
    ADD CONSTRAINT [DF_TAXINFORMATION_IN_REGISTRATIONLOCATION] DEFAULT ((0)) FOR [REGISTRATIONLOCATION];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATION_IN_ECCNUMBER]...';


GO
ALTER TABLE [ax].[TAXINFORMATION_IN]
    ADD CONSTRAINT [DF_TAXINFORMATION_IN_ECCNUMBER] DEFAULT ((0)) FOR [ECCNUMBER];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATION_IN_STCREGISTRATIONNUMBERTABLE]...';


GO
ALTER TABLE [ax].[TAXINFORMATION_IN]
    ADD CONSTRAINT [DF_TAXINFORMATION_IN_STCREGISTRATIONNUMBERTABLE] DEFAULT ((0)) FOR [STCREGISTRATIONNUMBERTABLE];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATION_IN_ISPRIMARY]...';


GO
ALTER TABLE [ax].[TAXINFORMATION_IN]
    ADD CONSTRAINT [DF_TAXINFORMATION_IN_ISPRIMARY] DEFAULT ((0)) FOR [ISPRIMARY];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATION_IN_TIN]...';


GO
ALTER TABLE [ax].[TAXINFORMATION_IN]
    ADD CONSTRAINT [DF_TAXINFORMATION_IN_TIN] DEFAULT ((0)) FOR [TIN];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATION_IN_NAME]...';


GO
ALTER TABLE [ax].[TAXINFORMATION_IN]
    ADD CONSTRAINT [DF_TAXINFORMATION_IN_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSALESQUANTITYLIMIT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSALESQUANTITYLIMIT] DEFAULT ((0)) FOR [PRODUCTSALESQUANTITYLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_RECONNECTINTERVAL]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_RECONNECTINTERVAL] DEFAULT ((0)) FOR [RECONNECTINTERVAL];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSBYRECENTARRIVAL]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSBYRECENTARRIVAL] DEFAULT ((0)) FOR [PRODUCTSBYRECENTARRIVAL];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CUSTOMERBYSALESAMOUNTDAYLIMIT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CUSTOMERBYSALESAMOUNTDAYLIMIT] DEFAULT ((0)) FOR [CUSTOMERBYSALESAMOUNTDAYLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_LIMITASSORTEDPRODUCTS]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_LIMITASSORTEDPRODUCTS] DEFAULT ((0)) FOR [LIMITASSORTEDPRODUCTS];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_ADDRESSBOOK]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_ADDRESSBOOK] DEFAULT ((0)) FOR [ADDRESSBOOK];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_UPLOADTRANSACTIONSIZE]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_UPLOADTRANSACTIONSIZE] DEFAULT ((0)) FOR [UPLOADTRANSACTIONSIZE];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSARRIVALLIMITDAYS]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSARRIVALLIMITDAYS] DEFAULT ((0)) FOR [PRODUCTSARRIVALLIMITDAYS];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CUSTOMERBYSALESAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CUSTOMERBYSALESAMOUNT] DEFAULT ((0)) FOR [CUSTOMERBYSALESAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CUSTOMERBYVISITSNUMLIMIT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CUSTOMERBYVISITSNUMLIMIT] DEFAULT ((0)) FOR [CUSTOMERBYVISITSNUMLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_TRXUPLOADINTERVAL]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_TRXUPLOADINTERVAL] DEFAULT ((0)) FOR [TRXUPLOADINTERVAL];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_DBEXPORTPATH]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_DBEXPORTPATH] DEFAULT ('') FOR [DBEXPORTPATH];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSALESAMOUNTLIMITDAYS]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSALESAMOUNTLIMITDAYS] DEFAULT ((0)) FOR [PRODUCTSALESAMOUNTLIMITDAYS];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_NAME]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSARRIVALLIMIT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSARRIVALLIMIT] DEFAULT ((0)) FOR [PRODUCTSARRIVALLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CUSTOMERBYADDRESS]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CUSTOMERBYADDRESS] DEFAULT ((0)) FOR [CUSTOMERBYADDRESS];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSBYSPECIFICCATEGORY]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSBYSPECIFICCATEGORY] DEFAULT ((0)) FOR [PRODUCTSBYSPECIFICCATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CUSTOMERBYVISITSDAYLIMIT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CUSTOMERBYVISITSDAYLIMIT] DEFAULT ((0)) FOR [CUSTOMERBYVISITSDAYLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CHECKNEWDBINTERVAL]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CHECKNEWDBINTERVAL] DEFAULT ((0)) FOR [CHECKNEWDBINTERVAL];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSALESAMOUNTLIMIT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSALESAMOUNTLIMIT] DEFAULT ((0)) FOR [PRODUCTSALESAMOUNTLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSALESQUANTITYLIMITDAYS]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSALESQUANTITYLIMITDAYS] DEFAULT ((0)) FOR [PRODUCTSALESQUANTITYLIMITDAYS];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_IMAGEPATH]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_IMAGEPATH] DEFAULT ('') FOR [IMAGEPATH];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_TIMEOUT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_TIMEOUT] DEFAULT ((0)) FOR [TIMEOUT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSBYSALESAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSBYSALESAMOUNT] DEFAULT ((0)) FOR [PRODUCTSBYSALESAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CUSTOMERBYSALESAMOUNTNUMLIMIT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CUSTOMERBYSALESAMOUNTNUMLIMIT] DEFAULT ((0)) FOR [CUSTOMERBYSALESAMOUNTNUMLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_CUSTOMERBYVISITS]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_CUSTOMERBYVISITS] DEFAULT ((0)) FOR [CUSTOMERBYVISITS];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_PRODUCTSBYSALESQUANTITY]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_PRODUCTSBYSALESQUANTITY] DEFAULT ((0)) FOR [PRODUCTSBYSALESQUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_LIMITAVAILABLECUSTOMERS]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_LIMITAVAILABLECUSTOMERS] DEFAULT ((0)) FOR [LIMITAVAILABLECUSTOMERS];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILE_ASSORTMENT]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILE]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILE_ASSORTMENT] DEFAULT ((0)) FOR [ASSORTMENT];


GO
PRINT N'Creating [ax].[DF_INVENTSITELOGISTICSLOCATION_LOCATION]...';


GO
ALTER TABLE [ax].[INVENTSITELOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTSITELOGISTICSLOCATION_LOCATION] DEFAULT ((0)) FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_INVENTSITELOGISTICSLOCATION_ISPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[INVENTSITELOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTSITELOGISTICSLOCATION_ISPOSTALADDRESS] DEFAULT ((0)) FOR [ISPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_INVENTSITELOGISTICSLOCATION_SITE]...';


GO
ALTER TABLE [ax].[INVENTSITELOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTSITELOGISTICSLOCATION_SITE] DEFAULT ((0)) FOR [SITE];


GO
PRINT N'Creating [ax].[DF_INVENTSITELOGISTICSLOCATION_ISPRIMARY]...';


GO
ALTER TABLE [ax].[INVENTSITELOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTSITELOGISTICSLOCATION_ISPRIMARY] DEFAULT ((0)) FOR [ISPRIMARY];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATIONTRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATIONTRANSLATION]
    ADD CONSTRAINT [DF_RETAILAFFILIATIONTRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATIONTRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATIONTRANSLATION]
    ADD CONSTRAINT [DF_RETAILAFFILIATIONTRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATIONTRANSLATION_AFFILIATION]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATIONTRANSLATION]
    ADD CONSTRAINT [DF_RETAILAFFILIATIONTRANSLATION_AFFILIATION] DEFAULT ((0)) FOR [AFFILIATION];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTRELATIONTABLE_PRODUCT2]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTRELATIONTABLE]
    ADD CONSTRAINT [DF_ECORESPRODUCTRELATIONTABLE_PRODUCT2] DEFAULT ((0)) FOR [PRODUCT2];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTRELATIONTABLE_PRODUCTRELATIONTYPE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTRELATIONTABLE]
    ADD CONSTRAINT [DF_ECORESPRODUCTRELATIONTABLE_PRODUCTRELATIONTYPE] DEFAULT ((0)) FOR [PRODUCTRELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTRELATIONTABLE_PRODUCT1]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTRELATIONTABLE]
    ADD CONSTRAINT [DF_ECORESPRODUCTRELATIONTABLE_PRODUCT1] DEFAULT ((0)) FOR [PRODUCT1];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREHARDWARESTATIONTABLE_EFTTERMINALID]...';


GO
ALTER TABLE [ax].[RETAILSTOREHARDWARESTATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTOREHARDWARESTATIONTABLE_EFTTERMINALID] DEFAULT ('') FOR [EFTTERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREHARDWARESTATIONTABLE_HOSTNAME]...';


GO
ALTER TABLE [ax].[RETAILSTOREHARDWARESTATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTOREHARDWARESTATIONTABLE_HOSTNAME] DEFAULT ('') FOR [HOSTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREHARDWARESTATIONTABLE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILSTOREHARDWARESTATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTOREHARDWARESTATIONTABLE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREHARDWARESTATIONTABLE_STORE]...';


GO
ALTER TABLE [ax].[RETAILSTOREHARDWARESTATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTOREHARDWARESTATIONTABLE_STORE] DEFAULT ((0)) FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREHARDWARESTATIONTABLE_HARDWARESTATIONID]...';


GO
ALTER TABLE [ax].[RETAILSTOREHARDWARESTATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTOREHARDWARESTATIONTABLE_HARDWARESTATIONID] DEFAULT ('') FOR [HARDWARESTATIONID];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERTABLE_CARRIERINTERFACEID]...';


GO
ALTER TABLE [ax].[SHIPCARRIERTABLE]
    ADD CONSTRAINT [DF_SHIPCARRIERTABLE_CARRIERINTERFACEID] DEFAULT ((0)) FOR [CARRIERINTERFACEID];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERTABLE_CARRIERNAME]...';


GO
ALTER TABLE [ax].[SHIPCARRIERTABLE]
    ADD CONSTRAINT [DF_SHIPCARRIERTABLE_CARRIERNAME] DEFAULT ('') FOR [CARRIERNAME];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERTABLE_CARRIERID]...';


GO
ALTER TABLE [ax].[SHIPCARRIERTABLE]
    ADD CONSTRAINT [DF_SHIPCARRIERTABLE_CARRIERID] DEFAULT ('') FOR [CARRIERID];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERTABLE_RETAILSHIPCARRIERINTERFACE]...';


GO
ALTER TABLE [ax].[SHIPCARRIERTABLE]
    ADD CONSTRAINT [DF_SHIPCARRIERTABLE_RETAILSHIPCARRIERINTERFACE] DEFAULT ((0)) FOR [RETAILSHIPCARRIERINTERFACE];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERTABLE_CARRIERSERVICEDESCRIPTION]...';


GO
ALTER TABLE [ax].[SHIPCARRIERTABLE]
    ADD CONSTRAINT [DF_SHIPCARRIERTABLE_CARRIERSERVICEDESCRIPTION] DEFAULT ('') FOR [CARRIERSERVICEDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPAYMENTCONNECTORLINE_ISTESTMODE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPAYMENTCONNECTORLINE]
    ADD CONSTRAINT [DF_RETAILCHANNELPAYMENTCONNECTORLINE_ISTESTMODE] DEFAULT ((0)) FOR [ISTESTMODE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPAYMENTCONNECTORLINE_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPAYMENTCONNECTORLINE]
    ADD CONSTRAINT [DF_RETAILCHANNELPAYMENTCONNECTORLINE_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPAYMENTCONNECTORLINE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPAYMENTCONNECTORLINE]
    ADD CONSTRAINT [DF_RETAILCHANNELPAYMENTCONNECTORLINE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPAYMENTCONNECTORLINE_ONLINECHANNEL]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPAYMENTCONNECTORLINE]
    ADD CONSTRAINT [DF_RETAILCHANNELPAYMENTCONNECTORLINE_ONLINECHANNEL] DEFAULT ((0)) FOR [ONLINECHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPAYMENTCONNECTORLINE_PAYMENTCONNECTORNAME]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPAYMENTCONNECTORLINE]
    ADD CONSTRAINT [DF_RETAILCHANNELPAYMENTCONNECTORLINE_PAYMENTCONNECTORNAME] DEFAULT ('') FOR [PAYMENTCONNECTORNAME];


GO
PRINT N'Creating [ax].[DF_SYSSERVICECONFIGURATIONSETTING_NAME]...';


GO
ALTER TABLE [ax].[SYSSERVICECONFIGURATIONSETTING]
    ADD CONSTRAINT [DF_SYSSERVICECONFIGURATIONSETTING_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONROLETRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONROLETRANSLATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONROLETRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONROLETRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONROLETRANSLATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONROLETRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONROLETRANSLATION_LOCATIONROLE]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONROLETRANSLATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONROLETRANSLATION_LOCATIONROLE] DEFAULT ((0)) FOR [LOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_CATEGORYHIERARCHY]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_CATEGORYHIERARCHY] DEFAULT ((0)) FOR [CATEGORYHIERARCHY];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_LEVEL]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_LEVEL] DEFAULT ((0)) FOR [LEVEL];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_PARENTCATEGORY]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_PARENTCATEGORY] DEFAULT ((0)) FOR [PARENTCATEGORY];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_DEFAULTPROJECTGLOBALCATEGORY]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_DEFAULTPROJECTGLOBALCATEGORY] DEFAULT ((0)) FOR [DEFAULTPROJECTGLOBALCATEGORY];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_ISTANGIBLE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_ISTANGIBLE] DEFAULT ((0)) FOR [ISTANGIBLE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_NESTEDSETRIGHT]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_NESTEDSETRIGHT] DEFAULT ((0)) FOR [NESTEDSETRIGHT];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_CODE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_CODE] DEFAULT ('') FOR [CODE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_ISCATEGORYATTRIBUTESINHERITED]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_ISCATEGORYATTRIBUTESINHERITED] DEFAULT ((0)) FOR [ISCATEGORYATTRIBUTESINHERITED];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_NESTEDSETLEFT]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_NESTEDSETLEFT] DEFAULT ((0)) FOR [NESTEDSETLEFT];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_CHANGESTATUS]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_CHANGESTATUS] DEFAULT ((0)) FOR [CHANGESTATUS];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_ISACTIVE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_ISACTIVE] DEFAULT ((0)) FOR [ISACTIVE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_NAME]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORY_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[ECORESCATEGORY]
    ADD CONSTRAINT [DF_ECORESCATEGORY_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDNUMBERS_CARDNUMBERTO]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDNUMBERS]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDNUMBERS_CARDNUMBERTO] DEFAULT ('') FOR [CARDNUMBERTO];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDNUMBERS_CARDTYPEID]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDNUMBERS]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDNUMBERS_CARDTYPEID] DEFAULT ('') FOR [CARDTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDNUMBERS_CARDNUMBERLENGTH]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDNUMBERS]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDNUMBERS_CARDNUMBERLENGTH] DEFAULT ((0)) FOR [CARDNUMBERLENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDNUMBERS_CARDNUMBERFROM]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDNUMBERS]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDNUMBERS_CARDNUMBERFROM] DEFAULT ('') FOR [CARDNUMBERFROM];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPECARDNUMBERS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPECARDNUMBERS]
    ADD CONSTRAINT [DF_RETAILTENDERTYPECARDNUMBERS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINETABLE_TABLENAME]...';


GO
ALTER TABLE [ax].[RETAILOFFLINETABLE]
    ADD CONSTRAINT [DF_RETAILOFFLINETABLE_TABLENAME] DEFAULT ('') FOR [TABLENAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_ADDRESS]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_ADDRESS] DEFAULT ('') FOR [ADDRESS];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_STREETNUMBER]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_STREETNUMBER] DEFAULT ('') FOR [STREETNUMBER];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_LONGITUDE]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_LONGITUDE] DEFAULT ((0)) FOR [LONGITUDE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_ZIPCODERECID]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_ZIPCODERECID] DEFAULT ((0)) FOR [ZIPCODERECID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_DISTRICTNAME]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_DISTRICTNAME] DEFAULT ('') FOR [DISTRICTNAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_CITYRECID]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_CITYRECID] DEFAULT ((0)) FOR [CITYRECID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_VALIDFROMTZID]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_VALIDFROMTZID] DEFAULT ((37001)) FOR [VALIDFROMTZID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_STREET]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_STREET] DEFAULT ('') FOR [STREET];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_LOCATION]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_LOCATION] DEFAULT ((0)) FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_ZIPCODE]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_ZIPCODE] DEFAULT ('') FOR [ZIPCODE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_DISTRICT]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_DISTRICT] DEFAULT ((0)) FOR [DISTRICT];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_CITY]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_CITY] DEFAULT ('') FOR [CITY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_VALIDFROM]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_VALIDFROM] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_STATE]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_STATE] DEFAULT ('') FOR [STATE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_LATITUDE]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_LATITUDE] DEFAULT ((0)) FOR [LATITUDE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_COUNTY]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_COUNTY] DEFAULT ('') FOR [COUNTY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_TIMEZONE]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_TIMEZONE] DEFAULT ((0)) FOR [TIMEZONE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_VALIDTOTZID]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_VALIDTOTZID] DEFAULT ((37001)) FOR [VALIDTOTZID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_POSTBOX]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_POSTBOX] DEFAULT ('') FOR [POSTBOX];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_BUILDINGCOMPLIMENT]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_BUILDINGCOMPLIMENT] DEFAULT ('') FOR [BUILDINGCOMPLIMENT];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_ISPRIVATE]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_ISPRIVATE] DEFAULT ((0)) FOR [ISPRIVATE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_VALIDTO]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_VALIDTO] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_LOGISTICSPOSTALADDRESS_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSPOSTALADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSPOSTALADDRESS_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_RETAILCATEGORYCONTAINMENTLOOKUP_ISDIRTY]...';


GO
ALTER TABLE [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILCATEGORYCONTAINMENTLOOKUP_ISDIRTY] DEFAULT ((0)) FOR [ISDIRTY];


GO
PRINT N'Creating [ax].[DF_RETAILCATEGORYCONTAINMENTLOOKUP_CATEGORY]...';


GO
ALTER TABLE [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILCATEGORYCONTAINMENTLOOKUP_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILCATEGORYCONTAINMENTLOOKUP_CONTAINEDCATEGORY]...';


GO
ALTER TABLE [ax].[RETAILCATEGORYCONTAINMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILCATEGORYCONTAINMENTLOOKUP_CONTAINEDCATEGORY] DEFAULT ((0)) FOR [CONTAINEDCATEGORY];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERINDUSTRY_SYSTASKRECORDERINDUSTRYCODE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERINDUSTRY]
    ADD CONSTRAINT [DF_SYSTASKRECORDERINDUSTRY_SYSTASKRECORDERINDUSTRYCODE] DEFAULT ('') FOR [SYSTASKRECORDERINDUSTRYCODE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERINDUSTRY_NAME]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERINDUSTRY]
    ADD CONSTRAINT [DF_SYSTASKRECORDERINDUSTRY_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILSPECIALCATEGORYMEMBER_RETAILGROUPMEMBER]...';


GO
ALTER TABLE [ax].[RETAILSPECIALCATEGORYMEMBER]
    ADD CONSTRAINT [DF_RETAILSPECIALCATEGORYMEMBER_RETAILGROUPMEMBER] DEFAULT ((0)) FOR [RETAILGROUPMEMBER];


GO
PRINT N'Creating [ax].[DF_RETAILSPECIALCATEGORYMEMBER_CATEGORY]...';


GO
ALTER TABLE [ax].[RETAILSPECIALCATEGORYMEMBER]
    ADD CONSTRAINT [DF_RETAILSPECIALCATEGORYMEMBER_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_ECORESDISTINCTPRODUCTVARIANT_PRODUCTMASTER]...';


GO
ALTER TABLE [ax].[ECORESDISTINCTPRODUCTVARIANT]
    ADD CONSTRAINT [DF_ECORESDISTINCTPRODUCTVARIANT_PRODUCTMASTER] DEFAULT ((0)) FOR [PRODUCTMASTER];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTPRICEGROUP_PRICEDISCGROUP]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILDISCOUNTPRICEGROUP_PRICEDISCGROUP] DEFAULT ((0)) FOR [PRICEDISCGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTPRICEGROUP_OFFERID]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILDISCOUNTPRICEGROUP_OFFERID] DEFAULT ('') FOR [OFFERID];


GO
PRINT N'Creating [ax].[DF_TAXREGISTRATIONNUMBERS_IN_REGISTRATIONTYPE]...';


GO
ALTER TABLE [ax].[TAXREGISTRATIONNUMBERS_IN]
    ADD CONSTRAINT [DF_TAXREGISTRATIONNUMBERS_IN_REGISTRATIONTYPE] DEFAULT ((0)) FOR [REGISTRATIONTYPE];


GO
PRINT N'Creating [ax].[DF_TAXREGISTRATIONNUMBERS_IN_TAXTYPE]...';


GO
ALTER TABLE [ax].[TAXREGISTRATIONNUMBERS_IN]
    ADD CONSTRAINT [DF_TAXREGISTRATIONNUMBERS_IN_TAXTYPE] DEFAULT ((0)) FOR [TAXTYPE];


GO
PRINT N'Creating [ax].[DF_TAXREGISTRATIONNUMBERS_IN_REGISTRATIONNUMBER]...';


GO
ALTER TABLE [ax].[TAXREGISTRATIONNUMBERS_IN]
    ADD CONSTRAINT [DF_TAXREGISTRATIONNUMBERS_IN_REGISTRATIONNUMBER] DEFAULT ('') FOR [REGISTRATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_LAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_LAYOUTID] DEFAULT ('') FOR [LAYOUTID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_UPDATESERVICEPORT]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_UPDATESERVICEPORT] DEFAULT ((0)) FOR [UPDATESERVICEPORT];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_LOCATION]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_LOCATION] DEFAULT ('') FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_ITEMIDONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_ITEMIDONRECEIPT] DEFAULT ((0)) FOR [ITEMIDONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_TERMINALSTATEMENT]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_TERMINALSTATEMENT] DEFAULT ((0)) FOR [TERMINALSTATEMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_MAXDISPLAYTEXTLENGTH]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_MAXDISPLAYTEXTLENGTH] DEFAULT ((0)) FOR [MAXDISPLAYTEXTLENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_RETAILTERMINALOPERATIONMODE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_RETAILTERMINALOPERATIONMODE] DEFAULT ((0)) FOR [RETAILTERMINALOPERATIONMODE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_VISUALPROFILE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_VISUALPROFILE] DEFAULT ('') FOR [VISUALPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_MANAGERKEYONRETURN]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_MANAGERKEYONRETURN] DEFAULT ((0)) FOR [MANAGERKEYONRETURN];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_FISCALDOCUMENTSERIES]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_FISCALDOCUMENTSERIES] DEFAULT ('') FOR [FISCALDOCUMENTSERIES];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_SLIPIFRETURN]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_SLIPIFRETURN] DEFAULT ((0)) FOR [SLIPIFRETURN];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_EXITAFTEREACHTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_EXITAFTEREACHTRANSACTION] DEFAULT ((0)) FOR [EXITAFTEREACHTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_STANDALONE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_STANDALONE] DEFAULT ((0)) FOR [STANDALONE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_RETURNINTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_RETURNINTRANSACTION] DEFAULT ((0)) FOR [RETURNINTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_EFTTERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_EFTTERMINALID] DEFAULT ('') FOR [EFTTERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_STORERECID]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_STORERECID] DEFAULT ((0)) FOR [STORERECID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_IPADDRESS]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_IPADDRESS] DEFAULT ('') FOR [IPADDRESS];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_HARDWAREPROFILE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_HARDWAREPROFILE] DEFAULT ('') FOR [HARDWAREPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_STATEMENTMETHOD]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_STATEMENTMETHOD] DEFAULT ((0)) FOR [STATEMENTMETHOD];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_PRINTVATREFUNDCHECKS]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_PRINTVATREFUNDCHECKS] DEFAULT ((0)) FOR [PRINTVATREFUNDCHECKS];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_CUSTOMERDISPLAYTEXT1]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_CUSTOMERDISPLAYTEXT1] DEFAULT ('') FOR [CUSTOMERDISPLAYTEXT1];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_RECEIPTBARCODE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_RECEIPTBARCODE] DEFAULT ((0)) FOR [RECEIPTBARCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_CUSTOMERDISPLAYTEXT2]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_CUSTOMERDISPLAYTEXT2] DEFAULT ('') FOR [CUSTOMERDISPLAYTEXT2];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_CLOSINGSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_CLOSINGSTATUS] DEFAULT ((0)) FOR [CLOSINGSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_OPENDRAWERATLILO]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_OPENDRAWERATLILO] DEFAULT ((0)) FOR [OPENDRAWERATLILO];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_RECEIPTSETUPLOCATION]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_RECEIPTSETUPLOCATION] DEFAULT ((0)) FOR [RECEIPTSETUPLOCATION];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_EFTTENDERTYPEIDDEFAULT]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_EFTTENDERTYPEIDDEFAULT] DEFAULT ('') FOR [EFTTENDERTYPEIDDEFAULT];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_RECEIPTPRINTINGDEFAULTOFF]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_RECEIPTPRINTINGDEFAULTOFF] DEFAULT ((0)) FOR [RECEIPTPRINTINGDEFAULTOFF];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_EFTSTORERECID]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_EFTSTORERECID] DEFAULT ((0)) FOR [EFTSTORERECID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_NAME]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_CREATERECORDING]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_CREATERECORDING] DEFAULT ((0)) FOR [CREATERECORDING];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_NOTACTIVE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_NOTACTIVE] DEFAULT ((0)) FOR [NOTACTIVE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_SELECTHARDWARESTATIONONTENDERING]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_SELECTHARDWARESTATIONONTENDERING] DEFAULT ((0)) FOR [SELECTHARDWARESTATIONONTENDERING];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_MAXRECEIPTTEXTLENGTH]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_MAXRECEIPTTEXTLENGTH] DEFAULT ((0)) FOR [MAXRECEIPTTEXTLENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_SUPPORTOFFLINE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_SUPPORTOFFLINE] DEFAULT ((0)) FOR [SUPPORTOFFLINE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_AUTOLOGOFFTIMEOUT]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_AUTOLOGOFFTIMEOUT] DEFAULT ((0)) FOR [AUTOLOGOFFTIMEOUT];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_ONLYTOTALINSUSPENDEDTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_ONLYTOTALINSUSPENDEDTRANSACTION] DEFAULT ((0)) FOR [ONLYTOTALINSUSPENDEDTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_PLAYBACKRECORDING]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_PLAYBACKRECORDING] DEFAULT ((0)) FOR [PLAYBACKRECORDING];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALTABLE_NUMBEROFTOPBOTTOMLINES]...';


GO
ALTER TABLE [ax].[RETAILTERMINALTABLE]
    ADD CONSTRAINT [DF_RETAILTERMINALTABLE_NUMBEROFTOPBOTTOMLINES] DEFAULT ((0)) FOR [NUMBEROFTOPBOTTOMLINES];


GO
PRINT N'Creating [ax].[DF_INVENTSERIAL_INVENTSERIALID]...';


GO
ALTER TABLE [ax].[INVENTSERIAL]
    ADD CONSTRAINT [DF_INVENTSERIAL_INVENTSERIALID] DEFAULT ('') FOR [INVENTSERIALID];


GO
PRINT N'Creating [ax].[DF_INVENTSERIAL_RFIDTAGID]...';


GO
ALTER TABLE [ax].[INVENTSERIAL]
    ADD CONSTRAINT [DF_INVENTSERIAL_RFIDTAGID] DEFAULT ('') FOR [RFIDTAGID];


GO
PRINT N'Creating [ax].[DF_INVENTSERIAL_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTSERIAL]
    ADD CONSTRAINT [DF_INVENTSERIAL_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTSERIAL_PRODDATE]...';


GO
ALTER TABLE [ax].[INVENTSERIAL]
    ADD CONSTRAINT [DF_INVENTSERIAL_PRODDATE] DEFAULT ('1900-01-01') FOR [PRODDATE];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_RETAILUSEINFOCODE]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_RETAILUSEINFOCODE] DEFAULT ((0)) FOR [RETAILUSEINFOCODE];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_PRINTPROMPTONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_PRINTPROMPTONRECEIPT] DEFAULT ((0)) FOR [PRINTPROMPTONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_MINIMUMVALUE]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_MINIMUMVALUE] DEFAULT ((0)) FOR [MINIMUMVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_LINKEDINFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_LINKEDINFOCODEID] DEFAULT ('') FOR [LINKEDINFOCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_INFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_INFOCODEID] DEFAULT ('') FOR [INFOCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_PROMPT]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_PROMPT] DEFAULT ('') FOR [PROMPT];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_ONCEPERTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_ONCEPERTRANSACTION] DEFAULT ((0)) FOR [ONCEPERTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_MAXIMUMLENGTH]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_MAXIMUMLENGTH] DEFAULT ((0)) FOR [MAXIMUMLENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_INPUTREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_INPUTREQUIRED] DEFAULT ((0)) FOR [INPUTREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_RANDOMCOUNTER]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_RANDOMCOUNTER] DEFAULT ((0)) FOR [RANDOMCOUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_PRINTINPUTNAMEONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_PRINTINPUTNAMEONRECEIPT] DEFAULT ((0)) FOR [PRINTINPUTNAMEONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_MAXIMUMVALUE]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_MAXIMUMVALUE] DEFAULT ((0)) FOR [MAXIMUMVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_RANDOMFACTOR]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_RANDOMFACTOR] DEFAULT ((0)) FOR [RANDOMFACTOR];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_PRINTINPUTONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_PRINTINPUTONRECEIPT] DEFAULT ((0)) FOR [PRINTINPUTONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_MINIMUMLENGTH]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_MINIMUMLENGTH] DEFAULT ((0)) FOR [MINIMUMLENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETABLE_INPUTTYPE]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFOCODETABLE_INPUTTYPE] DEFAULT ((0)) FOR [INPUTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODEGROUP_GROUPID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODEGROUP]
    ADD CONSTRAINT [DF_RETAILINFOCODEGROUP_GROUPID] DEFAULT ('') FOR [GROUPID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODEGROUP_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILINFOCODEGROUP]
    ADD CONSTRAINT [DF_RETAILINFOCODEGROUP_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_HCMPOSITION_POSITIONID]...';


GO
ALTER TABLE [ax].[HCMPOSITION]
    ADD CONSTRAINT [DF_HCMPOSITION_POSITIONID] DEFAULT ('') FOR [POSITIONID];


GO
PRINT N'Creating [ax].[DF_HCMPOSITION_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMPOSITION]
    ADD CONSTRAINT [DF_HCMPOSITION_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMPOSITION_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMPOSITION]
    ADD CONSTRAINT [DF_HCMPOSITION_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERCONFIGURATION_CONFIGPRODUCTDIMENSIONATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERCONFIGURATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERCONFIGURATION_CONFIGPRODUCTDIMENSIONATTRIBUTE] DEFAULT ((0)) FOR [CONFIGPRODUCTDIMENSIONATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERCONFIGURATION_CONFIGURATION]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERCONFIGURATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERCONFIGURATION_CONFIGURATION] DEFAULT ((0)) FOR [CONFIGURATION];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERCONFIGURATION_CONFIGPRODUCTMASTER]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERCONFIGURATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERCONFIGURATION_CONFIGPRODUCTMASTER] DEFAULT ((0)) FOR [CONFIGPRODUCTMASTER];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_AUTHENTICATIONOPERATION]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_AUTHENTICATIONOPERATION] DEFAULT ((0)) FOR [AUTHENTICATIONOPERATION];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_LOGID]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_LOGID] DEFAULT ('{00000000-0000-0000-0000-000000000000}') FOR [LOGID];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_CHANNELID]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_CHANNELID] DEFAULT ((0)) FOR [CHANNELID];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_STAFFID]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_STAFFID] DEFAULT ('') FOR [STAFFID];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_AUTHENTICATIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_AUTHENTICATIONSTATUS] DEFAULT ((0)) FOR [AUTHENTICATIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_LOGDATETIME]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_LOGDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [LOGDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILAUTHENTICATIONLOG_LOGDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILAUTHENTICATIONLOG]
    ADD CONSTRAINT [DF_RETAILAUTHENTICATIONLOG_LOGDATETIMETZID] DEFAULT ((37001)) FOR [LOGDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_ECORESVALUE_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[ECORESVALUE]
    ADD CONSTRAINT [DF_ECORESVALUE_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEME_LOYALTYSCHEMEID]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEME]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEME_LOYALTYSCHEMEID] DEFAULT ('') FOR [LOYALTYSCHEMEID];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEME_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEME]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEME_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEME_AFFILIATION]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEME]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEME_AFFILIATION] DEFAULT ((0)) FOR [AFFILIATION];


GO
PRINT N'Creating [ax].[DF_PROVISIONINGMESSAGETABLE_STATE]...';


GO
ALTER TABLE [ax].[PROVISIONINGMESSAGETABLE]
    ADD CONSTRAINT [DF_PROVISIONINGMESSAGETABLE_STATE] DEFAULT ((0)) FOR [STATE];


GO
PRINT N'Creating [ax].[DF_PROVISIONINGMESSAGETABLE_PLANCAPABILITY]...';


GO
ALTER TABLE [ax].[PROVISIONINGMESSAGETABLE]
    ADD CONSTRAINT [DF_PROVISIONINGMESSAGETABLE_PLANCAPABILITY] DEFAULT ('') FOR [PLANCAPABILITY];


GO
PRINT N'Creating [ax].[DF_PROVISIONINGMESSAGETABLE_ID]...';


GO
ALTER TABLE [ax].[PROVISIONINGMESSAGETABLE]
    ADD CONSTRAINT [DF_PROVISIONINGMESSAGETABLE_ID] DEFAULT ('{00000000-0000-0000-0000-000000000000}') FOR [ID];


GO
PRINT N'Creating [ax].[DF_PROVISIONINGMESSAGETABLE_PLANID]...';


GO
ALTER TABLE [ax].[PROVISIONINGMESSAGETABLE]
    ADD CONSTRAINT [DF_PROVISIONINGMESSAGETABLE_PLANID] DEFAULT ('{00000000-0000-0000-0000-000000000000}') FOR [PLANID];


GO
PRINT N'Creating [ax].[DF_PROVISIONINGMESSAGETABLE_USERID]...';


GO
ALTER TABLE [ax].[PROVISIONINGMESSAGETABLE]
    ADD CONSTRAINT [DF_PROVISIONINGMESSAGETABLE_USERID] DEFAULT ('') FOR [USERID];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTVARIANTSTYLE_STYLE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTVARIANTSTYLE]
    ADD CONSTRAINT [DF_ECORESPRODUCTVARIANTSTYLE_STYLE] DEFAULT ((0)) FOR [STYLE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLEVEL_FRAMEWORKINDUSTRYMAP]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLEVEL]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLEVEL_FRAMEWORKINDUSTRYMAP] DEFAULT ((0)) FOR [FRAMEWORKINDUSTRYMAP];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLEVEL_ALLOWARTIFACTS]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLEVEL]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLEVEL_ALLOWARTIFACTS] DEFAULT ((0)) FOR [ALLOWARTIFACTS];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLEVEL_SEQUENCE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLEVEL]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLEVEL_SEQUENCE] DEFAULT ((0)) FOR [SEQUENCE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLEVEL_FRAMEWORKLEVEL]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLEVEL]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLEVEL_FRAMEWORKLEVEL] DEFAULT ('') FOR [FRAMEWORKLEVEL];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERCOLOR_COLORPRODUCTMASTER]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERCOLOR]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERCOLOR_COLORPRODUCTMASTER] DEFAULT ((0)) FOR [COLORPRODUCTMASTER];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERCOLOR_COLORPRODUCTDIMENSIONATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERCOLOR]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERCOLOR_COLORPRODUCTDIMENSIONATTRIBUTE] DEFAULT ((0)) FOR [COLORPRODUCTDIMENSIONATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERCOLOR_COLOR]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERCOLOR]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERCOLOR_COLOR] DEFAULT ((0)) FOR [COLOR];


GO
PRINT N'Creating [ax].[DF_RETAILJOBPOSPERMISSIONGROUP_JOB]...';


GO
ALTER TABLE [ax].[RETAILJOBPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILJOBPOSPERMISSIONGROUP_JOB] DEFAULT ((0)) FOR [JOB];


GO
PRINT N'Creating [ax].[DF_RETAILJOBPOSPERMISSIONGROUP_RETAILPOSPERMISSIONGROUP]...';


GO
ALTER TABLE [ax].[RETAILJOBPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILJOBPOSPERMISSIONGROUP_RETAILPOSPERMISSIONGROUP] DEFAULT ((0)) FOR [RETAILPOSPERMISSIONGROUP];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONLOGISTICSLOCATION_ISPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATIONLOGISTICSLOCATION_ISPOSTALADDRESS] DEFAULT ((0)) FOR [ISPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONLOGISTICSLOCATION_ISPRIMARY]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATIONLOGISTICSLOCATION_ISPRIMARY] DEFAULT ((0)) FOR [ISPRIMARY];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONLOGISTICSLOCATION_INVENTLOCATION]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATIONLOGISTICSLOCATION_INVENTLOCATION] DEFAULT ((0)) FOR [INVENTLOCATION];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATIONLOGISTICSLOCATION_LOCATION]...';


GO
ALTER TABLE [ax].[INVENTLOCATIONLOGISTICSLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATIONLOGISTICSLOCATION_LOCATION] DEFAULT ((0)) FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERSTYLE_STYLEPRODUCTMASTER]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERSTYLE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERSTYLE_STYLEPRODUCTMASTER] DEFAULT ((0)) FOR [STYLEPRODUCTMASTER];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERSTYLE_STYLE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERSTYLE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERSTYLE_STYLE] DEFAULT ((0)) FOR [STYLE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERSTYLE_STYLEPRODUCTDIMENSIONATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERSTYLE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERSTYLE_STYLEPRODUCTDIMENSIONATTRIBUTE] DEFAULT ((0)) FOR [STYLEPRODUCTDIMENSIONATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_RETAILCDXDATASTORECHANNEL_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILCDXDATASTORECHANNEL]
    ADD CONSTRAINT [DF_RETAILCDXDATASTORECHANNEL_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILCDXDATASTORECHANNEL_DATABASEPROFILE]...';


GO
ALTER TABLE [ax].[RETAILCDXDATASTORECHANNEL]
    ADD CONSTRAINT [DF_RETAILCDXDATASTORECHANNEL_DATABASEPROFILE] DEFAULT ((0)) FOR [DATABASEPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILCDXDATASTORECHANNEL_DATAGROUPMODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILCDXDATASTORECHANNEL]
    ADD CONSTRAINT [DF_RETAILCDXDATASTORECHANNEL_DATAGROUPMODIFIEDDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [DATAGROUPMODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILCDXDATASTORECHANNEL_DATAGROUPMODIFIEDDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILCDXDATASTORECHANNEL]
    ADD CONSTRAINT [DF_RETAILCDXDATASTORECHANNEL_DATAGROUPMODIFIEDDATETIMETZID] DEFAULT ((37001)) FOR [DATAGROUPMODIFIEDDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORELOCATORGROUPMEMBER_STORE]...';


GO
ALTER TABLE [ax].[RETAILSTORELOCATORGROUPMEMBER]
    ADD CONSTRAINT [DF_RETAILSTORELOCATORGROUPMEMBER_STORE] DEFAULT ((0)) FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORELOCATORGROUPMEMBER_LOCATORGROUP]...';


GO
ALTER TABLE [ax].[RETAILSTORELOCATORGROUPMEMBER]
    ADD CONSTRAINT [DF_RETAILSTORELOCATORGROUPMEMBER_LOCATORGROUP] DEFAULT ((0)) FOR [LOCATORGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONATTRIBUTETRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONATTRIBUTETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONATTRIBUTETRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONATTRIBUTETRANS_TEXTVALUE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONATTRIBUTETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONATTRIBUTETRANS_TEXTVALUE] DEFAULT ('') FOR [TEXTVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONATTRIBUTETRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONATTRIBUTETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONATTRIBUTETRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONATTRIBUTETRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONATTRIBUTETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONATTRIBUTETRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONATTRIBUTETRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONATTRIBUTETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONATTRIBUTETRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONATTRIBUTETRANS_NAME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONATTRIBUTETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONATTRIBUTETRANS_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETABLE_STORENUMBER]...';


GO
ALTER TABLE [ax].[RETAILSTORETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETABLE_STORENUMBER] DEFAULT ('') FOR [STORENUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETABLE_TAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILSTORETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETABLE_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_DIRPARTYTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[DIRPARTYTABLE]
    ADD CONSTRAINT [DF_DIRPARTYTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_DIRPARTYTABLE_NAMEALIAS]...';


GO
ALTER TABLE [ax].[DIRPARTYTABLE]
    ADD CONSTRAINT [DF_DIRPARTYTABLE_NAMEALIAS] DEFAULT ('') FOR [NAMEALIAS];


GO
PRINT N'Creating [ax].[DF_DIRPARTYTABLE_KNOWNAS]...';


GO
ALTER TABLE [ax].[DIRPARTYTABLE]
    ADD CONSTRAINT [DF_DIRPARTYTABLE_KNOWNAS] DEFAULT ('') FOR [KNOWNAS];


GO
PRINT N'Creating [ax].[DF_DIRPARTYTABLE_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[DIRPARTYTABLE]
    ADD CONSTRAINT [DF_DIRPARTYTABLE_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_DIRPARTYTABLE_NAME]...';


GO
ALTER TABLE [ax].[DIRPARTYTABLE]
    ADD CONSTRAINT [DF_DIRPARTYTABLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_DIRPARTYTABLE_PARTYNUMBER]...';


GO
ALTER TABLE [ax].[DIRPARTYTABLE]
    ADD CONSTRAINT [DF_DIRPARTYTABLE_PARTYNUMBER] DEFAULT ('') FOR [PARTYNUMBER];


GO
PRINT N'Creating [ax].[DF_DIRPARTYTABLE_LANGUAGEID]...';


GO
ALTER TABLE [ax].[DIRPARTYTABLE]
    ADD CONSTRAINT [DF_DIRPARTYTABLE_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINECUSTOMERADDRESSFILTER_OFFLINEPROFILE]...';


GO
ALTER TABLE [ax].[RETAILOFFLINECUSTOMERADDRESSFILTER]
    ADD CONSTRAINT [DF_RETAILOFFLINECUSTOMERADDRESSFILTER_OFFLINEPROFILE] DEFAULT ((0)) FOR [OFFLINEPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINECUSTOMERADDRESSFILTER_FILTERVALUE]...';


GO
ALTER TABLE [ax].[RETAILOFFLINECUSTOMERADDRESSFILTER]
    ADD CONSTRAINT [DF_RETAILOFFLINECUSTOMERADDRESSFILTER_FILTERVALUE] DEFAULT ('') FOR [FILTERVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINECUSTOMERADDRESSFILTER_ADDRESSPART]...';


GO
ALTER TABLE [ax].[RETAILOFFLINECUSTOMERADDRESSFILTER]
    ADD CONSTRAINT [DF_RETAILOFFLINECUSTOMERADDRESSFILTER_ADDRESSPART] DEFAULT ((0)) FOR [ADDRESSPART];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERDIMENSIONVALUE_RETAILWEIGHT]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERDIMENSIONVALUE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERDIMENSIONVALUE_RETAILWEIGHT] DEFAULT ((0)) FOR [RETAILWEIGHT];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERDIMENSIONVALUE_RETAILDISPLAYORDER]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERDIMENSIONVALUE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERDIMENSIONVALUE_RETAILDISPLAYORDER] DEFAULT ((0)) FOR [RETAILDISPLAYORDER];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERDIMENSIONVALUE_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERDIMENSIONVALUE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERDIMENSIONVALUE_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_ECORESCONFIGURATION_NAME]...';


GO
ALTER TABLE [ax].[ECORESCONFIGURATION]
    ADD CONSTRAINT [DF_ECORESCONFIGURATION_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_CFOP]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_CFOP] DEFAULT ('') FOR [CFOP];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINESURCHARGE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINESURCHARGE] DEFAULT ((0)) FOR [LINESURCHARGE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINEAMOUNT] DEFAULT ((0)) FOR [LINEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_UNITPRICE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_UNITPRICE] DEFAULT ((0)) FOR [UNITPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_UNIT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_UNIT] DEFAULT ('') FOR [UNIT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_QUANTITY]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_QUANTITY] DEFAULT ((0)) FOR [QUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINEDISCOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2LINE_BR_LINEDISCOUNT] DEFAULT ((0)) FOR [LINEDISCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CASHCHANGER]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CASHCHANGER] DEFAULT ((0)) FOR [CASHCHANGER];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_RFIDSCANNERTYPE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_RFIDSCANNERTYPE] DEFAULT ((0)) FOR [RFIDSCANNERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2LOGOALIGNMENT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2LOGOALIGNMENT] DEFAULT ((0)) FOR [PRINTER2LOGOALIGNMENT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYTERMINALCLOSED]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYTERMINALCLOSED] DEFAULT ((0)) FOR [DISPLAYTERMINALCLOSED];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_HARDTOTALDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_HARDTOTALDEVICENAME] DEFAULT ('') FOR [HARDTOTALDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTDESCRIPTION] DEFAULT ('') FOR [EFTDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DUALDISPLAYIMAGEPATH]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DUALDISPLAYIMAGEPATH] DEFAULT ('') FOR [DUALDISPLAYIMAGEPATH];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER2MODEL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER2MODEL] DEFAULT ('') FOR [DRAWER2MODEL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MANUALINPUTALLOWED]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MANUALINPUTALLOWED] DEFAULT ((0)) FOR [MANUALINPUTALLOWED];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYBALANCETEXT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYBALANCETEXT] DEFAULT ('') FOR [DISPLAYBALANCETEXT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCANNER2DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCANNER2DESCRIPTION] DEFAULT ('') FOR [SCANNER2DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2] DEFAULT ((0)) FOR [PRINTER2];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PINPAD]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PINPAD] DEFAULT ((0)) FOR [PINPAD];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTERDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTERDEVICENAME] DEFAULT ('') FOR [PRINTERDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MSRDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MSRDEVICENAME] DEFAULT ('') FOR [MSRDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CAPTUREEXTRADATA]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CAPTUREEXTRADATA] DEFAULT ((0)) FOR [CAPTUREEXTRADATA];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CASHCHANGERINITSETTINGS]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CASHCHANGERINITSETTINGS] DEFAULT ('') FOR [CASHCHANGERINITSETTINGS];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCALE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCALE] DEFAULT ((0)) FOR [SCALE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2MAKE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2MAKE] DEFAULT ('') FOR [PRINTER2MAKE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_KEYBOARDMAPPINGID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_KEYBOARDMAPPINGID] DEFAULT ('') FOR [KEYBOARDMAPPINGID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYTOTALTEXT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYTOTALTEXT] DEFAULT ('') FOR [DISPLAYTOTALTEXT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTMERCHANTID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTMERCHANTID] DEFAULT ('') FOR [EFTMERCHANTID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCANNER2DEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCANNER2DEVICENAME] DEFAULT ('') FOR [SCANNER2DEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2BINARYCONVERSION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2BINARYCONVERSION] DEFAULT ((0)) FOR [PRINTER2BINARYCONVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWERDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWERDESCRIPTION] DEFAULT ('') FOR [DRAWERDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DUALDISPLAYRECEIPTPERCENTAGE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DUALDISPLAYRECEIPTPERCENTAGE] DEFAULT ((0)) FOR [DUALDISPLAYRECEIPTPERCENTAGE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SIGCAP]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SIGCAP] DEFAULT ((0)) FOR [SIGCAP];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTERMAKE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTERMAKE] DEFAULT ('') FOR [PRINTERMAKE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MSRMAKE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MSRMAKE] DEFAULT ('') FOR [MSRMAKE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PINPADDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PINPADDESCRIPTION] DEFAULT ('') FOR [PINPADDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MAXINVOICELINES]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MAXINVOICELINES] DEFAULT ((0)) FOR [MAXINVOICELINES];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALREGISTERDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALREGISTERDEVICENAME] DEFAULT ('') FOR [FISCALREGISTERDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYBINCONVERSION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYBINCONVERSION] DEFAULT ((0)) FOR [DISPLAYBINCONVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALPRINTER]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALPRINTER] DEFAULT ((0)) FOR [FISCALPRINTER];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWERUSECASHDRAWERPOOL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWERUSECASHDRAWERPOOL] DEFAULT ((0)) FOR [DRAWERUSECASHDRAWERPOOL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_STARTTRACK1]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_STARTTRACK1] DEFAULT ('') FOR [STARTTRACK1];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CASHCHANGERPORTSETTINGS]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CASHCHANGERPORTSETTINGS] DEFAULT ('') FOR [CASHCHANGERPORTSETTINGS];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCANNERDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCANNERDESCRIPTION] DEFAULT ('') FOR [SCANNERDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DOCINSERTREMOVALTIMEOUT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DOCINSERTREMOVALTIMEOUT] DEFAULT ((0)) FOR [DOCINSERTREMOVALTIMEOUT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTPASSWORD]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTPASSWORD] DEFAULT ('') FOR [EFTPASSWORD];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_KEYLOCK]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_KEYLOCK] DEFAULT ((0)) FOR [KEYLOCK];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2CHARACTERSET]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2CHARACTERSET] DEFAULT ((0)) FOR [PRINTER2CHARACTERSET];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTTESTMODE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTTESTMODE] DEFAULT ((0)) FOR [EFTTESTMODE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SIGCAPDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SIGCAPDESCRIPTION] DEFAULT ('') FOR [SIGCAPDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MSRMODEL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MSRMODEL] DEFAULT ('') FOR [MSRMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTMAXIMUMCARDPAYMENTS]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTMAXIMUMCARDPAYMENTS] DEFAULT ((0)) FOR [EFTMAXIMUMCARDPAYMENTS];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DUALDISPLAYTYPE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DUALDISPLAYTYPE] DEFAULT ((0)) FOR [DUALDISPLAYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWERDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWERDEVICENAME] DEFAULT ('') FOR [DRAWERDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_STARTTRACK2AFTER]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_STARTTRACK2AFTER] DEFAULT ((0)) FOR [STARTTRACK2AFTER];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MICR]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MICR] DEFAULT ((0)) FOR [MICR];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTERMODEL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTERMODEL] DEFAULT ('') FOR [PRINTERMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PINPADDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PINPADDEVICENAME] DEFAULT ('') FOR [PINPADDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYCHARACTERSET]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYCHARACTERSET] DEFAULT ((0)) FOR [DISPLAYCHARACTERSET];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALPRINTERDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALPRINTERDESCRIPTION] DEFAULT ('') FOR [FISCALPRINTERDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SIGCAPDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SIGCAPDEVICENAME] DEFAULT ('') FOR [SIGCAPDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2DESCRIPTION] DEFAULT ('') FOR [PRINTER2DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALPRINTERCONFIGID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALPRINTERCONFIGID] DEFAULT ('') FOR [FISCALPRINTERCONFIGID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTSERVERNAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTSERVERNAME] DEFAULT ('') FOR [EFTSERVERNAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_TIMEOUTINSEC]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_TIMEOUTINSEC] DEFAULT ((0)) FOR [TIMEOUTINSEC];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_KEYLOCKDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_KEYLOCKDESCRIPTION] DEFAULT ('') FOR [KEYLOCKDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PINPADMAKE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PINPADMAKE] DEFAULT ('') FOR [PINPADMAKE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CCTV]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CCTV] DEFAULT ((0)) FOR [CCTV];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTERRECEIPTPROFILEID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTERRECEIPTPROFILEID] DEFAULT ('') FOR [PRINTERRECEIPTPROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_NAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER] DEFAULT ((0)) FOR [DRAWER];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MICRDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MICRDESCRIPTION] DEFAULT ('') FOR [MICRDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWERMAKE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWERMAKE] DEFAULT ('') FOR [DRAWERMAKE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFT] DEFAULT ((0)) FOR [EFT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2MODEL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2MODEL] DEFAULT ('') FOR [PRINTER2MODEL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALPRINTERDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALPRINTERDEVICENAME] DEFAULT ('') FOR [FISCALPRINTERDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCALEDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCALEDESCRIPTION] DEFAULT ('') FOR [SCALEDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYCLOSEDLINE1]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYCLOSEDLINE1] DEFAULT ('') FOR [DISPLAYCLOSEDLINE1];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYDESCRIPTION] DEFAULT ('') FOR [DISPLAYDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_KEYLOCKDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_KEYLOCKDEVICENAME] DEFAULT ('') FOR [KEYLOCKDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PROFILEID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PROFILEID] DEFAULT ('') FOR [PROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTSERVERPORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTSERVERPORT] DEFAULT ('') FOR [EFTSERVERPORT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PINPADMODEL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PINPADMODEL] DEFAULT ('') FOR [PINPADMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PHARMACY]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PHARMACY] DEFAULT ((0)) FOR [PHARMACY];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MICRDRIVERNAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MICRDRIVERNAME] DEFAULT ('') FOR [MICRDRIVERNAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTCOMPANYID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTCOMPANYID] DEFAULT ('') FOR [EFTCOMPANYID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER2]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER2] DEFAULT ((0)) FOR [DRAWER2];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CCTVCAMERA]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CCTVCAMERA] DEFAULT ('') FOR [CCTVCAMERA];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWERMODEL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWERMODEL] DEFAULT ('') FOR [DRAWERMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCALEDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCALEDEVICENAME] DEFAULT ('') FOR [SCALEDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2RECEIPTPROFILEID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2RECEIPTPROFILEID] DEFAULT ('') FOR [PRINTER2RECEIPTPROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FORMXPOS]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FORMXPOS] DEFAULT ((0)) FOR [FORMXPOS];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYCLOSEDLINE2]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYCLOSEDLINE2] DEFAULT ('') FOR [DISPLAYCLOSEDLINE2];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCANNERDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCANNERDEVICENAME] DEFAULT ('') FOR [SCANNERDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYDEVICE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYDEVICE] DEFAULT ((0)) FOR [DISPLAYDEVICE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTBINARYCONVERSION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTBINARYCONVERSION] DEFAULT ((0)) FOR [PRINTBINARYCONVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCANNER]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCANNER] DEFAULT ((0)) FOR [SCANNER];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MSR]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MSR] DEFAULT ((0)) FOR [MSR];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTUSERID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTUSERID] DEFAULT ('') FOR [EFTUSERID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PHARMACYHOST]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PHARMACYHOST] DEFAULT ('') FOR [PHARMACYHOST];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTCONFIGURATION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTCONFIGURATION] DEFAULT ((0)) FOR [EFTCONFIGURATION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CCTVHOSTNAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CCTVHOSTNAME] DEFAULT ('') FOR [CCTVHOSTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER2DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER2DESCRIPTION] DEFAULT ('') FOR [DRAWER2DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTERCHARACTERSET]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTERCHARACTERSET] DEFAULT ((0)) FOR [PRINTERCHARACTERSET];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCREENKEYBOARD]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCREENKEYBOARD] DEFAULT ((0)) FOR [SCREENKEYBOARD];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DUALDISPLAY]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DUALDISPLAY] DEFAULT ((0)) FOR [DUALDISPLAY];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FORMYPOS]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FORMYPOS] DEFAULT ((0)) FOR [FORMYPOS];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SIGCAPFORMNAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SIGCAPFORMNAME] DEFAULT ('') FOR [SIGCAPFORMNAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER2DEVICEPOOL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER2DEVICEPOOL] DEFAULT ((0)) FOR [DRAWER2DEVICEPOOL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2DEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2DEVICENAME] DEFAULT ('') FOR [PRINTER2DEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALREGISTER]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALREGISTER] DEFAULT ((0)) FOR [FISCALREGISTER];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_ENDTRACK1]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_ENDTRACK1] DEFAULT ('') FOR [ENDTRACK1];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_MSRDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_MSRDESCRIPTION] DEFAULT ('') FOR [MSRDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTERDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTERDESCRIPTION] DEFAULT ('') FOR [PRINTERDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYDEVICENAME] DEFAULT ('') FOR [DISPLAYDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SEPARATOR1]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SEPARATOR1] DEFAULT ('') FOR [SEPARATOR1];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER2DEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER2DEVICENAME] DEFAULT ('') FOR [DRAWER2DEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTCONNECTORNAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTCONNECTORNAME] DEFAULT ('') FOR [EFTCONNECTORNAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_HARDTOTAL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_HARDTOTAL] DEFAULT ((0)) FOR [HARDTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DUALDISPLAYBROWSERURL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DUALDISPLAYBROWSERURL] DEFAULT ('') FOR [DUALDISPLAYBROWSERURL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_CCTVPORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_CCTVPORT] DEFAULT ((0)) FOR [CCTVPORT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER2USECASHDRAWERPOOL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER2USECASHDRAWERPOOL] DEFAULT ((0)) FOR [DRAWER2USECASHDRAWERPOOL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALREGISTERCONFIGID]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALREGISTERCONFIGID] DEFAULT ('') FOR [FISCALREGISTERCONFIGID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SIGCAPMAKE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SIGCAPMAKE] DEFAULT ('') FOR [SIGCAPMAKE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2DOCINSERTREMOVALTIMEOUT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2DOCINSERTREMOVALTIMEOUT] DEFAULT ((0)) FOR [PRINTER2DOCINSERTREMOVALTIMEOUT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_RFIDDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_RFIDDESCRIPTION] DEFAULT ('') FOR [RFIDDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_LOGO]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_LOGO] DEFAULT ((0)) FOR [LOGO];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_ENDTRACK2]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_ENDTRACK2] DEFAULT ('') FOR [ENDTRACK2];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SHOWPICTURE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SHOWPICTURE] DEFAULT ((0)) FOR [SHOWPICTURE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DISPLAYLINKEDITEM]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DISPLAYLINKEDITEM] DEFAULT ((0)) FOR [DISPLAYLINKEDITEM];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_FISCALREGISTERDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_FISCALREGISTERDESCRIPTION] DEFAULT ('') FOR [FISCALREGISTERDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SIGCAPMODEL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SIGCAPMODEL] DEFAULT ('') FOR [SIGCAPMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWERDEVICEPOOL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWERDEVICEPOOL] DEFAULT ((0)) FOR [DRAWERDEVICEPOOL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER2LOGO]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER2LOGO] DEFAULT ((0)) FOR [PRINTER2LOGO];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_EFTDATA]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_EFTDATA] DEFAULT ('') FOR [EFTDATA];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DUALDISPLAYIMAGEINTERVAL]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DUALDISPLAYIMAGEINTERVAL] DEFAULT ((0)) FOR [DUALDISPLAYIMAGEINTERVAL];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_RFIDDEVICENAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_RFIDDEVICENAME] DEFAULT ('') FOR [RFIDDEVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DRAWER2MAKE]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DRAWER2MAKE] DEFAULT ('') FOR [DRAWER2MAKE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_HARDTOTALDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_HARDTOTALDESCRIPTION] DEFAULT ('') FOR [HARDTOTALDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_DELAYFORLINKEDITEMS]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_DELAYFORLINKEDITEMS] DEFAULT ((0)) FOR [DELAYFORLINKEDITEMS];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_LOGOALIGNMENT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_LOGOALIGNMENT] DEFAULT ((0)) FOR [LOGOALIGNMENT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PRINTER]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PRINTER] DEFAULT ((0)) FOR [PRINTER];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_SCANNER2]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_SCANNER2] DEFAULT ((0)) FOR [SCANNER2];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWAREPROFILE_PHARMACYPORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWAREPROFILE]
    ADD CONSTRAINT [DF_RETAILHARDWAREPROFILE_PHARMACYPORT] DEFAULT ((0)) FOR [PHARMACYPORT];


GO
PRINT N'Creating [ax].[DF_COMPANYINFO_DATAAREA]...';


GO
ALTER TABLE [ax].[COMPANYINFO]
    ADD CONSTRAINT [DF_COMPANYINFO_DATAAREA] DEFAULT ('') FOR [DATAAREA];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYHIERARCHY_NAME]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYHIERARCHY]
    ADD CONSTRAINT [DF_ECORESCATEGORYHIERARCHY_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYHIERARCHY_HIERARCHYMODIFIER]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYHIERARCHY]
    ADD CONSTRAINT [DF_ECORESCATEGORYHIERARCHY_HIERARCHYMODIFIER] DEFAULT ((0)) FOR [HIERARCHYMODIFIER];


GO
PRINT N'Creating [ax].[DF_RETAILINTERNALORGANIZATION_INTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILINTERNALORGANIZATION]
    ADD CONSTRAINT [DF_RETAILINTERNALORGANIZATION_INTERNALORGANIZATION] DEFAULT ((0)) FOR [INTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHACCOUNTTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHACCOUNTTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHACCOUNTTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHACCOUNTTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHACCOUNTTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHACCOUNTTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHACCOUNTTRANS_ACCOUNTNUM]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHACCOUNTTRANS_ACCOUNTNUM] DEFAULT ('') FOR [ACCOUNTNUM];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHACCOUNTTRANS_BATCHID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHACCOUNTTRANS_BATCHID] DEFAULT ((0)) FOR [BATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHACCOUNTTRANS_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHACCOUNTTRANS_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHACCOUNTTRANS_ACCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHACCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHACCOUNTTRANS_ACCOUNTTYPE] DEFAULT ((0)) FOR [ACCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_UNITID]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_UNITID] DEFAULT ('') FOR [UNITID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_MARKUPGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_MARKUPGROUPID] DEFAULT ('') FOR [MARKUPGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_MODULETYPE]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_MODULETYPE] DEFAULT ((0)) FOR [MODULETYPE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_TAXITEMGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_TAXITEMGROUPID] DEFAULT ('') FOR [TAXITEMGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_LINEDISC]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_LINEDISC] DEFAULT ('') FOR [LINEDISC];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_PRICEUNIT]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_PRICEUNIT] DEFAULT ((0)) FOR [PRICEUNIT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_OVERDELIVERYPCT]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_OVERDELIVERYPCT] DEFAULT ((0)) FOR [OVERDELIVERYPCT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_PRICEDATE]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_PRICEDATE] DEFAULT ('1900-01-01') FOR [PRICEDATE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_INTERCOMPANYBLOCKED]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_INTERCOMPANYBLOCKED] DEFAULT ((0)) FOR [INTERCOMPANYBLOCKED];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_ALLOCATEMARKUP]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_ALLOCATEMARKUP] DEFAULT ((0)) FOR [ALLOCATEMARKUP];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_MAXIMUMRETAILPRICE_IN]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_MAXIMUMRETAILPRICE_IN] DEFAULT ((0)) FOR [MAXIMUMRETAILPRICE_IN];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_UNDERDELIVERYPCT]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_UNDERDELIVERYPCT] DEFAULT ((0)) FOR [UNDERDELIVERYPCT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_MARKUP]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_MARKUP] DEFAULT ((0)) FOR [MARKUP];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_PRICEQTY]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_PRICEQTY] DEFAULT ((0)) FOR [PRICEQTY];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_SUPPITEMGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_SUPPITEMGROUPID] DEFAULT ('') FOR [SUPPITEMGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_MULTILINEDISC]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_MULTILINEDISC] DEFAULT ('') FOR [MULTILINEDISC];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_PRICE]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_PRICE] DEFAULT ((0)) FOR [PRICE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLEMODULE_ENDDISC]...';


GO
ALTER TABLE [ax].[INVENTTABLEMODULE]
    ADD CONSTRAINT [DF_INVENTTABLEMODULE_ENDDISC] DEFAULT ((0)) FOR [ENDDISC];


GO
PRINT N'Creating [ax].[DF_TAXONITEM_TAXCODE]...';


GO
ALTER TABLE [ax].[TAXONITEM]
    ADD CONSTRAINT [DF_TAXONITEM_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXONITEM_TAXITEMGROUP]...';


GO
ALTER TABLE [ax].[TAXONITEM]
    ADD CONSTRAINT [DF_TAXONITEM_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_TAXONITEM_ABATEMENTPERCENT_IN]...';


GO
ALTER TABLE [ax].[TAXONITEM]
    ADD CONSTRAINT [DF_TAXONITEM_ABATEMENTPERCENT_IN] DEFAULT ((0)) FOR [ABATEMENTPERCENT_IN];


GO
PRINT N'Creating [ax].[DF_TAXONITEM_WITHOUTTAXCREDIT_BR]...';


GO
ALTER TABLE [ax].[TAXONITEM]
    ADD CONSTRAINT [DF_TAXONITEM_WITHOUTTAXCREDIT_BR] DEFAULT ((0)) FOR [WITHOUTTAXCREDIT_BR];


GO
PRINT N'Creating [ax].[DF_TAXONITEM_EXEMPTTAX_BR]...';


GO
ALTER TABLE [ax].[TAXONITEM]
    ADD CONSTRAINT [DF_TAXONITEM_EXEMPTTAX_BR] DEFAULT ((0)) FOR [EXEMPTTAX_BR];


GO
PRINT N'Creating [ax].[DF_TAXONITEM_TAXATIONCODETABLE_BR]...';


GO
ALTER TABLE [ax].[TAXONITEM]
    ADD CONSTRAINT [DF_TAXONITEM_TAXATIONCODETABLE_BR] DEFAULT ((0)) FOR [TAXATIONCODETABLE_BR];


GO
PRINT N'Creating [ax].[DF_RETAILEXTERNALIDTOCUSTOMERMAP_CUSTOMERACCOUNTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
    ADD CONSTRAINT [DF_RETAILEXTERNALIDTOCUSTOMERMAP_CUSTOMERACCOUNTNUMBER] DEFAULT ('') FOR [CUSTOMERACCOUNTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILEXTERNALIDTOCUSTOMERMAP_PROVIDERID]...';


GO
ALTER TABLE [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
    ADD CONSTRAINT [DF_RETAILEXTERNALIDTOCUSTOMERMAP_PROVIDERID] DEFAULT ((0)) FOR [PROVIDERID];


GO
PRINT N'Creating [ax].[DF_RETAILEXTERNALIDTOCUSTOMERMAP_ISACTIVATED]...';


GO
ALTER TABLE [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
    ADD CONSTRAINT [DF_RETAILEXTERNALIDTOCUSTOMERMAP_ISACTIVATED] DEFAULT ((0)) FOR [ISACTIVATED];


GO
PRINT N'Creating [ax].[DF_RETAILEXTERNALIDTOCUSTOMERMAP_EXTERNALIDENTITYID]...';


GO
ALTER TABLE [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
    ADD CONSTRAINT [DF_RETAILEXTERNALIDTOCUSTOMERMAP_EXTERNALIDENTITYID] DEFAULT ('') FOR [EXTERNALIDENTITYID];


GO
PRINT N'Creating [ax].[DF_RETAILPERMISSIONSEX_PERMISSIONID]...';


GO
ALTER TABLE [ax].[RETAILPERMISSIONSEX]
    ADD CONSTRAINT [DF_RETAILPERMISSIONSEX_PERMISSIONID] DEFAULT ((0)) FOR [PERMISSIONID];


GO
PRINT N'Creating [ax].[DF_RETAILPERMISSIONSEX_PERMISSIONNAME]...';


GO
ALTER TABLE [ax].[RETAILPERMISSIONSEX]
    ADD CONSTRAINT [DF_RETAILPERMISSIONSEX_PERMISSIONNAME] DEFAULT ('') FOR [PERMISSIONNAME];


GO
PRINT N'Creating [ax].[DF_TAXGROUPDATA_EXEMPTTAX]...';


GO
ALTER TABLE [ax].[TAXGROUPDATA]
    ADD CONSTRAINT [DF_TAXGROUPDATA_EXEMPTTAX] DEFAULT ((0)) FOR [EXEMPTTAX];


GO
PRINT N'Creating [ax].[DF_TAXGROUPDATA_USETAX]...';


GO
ALTER TABLE [ax].[TAXGROUPDATA]
    ADD CONSTRAINT [DF_TAXGROUPDATA_USETAX] DEFAULT ((0)) FOR [USETAX];


GO
PRINT N'Creating [ax].[DF_TAXGROUPDATA_TAXATIONCODETABLE_BR]...';


GO
ALTER TABLE [ax].[TAXGROUPDATA]
    ADD CONSTRAINT [DF_TAXGROUPDATA_TAXATIONCODETABLE_BR] DEFAULT ((0)) FOR [TAXATIONCODETABLE_BR];


GO
PRINT N'Creating [ax].[DF_TAXGROUPDATA_TAXCODE]...';


GO
ALTER TABLE [ax].[TAXGROUPDATA]
    ADD CONSTRAINT [DF_TAXGROUPDATA_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXGROUPDATA_TAXGROUP]...';


GO
ALTER TABLE [ax].[TAXGROUPDATA]
    ADD CONSTRAINT [DF_TAXGROUPDATA_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILREPORTLOCALIZEDSTRING_STRINGID]...';


GO
ALTER TABLE [ax].[RETAILREPORTLOCALIZEDSTRING]
    ADD CONSTRAINT [DF_RETAILREPORTLOCALIZEDSTRING_STRINGID] DEFAULT ('') FOR [STRINGID];


GO
PRINT N'Creating [ax].[DF_RETAILREPORTLOCALIZEDSTRING_LOCALECODE]...';


GO
ALTER TABLE [ax].[RETAILREPORTLOCALIZEDSTRING]
    ADD CONSTRAINT [DF_RETAILREPORTLOCALIZEDSTRING_LOCALECODE] DEFAULT ('') FOR [LOCALECODE];


GO
PRINT N'Creating [ax].[DF_RETAILREPORTLOCALIZEDSTRING_STRINGVALUE]...';


GO
ALTER TABLE [ax].[RETAILREPORTLOCALIZEDSTRING]
    ADD CONSTRAINT [DF_RETAILREPORTLOCALIZEDSTRING_STRINGVALUE] DEFAULT ('') FOR [STRINGVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_ENTRYTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_ENTRYTIME] DEFAULT ((0)) FOR [ENTRYTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_REWARDPOINT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_REWARDPOINT] DEFAULT ((0)) FOR [REWARDPOINT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_REWARDPOINTAMOUNTQTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_REWARDPOINTAMOUNTQTY] DEFAULT ((0)) FOR [REWARDPOINTAMOUNTQTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_CUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_CUSTACCOUNT] DEFAULT ('') FOR [CUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_ENTRYTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_ENTRYTYPE] DEFAULT ((0)) FOR [ENTRYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_LOYALTYTIER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_LOYALTYTIER] DEFAULT ((0)) FOR [LOYALTYTIER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_AFFILIATION]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_AFFILIATION] DEFAULT ((0)) FOR [AFFILIATION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_STAFFID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_STAFFID] DEFAULT ('') FOR [STAFFID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_CARDNUMBER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_CARDNUMBER] DEFAULT ('') FOR [CARDNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_ENTRYDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_ENTRYDATE] DEFAULT ('1900-01-01') FOR [ENTRYDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_EXPIRATIONDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS_EXPIRATIONDATE] DEFAULT ('1900-01-01') FOR [EXPIRATIONDATE];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTAFFILIATION_CUSTACCOUNTNUM]...';


GO
ALTER TABLE [ax].[RETAILCUSTAFFILIATION]
    ADD CONSTRAINT [DF_RETAILCUSTAFFILIATION_CUSTACCOUNTNUM] DEFAULT ('') FOR [CUSTACCOUNTNUM];


GO
PRINT N'Creating [ax].[DF_RETAILCUSTAFFILIATION_RETAILAFFILIATIONID]...';


GO
ALTER TABLE [ax].[RETAILCUSTAFFILIATION]
    ADD CONSTRAINT [DF_RETAILCUSTAFFILIATION_RETAILAFFILIATIONID] DEFAULT ((0)) FOR [RETAILAFFILIATIONID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONEXT_LOCATION]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONEXT]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONEXT_LOCATION] DEFAULT ((0)) FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONEXT_TAXGROUP]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONEXT]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONEXT_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONEXT_SALESCALENDARID]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONEXT]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONEXT_SALESCALENDARID] DEFAULT ('') FOR [SALESCALENDARID];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANT_BR_NAME]...';


GO
ALTER TABLE [ax].[ACCOUNTANT_BR]
    ADD CONSTRAINT [DF_ACCOUNTANT_BR_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANT_BR_CPFNUM_BR]...';


GO
ALTER TABLE [ax].[ACCOUNTANT_BR]
    ADD CONSTRAINT [DF_ACCOUNTANT_BR_CPFNUM_BR] DEFAULT ('') FOR [CPFNUM_BR];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANT_BR_CRCNUM_BR]...';


GO
ALTER TABLE [ax].[ACCOUNTANT_BR]
    ADD CONSTRAINT [DF_ACCOUNTANT_BR_CRCNUM_BR] DEFAULT ('') FOR [CRCNUM_BR];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANT_BR_CNPJNUM_BR]...';


GO
ALTER TABLE [ax].[ACCOUNTANT_BR]
    ADD CONSTRAINT [DF_ACCOUNTANT_BR_CNPJNUM_BR] DEFAULT ('') FOR [CNPJNUM_BR];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_IDENTIFICATIONNUMBER]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_IDENTIFICATIONNUMBER] DEFAULT ('') FOR [IDENTIFICATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_TAXGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_SALESPOOLID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_SALESPOOLID] DEFAULT ('') FOR [SALESPOOLID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_PAYMDAYID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_PAYMDAYID] DEFAULT ('') FOR [PAYMDAYID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_PAYMTERMID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_PAYMTERMID] DEFAULT ('') FOR [PAYMTERMID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_BLOCKED]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_BLOCKED] DEFAULT ((0)) FOR [BLOCKED];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_DLVMODE]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_DLVMODE] DEFAULT ('') FOR [DLVMODE];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_ONETIMECUSTOMER]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_ONETIMECUSTOMER] DEFAULT ((0)) FOR [ONETIMECUSTOMER];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_LINEOFBUSINESSID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_LINEOFBUSINESSID] DEFAULT ('') FOR [LINEOFBUSINESSID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CREDITRATING]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CREDITRATING] DEFAULT ('') FOR [CREDITRATING];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_INCLTAX]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_INCLTAX] DEFAULT ((0)) FOR [INCLTAX];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_SUFRAMA_BR]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_SUFRAMA_BR] DEFAULT ((0)) FOR [SUFRAMA_BR];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_ACCOUNTNUM]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_ACCOUNTNUM] DEFAULT ('') FOR [ACCOUNTNUM];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_USEPURCHREQUEST]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_USEPURCHREQUEST] DEFAULT ((0)) FOR [USEPURCHREQUEST];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_ENDDISC]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_ENDDISC] DEFAULT ('') FOR [ENDDISC];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CLEARINGPERIOD]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CLEARINGPERIOD] DEFAULT ('') FOR [CLEARINGPERIOD];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_PAYMSPEC]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_PAYMSPEC] DEFAULT ('') FOR [PAYMSPEC];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_OURACCOUNTNUM]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_OURACCOUNTNUM] DEFAULT ('') FOR [OURACCOUNTNUM];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_MARKUPGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_MARKUPGROUP] DEFAULT ('') FOR [MARKUPGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CUSTGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CUSTGROUP] DEFAULT ('') FOR [CUSTGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_BANKACCOUNT]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_BANKACCOUNT] DEFAULT ('') FOR [BANKACCOUNT];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_INVENTSITEID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_INVENTSITEID] DEFAULT ('') FOR [INVENTSITEID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_VENDACCOUNT]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_VENDACCOUNT] DEFAULT ('') FOR [VENDACCOUNT];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_SUPPITEMGROUPID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_SUPPITEMGROUPID] DEFAULT ('') FOR [SUPPITEMGROUPID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_FREIGHTZONE]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_FREIGHTZONE] DEFAULT ('') FOR [FREIGHTZONE];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_COMMISSIONGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_COMMISSIONGROUP] DEFAULT ('') FOR [COMMISSIONGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_SALESGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_SALESGROUP] DEFAULT ('') FOR [SALESGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_PARTY]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_PARTY] DEFAULT ((0)) FOR [PARTY];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_DESTINATIONCODEID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_DESTINATIONCODEID] DEFAULT ('') FOR [DESTINATIONCODEID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_NUMBERSEQUENCEGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_NUMBERSEQUENCEGROUP] DEFAULT ('') FOR [NUMBERSEQUENCEGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_INVOICEADDRESS]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_INVOICEADDRESS] DEFAULT ((0)) FOR [INVOICEADDRESS];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_BANKCENTRALBANKPURPOSETEXT]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_BANKCENTRALBANKPURPOSETEXT] DEFAULT ('') FOR [BANKCENTRALBANKPURPOSETEXT];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_IENUM_BR]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_IENUM_BR] DEFAULT ('') FOR [IENUM_BR];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CREDITMAX]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CREDITMAX] DEFAULT ((0)) FOR [CREDITMAX];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_LINEDISC]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_LINEDISC] DEFAULT ('') FOR [LINEDISC];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_STATISTICSGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_STATISTICSGROUP] DEFAULT ('') FOR [STATISTICSGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_TAXLICENSENUM]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_TAXLICENSENUM] DEFAULT ('') FOR [TAXLICENSENUM];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_PAYMMODE]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_PAYMMODE] DEFAULT ('') FOR [PAYMMODE];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_DLVTERM]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_DLVTERM] DEFAULT ('') FOR [DLVTERM];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_ORGID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_ORGID] DEFAULT ('') FOR [ORGID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CASHDISC]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CASHDISC] DEFAULT ('') FOR [CASHDISC];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_MANDATORYCREDITLIMIT]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_MANDATORYCREDITLIMIT] DEFAULT ((0)) FOR [MANDATORYCREDITLIMIT];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CURRENCY]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_ACCOUNTSTATEMENT]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_ACCOUNTSTATEMENT] DEFAULT ((0)) FOR [ACCOUNTSTATEMENT];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_INVENTLOCATION]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_INVENTLOCATION] DEFAULT ('') FOR [INVENTLOCATION];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_SUFRAMANUMBER_BR]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_SUFRAMANUMBER_BR] DEFAULT ('') FOR [SUFRAMANUMBER_BR];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_VATNUM]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_VATNUM] DEFAULT ('') FOR [VATNUM];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_FORECASTDMPINCLUDE]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_FORECASTDMPINCLUDE] DEFAULT ((0)) FOR [FORECASTDMPINCLUDE];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CNPJCPFNUM_BR]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CNPJCPFNUM_BR] DEFAULT ('') FOR [CNPJCPFNUM_BR];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_PRICEGROUP]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_PRICEGROUP] DEFAULT ('') FOR [PRICEGROUP];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_PACKMATERIALFEELICENSENUM]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_PACKMATERIALFEELICENSENUM] DEFAULT ('') FOR [PACKMATERIALFEELICENSENUM];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CUSTITEMGROUPID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CUSTITEMGROUPID] DEFAULT ('') FOR [CUSTITEMGROUPID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_MULTILINEDISC]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_MULTILINEDISC] DEFAULT ('') FOR [MULTILINEDISC];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_BANKCENTRALBANKPURPOSECODE]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_BANKCENTRALBANKPURPOSECODE] DEFAULT ('') FOR [BANKCENTRALBANKPURPOSECODE];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_INVOICEACCOUNT]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_INVOICEACCOUNT] DEFAULT ('') FOR [INVOICEACCOUNT];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_CONTACTPERSONID]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_CONTACTPERSONID] DEFAULT ('') FOR [CONTACTPERSONID];


GO
PRINT N'Creating [ax].[DF_CUSTTABLE_WEBSALESORDERDISPLAY]...';


GO
ALTER TABLE [ax].[CUSTTABLE]
    ADD CONSTRAINT [DF_CUSTTABLE_WEBSALESORDERDISPLAY] DEFAULT ((0)) FOR [WEBSALESORDERDISPLAY];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINESCOPETABLES_SYNCTABLEID]...';


GO
ALTER TABLE [ax].[RETAILOFFLINESCOPETABLES]
    ADD CONSTRAINT [DF_RETAILOFFLINESCOPETABLES_SYNCTABLEID] DEFAULT ((0)) FOR [SYNCTABLEID];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINESCOPETABLES_SCOPEID]...';


GO
ALTER TABLE [ax].[RETAILOFFLINESCOPETABLES]
    ADD CONSTRAINT [DF_RETAILOFFLINESCOPETABLES_SCOPEID] DEFAULT ((0)) FOR [SCOPEID];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELCURRENCY_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILCHANNELCURRENCY]
    ADD CONSTRAINT [DF_RETAILCHANNELCURRENCY_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELCURRENCY_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELCURRENCY]
    ADD CONSTRAINT [DF_RETAILCHANNELCURRENCY_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_PERCENT1]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_PERCENT1] DEFAULT ((0)) FOR [PERCENT1];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_CURRENCY]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_DELIVERYTIME]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_DELIVERYTIME] DEFAULT ((0)) FOR [DELIVERYTIME];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_CALENDARDAYS]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_CALENDARDAYS] DEFAULT ((0)) FOR [CALENDARDAYS];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_MODULE]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_MODULE] DEFAULT ((0)) FOR [MODULE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_AMOUNT]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_TODATE]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_TODATE] DEFAULT ('1900-01-01') FOR [TODATE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_UNITID]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_UNITID] DEFAULT ('') FOR [UNITID];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_MAXIMUMRETAILPRICE_IN]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_MAXIMUMRETAILPRICE_IN] DEFAULT ((0)) FOR [MAXIMUMRETAILPRICE_IN];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_ALLOCATEMARKUP]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_ALLOCATEMARKUP] DEFAULT ((0)) FOR [ALLOCATEMARKUP];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_SEARCHAGAIN]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_SEARCHAGAIN] DEFAULT ((0)) FOR [SEARCHAGAIN];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_ITEMRELATION]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_ITEMRELATION] DEFAULT ('') FOR [ITEMRELATION];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_MARKUP]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_MARKUP] DEFAULT ((0)) FOR [MARKUP];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_RELATION]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_RELATION] DEFAULT ((0)) FOR [RELATION];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_ITEMCODE]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_ITEMCODE] DEFAULT ((0)) FOR [ITEMCODE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_AGREEMENTHEADEREXT_RU]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_AGREEMENTHEADEREXT_RU] DEFAULT ((0)) FOR [AGREEMENTHEADEREXT_RU];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_INVENTDIMID]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_AGREEMENT]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_AGREEMENT] DEFAULT ('') FOR [AGREEMENT];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_QUANTITYAMOUNTTO]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_QUANTITYAMOUNTTO] DEFAULT ((0)) FOR [QUANTITYAMOUNTTO];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_ACCOUNTCODE]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_ACCOUNTCODE] DEFAULT ((0)) FOR [ACCOUNTCODE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_PRICEUNIT]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_PRICEUNIT] DEFAULT ((0)) FOR [PRICEUNIT];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_ACCOUNTRELATION]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_ACCOUNTRELATION] DEFAULT ('') FOR [ACCOUNTRELATION];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_QUANTITYAMOUNTFROM]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_QUANTITYAMOUNTFROM] DEFAULT ((0)) FOR [QUANTITYAMOUNTFROM];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_GENERICCURRENCY]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_GENERICCURRENCY] DEFAULT ((0)) FOR [GENERICCURRENCY];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_PERCENT2]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_PERCENT2] DEFAULT ((0)) FOR [PERCENT2];


GO
PRINT N'Creating [ax].[DF_PRICEDISCTABLE_FROMDATE]...';


GO
ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [DF_PRICEDISCTABLE_FROMDATE] DEFAULT ('1900-01-01') FOR [FROMDATE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXCODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXATIONCODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXATIONCODE] DEFAULT ('') FOR [TAXATIONCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXVALUE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXVALUE] DEFAULT ((0)) FOR [TAXVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_FISCALVALUE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_FISCALVALUE] DEFAULT ((0)) FOR [FISCALVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXTYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXTYPE] DEFAULT ((0)) FOR [TAXTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXBASEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXBASEAMOUNT] DEFAULT ((0)) FOR [TAXBASEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXATIONORIGIN]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXATIONORIGIN] DEFAULT ((0)) FOR [TAXATIONORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXREDUCTIONPCT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_TAXREDUCTIONPCT] DEFAULT ((0)) FOR [TAXREDUCTIONPCT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_KEEP]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_KEEP] DEFAULT ((0)) FOR [KEEP];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_MARKUPCURRENCYCODE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_MARKUPCURRENCYCODE] DEFAULT ('') FOR [MARKUPCURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_TAXITEMGROUP]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_NOTIONALPCT_IN]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_NOTIONALPCT_IN] DEFAULT ((0)) FOR [NOTIONALPCT_IN];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_FROMAMOUNT]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_FROMAMOUNT] DEFAULT ((0)) FOR [FROMAMOUNT];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_MARKUPCODE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_MARKUPCODE] DEFAULT ('') FOR [MARKUPCODE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_TAXGROUP]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_NOTIONALCHARGES_IN]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_NOTIONALCHARGES_IN] DEFAULT ((0)) FOR [NOTIONALCHARGES_IN];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_CUSTOMSASSESSABLEVALUE_IN]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_CUSTOMSASSESSABLEVALUE_IN] DEFAULT ((0)) FOR [CUSTOMSASSESSABLEVALUE_IN];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_MARKUPCATEGORY]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_MARKUPCATEGORY] DEFAULT ((0)) FOR [MARKUPCATEGORY];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_VALUE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_VALUE] DEFAULT ((0)) FOR [VALUE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_TABLETABLEID]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_TABLETABLEID] DEFAULT ((0)) FOR [TABLETABLEID];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_TXT]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_TXT] DEFAULT ('') FOR [TXT];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_MODULETYPE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_MODULETYPE] DEFAULT ((0)) FOR [MODULETYPE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_LINENUM]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_TOAMOUNT]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_TOAMOUNT] DEFAULT ((0)) FOR [TOAMOUNT];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_MODULECATEGORY]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_MODULECATEGORY] DEFAULT ((0)) FOR [MODULECATEGORY];


GO
PRINT N'Creating [ax].[DF_MARKUPAUTOLINE_TABLERECID]...';


GO
ALTER TABLE [ax].[MARKUPAUTOLINE]
    ADD CONSTRAINT [DF_MARKUPAUTOLINE_TABLERECID] DEFAULT ((0)) FOR [TABLERECID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALCUSTOMFIELD_NAME]...';


GO
ALTER TABLE [ax].[RETAILTERMINALCUSTOMFIELD]
    ADD CONSTRAINT [DF_RETAILTERMINALCUSTOMFIELD_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALCUSTOMFIELD_CAPTIONTEXTID]...';


GO
ALTER TABLE [ax].[RETAILTERMINALCUSTOMFIELD]
    ADD CONSTRAINT [DF_RETAILTERMINALCUSTOMFIELD_CAPTIONTEXTID] DEFAULT ((0)) FOR [CAPTIONTEXTID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALCUSTOMFIELD_TYPE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALCUSTOMFIELD]
    ADD CONSTRAINT [DF_RETAILTERMINALCUSTOMFIELD_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTEGROUP_CATEGORY]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTEGROUP_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTEGROUP_ATTRIBUTEGROUPTYPE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTEGROUP_ATTRIBUTEGROUPTYPE] DEFAULT ((0)) FOR [ATTRIBUTEGROUPTYPE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTEGROUP_ATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTEGROUP_ATTRIBUTEGROUP] DEFAULT ((0)) FOR [ATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTEGROUP_MODIFIER]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTEGROUP_MODIFIER] DEFAULT ((0)) FOR [MODIFIER];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODEPRODUCTEXPLODED_DLVMODE]...';


GO
ALTER TABLE [ax].[RETAILDLVMODEPRODUCTEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODEPRODUCTEXPLODED_DLVMODE] DEFAULT ((0)) FOR [DLVMODE];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODEPRODUCTEXPLODED_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILDLVMODEPRODUCTEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODEPRODUCTEXPLODED_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODEPRODUCTEXPLODED_INVENTDIM]...';


GO
ALTER TABLE [ax].[RETAILDLVMODEPRODUCTEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODEPRODUCTEXPLODED_INVENTDIM] DEFAULT ('') FOR [INVENTDIM];


GO
PRINT N'Creating [ax].[DF_RETAILPERMISSIONS_PERMISSIONID]...';


GO
ALTER TABLE [ax].[RETAILPERMISSIONS]
    ADD CONSTRAINT [DF_RETAILPERMISSIONS_PERMISSIONID] DEFAULT ((0)) FOR [PERMISSIONID];


GO
PRINT N'Creating [ax].[DF_RETAILPERMISSIONS_PERMISSIONNAME]...';


GO
ALTER TABLE [ax].[RETAILPERMISSIONS]
    ADD CONSTRAINT [DF_RETAILPERMISSIONS_PERMISSIONNAME] DEFAULT ('') FOR [PERMISSIONNAME];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPROFILE_CHANNELPROFILETYPE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPROFILE]
    ADD CONSTRAINT [DF_RETAILCHANNELPROFILE_CHANNELPROFILETYPE] DEFAULT ((0)) FOR [CHANNELPROFILETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPROFILE_NAME]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPROFILE]
    ADD CONSTRAINT [DF_RETAILCHANNELPROFILE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALDEVICE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTERMINALDEVICE]
    ADD CONSTRAINT [DF_RETAILTERMINALDEVICE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALDEVICE_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTERMINALDEVICE]
    ADD CONSTRAINT [DF_RETAILTERMINALDEVICE_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALDEVICE_DEVICE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALDEVICE]
    ADD CONSTRAINT [DF_RETAILTERMINALDEVICE_DEVICE] DEFAULT ((0)) FOR [DEVICE];


GO
PRINT N'Creating [ax].[DF_CFOPTABLE_BR_NAME]...';


GO
ALTER TABLE [ax].[CFOPTABLE_BR]
    ADD CONSTRAINT [DF_CFOPTABLE_BR_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_CFOPTABLE_BR_CFOPID]...';


GO
ALTER TABLE [ax].[CFOPTABLE_BR]
    ADD CONSTRAINT [DF_CFOPTABLE_BR_CFOPID] DEFAULT ('') FOR [CFOPID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGTIN_INVENTDIMID]...';


GO
ALTER TABLE [ax].[INVENTITEMGTIN]
    ADD CONSTRAINT [DF_INVENTITEMGTIN_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGTIN_DESCRIPTION]...';


GO
ALTER TABLE [ax].[INVENTITEMGTIN]
    ADD CONSTRAINT [DF_INVENTITEMGTIN_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGTIN_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTITEMGTIN]
    ADD CONSTRAINT [DF_INVENTITEMGTIN_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGTIN_GLOBALTRADEITEMNUMBER]...';


GO
ALTER TABLE [ax].[INVENTITEMGTIN]
    ADD CONSTRAINT [DF_INVENTITEMGTIN_GLOBALTRADEITEMNUMBER] DEFAULT ('') FOR [GLOBALTRADEITEMNUMBER];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGTIN_GTINSETUP]...';


GO
ALTER TABLE [ax].[INVENTITEMGTIN]
    ADD CONSTRAINT [DF_INVENTITEMGTIN_GTINSETUP] DEFAULT ((0)) FOR [GTINSETUP];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGTIN_UNITID]...';


GO
ALTER TABLE [ax].[INVENTITEMGTIN]
    ADD CONSTRAINT [DF_INVENTITEMGTIN_UNITID] DEFAULT ('') FOR [UNITID];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEACTIVATECOMMENTS]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEACTIVATECOMMENTS] DEFAULT ('') FOR [DEACTIVATECOMMENTS];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEVICETOKENSALT]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEVICETOKENSALT] DEFAULT ('') FOR [DEVICETOKENSALT];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_USEINMEMORYDEVICEDATASTORAGE]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_USEINMEMORYDEVICEDATASTORAGE] DEFAULT ((0)) FOR [USEINMEMORYDEVICEDATASTORAGE];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_ACTIVATEDDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_ACTIVATEDDATETIMETZID] DEFAULT ((37001)) FOR [ACTIVATEDDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_TYPE]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEACTIVATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEACTIVATEDDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [DEACTIVATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEVICETOKENISSUETIME]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEVICETOKENISSUETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [DEVICETOKENISSUETIME];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEVICETOKENALGORITHM]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEVICETOKENALGORITHM] DEFAULT ('') FOR [DEVICETOKENALGORITHM];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEVICEID]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEVICEID] DEFAULT ('') FOR [DEVICEID];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_ACTIVATIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_ACTIVATIONSTATUS] DEFAULT ((0)) FOR [ACTIVATIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEVICETOKENDATA]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEVICETOKENDATA] DEFAULT ('') FOR [DEVICETOKENDATA];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEVICETOKENISSUETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEVICETOKENISSUETIMETZID] DEFAULT ((37001)) FOR [DEVICETOKENISSUETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_DEACTIVATEDDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_DEACTIVATEDDATETIMETZID] DEFAULT ((37001)) FOR [DEACTIVATEDDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_ACTIVATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_ACTIVATEDDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [ACTIVATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILDEVICE_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILDEVICE]
    ADD CONSTRAINT [DF_RETAILDEVICE_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILATTRIBUTEFILTER_DISPLAYOPTION]...';


GO
ALTER TABLE [ax].[RETAILATTRIBUTEFILTER]
    ADD CONSTRAINT [DF_RETAILATTRIBUTEFILTER_DISPLAYOPTION] DEFAULT ((0)) FOR [DISPLAYOPTION];


GO
PRINT N'Creating [ax].[DF_RETAILATTRIBUTEFILTER_DISPLAYTEMPLATE]...';


GO
ALTER TABLE [ax].[RETAILATTRIBUTEFILTER]
    ADD CONSTRAINT [DF_RETAILATTRIBUTEFILTER_DISPLAYTEMPLATE] DEFAULT ((0)) FOR [DISPLAYTEMPLATE];


GO
PRINT N'Creating [ax].[DF_RETAILATTRIBUTEFILTER_SORTDIRECTION]...';


GO
ALTER TABLE [ax].[RETAILATTRIBUTEFILTER]
    ADD CONSTRAINT [DF_RETAILATTRIBUTEFILTER_SORTDIRECTION] DEFAULT ((0)) FOR [SORTDIRECTION];


GO
PRINT N'Creating [ax].[DF_RETAILATTRIBUTEFILTER_SORTOPTION]...';


GO
ALTER TABLE [ax].[RETAILATTRIBUTEFILTER]
    ADD CONSTRAINT [DF_RETAILATTRIBUTEFILTER_SORTOPTION] DEFAULT ((0)) FOR [SORTOPTION];


GO
PRINT N'Creating [ax].[DF_RETAILATTRIBUTEFILTER_THRESHOLDVALUE]...';


GO
ALTER TABLE [ax].[RETAILATTRIBUTEFILTER]
    ADD CONSTRAINT [DF_RETAILATTRIBUTEFILTER_THRESHOLDVALUE] DEFAULT ('') FOR [THRESHOLDVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILATTRIBUTEFILTER_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[RETAILATTRIBUTEFILTER]
    ADD CONSTRAINT [DF_RETAILATTRIBUTEFILTER_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEDATAEXPORTSCHEDULE_OFFLINEPROFILE]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEDATAEXPORTSCHEDULE]
    ADD CONSTRAINT [DF_RETAILOFFLINEDATAEXPORTSCHEDULE_OFFLINEPROFILE] DEFAULT ((0)) FOR [OFFLINEPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEDATAEXPORTSCHEDULE_EXPORTTIME]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEDATAEXPORTSCHEDULE]
    ADD CONSTRAINT [DF_RETAILOFFLINEDATAEXPORTSCHEDULE_EXPORTTIME] DEFAULT ((0)) FOR [EXPORTTIME];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_FROMDATE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_FROMDATE] DEFAULT ('1900-01-01') FOR [FROMDATE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_OUTPUTCODE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_OUTPUTCODE] DEFAULT ('') FOR [OUTPUTCODE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_INPUTCODE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_INPUTCODE] DEFAULT ('') FOR [INPUTCODE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_TAXTYPE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_TAXTYPE] DEFAULT ((0)) FOR [TAXTYPE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_ATOCOTEPETAXCODE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_ATOCOTEPETAXCODE] DEFAULT ('') FOR [ATOCOTEPETAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_TAXATIONCODE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_TAXATIONCODE] DEFAULT ('') FOR [TAXATIONCODE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_FISCALVALUE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_FISCALVALUE] DEFAULT ((0)) FOR [FISCALVALUE];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_DESCRIPTION]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_TAXATIONCODETABLE_BR_TODATE]...';


GO
ALTER TABLE [ax].[TAXATIONCODETABLE_BR]
    ADD CONSTRAINT [DF_TAXATIONCODETABLE_BR_TODATE] DEFAULT ('1900-01-01') FOR [TODATE];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTLINKEDITEM_BLOCKED]...';


GO
ALTER TABLE [ax].[RETAILINVENTLINKEDITEM]
    ADD CONSTRAINT [DF_RETAILINVENTLINKEDITEM_BLOCKED] DEFAULT ((0)) FOR [BLOCKED];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTLINKEDITEM_QTY]...';


GO
ALTER TABLE [ax].[RETAILINVENTLINKEDITEM]
    ADD CONSTRAINT [DF_RETAILINVENTLINKEDITEM_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTLINKEDITEM_UNIT]...';


GO
ALTER TABLE [ax].[RETAILINVENTLINKEDITEM]
    ADD CONSTRAINT [DF_RETAILINVENTLINKEDITEM_UNIT] DEFAULT ('') FOR [UNIT];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTLINKEDITEM_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILINVENTLINKEDITEM]
    ADD CONSTRAINT [DF_RETAILINVENTLINKEDITEM_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTLINKEDITEM_LINKEDITEMID]...';


GO
ALTER TABLE [ax].[RETAILINVENTLINKEDITEM]
    ADD CONSTRAINT [DF_RETAILINVENTLINKEDITEM_LINKEDITEMID] DEFAULT ('') FOR [LINKEDITEMID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_DISTRICTNAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_DISTRICTNAME] DEFAULT ('') FOR [DISTRICTNAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_CITY]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_CITY] DEFAULT ('') FOR [CITY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_TIMEZONE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_TIMEZONE] DEFAULT ((0)) FOR [TIMEZONE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_DISTRICT]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_DISTRICT] DEFAULT ((0)) FOR [DISTRICT];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_FROMNUM]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_FROMNUM] DEFAULT ((0)) FOR [FROMNUM];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_CITYRECID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_CITYRECID] DEFAULT ((0)) FOR [CITYRECID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_ZIPCODE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_ZIPCODE] DEFAULT ('') FOR [ZIPCODE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_EVENODD]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_EVENODD] DEFAULT ((0)) FOR [EVENODD];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_STREETNAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_STREETNAME] DEFAULT ('') FOR [STREETNAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_COUNTY]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_COUNTY] DEFAULT ('') FOR [COUNTY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_CITYALIAS]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_CITYALIAS] DEFAULT ('') FOR [CITYALIAS];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_TONUM]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_TONUM] DEFAULT ((0)) FOR [TONUM];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSZIPCODE_STATE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSZIPCODE]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSZIPCODE_STATE] DEFAULT ('') FOR [STATE];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_LISTINGMODIFIEDDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_LISTINGMODIFIEDDATETIMETZID] DEFAULT ((37001)) FOR [LISTINGMODIFIEDDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_PRODUCT]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_STATUSDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_STATUSDATETIMETZID] DEFAULT ((37001)) FOR [STATUSDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_CHANNELBATCHID]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_CHANNELBATCHID] DEFAULT ('') FOR [CHANNELBATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_APPLIEDACTION]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_APPLIEDACTION] DEFAULT ((0)) FOR [APPLIEDACTION];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_PROCESSED]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_PROCESSED] DEFAULT ((0)) FOR [PROCESSED];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_STATUSDATETIME]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_STATUSDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [STATUSDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_STATUSMESSAGE]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_STATUSMESSAGE] DEFAULT ('') FOR [STATUSMESSAGE];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_ACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_ACTIONSTATUS] DEFAULT ((0)) FOR [ACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_CHANNELLISTINGID]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_CHANNELLISTINGID] DEFAULT ('') FOR [CHANNELLISTINGID];


GO
PRINT N'Creating [ax].[DF_RETAILLISTINGSTATUSLOG_LISTINGMODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILLISTINGSTATUSLOG]
    ADD CONSTRAINT [DF_RETAILLISTINGSTATUSLOG_LISTINGMODIFIEDDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [LISTINGMODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_ZREPORTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_ZREPORTNUMBER] DEFAULT ((0)) FOR [ZREPORTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_ADDITIONALFISCALMEMORYINDEX]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_ADDITIONALFISCALMEMORYINDEX] DEFAULT ((0)) FOR [ADDITIONALFISCALMEMORYINDEX];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_CFOP]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_CFOP] DEFAULT ('') FOR [CFOP];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_FISCALPRINTERSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_FISCALPRINTERSERIALNUMBER] DEFAULT ('') FOR [FISCALPRINTERSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXTYPE]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXTYPE] DEFAULT ((0)) FOR [TAXTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXVALUE]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXVALUE] DEFAULT ((0)) FOR [TAXVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TOTALIZERNAME]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TOTALIZERNAME] DEFAULT ('') FOR [TOTALIZERNAME];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXBASEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXBASEAMOUNT] DEFAULT ((0)) FOR [TAXBASEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXATIONORIGIN]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXATIONORIGIN] DEFAULT ((0)) FOR [TAXATIONORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXBASEAMOUNTEXEMPT]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXBASEAMOUNTEXEMPT] DEFAULT ((0)) FOR [TAXBASEAMOUNTEXEMPT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXBASEAMOUNTOTHER]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXBASEAMOUNTOTHER] DEFAULT ((0)) FOR [TAXBASEAMOUNTOTHER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXCODE]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_FISCALVALUE]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_FISCALVALUE] DEFAULT ((0)) FOR [FISCALVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXATIONCODE]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZERTAXTRANS_BR_TAXATIONCODE] DEFAULT ('') FOR [TAXATIONCODE];


GO
PRINT N'Creating [ax].[DF_ECORESSIZE_NAME]...';


GO
ALTER TABLE [ax].[ECORESSIZE]
    ADD CONSTRAINT [DF_ECORESSIZE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTVARIANTDIMENSIONVALUE_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE]
    ADD CONSTRAINT [DF_ECORESPRODUCTVARIANTDIMENSIONVALUE_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTVARIANTDIMENSIONVALUE_PRODUCTDIMENSIONATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE]
    ADD CONSTRAINT [DF_ECORESPRODUCTVARIANTDIMENSIONVALUE_PRODUCTDIMENSIONATTRIBUTE] DEFAULT ((0)) FOR [PRODUCTDIMENSIONATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTVARIANTDIMENSIONVALUE_DISTINCTPRODUCTVARIANT]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE]
    ADD CONSTRAINT [DF_ECORESPRODUCTVARIANTDIMENSIONVALUE_DISTINCTPRODUCTVARIANT] DEFAULT ((0)) FOR [DISTINCTPRODUCTVARIANT];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_TRIGGERFUNCTION]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_TRIGGERFUNCTION] DEFAULT ((0)) FOR [TRIGGERFUNCTION];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_PRICETYPE]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_PRICETYPE] DEFAULT ((0)) FOR [PRICETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_SUBCODEID]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_SUBCODEID] DEFAULT ('') FOR [SUBCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_INFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_INFOCODEID] DEFAULT ('') FOR [INFOCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_TRIGGERCODE]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_TRIGGERCODE] DEFAULT ('') FOR [TRIGGERCODE];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_AMOUNTPERCENT]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_AMOUNTPERCENT] DEFAULT ((0)) FOR [AMOUNTPERCENT];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETABLE_NEWSALESLINE]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETABLE]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETABLE_NEWSALESLINE] DEFAULT ((0)) FOR [NEWSALESLINE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCGROUP_RETAILPRICINGPRIORITYNUMBER]...';


GO
ALTER TABLE [ax].[PRICEDISCGROUP]
    ADD CONSTRAINT [DF_PRICEDISCGROUP_RETAILPRICINGPRIORITYNUMBER] DEFAULT ((0)) FOR [RETAILPRICINGPRIORITYNUMBER];


GO
PRINT N'Creating [ax].[DF_PRICEDISCGROUP_RETAILCHECKSALESPRICESTATUS]...';


GO
ALTER TABLE [ax].[PRICEDISCGROUP]
    ADD CONSTRAINT [DF_PRICEDISCGROUP_RETAILCHECKSALESPRICESTATUS] DEFAULT ((0)) FOR [RETAILCHECKSALESPRICESTATUS];


GO
PRINT N'Creating [ax].[DF_PRICEDISCGROUP_TYPE]...';


GO
ALTER TABLE [ax].[PRICEDISCGROUP]
    ADD CONSTRAINT [DF_PRICEDISCGROUP_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCGROUP_NAME]...';


GO
ALTER TABLE [ax].[PRICEDISCGROUP]
    ADD CONSTRAINT [DF_PRICEDISCGROUP_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_PRICEDISCGROUP_MODULE]...';


GO
ALTER TABLE [ax].[PRICEDISCGROUP]
    ADD CONSTRAINT [DF_PRICEDISCGROUP_MODULE] DEFAULT ((0)) FOR [MODULE];


GO
PRINT N'Creating [ax].[DF_PRICEDISCGROUP_GROUPID]...';


GO
ALTER TABLE [ax].[PRICEDISCGROUP]
    ADD CONSTRAINT [DF_PRICEDISCGROUP_GROUPID] DEFAULT ('') FOR [GROUPID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_METADATAVERSION]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_METADATAVERSION] DEFAULT ((0)) FOR [METADATAVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_ORIGINID]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_ORIGINID] DEFAULT ((0)) FOR [ORIGINID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_HOSTCHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_HOSTCHANNEL] DEFAULT ((0)) FOR [HOSTCHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_KEYNAME]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_KEYNAME] DEFAULT ('') FOR [KEYNAME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_ATTRIBUTERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_ATTRIBUTERELATIONTYPE] DEFAULT ((0)) FOR [ATTRIBUTERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_DATATYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA_DATATYPE] DEFAULT ((0)) FOR [DATATYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDBINGPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[RETAILSHAREDBINGPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDBINGPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDBINGPARAMETERS_APIKEY]...';


GO
ALTER TABLE [ax].[RETAILSHAREDBINGPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDBINGPARAMETERS_APIKEY] DEFAULT ('') FOR [APIKEY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_VARIANTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_VARIANTID] DEFAULT ('') FOR [VARIANTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_QTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONKITSDISASSEMBLYTRANS_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_TIMEZONEINFO_ENDDATE]...';


GO
ALTER TABLE [ax].[TIMEZONEINFO]
    ADD CONSTRAINT [DF_TIMEZONEINFO_ENDDATE] DEFAULT ('1900-01-01 00:00:00.000') FOR [ENDDATE];


GO
PRINT N'Creating [ax].[DF_TIMEZONEINFO_TIMEZONEID]...';


GO
ALTER TABLE [ax].[TIMEZONEINFO]
    ADD CONSTRAINT [DF_TIMEZONEINFO_TIMEZONEID] DEFAULT ((0)) FOR [TIMEZONEID];


GO
PRINT N'Creating [ax].[DF_TIMEZONEINFO_STARTDATETZID]...';


GO
ALTER TABLE [ax].[TIMEZONEINFO]
    ADD CONSTRAINT [DF_TIMEZONEINFO_STARTDATETZID] DEFAULT ((37001)) FOR [STARTDATETZID];


GO
PRINT N'Creating [ax].[DF_TIMEZONEINFO_TIMEBIAS]...';


GO
ALTER TABLE [ax].[TIMEZONEINFO]
    ADD CONSTRAINT [DF_TIMEZONEINFO_TIMEBIAS] DEFAULT ((0)) FOR [TIMEBIAS];


GO
PRINT N'Creating [ax].[DF_TIMEZONEINFO_ENDDATETZID]...';


GO
ALTER TABLE [ax].[TIMEZONEINFO]
    ADD CONSTRAINT [DF_TIMEZONEINFO_ENDDATETZID] DEFAULT ((37001)) FOR [ENDDATETZID];


GO
PRINT N'Creating [ax].[DF_TIMEZONEINFO_STARTDATE]...';


GO
ALTER TABLE [ax].[TIMEZONEINFO]
    ADD CONSTRAINT [DF_TIMEZONEINFO_STARTDATE] DEFAULT ('1900-01-01 00:00:00.000') FOR [STARTDATE];


GO
PRINT N'Creating [ax].[DF_OMOPERATINGUNIT_OMOPERATINGUNITTYPE]...';


GO
ALTER TABLE [ax].[OMOPERATINGUNIT]
    ADD CONSTRAINT [DF_OMOPERATINGUNIT_OMOPERATINGUNITTYPE] DEFAULT ((0)) FOR [OMOPERATINGUNITTYPE];


GO
PRINT N'Creating [ax].[DF_OMOPERATINGUNIT_OMOPERATINGUNITNUMBER]...';


GO
ALTER TABLE [ax].[OMOPERATINGUNIT]
    ADD CONSTRAINT [DF_OMOPERATINGUNIT_OMOPERATINGUNITNUMBER] DEFAULT ('') FOR [OMOPERATINGUNITNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_ISDISCOUNTCODEREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_ISDISCOUNTCODEREQUIRED] DEFAULT ((0)) FOR [ISDISCOUNTCODEREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_NAME]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_PRICINGPRIORITYNUMBER]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_PRICINGPRIORITYNUMBER] DEFAULT ((0)) FOR [PRICINGPRIORITYNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_DATEVALIDATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_DATEVALIDATIONTYPE] DEFAULT ((0)) FOR [DATEVALIDATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_DISCOUNTPERCENTVALUE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_DISCOUNTPERCENTVALUE] DEFAULT ((0)) FOR [DISCOUNTPERCENTVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_VALIDATIONPERIODID]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_VALIDATIONPERIODID] DEFAULT ('') FOR [VALIDATIONPERIODID];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_STATUS]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_CONCURRENCYMODE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_CONCURRENCYMODE] DEFAULT ((0)) FOR [CONCURRENCYMODE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_OFFERID]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_OFFERID] DEFAULT ('') FOR [OFFERID];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNT_PERIODICDISCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNT]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNT_PERIODICDISCOUNTTYPE] DEFAULT ((0)) FOR [PERIODICDISCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILUNIT_WEIGHTUNITOFMEASURE]...';


GO
ALTER TABLE [ax].[RETAILUNIT]
    ADD CONSTRAINT [DF_RETAILUNIT_WEIGHTUNITOFMEASURE] DEFAULT ((0)) FOR [WEIGHTUNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_RETAILUNIT_MINDENOMINATOR]...';


GO
ALTER TABLE [ax].[RETAILUNIT]
    ADD CONSTRAINT [DF_RETAILUNIT_MINDENOMINATOR] DEFAULT ((0)) FOR [MINDENOMINATOR];


GO
PRINT N'Creating [ax].[DF_RETAILUNIT_UNITID]...';


GO
ALTER TABLE [ax].[RETAILUNIT]
    ADD CONSTRAINT [DF_RETAILUNIT_UNITID] DEFAULT ('') FOR [UNITID];


GO
PRINT N'Creating [ax].[DF_RETAILRELYINGPARTY_USERTYPE]...';


GO
ALTER TABLE [ax].[RETAILRELYINGPARTY]
    ADD CONSTRAINT [DF_RETAILRELYINGPARTY_USERTYPE] DEFAULT ((0)) FOR [USERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILRELYINGPARTY_CLIENTID]...';


GO
ALTER TABLE [ax].[RETAILRELYINGPARTY]
    ADD CONSTRAINT [DF_RETAILRELYINGPARTY_CLIENTID] DEFAULT ('') FOR [CLIENTID];


GO
PRINT N'Creating [ax].[DF_RETAILRELYINGPARTY_TYPE]...';


GO
ALTER TABLE [ax].[RETAILRELYINGPARTY]
    ADD CONSTRAINT [DF_RETAILRELYINGPARTY_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILRELYINGPARTY_PROVIDERID]...';


GO
ALTER TABLE [ax].[RETAILRELYINGPARTY]
    ADD CONSTRAINT [DF_RETAILRELYINGPARTY_PROVIDERID] DEFAULT ((0)) FOR [PROVIDERID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_SALELINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_SALELINENUM] DEFAULT ((0)) FOR [SALELINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_ISINCLUDEDINPRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_ISINCLUDEDINPRICE] DEFAULT ((0)) FOR [ISINCLUDEDINPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_TAXCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTAXTRANS_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTAXTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTAXTRANS_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDEGROUPMEMBER_RBOSALESTAXOVERRIDECODE]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDEGROUPMEMBER_RBOSALESTAXOVERRIDECODE] DEFAULT ('') FOR [RBOSALESTAXOVERRIDECODE];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDEGROUPMEMBER_RBOSALESTAXOVERRIDEGROUPCODE]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDEGROUPMEMBER_RBOSALESTAXOVERRIDEGROUPCODE] DEFAULT ('') FOR [RBOSALESTAXOVERRIDEGROUPCODE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPROFILEPROPERTY_KEY]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPROFILEPROPERTY]
    ADD CONSTRAINT [DF_RETAILCHANNELPROFILEPROPERTY_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPROFILEPROPERTY_VALUE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPROFILEPROPERTY]
    ADD CONSTRAINT [DF_RETAILCHANNELPROFILEPROPERTY_VALUE] DEFAULT ('') FOR [VALUE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELPROFILEPROPERTY_CHANNELPROFILE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELPROFILEPROPERTY]
    ADD CONSTRAINT [DF_RETAILCHANNELPROFILEPROPERTY_CHANNELPROFILE] DEFAULT ((0)) FOR [CHANNELPROFILE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYHIERARCHYROLE_NAMEDCATEGORYHIERARCHYROLE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYHIERARCHYROLE]
    ADD CONSTRAINT [DF_ECORESCATEGORYHIERARCHYROLE_NAMEDCATEGORYHIERARCHYROLE] DEFAULT ((0)) FOR [NAMEDCATEGORYHIERARCHYROLE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYHIERARCHYROLE_CATEGORYHIERARCHY]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYHIERARCHYROLE]
    ADD CONSTRAINT [DF_ECORESCATEGORYHIERARCHYROLE_CATEGORYHIERARCHY] DEFAULT ((0)) FOR [CATEGORYHIERARCHY];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_SYNCID]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_SYNCID] DEFAULT ('{00000000-0000-0000-0000-000000000000}') FOR [SYNCID];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_SEQUENCE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_SEQUENCE] DEFAULT ((0)) FOR [SEQUENCE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_PARENTFRAMEWORKLINE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_PARENTFRAMEWORKLINE] DEFAULT ((0)) FOR [PARENTFRAMEWORKLINE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_USAGEPROFILE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_USAGEPROFILE] DEFAULT ((0)) FOR [USAGEPROFILE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_TASKRECORDEROPERATIONGROUP]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_TASKRECORDEROPERATIONGROUP] DEFAULT ((0)) FOR [TASKRECORDEROPERATIONGROUP];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_ISSUPPORTED]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_ISSUPPORTED] DEFAULT ((0)) FOR [ISSUPPORTED];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_INDENTATIONLEVEL]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_INDENTATIONLEVEL] DEFAULT ((0)) FOR [INDENTATIONLEVEL];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_FRAMEWORKLEVEL]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_FRAMEWORKLEVEL] DEFAULT ((0)) FOR [FRAMEWORKLEVEL];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_ORIGIN]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_ORIGIN] DEFAULT ('') FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_NAME]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORKLINE_MODULE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORKLINE]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORKLINE_MODULE] DEFAULT ((0)) FOR [MODULE];


GO
PRINT N'Creating [ax].[DF_JMGIPCACTIVITY_JOBID]...';


GO
ALTER TABLE [ax].[JMGIPCACTIVITY]
    ADD CONSTRAINT [DF_JMGIPCACTIVITY_JOBID] DEFAULT ('') FOR [JOBID];


GO
PRINT N'Creating [ax].[DF_JMGIPCACTIVITY_BREAKDROP]...';


GO
ALTER TABLE [ax].[JMGIPCACTIVITY]
    ADD CONSTRAINT [DF_JMGIPCACTIVITY_BREAKDROP] DEFAULT ((0)) FOR [BREAKDROP];


GO
PRINT N'Creating [ax].[DF_JMGIPCACTIVITY_SIGNINOUT]...';


GO
ALTER TABLE [ax].[JMGIPCACTIVITY]
    ADD CONSTRAINT [DF_JMGIPCACTIVITY_SIGNINOUT] DEFAULT ((0)) FOR [SIGNINOUT];


GO
PRINT N'Creating [ax].[DF_JMGIPCACTIVITY_CATEGORY]...';


GO
ALTER TABLE [ax].[JMGIPCACTIVITY]
    ADD CONSTRAINT [DF_JMGIPCACTIVITY_CATEGORY] DEFAULT ('') FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_JMGIPCACTIVITY_ACTIVITY]...';


GO
ALTER TABLE [ax].[JMGIPCACTIVITY]
    ADD CONSTRAINT [DF_JMGIPCACTIVITY_ACTIVITY] DEFAULT ('') FOR [ACTIVITY];


GO
PRINT N'Creating [ax].[DF_JMGIPCACTIVITY_TYPE]...';


GO
ALTER TABLE [ax].[JMGIPCACTIVITY]
    ADD CONSTRAINT [DF_JMGIPCACTIVITY_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_JMGIPCACTIVITY_SIGNIN]...';


GO
ALTER TABLE [ax].[JMGIPCACTIVITY]
    ADD CONSTRAINT [DF_JMGIPCACTIVITY_SIGNIN] DEFAULT ((0)) FOR [SIGNIN];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKCHARACTER_CHARACTER]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKCHARACTER]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKCHARACTER_CHARACTER] DEFAULT ('') FOR [CHARACTER];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKCHARACTER_CHARACTERTYPE]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKCHARACTER]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKCHARACTER_CHARACTERTYPE] DEFAULT ((0)) FOR [CHARACTERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKCHARACTER_COMMENT]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKCHARACTER]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKCHARACTER_COMMENT] DEFAULT ('') FOR [COMMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_REGISTERID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_REGISTERID] DEFAULT ('') FOR [REGISTERID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_CONTROLCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_CONTROLCODE] DEFAULT ('') FOR [CONTROLCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_RECEIPTCOPY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_RECEIPTCOPY] DEFAULT ((0)) FOR [RECEIPTCOPY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONFISCALTRANS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONFISCALTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONFISCALTRANS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_ISDEFAULT]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES]
    ADD CONSTRAINT [DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_ISDEFAULT] DEFAULT ((0)) FOR [ISDEFAULT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_ONLINECHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES]
    ADD CONSTRAINT [DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_ONLINECHANNEL] DEFAULT ((0)) FOR [ONLINECHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_ORIGINID]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES]
    ADD CONSTRAINT [DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_ORIGINID] DEFAULT ((0)) FOR [ORIGINID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES]
    ADD CONSTRAINT [DF_RETAILPUBRETAILONLINECHANNELLANGUAGES_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_FROMUNITOFMEASURE]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_FROMUNITOFMEASURE] DEFAULT ((0)) FOR [FROMUNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_ROUNDING]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_ROUNDING] DEFAULT ((0)) FOR [ROUNDING];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_DENOMINATOR]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_DENOMINATOR] DEFAULT ((0)) FOR [DENOMINATOR];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_OUTEROFFSET]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_OUTEROFFSET] DEFAULT ((0)) FOR [OUTEROFFSET];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_PRODUCT]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_INNEROFFSET]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_INNEROFFSET] DEFAULT ((0)) FOR [INNEROFFSET];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_TOUNITOFMEASURE]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_TOUNITOFMEASURE] DEFAULT ((0)) FOR [TOUNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_NUMERATOR]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_NUMERATOR] DEFAULT ((0)) FOR [NUMERATOR];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURECONVERSION_FACTOR]...';


GO
ALTER TABLE [ax].[UNITOFMEASURECONVERSION]
    ADD CONSTRAINT [DF_UNITOFMEASURECONVERSION_FACTOR] DEFAULT ((0)) FOR [FACTOR];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_ISACTIVE]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_ISACTIVE] DEFAULT ((0)) FOR [ISACTIVE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_NAME]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_NESTEDSETLEFT]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_NESTEDSETLEFT] DEFAULT ((0)) FOR [NESTEDSETLEFT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_CATEGORYHIERARCHY]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_CATEGORYHIERARCHY] DEFAULT ((0)) FOR [CATEGORYHIERARCHY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_ISCATEGORYATTRIBUTESINHERITED]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_ISCATEGORYATTRIBUTESINHERITED] DEFAULT ((0)) FOR [ISCATEGORYATTRIBUTESINHERITED];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_ORIGININSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_ORIGININSTANCERELATIONTYPE] DEFAULT ((0)) FOR [ORIGININSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_CODE]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_CODE] DEFAULT ('') FOR [CODE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_NESTEDSETRIGHT]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_NESTEDSETRIGHT] DEFAULT ((0)) FOR [NESTEDSETRIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_CHANGESTATUS]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_CHANGESTATUS] DEFAULT ((0)) FOR [CHANGESTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_PARENTCATEGORY]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_PARENTCATEGORY] DEFAULT ((0)) FOR [PARENTCATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_DEFAULTPROJECTGLOBALCATEGORY]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_DEFAULTPROJECTGLOBALCATEGORY] DEFAULT ((0)) FOR [DEFAULTPROJECTGLOBALCATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_ORIGINID]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_ORIGINID] DEFAULT ((0)) FOR [ORIGINID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_ISTANGIBLE]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_ISTANGIBLE] DEFAULT ((0)) FOR [ISTANGIBLE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORY_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORY]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORY_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKSEGMENT_DECIMALS]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKSEGMENT]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKSEGMENT_DECIMALS] DEFAULT ((0)) FOR [DECIMALS];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKSEGMENT_LENGTH]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKSEGMENT]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKSEGMENT_LENGTH] DEFAULT ((0)) FOR [LENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKSEGMENT_MASKID]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKSEGMENT]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKSEGMENT_MASKID] DEFAULT ('') FOR [MASKID];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKSEGMENT_SEGMENTNUM]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKSEGMENT]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKSEGMENT_SEGMENTNUM] DEFAULT ((0)) FOR [SEGMENTNUM];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKSEGMENT_TYPE]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKSEGMENT]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKSEGMENT_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKSEGMENT_CHAR]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKSEGMENT]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKSEGMENT_CHAR] DEFAULT ('') FOR [CHAR];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_USEROPERATION]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_USEROPERATION] DEFAULT ((0)) FOR [USEROPERATION];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_ALLOWANONYMOUSACCESS]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_ALLOWANONYMOUSACCESS] DEFAULT ((0)) FOR [ALLOWANONYMOUSACCESS];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_OPERATIONID]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_OPERATIONID] DEFAULT ((0)) FOR [OPERATIONID];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_PERMISSIONID2]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_PERMISSIONID2] DEFAULT ((0)) FOR [PERMISSIONID2];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_PERMISSIONIDEX]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_PERMISSIONIDEX] DEFAULT ((0)) FOR [PERMISSIONIDEX];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_OPERATIONNAME]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_OPERATIONNAME] DEFAULT ('') FOR [OPERATIONNAME];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_PERMISSIONID]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_PERMISSIONID] DEFAULT ((0)) FOR [PERMISSIONID];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_ALLOWCUSTOMERACCESS]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_ALLOWCUSTOMERACCESS] DEFAULT ((0)) FOR [ALLOWCUSTOMERACCESS];


GO
PRINT N'Creating [ax].[DF_RETAILOPERATIONS_CHECKUSERACCESS]...';


GO
ALTER TABLE [ax].[RETAILOPERATIONS]
    ADD CONSTRAINT [DF_RETAILOPERATIONS_CHECKUSERACCESS] DEFAULT ((0)) FOR [CHECKUSERACCESS];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODEGROUPSPECIFIC_GROUPID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODEGROUPSPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODEGROUPSPECIFIC_GROUPID] DEFAULT ('') FOR [GROUPID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODEGROUPSPECIFIC_INFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODEGROUPSPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODEGROUPSPECIFIC_INFOCODEID] DEFAULT ('') FOR [INFOCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODEGROUPSPECIFIC_PRIORITY]...';


GO
ALTER TABLE [ax].[RETAILINFOCODEGROUPSPECIFIC]
    ADD CONSTRAINT [DF_RETAILINFOCODEGROUPSPECIFIC_PRIORITY] DEFAULT ((0)) FOR [PRIORITY];


GO
PRINT N'Creating [ax].[DF_RETAILCONFIGURATIONSTORETABLE_BR_RETAILSTORETABLE]...';


GO
ALTER TABLE [ax].[RETAILCONFIGURATIONSTORETABLE_BR]
    ADD CONSTRAINT [DF_RETAILCONFIGURATIONSTORETABLE_BR_RETAILSTORETABLE] DEFAULT ((0)) FOR [RETAILSTORETABLE];


GO
PRINT N'Creating [ax].[DF_RETAILCONFIGURATIONSTORETABLE_BR_RETAILCONFIGURATION_BR]...';


GO
ALTER TABLE [ax].[RETAILCONFIGURATIONSTORETABLE_BR]
    ADD CONSTRAINT [DF_RETAILCONFIGURATIONSTORETABLE_BR_RETAILCONFIGURATION_BR] DEFAULT ((0)) FOR [RETAILCONFIGURATION_BR];


GO
PRINT N'Creating [ax].[DF_HCMWORKER_PERSONNELNUMBER]...';


GO
ALTER TABLE [ax].[HCMWORKER]
    ADD CONSTRAINT [DF_HCMWORKER_PERSONNELNUMBER] DEFAULT ('') FOR [PERSONNELNUMBER];


GO
PRINT N'Creating [ax].[DF_HCMWORKER_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMWORKER]
    ADD CONSTRAINT [DF_HCMWORKER_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMWORKER_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMWORKER]
    ADD CONSTRAINT [DF_HCMWORKER_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMWORKER_PERSON]...';


GO
ALTER TABLE [ax].[HCMWORKER]
    ADD CONSTRAINT [DF_HCMWORKER_PERSON] DEFAULT ((0)) FOR [PERSON];


GO
PRINT N'Creating [ax].[DF_EFDOCWEBSERVICEPARAMETERS_BR_ENVIRONMENT]...';


GO
ALTER TABLE [ax].[EFDOCWEBSERVICEPARAMETERS_BR]
    ADD CONSTRAINT [DF_EFDOCWEBSERVICEPARAMETERS_BR_ENVIRONMENT] DEFAULT ((0)) FOR [ENVIRONMENT];


GO
PRINT N'Creating [ax].[DF_EFDOCWEBSERVICEPARAMETERS_BR_URL]...';


GO
ALTER TABLE [ax].[EFDOCWEBSERVICEPARAMETERS_BR]
    ADD CONSTRAINT [DF_EFDOCWEBSERVICEPARAMETERS_BR_URL] DEFAULT ('') FOR [URL];


GO
PRINT N'Creating [ax].[DF_EFDOCWEBSERVICEPARAMETERS_BR_VERSION]...';


GO
ALTER TABLE [ax].[EFDOCWEBSERVICEPARAMETERS_BR]
    ADD CONSTRAINT [DF_EFDOCWEBSERVICEPARAMETERS_BR_VERSION] DEFAULT ('') FOR [VERSION];


GO
PRINT N'Creating [ax].[DF_EFDOCWEBSERVICEPARAMETERS_BR_WEBSERVICE]...';


GO
ALTER TABLE [ax].[EFDOCWEBSERVICEPARAMETERS_BR]
    ADD CONSTRAINT [DF_EFDOCWEBSERVICEPARAMETERS_BR_WEBSERVICE] DEFAULT ((0)) FOR [WEBSERVICE];


GO
PRINT N'Creating [ax].[DF_EFDOCWEBSERVICEPARAMETERS_BR_AUTHORITY]...';


GO
ALTER TABLE [ax].[EFDOCWEBSERVICEPARAMETERS_BR]
    ADD CONSTRAINT [DF_EFDOCWEBSERVICEPARAMETERS_BR_AUTHORITY] DEFAULT ('') FOR [AUTHORITY];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_DRAWER2PORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_DRAWER2PORT] DEFAULT ((0)) FOR [DRAWER2PORT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_PRINTERIP]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_PRINTERIP] DEFAULT ('') FOR [PRINTERIP];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_DRAWERIP]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_DRAWERIP] DEFAULT ('') FOR [DRAWERIP];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_DRAWER2IP]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_DRAWER2IP] DEFAULT ('') FOR [DRAWER2IP];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_DRAWERPORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_DRAWERPORT] DEFAULT ((0)) FOR [DRAWERPORT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_STOREHARDWARESTATION]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_STOREHARDWARESTATION] DEFAULT ((0)) FOR [STOREHARDWARESTATION];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_PRINTER2PORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_PRINTER2PORT] DEFAULT ((0)) FOR [PRINTER2PORT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_PINPADPORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_PINPADPORT] DEFAULT ((0)) FOR [PINPADPORT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_PINPADIP]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_PINPADIP] DEFAULT ('') FOR [PINPADIP];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_PRINTERPORT]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_PRINTERPORT] DEFAULT ((0)) FOR [PRINTERPORT];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARECONFIGURATION_PRINTER2IP]...';


GO
ALTER TABLE [ax].[RETAILHARDWARECONFIGURATION]
    ADD CONSTRAINT [DF_RETAILHARDWARECONFIGURATION_PRINTER2IP] DEFAULT ('') FOR [PRINTER2IP];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURETRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[UNITOFMEASURETRANSLATION]
    ADD CONSTRAINT [DF_UNITOFMEASURETRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURETRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[UNITOFMEASURETRANSLATION]
    ADD CONSTRAINT [DF_UNITOFMEASURETRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURETRANSLATION_UNITOFMEASURE]...';


GO
ALTER TABLE [ax].[UNITOFMEASURETRANSLATION]
    ADD CONSTRAINT [DF_UNITOFMEASURETRANSLATION_UNITOFMEASURE] DEFAULT ((0)) FOR [UNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_UNITOFMEASURETRANSLATION_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[UNITOFMEASURETRANSLATION]
    ADD CONSTRAINT [DF_UNITOFMEASURETRANSLATION_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILSHIPCARRIERACCOUNTCONFIGURATION_VALUE]...';


GO
ALTER TABLE [ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION]
    ADD CONSTRAINT [DF_RETAILSHIPCARRIERACCOUNTCONFIGURATION_VALUE] DEFAULT ('') FOR [VALUE];


GO
PRINT N'Creating [ax].[DF_RETAILSHIPCARRIERACCOUNTCONFIGURATION_SHIPCARRIERCOMPANYACCOUNTS]...';


GO
ALTER TABLE [ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION]
    ADD CONSTRAINT [DF_RETAILSHIPCARRIERACCOUNTCONFIGURATION_SHIPCARRIERCOMPANYACCOUNTS] DEFAULT ((0)) FOR [SHIPCARRIERCOMPANYACCOUNTS];


GO
PRINT N'Creating [ax].[DF_RETAILSHIPCARRIERACCOUNTCONFIGURATION_PROPERTYKEY]...';


GO
ALTER TABLE [ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION]
    ADD CONSTRAINT [DF_RETAILSHIPCARRIERACCOUNTCONFIGURATION_PROPERTYKEY] DEFAULT ('') FOR [PROPERTYKEY];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_KEYBOARDUSED]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_KEYBOARDUSED] DEFAULT ('') FOR [KEYBOARDUSED];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_BUTTONGRIDID]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_BUTTONGRIDID] DEFAULT ('') FOR [BUTTONGRIDID];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_NAME]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_DEFAULTCOLOR]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_DEFAULTCOLOR] DEFAULT ((0)) FOR [DEFAULTCOLOR];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_SPACEBETWEENBUTTONS]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_SPACEBETWEENBUTTONS] DEFAULT ((0)) FOR [SPACEBETWEENBUTTONS];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_DEFAULTFONTSIZE]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_DEFAULTFONTSIZE] DEFAULT ((0)) FOR [DEFAULTFONTSIZE];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_DEFAULTFONTSTYLE]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_DEFAULTFONTSTYLE] DEFAULT ((0)) FOR [DEFAULTFONTSTYLE];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRID_FONT]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRID]
    ADD CONSTRAINT [DF_RETAILBUTTONGRID_FONT] DEFAULT ('') FOR [FONT];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATE_EXCHANGERATE]...';


GO
ALTER TABLE [ax].[EXCHANGERATE]
    ADD CONSTRAINT [DF_EXCHANGERATE_EXCHANGERATE] DEFAULT ((0)) FOR [EXCHANGERATE];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATE_EXCHANGERATECURRENCYPAIR]...';


GO
ALTER TABLE [ax].[EXCHANGERATE]
    ADD CONSTRAINT [DF_EXCHANGERATE_EXCHANGERATECURRENCYPAIR] DEFAULT ((0)) FOR [EXCHANGERATECURRENCYPAIR];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATE_VALIDFROM]...';


GO
ALTER TABLE [ax].[EXCHANGERATE]
    ADD CONSTRAINT [DF_EXCHANGERATE_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATE_VALIDTO]...';


GO
ALTER TABLE [ax].[EXCHANGERATE]
    ADD CONSTRAINT [DF_EXCHANGERATE_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[EXCHANGERATE]
    ADD CONSTRAINT [DF_EXCHANGERATE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETRANSLATION_INFOCODE]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETRANSLATION]
    ADD CONSTRAINT [DF_RETAILINFOCODETRANSLATION_INFOCODE] DEFAULT ((0)) FOR [INFOCODE];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETRANSLATION]
    ADD CONSTRAINT [DF_RETAILINFOCODETRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETRANSLATION_PROMPT]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETRANSLATION]
    ADD CONSTRAINT [DF_RETAILINFOCODETRANSLATION_PROMPT] DEFAULT ('') FOR [PROMPT];


GO
PRINT N'Creating [ax].[DF_RETAILINFOCODETRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILINFOCODETRANSLATION]
    ADD CONSTRAINT [DF_RETAILINFOCODETRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_GROSSDAILYSALE]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_GROSSDAILYSALE] DEFAULT ((0)) FOR [GROSSDAILYSALE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_TERMINALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_TERMINALNUMBER] DEFAULT ((0)) FOR [TERMINALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_ACCOUNTINGDATE]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_ACCOUNTINGDATE] DEFAULT ('1900-01-01') FOR [ACCOUNTINGDATE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_VERSION]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_VERSION] DEFAULT ((0)) FOR [VERSION];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_INITIALGRANDTOTALAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_INITIALGRANDTOTALAMOUNT] DEFAULT ((0)) FOR [INITIALGRANDTOTALAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_RESTARTOPERATIONNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_RESTARTOPERATIONNUMBER] DEFAULT ((0)) FOR [RESTARTOPERATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_FISCALESTABLISHMENT]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_FISCALESTABLISHMENT] DEFAULT ('') FOR [FISCALESTABLISHMENT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_FISCALPRINTERSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_FISCALPRINTERSERIALNUMBER] DEFAULT ('') FOR [FISCALPRINTERSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_FISCALRECEIPTMODEL]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_FISCALRECEIPTMODEL] DEFAULT ('') FOR [FISCALRECEIPTMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_FINALGRANDTOTALAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_FINALGRANDTOTALAMOUNT] DEFAULT ((0)) FOR [FINALGRANDTOTALAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_NETAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_NETAMOUNT] DEFAULT ((0)) FOR [NETAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_ZREPORTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_ZREPORTNUMBER] DEFAULT ((0)) FOR [ZREPORTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_PISAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_PISAMOUNT] DEFAULT ((0)) FOR [PISAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_FIRSTRECEIPTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_FIRSTRECEIPTNUMBER] DEFAULT ((0)) FOR [FIRSTRECEIPTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_VOUCHER]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_VOUCHER] DEFAULT ('') FOR [VOUCHER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_ZREPORTDATETIME]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_ZREPORTDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [ZREPORTDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_ISSDISCOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_ISSDISCOUNT] DEFAULT ((0)) FOR [ISSDISCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_ADDITIONALFISCALMEMORYINDEX]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_ADDITIONALFISCALMEMORYINDEX] DEFAULT ((0)) FOR [ADDITIONALFISCALMEMORYINDEX];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_LASTRECEIPTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_LASTRECEIPTNUMBER] DEFAULT ((0)) FOR [LASTRECEIPTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_COFINSAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_COFINSAMOUNT] DEFAULT ((0)) FOR [COFINSAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORT_BR_ZREPORTDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILZREPORT_BR]
    ADD CONSTRAINT [DF_RETAILZREPORT_BR_ZREPORTDATETIMETZID] DEFAULT ((37001)) FOR [ZREPORTDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILIMAGES_PICTUREID]...';


GO
ALTER TABLE [ax].[RETAILIMAGES]
    ADD CONSTRAINT [DF_RETAILIMAGES_PICTUREID] DEFAULT ((0)) FOR [PICTUREID];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDTO]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDTO] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_DISTANCE]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_DISTANCE] DEFAULT ((0)) FOR [DISTANCE];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_ANCESTORORGANIZATION]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_ANCESTORORGANIZATION] DEFAULT ((0)) FOR [ANCESTORORGANIZATION];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDFROMTZID]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDFROMTZID] DEFAULT ((37001)) FOR [VALIDFROMTZID];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDFROM]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDFROM] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_ORGANIZATION]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_ORGANIZATION] DEFAULT ((0)) FOR [ORGANIZATION];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_OMHIERARCHYTYPE]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_OMHIERARCHYTYPE] DEFAULT ((0)) FOR [OMHIERARCHYTYPE];


GO
PRINT N'Creating [ax].[DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDTOTZID]...';


GO
ALTER TABLE [ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH]
    ADD CONSTRAINT [DF_OMEXPLODEDORGANIZATIONSECURITYGRAPH_VALIDTOTZID] DEFAULT ((37001)) FOR [VALIDTOTZID];


GO
PRINT N'Creating [ax].[DF_ECORESDATETIMEVALUE_DATETIMEVALUETZID]...';


GO
ALTER TABLE [ax].[ECORESDATETIMEVALUE]
    ADD CONSTRAINT [DF_ECORESDATETIMEVALUE_DATETIMEVALUETZID] DEFAULT ((37001)) FOR [DATETIMEVALUETZID];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYTRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_ECORESCATEGORYTRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYTRANSLATION_FRIENDLYNAME]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_ECORESCATEGORYTRANSLATION_FRIENDLYNAME] DEFAULT ('') FOR [FRIENDLYNAME];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYTRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_ECORESCATEGORYTRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYTRANSLATION_CATEGORY]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_ECORESCATEGORYTRANSLATION_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYTRANSLATION_SEARCHTEXT]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_ECORESCATEGORYTRANSLATION_SEARCHTEXT] DEFAULT ('') FOR [SEARCHTEXT];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATIONROLE_BR_ACCOUNTANTLOGISTICSLOCATION]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATIONROLE_BR_ACCOUNTANTLOGISTICSLOCATION] DEFAULT ((0)) FOR [ACCOUNTANTLOGISTICSLOCATION];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATIONROLE_BR_LOCATIONROLE]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATIONROLE_BR_LOCATIONROLE] DEFAULT ((0)) FOR [LOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYTIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYTIMEWITHINBOUNDS] DEFAULT ((0)) FOR [MONDAYTIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYTIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYTIMEWITHINBOUNDS] DEFAULT ((0)) FOR [FRIDAYTIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [MONDAYENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYTIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYTIMEWITHINBOUNDS] DEFAULT ((0)) FOR [SATURDAYTIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYENDINGTIME] DEFAULT ((0)) FOR [SUNDAYENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_PERIODID]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_PERIODID] DEFAULT ('') FOR [PERIODID];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [SATURDAYENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [FRIDAYENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_ENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_ENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [ENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYENDINGTIME] DEFAULT ((0)) FOR [WEDNESDAYENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYTIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYTIMEWITHINBOUNDS] DEFAULT ((0)) FOR [THURSDAYTIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYSTARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYSTARTINGTIME] DEFAULT ((0)) FOR [WEDNESDAYSTARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYTIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYTIMEWITHINBOUNDS] DEFAULT ((0)) FOR [SUNDAYTIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [THUESDAYENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYTIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYTIMEWITHINBOUNDS] DEFAULT ((0)) FOR [THUESDAYTIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [THURSDAYENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYSTARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYSTARTINGTIME] DEFAULT ((0)) FOR [MONDAYSTARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_NAME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_MONDAYENDINGTIME] DEFAULT ((0)) FOR [MONDAYENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_STARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_STARTINGTIME] DEFAULT ((0)) FOR [STARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [SUNDAYENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYENDINGTIME] DEFAULT ((0)) FOR [SATURDAYENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYSTARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SATURDAYSTARTINGTIME] DEFAULT ((0)) FOR [SATURDAYSTARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYENDINGTIME] DEFAULT ((0)) FOR [FRIDAYENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYSTARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_FRIDAYSTARTINGTIME] DEFAULT ((0)) FOR [FRIDAYSTARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_ENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_ENDINGTIME] DEFAULT ((0)) FOR [ENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYENDINGTIMEAFTERMIDNIGHT]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYENDINGTIMEAFTERMIDNIGHT] DEFAULT ((0)) FOR [WEDNESDAYENDINGTIMEAFTERMIDNIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYTIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_WEDNESDAYTIMEWITHINBOUNDS] DEFAULT ((0)) FOR [WEDNESDAYTIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_TIMEWITHINBOUNDS]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_TIMEWITHINBOUNDS] DEFAULT ((0)) FOR [TIMEWITHINBOUNDS];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYSTARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_SUNDAYSTARTINGTIME] DEFAULT ((0)) FOR [SUNDAYSTARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYENDINGTIME] DEFAULT ((0)) FOR [THUESDAYENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYSTARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THUESDAYSTARTINGTIME] DEFAULT ((0)) FOR [THUESDAYSTARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYSTARTINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYSTARTINGTIME] DEFAULT ((0)) FOR [THURSDAYSTARTINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYENDINGTIME]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTVALIDATIONPERIOD]
    ADD CONSTRAINT [DF_RETAILDISCOUNTVALIDATIONPERIOD_THURSDAYENDINGTIME] DEFAULT ((0)) FOR [THURSDAYENDINGTIME];


GO
PRINT N'Creating [ax].[DF_RETAILSHIPCARRIERINTERFACE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILSHIPCARRIERINTERFACE]
    ADD CONSTRAINT [DF_RETAILSHIPCARRIERINTERFACE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILSHIPCARRIERINTERFACE_CARRIERADAPTERID]...';


GO
ALTER TABLE [ax].[RETAILSHIPCARRIERINTERFACE]
    ADD CONSTRAINT [DF_RETAILSHIPCARRIERINTERFACE_CARRIERADAPTERID] DEFAULT ('') FOR [CARRIERADAPTERID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_SOURCEDOCUMENTLINE]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_SOURCEDOCUMENTLINE] DEFAULT ((0)) FOR [SOURCEDOCUMENTLINE];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_ITEMID]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_ORDERED]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_ORDERED] DEFAULT ((0)) FOR [ORDERED];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_QTY]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_SALESID]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_SALESID] DEFAULT ('') FOR [SALESID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_INVENTDIMID]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_PACKINGSLIPID]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_PACKINGSLIPID] DEFAULT ('') FOR [PACKINGSLIPID];


GO
PRINT N'Creating [ax].[DF_CUSTPACKINGSLIPTRANS_REMAIN]...';


GO
ALTER TABLE [ax].[CUSTPACKINGSLIPTRANS]
    ADD CONSTRAINT [DF_CUSTPACKINGSLIPTRANS_REMAIN] DEFAULT ((0)) FOR [REMAIN];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERLINEARTIFACT_FILEPATH]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERLINEARTIFACT]
    ADD CONSTRAINT [DF_SYSTASKRECORDERLINEARTIFACT_FILEPATH] DEFAULT ('') FOR [FILEPATH];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERLINEARTIFACT_TYPE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERLINEARTIFACT]
    ADD CONSTRAINT [DF_SYSTASKRECORDERLINEARTIFACT_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERLINEARTIFACT_FRAMEWORKLINE]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERLINEARTIFACT]
    ADD CONSTRAINT [DF_SYSTASKRECORDERLINEARTIFACT_FRAMEWORKLINE] DEFAULT ((0)) FOR [FRAMEWORKLINE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_ITEMTENDER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_ITEMTENDER] DEFAULT ('') FOR [ITEMTENDER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_SUBINFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_SUBINFOCODEID] DEFAULT ('') FOR [SUBINFOCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_INFOAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_INFOAMOUNT] DEFAULT ((0)) FOR [INFOAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_INFOCODEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_INFOCODEID] DEFAULT ('') FOR [INFOCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_SOURCECODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_SOURCECODE] DEFAULT ('') FOR [SOURCECODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_TYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_SOURCECODE2]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_SOURCECODE2] DEFAULT ('') FOR [SOURCECODE2];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_INFORMATION]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_INFORMATION] DEFAULT ('') FOR [INFORMATION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_SOURCECODE3]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_SOURCECODE3] DEFAULT ('') FOR [SOURCECODE3];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_INPUTTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_INPUTTYPE] DEFAULT ((0)) FOR [INPUTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINFOCODETRANS_PARENTLINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINFOCODETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINFOCODETRANS_PARENTLINENUM] DEFAULT ((0)) FOR [PARENTLINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTZONEREFERENCE_ZONE]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTZONEREFERENCE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTZONEREFERENCE_ZONE] DEFAULT ((0)) FOR [ZONE];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTZONEREFERENCE_LAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTZONEREFERENCE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTZONEREFERENCE_LAYOUTID] DEFAULT ('') FOR [LAYOUTID];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_OVERRIDEFROM]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_OVERRIDEFROM] DEFAULT ((0)) FOR [OVERRIDEFROM];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_OVERRIDETYPE]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_OVERRIDETYPE] DEFAULT ((0)) FOR [OVERRIDETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_DESTINATIONTAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_DESTINATIONTAXGROUP] DEFAULT ('') FOR [DESTINATIONTAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_SOURCEITEMTAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_SOURCEITEMTAXGROUP] DEFAULT ('') FOR [SOURCEITEMTAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_CODE]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_CODE] DEFAULT ('') FOR [CODE];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_OVERRIDETO]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_OVERRIDETO] DEFAULT ((0)) FOR [OVERRIDETO];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_STATUS]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_DESTINATIONITEMTAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_DESTINATIONITEMTAXGROUP] DEFAULT ('') FOR [DESTINATIONITEMTAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_OVERRIDEBY]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_OVERRIDEBY] DEFAULT ((0)) FOR [OVERRIDEBY];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_ADDITIONALDESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_ADDITIONALDESCRIPTION] DEFAULT ('') FOR [ADDITIONALDESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDE_SOURCETAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDE]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDE_SOURCETAXGROUP] DEFAULT ('') FOR [SOURCETAXGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEALLGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEALLGROUP] DEFAULT ((0)) FOR [SALESLINEALLGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEGROUPGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEGROUPGROUP] DEFAULT ((0)) FOR [PURCHLINEGROUPGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEALLITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEALLITEM] DEFAULT ((0)) FOR [SALESLINEALLITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEGROUPITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEGROUPITEM] DEFAULT ((0)) FOR [PURCHLINEGROUPITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEACCOUNTITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEACCOUNTITEM] DEFAULT ((0)) FOR [SALESLINEACCOUNTITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEALLITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEALLITEM] DEFAULT ((0)) FOR [PURCHLINEALLITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEALLALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEALLALL] DEFAULT ((0)) FOR [SALESLINEALLALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEGROUPALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEGROUPALL] DEFAULT ((0)) FOR [PURCHLINEGROUPALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEALLALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEALLALL] DEFAULT ((0)) FOR [PURCHLINEALLALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESENDGROUPALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESENDGROUPALL] DEFAULT ((0)) FOR [SALESENDGROUPALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEACCOUNTGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEACCOUNTGROUP] DEFAULT ((0)) FOR [SALESLINEACCOUNTGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEALLGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEALLGROUP] DEFAULT ((0)) FOR [PURCHLINEALLGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEACCOUNTALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEACCOUNTALL] DEFAULT ((0)) FOR [SALESLINEACCOUNTALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESPRICEGROUPITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESPRICEGROUPITEM] DEFAULT ((0)) FOR [SALESPRICEGROUPITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESENDACCOUNTALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESENDACCOUNTALL] DEFAULT ((0)) FOR [SALESENDACCOUNTALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEACCOUNTGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEACCOUNTGROUP] DEFAULT ((0)) FOR [PURCHLINEACCOUNTGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESPRICEALLITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESPRICEALLITEM] DEFAULT ((0)) FOR [SALESPRICEALLITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESENDALLALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESENDALLALL] DEFAULT ((0)) FOR [SALESENDALLALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEACCOUNTITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEACCOUNTITEM] DEFAULT ((0)) FOR [PURCHLINEACCOUNTITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESMULTILNGROUPGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESMULTILNGROUPGROUP] DEFAULT ((0)) FOR [SALESMULTILNGROUPGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHPRICEALLITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHPRICEALLITEM] DEFAULT ((0)) FOR [PURCHPRICEALLITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHENDGROUPALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHENDGROUPALL] DEFAULT ((0)) FOR [PURCHENDGROUPALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHPRICEGROUPITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHPRICEGROUPITEM] DEFAULT ((0)) FOR [PURCHPRICEGROUPITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHLINEACCOUNTALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHLINEACCOUNTALL] DEFAULT ((0)) FOR [PURCHLINEACCOUNTALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESPRICEACCOUNTITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESPRICEACCOUNTITEM] DEFAULT ((0)) FOR [SALESPRICEACCOUNTITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESMULTILNALLGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESMULTILNALLGROUP] DEFAULT ((0)) FOR [SALESMULTILNALLGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHMULTILNGROUPGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHMULTILNGROUPGROUP] DEFAULT ((0)) FOR [PURCHMULTILNGROUPGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESMULTILNALLALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESMULTILNALLALL] DEFAULT ((0)) FOR [SALESMULTILNALLALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHENDACCOUNTALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHENDACCOUNTALL] DEFAULT ((0)) FOR [PURCHENDACCOUNTALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESMULTILNGROUPALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESMULTILNGROUPALL] DEFAULT ((0)) FOR [SALESMULTILNGROUPALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHPRICEACCOUNTITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHPRICEACCOUNTITEM] DEFAULT ((0)) FOR [PURCHPRICEACCOUNTITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHENDALLALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHENDALLALL] DEFAULT ((0)) FOR [PURCHENDALLALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHMULTILNALLGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHMULTILNALLGROUP] DEFAULT ((0)) FOR [PURCHMULTILNALLGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESMULTILNACCOUNTALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESMULTILNACCOUNTALL] DEFAULT ((0)) FOR [SALESMULTILNACCOUNTALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHMULTILNGROUPALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHMULTILNGROUPALL] DEFAULT ((0)) FOR [PURCHMULTILNGROUPALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESMULTILNACCOUNTGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESMULTILNACCOUNTGROUP] DEFAULT ((0)) FOR [SALESMULTILNACCOUNTGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEGROUPGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEGROUPGROUP] DEFAULT ((0)) FOR [SALESLINEGROUPGROUP];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHMULTILNACCOUNTALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHMULTILNACCOUNTALL] DEFAULT ((0)) FOR [PURCHMULTILNACCOUNTALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEGROUPALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEGROUPALL] DEFAULT ((0)) FOR [SALESLINEGROUPALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHMULTILNALLALL]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHMULTILNALLALL] DEFAULT ((0)) FOR [PURCHMULTILNALLALL];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_SALESLINEGROUPITEM]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_SALESLINEGROUPITEM] DEFAULT ((0)) FOR [SALESLINEGROUPITEM];


GO
PRINT N'Creating [ax].[DF_PRICEPARAMETERS_PURCHMULTILNACCOUNTGROUP]...';


GO
ALTER TABLE [ax].[PRICEPARAMETERS]
    ADD CONSTRAINT [DF_PRICEPARAMETERS_PURCHMULTILNACCOUNTGROUP] DEFAULT ((0)) FOR [PURCHMULTILNACCOUNTGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCATALOGPRICEGROUP_ORIGINRECVERSION]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCATALOGPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCATALOGPRICEGROUP_ORIGINRECVERSION] DEFAULT ((0)) FOR [ORIGINRECVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCATALOGPRICEGROUP_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCATALOGPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCATALOGPRICEGROUP_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCATALOGPRICEGROUP_PRICEDISCGROUP]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCATALOGPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCATALOGPRICEGROUP_PRICEDISCGROUP] DEFAULT ((0)) FOR [PRICEDISCGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCATALOGPRICEGROUP_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCATALOGPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCATALOGPRICEGROUP_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_ISACTIVE]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_ISACTIVE] DEFAULT ((0)) FOR [ISACTIVE];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_DIMENSIONFIELDID]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_DIMENSIONFIELDID] DEFAULT ((0)) FOR [DIMENSIONFIELDID];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_ISALLOWBLANKISSUEENABLED]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_ISALLOWBLANKISSUEENABLED] DEFAULT ((0)) FOR [ISALLOWBLANKISSUEENABLED];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_ISSALESPROCESSACTIVATED]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_ISSALESPROCESSACTIVATED] DEFAULT ((0)) FOR [ISSALESPROCESSACTIVATED];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_TRACKINGDIMENSIONGROUP]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPFLDSETUP_TRACKINGDIMENSIONGROUP] DEFAULT ((0)) FOR [TRACKINGDIMENSIONGROUP];


GO
PRINT N'Creating [ax].[DF_LEDGER_ISBUDGETCONTROLENABLED]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_ISBUDGETCONTROLENABLED] DEFAULT ((0)) FOR [ISBUDGETCONTROLENABLED];


GO
PRINT N'Creating [ax].[DF_LEDGER_PRIMARYFORLEGALENTITY]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_PRIMARYFORLEGALENTITY] DEFAULT ((0)) FOR [PRIMARYFORLEGALENTITY];


GO
PRINT N'Creating [ax].[DF_LEDGER_BUDGETEXCHANGERATETYPE]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_BUDGETEXCHANGERATETYPE] DEFAULT ((0)) FOR [BUDGETEXCHANGERATETYPE];


GO
PRINT N'Creating [ax].[DF_LEDGER_DEFAULTEXCHANGERATETYPE]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_DEFAULTEXCHANGERATETYPE] DEFAULT ((0)) FOR [DEFAULTEXCHANGERATETYPE];


GO
PRINT N'Creating [ax].[DF_LEDGER_FISCALCALENDAR]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_FISCALCALENDAR] DEFAULT ((0)) FOR [FISCALCALENDAR];


GO
PRINT N'Creating [ax].[DF_LEDGER_NAME]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_LEDGER_REPORTINGCURRENCY]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_REPORTINGCURRENCY] DEFAULT ('') FOR [REPORTINGCURRENCY];


GO
PRINT N'Creating [ax].[DF_LEDGER_ACCOUNTINGCURRENCY]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_ACCOUNTINGCURRENCY] DEFAULT ('') FOR [ACCOUNTINGCURRENCY];


GO
PRINT N'Creating [ax].[DF_LEDGER_CHARTOFACCOUNTS]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_CHARTOFACCOUNTS] DEFAULT ((0)) FOR [CHARTOFACCOUNTS];


GO
PRINT N'Creating [ax].[DF_LEDGER_DESCRIPTION]...';


GO
ALTER TABLE [ax].[LEDGER]
    ADD CONSTRAINT [DF_LEDGER_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_CUSTGROUP_NAME]...';


GO
ALTER TABLE [ax].[CUSTGROUP]
    ADD CONSTRAINT [DF_CUSTGROUP_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_CUSTGROUP_CUSTGROUP]...';


GO
ALTER TABLE [ax].[CUSTGROUP]
    ADD CONSTRAINT [DF_CUSTGROUP_CUSTGROUP] DEFAULT ('') FOR [CUSTGROUP];


GO
PRINT N'Creating [ax].[DF_DLVMODE_SHIPCARRIERNAME]...';


GO
ALTER TABLE [ax].[DLVMODE]
    ADD CONSTRAINT [DF_DLVMODE_SHIPCARRIERNAME] DEFAULT ('') FOR [SHIPCARRIERNAME];


GO
PRINT N'Creating [ax].[DF_DLVMODE_MARKUPGROUP]...';


GO
ALTER TABLE [ax].[DLVMODE]
    ADD CONSTRAINT [DF_DLVMODE_MARKUPGROUP] DEFAULT ('') FOR [MARKUPGROUP];


GO
PRINT N'Creating [ax].[DF_DLVMODE_SHIPCARRIERID]...';


GO
ALTER TABLE [ax].[DLVMODE]
    ADD CONSTRAINT [DF_DLVMODE_SHIPCARRIERID] DEFAULT ('') FOR [SHIPCARRIERID];


GO
PRINT N'Creating [ax].[DF_DLVMODE_CODE]...';


GO
ALTER TABLE [ax].[DLVMODE]
    ADD CONSTRAINT [DF_DLVMODE_CODE] DEFAULT ('') FOR [CODE];


GO
PRINT N'Creating [ax].[DF_DLVMODE_SHIPCARRIERDLVTYPE]...';


GO
ALTER TABLE [ax].[DLVMODE]
    ADD CONSTRAINT [DF_DLVMODE_SHIPCARRIERDLVTYPE] DEFAULT ((0)) FOR [SHIPCARRIERDLVTYPE];


GO
PRINT N'Creating [ax].[DF_DLVMODE_TXT]...';


GO
ALTER TABLE [ax].[DLVMODE]
    ADD CONSTRAINT [DF_DLVMODE_TXT] DEFAULT ('') FOR [TXT];


GO
PRINT N'Creating [ax].[DF_DLVMODE_SHIPCARRIERACCOUNTCODE]...';


GO
ALTER TABLE [ax].[DLVMODE]
    ADD CONSTRAINT [DF_DLVMODE_SHIPCARRIERACCOUNTCODE] DEFAULT ('') FOR [SHIPCARRIERACCOUNTCODE];


GO
PRINT N'Creating [ax].[DF_HCMJOB_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMJOB]
    ADD CONSTRAINT [DF_HCMJOB_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_HCMJOB_JOBID]...';


GO
ALTER TABLE [ax].[HCMJOB]
    ADD CONSTRAINT [DF_HCMJOB_JOBID] DEFAULT ('') FOR [JOBID];


GO
PRINT N'Creating [ax].[DF_HCMJOB_MAXIMUMPOSITIONS]...';


GO
ALTER TABLE [ax].[HCMJOB]
    ADD CONSTRAINT [DF_HCMJOB_MAXIMUMPOSITIONS] DEFAULT ((0)) FOR [MAXIMUMPOSITIONS];


GO
PRINT N'Creating [ax].[DF_HCMJOB_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[HCMJOB]
    ADD CONSTRAINT [DF_HCMJOB_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_ISPRIVATE]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_ISPRIVATE] DEFAULT ((0)) FOR [ISPRIVATE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_LOCATOREXTENSION]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_LOCATOREXTENSION] DEFAULT ('') FOR [LOCATOREXTENSION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_ISINSTANTMESSAGE]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_ISINSTANTMESSAGE] DEFAULT ((0)) FOR [ISINSTANTMESSAGE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_ISPRIMARY]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_ISPRIMARY] DEFAULT ((0)) FOR [ISPRIMARY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_LOCATOR]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_LOCATOR] DEFAULT ('') FOR [LOCATOR];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_DESCRIPTION]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_COUNTRYREGIONCODE]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_COUNTRYREGIONCODE] DEFAULT ('') FOR [COUNTRYREGIONCODE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_ISMOBILEPHONE]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_ISMOBILEPHONE] DEFAULT ((0)) FOR [ISMOBILEPHONE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_TYPE]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSELECTRONICADDRESS_LOCATION]...';


GO
ALTER TABLE [ax].[LOGISTICSELECTRONICADDRESS]
    ADD CONSTRAINT [DF_LOGISTICSELECTRONICADDRESS_LOCATION] DEFAULT ((0)) FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_TAXCOLLECTLIMIT_TAXCODE]...';


GO
ALTER TABLE [ax].[TAXCOLLECTLIMIT]
    ADD CONSTRAINT [DF_TAXCOLLECTLIMIT_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXCOLLECTLIMIT_TAXMAX]...';


GO
ALTER TABLE [ax].[TAXCOLLECTLIMIT]
    ADD CONSTRAINT [DF_TAXCOLLECTLIMIT_TAXMAX] DEFAULT ((0)) FOR [TAXMAX];


GO
PRINT N'Creating [ax].[DF_TAXCOLLECTLIMIT_TAXFROMDATE]...';


GO
ALTER TABLE [ax].[TAXCOLLECTLIMIT]
    ADD CONSTRAINT [DF_TAXCOLLECTLIMIT_TAXFROMDATE] DEFAULT ('1900-01-01') FOR [TAXFROMDATE];


GO
PRINT N'Creating [ax].[DF_TAXCOLLECTLIMIT_TAXTODATE]...';


GO
ALTER TABLE [ax].[TAXCOLLECTLIMIT]
    ADD CONSTRAINT [DF_TAXCOLLECTLIMIT_TAXTODATE] DEFAULT ('1900-01-01') FOR [TAXTODATE];


GO
PRINT N'Creating [ax].[DF_TAXCOLLECTLIMIT_TAXMIN]...';


GO
ALTER TABLE [ax].[TAXCOLLECTLIMIT]
    ADD CONSTRAINT [DF_TAXCOLLECTLIMIT_TAXMIN] DEFAULT ((0)) FOR [TAXMIN];


GO
PRINT N'Creating [ax].[DF_RETAILREPORTPERMISSIONGROUP_RETAILCHANNELREPORTRECID]...';


GO
ALTER TABLE [ax].[RETAILREPORTPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILREPORTPERMISSIONGROUP_RETAILCHANNELREPORTRECID] DEFAULT ((0)) FOR [RETAILCHANNELREPORTRECID];


GO
PRINT N'Creating [ax].[DF_RETAILREPORTPERMISSIONGROUP_RETAILPOSPERMISSIONGROUPRECID]...';


GO
ALTER TABLE [ax].[RETAILREPORTPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILREPORTPERMISSIONGROUP_RETAILPOSPERMISSIONGROUPRECID] DEFAULT ((0)) FOR [RETAILPOSPERMISSIONGROUPRECID];


GO
PRINT N'Creating [ax].[DF_INVENTDIMCOMBINATION_RETAILVARIANTID]...';


GO
ALTER TABLE [ax].[INVENTDIMCOMBINATION]
    ADD CONSTRAINT [DF_INVENTDIMCOMBINATION_RETAILVARIANTID] DEFAULT ('') FOR [RETAILVARIANTID];


GO
PRINT N'Creating [ax].[DF_INVENTDIMCOMBINATION_DISTINCTPRODUCTVARIANT]...';


GO
ALTER TABLE [ax].[INVENTDIMCOMBINATION]
    ADD CONSTRAINT [DF_INVENTDIMCOMBINATION_DISTINCTPRODUCTVARIANT] DEFAULT ((0)) FOR [DISTINCTPRODUCTVARIANT];


GO
PRINT N'Creating [ax].[DF_INVENTDIMCOMBINATION_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[INVENTDIMCOMBINATION]
    ADD CONSTRAINT [DF_INVENTDIMCOMBINATION_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_INVENTDIMCOMBINATION_INVENTDIMID]...';


GO
ALTER TABLE [ax].[INVENTDIMCOMBINATION]
    ADD CONSTRAINT [DF_INVENTDIMCOMBINATION_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_INVENTDIMCOMBINATION_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTDIMCOMBINATION]
    ADD CONSTRAINT [DF_INVENTDIMCOMBINATION_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_CUSTOMERLAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_CUSTOMERLAYOUTID] DEFAULT ('') FOR [CUSTOMERLAYOUTID];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_DEVICETYPE]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_DEVICETYPE] DEFAULT ((0)) FOR [DEVICETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_LAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_LAYOUTID] DEFAULT ('') FOR [LAYOUTID];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_TOTALID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_TOTALID] DEFAULT ('') FOR [TOTALID];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_STARTSCREEN]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_STARTSCREEN] DEFAULT ((0)) FOR [STARTSCREEN];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_WIDTH]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_WIDTH] DEFAULT ((0)) FOR [WIDTH];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_HEIGHT]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_HEIGHT] DEFAULT ((0)) FOR [HEIGHT];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUT_NAME]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUT]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUT_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPRODUCTSCATEGORY_OFFLINEPROFILE]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPRODUCTSCATEGORY]
    ADD CONSTRAINT [DF_RETAILOFFLINEPRODUCTSCATEGORY_OFFLINEPROFILE] DEFAULT ((0)) FOR [OFFLINEPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPRODUCTSCATEGORY_ECORESCATEGORY]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPRODUCTSCATEGORY]
    ADD CONSTRAINT [DF_RETAILOFFLINEPRODUCTSCATEGORY_ECORESCATEGORY] DEFAULT ((0)) FOR [ECORESCATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYTIERTRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYTIERTRANSLATION]
    ADD CONSTRAINT [DF_RETAILLOYALTYTIERTRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYTIERTRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYTIERTRANSLATION]
    ADD CONSTRAINT [DF_RETAILLOYALTYTIERTRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYTIERTRANSLATION_LOYALTYTIER]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYTIERTRANSLATION]
    ADD CONSTRAINT [DF_RETAILLOYALTYTIERTRANSLATION_LOYALTYTIER] DEFAULT ((0)) FOR [LOYALTYTIER];


GO
PRINT N'Creating [ax].[DF_RETAILONLINECHANNELPUBLISHSTATUS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILONLINECHANNELPUBLISHSTATUS]
    ADD CONSTRAINT [DF_RETAILONLINECHANNELPUBLISHSTATUS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILONLINECHANNELPUBLISHSTATUS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILONLINECHANNELPUBLISHSTATUS]
    ADD CONSTRAINT [DF_RETAILONLINECHANNELPUBLISHSTATUS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILONLINECHANNELPUBLISHSTATUS_ONLINECHANNEL]...';


GO
ALTER TABLE [ax].[RETAILONLINECHANNELPUBLISHSTATUS]
    ADD CONSTRAINT [DF_RETAILONLINECHANNELPUBLISHSTATUS_ONLINECHANNEL] DEFAULT ((0)) FOR [ONLINECHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILONLINECHANNELPUBLISHSTATUS_PUBLISHSTATUS]...';


GO
ALTER TABLE [ax].[RETAILONLINECHANNELPUBLISHSTATUS]
    ADD CONSTRAINT [DF_RETAILONLINECHANNELPUBLISHSTATUS_PUBLISHSTATUS] DEFAULT ((0)) FOR [PUBLISHSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_SECURITYOFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_SECURITYOFF] DEFAULT ((0)) FOR [SECURITYOFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_REPORTEXECUTIONTIMEOUT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_REPORTEXECUTIONTIMEOUT] DEFAULT ((0)) FOR [REPORTEXECUTIONTIMEOUT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_IDENTITYPROVIDERCLAIMTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_IDENTITYPROVIDERCLAIMTYPE] DEFAULT ('') FOR [IDENTITYPROVIDERCLAIMTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_SERVICEHOSTURL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_SERVICEHOSTURL] DEFAULT ('') FOR [SERVICEHOSTURL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_LANGUAGE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_LANGUAGE] DEFAULT ('') FOR [LANGUAGE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_TSSTAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_TSSTAFF] DEFAULT ((0)) FOR [TSSTAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_AUDIENCEURN]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_AUDIENCEURN] DEFAULT ('') FOR [AUDIENCEURN];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_IDENTITYPROVIDER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_IDENTITYPROVIDER] DEFAULT ('') FOR [IDENTITYPROVIDER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_USERID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_USERID] DEFAULT ('') FOR [USERID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_PROFILEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_PROFILEID] DEFAULT ('') FOR [PROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_TRANSFERFILECHUNKSIZE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_TRANSFERFILECHUNKSIZE] DEFAULT ((0)) FOR [TRANSFERFILECHUNKSIZE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_ISSUEDTOKENTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_ISSUEDTOKENTYPE] DEFAULT ('') FOR [ISSUEDTOKENTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_ISSUERURI]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_ISSUERURI] DEFAULT ('') FOR [ISSUERURI];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_NAME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSERVICEPROFILE_SERVERSERVICENAME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSERVICEPROFILE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSERVICEPROFILE_SERVERSERVICENAME] DEFAULT ('') FOR [SERVERSERVICENAME];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_TERMINALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_TERMINALNUMBER] DEFAULT ((0)) FOR [TERMINALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_SOFTWAREDATE]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_SOFTWAREDATE] DEFAULT ('1900-01-01') FOR [SOFTWAREDATE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_MODELNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_MODELNUMBER] DEFAULT ('') FOR [MODELNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_ADDITIONALFISCALMEMORYINDEX]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_ADDITIONALFISCALMEMORYINDEX] DEFAULT ((0)) FOR [ADDITIONALFISCALMEMORYINDEX];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_SERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_SERIALNUMBER] DEFAULT ('') FOR [SERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_MANUFACTURER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_MANUFACTURER] DEFAULT ('') FOR [MANUFACTURER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_RESTARTOPERATIONNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_RESTARTOPERATIONNUMBER] DEFAULT ((0)) FOR [RESTARTOPERATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_FISCALRECEIPTMODEL]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_FISCALRECEIPTMODEL] DEFAULT ('') FOR [FISCALRECEIPTMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_SOFTWAREVERSION]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_SOFTWAREVERSION] DEFAULT ('') FOR [SOFTWAREVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_NATIONALCODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_NATIONALCODE] DEFAULT ('') FOR [NATIONALCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_FISCALESTABLISHMENT]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_FISCALESTABLISHMENT] DEFAULT ('') FOR [FISCALESTABLISHMENT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTER_BR_TYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTER_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTER_BR_TYPE] DEFAULT ('') FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKTABLE_PREFIX]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKTABLE]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKTABLE_PREFIX] DEFAULT ('') FOR [PREFIX];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKTABLE_SYMBOLOGY]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKTABLE]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKTABLE_SYMBOLOGY] DEFAULT ((0)) FOR [SYMBOLOGY];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKTABLE_TYPE]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKTABLE]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKTABLE_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKTABLE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKTABLE]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKTABLE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKTABLE_MASK]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKTABLE]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKTABLE_MASK] DEFAULT ('') FOR [MASK];


GO
PRINT N'Creating [ax].[DF_RETAILBARCODEMASKTABLE_MASKID]...';


GO
ALTER TABLE [ax].[RETAILBARCODEMASKTABLE]
    ADD CONSTRAINT [DF_RETAILBARCODEMASKTABLE_MASKID] DEFAULT ('') FOR [MASKID];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_SHIPPINGCHARGECODE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_SHIPPINGCHARGECODE] DEFAULT ('') FOR [SHIPPINGCHARGECODE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_EXPIRATIONDATE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_EXPIRATIONDATE] DEFAULT ((0)) FOR [EXPIRATIONDATE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_AWARDPOINTSFORPARTIALREDEMPTION_RU]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_AWARDPOINTSFORPARTIALREDEMPTION_RU] DEFAULT ((0)) FOR [AWARDPOINTSFORPARTIALREDEMPTION_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_PASSWORDEXPIRYNOTIFICATIONTHRESHOLD]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_PASSWORDEXPIRYNOTIFICATIONTHRESHOLD] DEFAULT ((0)) FOR [PASSWORDEXPIRYNOTIFICATIONTHRESHOLD];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_POSTTOTALDISC]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_POSTTOTALDISC] DEFAULT ((0)) FOR [POSTTOTALDISC];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_MINIMUMPASSWORDLENGTH]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_MINIMUMPASSWORDLENGTH] DEFAULT ((0)) FOR [MINIMUMPASSWORDLENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_GIFTCARDITEM]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_GIFTCARDITEM] DEFAULT ('') FOR [GIFTCARDITEM];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_STAFFSTATISTICS]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_STAFFSTATISTICS] DEFAULT ((0)) FOR [STAFFSTATISTICS];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_CANCELLATIONCHARGE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_CANCELLATIONCHARGE] DEFAULT ((0)) FOR [CANCELLATIONCHARGE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_DISCOUNTALGORITHMMODE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_DISCOUNTALGORITHMMODE] DEFAULT ((0)) FOR [DISCOUNTALGORITHMMODE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_MULTIBUYACTIVITYTYPE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_MULTIBUYACTIVITYTYPE] DEFAULT ('') FOR [MULTIBUYACTIVITYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_PROCESSGIFTCARDSASPREPAYMENTS_RU]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_PROCESSGIFTCARDSASPREPAYMENTS_RU] DEFAULT ((0)) FOR [PROCESSGIFTCARDSASPREPAYMENTS_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_EANLICENSENO]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_EANLICENSENO] DEFAULT ('') FOR [EANLICENSENO];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_REQUIREUPPERCASE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_REQUIREUPPERCASE] DEFAULT ((0)) FOR [REQUIREUPPERCASE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_LOGINCOUNTERRESETDURATION]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_LOGINCOUNTERRESETDURATION] DEFAULT ((0)) FOR [LOGINCOUNTERRESETDURATION];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_MIXANDMATCHACTIVITYTYPE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_MIXANDMATCHACTIVITYTYPE] DEFAULT ('') FOR [MIXANDMATCHACTIVITYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_POSTLINEDISC]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_POSTLINEDISC] DEFAULT ((0)) FOR [POSTLINEDISC];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_SHELFLABELLASTACTION]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_SHELFLABELLASTACTION] DEFAULT ('') FOR [SHELFLABELLASTACTION];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_ELECTRONICDELIVERYMODECODE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_ELECTRONICDELIVERYMODECODE] DEFAULT ('') FOR [ELECTRONICDELIVERYMODECODE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_PASSWORDEXPIRYINTERVAL]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_PASSWORDEXPIRYINTERVAL] DEFAULT ((0)) FOR [PASSWORDEXPIRYINTERVAL];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_AUTOMATICRETURNOFLOYALTYPAYMENT_RU]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_AUTOMATICRETURNOFLOYALTYPAYMENT_RU] DEFAULT ((0)) FOR [AUTOMATICRETURNOFLOYALTYPAYMENT_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_MINIMUMDEPOSITFORSALESORDER]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_MINIMUMDEPOSITFORSALESORDER] DEFAULT ((0)) FOR [MINIMUMDEPOSITFORSALESORDER];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_POSTPERIODICDISC]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_POSTPERIODICDISC] DEFAULT ((0)) FOR [POSTPERIODICDISC];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_REQUIRENUMERICCHAR]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_REQUIRENUMERICCHAR] DEFAULT ((0)) FOR [REQUIRENUMERICCHAR];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_ITEMSALESSTATISTICSON]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_ITEMSALESSTATISTICSON] DEFAULT ((0)) FOR [ITEMSALESSTATISTICSON];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_DEFAULTORDERTYPE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_DEFAULTORDERTYPE] DEFAULT ((0)) FOR [DEFAULTORDERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_LOCKOUTTHRESHOLD]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_LOCKOUTTHRESHOLD] DEFAULT ((0)) FOR [LOCKOUTTHRESHOLD];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_POSTCUSTDISC]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_POSTCUSTDISC] DEFAULT ((0)) FOR [POSTCUSTDISC];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_REQUIRESPECIALCHAR]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_REQUIRESPECIALCHAR] DEFAULT ((0)) FOR [REQUIRESPECIALCHAR];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_DISCOUNTOFFERACTIVITYTYPE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_DISCOUNTOFFERACTIVITYTYPE] DEFAULT ('') FOR [DISCOUNTOFFERACTIVITYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_LOCKOUTDURATION]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_LOCKOUTDURATION] DEFAULT ((0)) FOR [LOCKOUTDURATION];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_POSTINFOCODEDISC]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_POSTINFOCODEDISC] DEFAULT ((0)) FOR [POSTINFOCODEDISC];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_ITEMLABELLASTACTION]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_ITEMLABELLASTACTION] DEFAULT ('') FOR [ITEMLABELLASTACTION];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_PROPOSEREFUNDPAYMENTAMOUNT_RU]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_PROPOSEREFUNDPAYMENTAMOUNT_RU] DEFAULT ((0)) FOR [PROPOSEREFUNDPAYMENTAMOUNT_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_TERMINALSTATISTICS]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_TERMINALSTATISTICS] DEFAULT ((0)) FOR [TERMINALSTATISTICS];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_CANCELLATIONCHARGECODE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_CANCELLATIONCHARGECODE] DEFAULT ('') FOR [CANCELLATIONCHARGECODE];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_MAXBESTDEALSTEPCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_MAXBESTDEALSTEPCOUNT] DEFAULT ((0)) FOR [MAXBESTDEALSTEPCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_PROCESSRETURNSASINORIGINALSALESHIFT_RU]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_PROCESSRETURNSASINORIGINALSALESHIFT_RU] DEFAULT ((0)) FOR [PROCESSRETURNSASINORIGINALSALESHIFT_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_PAYMENTSTATISTICS]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_PAYMENTSTATISTICS] DEFAULT ((0)) FOR [PAYMENTSTATISTICS];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_ITEMLABELSFORNEGATIVESTOCK]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_ITEMLABELSFORNEGATIVESTOCK] DEFAULT ((0)) FOR [ITEMLABELSFORNEGATIVESTOCK];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_RECEIPTOPTION]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_RECEIPTOPTION] DEFAULT ((0)) FOR [RECEIPTOPTION];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_USEGIFTCARDPOLICIES]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_USEGIFTCARDPOLICIES] DEFAULT ((0)) FOR [USEGIFTCARDPOLICIES];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_DEFAULTCUSTOMERPOSTING]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_DEFAULTCUSTOMERPOSTING] DEFAULT ((0)) FOR [DEFAULTCUSTOMERPOSTING];


GO
PRINT N'Creating [ax].[DF_RETAILPARAMETERS_PICKUPDELIVERYMODECODE]...';


GO
ALTER TABLE [ax].[RETAILPARAMETERS]
    ADD CONSTRAINT [DF_RETAILPARAMETERS_PICKUPDELIVERYMODECODE] DEFAULT ('') FOR [PICKUPDELIVERYMODECODE];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPITEM_ITEMDATAAREAID]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPITEM]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPITEM_ITEMDATAAREAID] DEFAULT ('') FOR [ITEMDATAAREAID];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPITEM_ITEMID]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPITEM]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPITEM_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPITEM_TRACKINGDIMENSIONGROUP]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPITEM]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPITEM_TRACKINGDIMENSIONGROUP] DEFAULT ((0)) FOR [TRACKINGDIMENSIONGROUP];


GO
PRINT N'Creating [ax].[DF_TAXFISCALCLASSIFICATION_BR_APPROXTAXVALUENATIONAL]...';


GO
ALTER TABLE [ax].[TAXFISCALCLASSIFICATION_BR]
    ADD CONSTRAINT [DF_TAXFISCALCLASSIFICATION_BR_APPROXTAXVALUENATIONAL] DEFAULT ((0)) FOR [APPROXTAXVALUENATIONAL];


GO
PRINT N'Creating [ax].[DF_TAXFISCALCLASSIFICATION_BR_FISCALCLASSIFICATIONID]...';


GO
ALTER TABLE [ax].[TAXFISCALCLASSIFICATION_BR]
    ADD CONSTRAINT [DF_TAXFISCALCLASSIFICATION_BR_FISCALCLASSIFICATIONID] DEFAULT ('') FOR [FISCALCLASSIFICATIONID];


GO
PRINT N'Creating [ax].[DF_TAXFISCALCLASSIFICATION_BR_APPROXTAXVALUEIMPORTED]...';


GO
ALTER TABLE [ax].[TAXFISCALCLASSIFICATION_BR]
    ADD CONSTRAINT [DF_TAXFISCALCLASSIFICATION_BR_APPROXTAXVALUEIMPORTED] DEFAULT ((0)) FOR [APPROXTAXVALUEIMPORTED];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_STATUS]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_CONSUMERNAME]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_CONSUMERNAME] DEFAULT ('') FOR [CONSUMERNAME];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_CONSUMERCNPJCPFNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_CONSUMERCNPJCPFNUMBER] DEFAULT ('') FOR [CONSUMERCNPJCPFNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_TOTALSURCHARGEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_TOTALSURCHARGEAMOUNT] DEFAULT ((0)) FOR [TOTALSURCHARGEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTMODEL]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTMODEL] DEFAULT ('') FOR [FISCALRECEIPTMODEL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTDATETIMETZID] DEFAULT ((37001)) FOR [FISCALRECEIPTDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_RECEIPTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_RECEIPTNUMBER] DEFAULT ((0)) FOR [RECEIPTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_QUANTITYDECIMALS]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_QUANTITYDECIMALS] DEFAULT ((0)) FOR [QUANTITYDECIMALS];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_ADDITIONALFISCALMEMORYINDEX]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_ADDITIONALFISCALMEMORYINDEX] DEFAULT ((0)) FOR [ADDITIONALFISCALMEMORYINDEX];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_TOTALDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_TOTALDISCOUNTAMOUNT] DEFAULT ((0)) FOR [TOTALDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_ACCOUNTINGDATE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_ACCOUNTINGDATE] DEFAULT ('1900-01-01') FOR [ACCOUNTINGDATE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_TOTALAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_TOTALAMOUNT] DEFAULT ((0)) FOR [TOTALAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_ZREPORTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_ZREPORTNUMBER] DEFAULT ((0)) FOR [ZREPORTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTDATETIME]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [FISCALRECEIPTDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_VOIDEDAFTERENDRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_VOIDEDAFTERENDRECEIPT] DEFAULT ((0)) FOR [VOIDEDAFTERENDRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_FISCALPRINTERSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_FISCALPRINTERSERIALNUMBER] DEFAULT ('') FOR [FISCALPRINTERSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_PRINTEDTOTALSURCHARGEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_PRINTEDTOTALSURCHARGEAMOUNT] DEFAULT ((0)) FOR [PRINTEDTOTALSURCHARGEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_PRINTEDTOTALDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_PRINTEDTOTALDISCOUNTAMOUNT] DEFAULT ((0)) FOR [PRINTEDTOTALDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_FISCALRECEIPTNUMBER] DEFAULT ((0)) FOR [FISCALRECEIPTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_FISCALESTABLISHMENT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_FISCALESTABLISHMENT] DEFAULT ('') FOR [FISCALESTABLISHMENT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPT_BR_UNITDECIMALS]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPT_BR_UNITDECIMALS] DEFAULT ((0)) FOR [UNITDECIMALS];


GO
PRINT N'Creating [ax].[DF_INVENTSITE_NAME]...';


GO
ALTER TABLE [ax].[INVENTSITE]
    ADD CONSTRAINT [DF_INVENTSITE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_INVENTSITE_SITEID]...';


GO
ALTER TABLE [ax].[INVENTSITE]
    ADD CONSTRAINT [DF_INVENTSITE_SITEID] DEFAULT ('') FOR [SITEID];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERSIZE_SIZEPRODUCTMASTER]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERSIZE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERSIZE_SIZEPRODUCTMASTER] DEFAULT ((0)) FOR [SIZEPRODUCTMASTER];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERSIZE_SIZEPRODUCTDIMENSIONATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERSIZE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERSIZE_SIZEPRODUCTDIMENSIONATTRIBUTE] DEFAULT ((0)) FOR [SIZEPRODUCTDIMENSIONATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERSIZE_SIZE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERSIZE]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERSIZE_SIZE] DEFAULT ((0)) FOR [SIZE];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_FORMLAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_FORMLAYOUTID] DEFAULT ('') FOR [FORMLAYOUTID];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_UPPERCASE]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_UPPERCASE] DEFAULT ((0)) FOR [UPPERCASE];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_TITLE]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_TITLE] DEFAULT ('') FOR [TITLE];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_PROMPTQUESTION]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_PROMPTQUESTION] DEFAULT ((0)) FOR [PROMPTQUESTION];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_PRINTASSLIP]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_PRINTASSLIP] DEFAULT ((0)) FOR [PRINTASSLIP];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_PRINTBEHAVIOUR]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_PRINTBEHAVIOUR] DEFAULT ((0)) FOR [PRINTBEHAVIOUR];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_LAYOUTTYPE]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_LAYOUTTYPE] DEFAULT ((0)) FOR [LAYOUTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILFORMLAYOUT_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILFORMLAYOUT]
    ADD CONSTRAINT [DF_RETAILFORMLAYOUT_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATECURRENCYPAIR_TOCURRENCYCODE]...';


GO
ALTER TABLE [ax].[EXCHANGERATECURRENCYPAIR]
    ADD CONSTRAINT [DF_EXCHANGERATECURRENCYPAIR_TOCURRENCYCODE] DEFAULT ('') FOR [TOCURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATECURRENCYPAIR_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[EXCHANGERATECURRENCYPAIR]
    ADD CONSTRAINT [DF_EXCHANGERATECURRENCYPAIR_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATECURRENCYPAIR_EXCHANGERATEDISPLAYFACTOR]...';


GO
ALTER TABLE [ax].[EXCHANGERATECURRENCYPAIR]
    ADD CONSTRAINT [DF_EXCHANGERATECURRENCYPAIR_EXCHANGERATEDISPLAYFACTOR] DEFAULT ((0)) FOR [EXCHANGERATEDISPLAYFACTOR];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATECURRENCYPAIR_EXCHANGERATETYPE]...';


GO
ALTER TABLE [ax].[EXCHANGERATECURRENCYPAIR]
    ADD CONSTRAINT [DF_EXCHANGERATECURRENCYPAIR_EXCHANGERATETYPE] DEFAULT ((0)) FOR [EXCHANGERATETYPE];


GO
PRINT N'Creating [ax].[DF_EXCHANGERATECURRENCYPAIR_FROMCURRENCYCODE]...';


GO
ALTER TABLE [ax].[EXCHANGERATECURRENCYPAIR]
    ADD CONSTRAINT [DF_EXCHANGERATECURRENCYPAIR_FROMCURRENCYCODE] DEFAULT ('') FOR [FROMCURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTCODE_DISCOUNTCODE]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTCODE]
    ADD CONSTRAINT [DF_RETAILDISCOUNTCODE_DISCOUNTCODE] DEFAULT ('') FOR [DISCOUNTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTCODE_DISCOUNTOFFERID]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTCODE]
    ADD CONSTRAINT [DF_RETAILDISCOUNTCODE_DISCOUNTOFFERID] DEFAULT ('') FOR [DISCOUNTOFFERID];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTCODE_BARCODE]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTCODE]
    ADD CONSTRAINT [DF_RETAILDISCOUNTCODE_BARCODE] DEFAULT ('') FOR [BARCODE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTAXTRANS_BATCHID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTAXTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTAXTRANS_BATCHID] DEFAULT ((0)) FOR [BATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTAXTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTAXTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTAXTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTAXTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTAXTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTAXTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTAXTRANS_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTAXTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTAXTRANS_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTAXTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTAXTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTAXTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTAXTRANS_TAXCODE]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTAXTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTAXTRANS_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARESTATION_HARDWARESTATIONID]...';


GO
ALTER TABLE [ax].[RETAILHARDWARESTATION]
    ADD CONSTRAINT [DF_RETAILHARDWARESTATION_HARDWARESTATIONID] DEFAULT ('') FOR [HARDWARESTATIONID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARESTATION_HARDWARESTATIONNAME]...';


GO
ALTER TABLE [ax].[RETAILHARDWARESTATION]
    ADD CONSTRAINT [DF_RETAILHARDWARESTATION_HARDWARESTATIONNAME] DEFAULT ('') FOR [HARDWARESTATIONNAME];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARESTATION_HARDWAREPROFILEID]...';


GO
ALTER TABLE [ax].[RETAILHARDWARESTATION]
    ADD CONSTRAINT [DF_RETAILHARDWARESTATION_HARDWAREPROFILEID] DEFAULT ('') FOR [HARDWAREPROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILHARDWARESTATION_HARDWARESTATIONPORTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILHARDWARESTATION]
    ADD CONSTRAINT [DF_RETAILHARDWARESTATION_HARDWARESTATIONPORTNUMBER] DEFAULT ((0)) FOR [HARDWARESTATIONPORTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPETABLE_TENDERTYPEID]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILTENDERTYPETABLE_TENDERTYPEID] DEFAULT ('') FOR [TENDERTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILTENDERTYPETABLE_NAME]...';


GO
ALTER TABLE [ax].[RETAILTENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILTENDERTYPETABLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTELOOKUP_ATTRIBUTEGROUPATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTELOOKUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTELOOKUP_ATTRIBUTEGROUPATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTEGROUPATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTELOOKUP_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTELOOKUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTELOOKUP_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTELOOKUP_ATTRIBUTEGROUPTYPE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTELOOKUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTELOOKUP_ATTRIBUTEGROUPTYPE] DEFAULT ((0)) FOR [ATTRIBUTEGROUPTYPE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTELOOKUP_CATEGORYATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTELOOKUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTELOOKUP_CATEGORYATTRIBUTE] DEFAULT ((0)) FOR [CATEGORYATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESCATEGORYATTRIBUTELOOKUP_CATEGORY]...';


GO
ALTER TABLE [ax].[ECORESCATEGORYATTRIBUTELOOKUP]
    ADD CONSTRAINT [DF_ECORESCATEGORYATTRIBUTELOOKUP_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWNOTSAMEDATERETURN_RU]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWNOTSAMEDATERETURN_RU] DEFAULT ((0)) FOR [ALLOWNOTSAMEDATERETURN_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MAXTOTALDISCOUNTPCT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MAXTOTALDISCOUNTPCT] DEFAULT ((0)) FOR [MAXTOTALDISCOUNTPCT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWTRANSACTIONVOIDING]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWTRANSACTIONVOIDING] DEFAULT ((0)) FOR [ALLOWTRANSACTIONVOIDING];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWBLINDCLOSE]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWBLINDCLOSE] DEFAULT ((0)) FOR [ALLOWBLINDCLOSE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWOPENDRAWERONLY]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWOPENDRAWERONLY] DEFAULT ((0)) FOR [ALLOWOPENDRAWERONLY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MAXTOTALRETURNAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MAXTOTALRETURNAMOUNT] DEFAULT ((0)) FOR [MAXTOTALRETURNAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWTASKGUIDES]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWTASKGUIDES] DEFAULT ((0)) FOR [ALLOWTASKGUIDES];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MAXTOTALDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MAXTOTALDISCOUNTAMOUNT] DEFAULT ((0)) FOR [MAXTOTALDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWSETUPLABELPRINTER]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWSETUPLABELPRINTER] DEFAULT ((0)) FOR [ALLOWSETUPLABELPRINTER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWMULTIPLESHIFTLOGON]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWMULTIPLESHIFTLOGON] DEFAULT ((0)) FOR [ALLOWMULTIPLESHIFTLOGON];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWTRANSACTIONSUSPENSION]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWTRANSACTIONSUSPENSION] DEFAULT ((0)) FOR [ALLOWTRANSACTIONSUSPENSION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWUSESHAREDSHIFT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWUSESHAREDSHIFT] DEFAULT ((0)) FOR [ALLOWUSESHAREDSHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWZREPORTPRINTING]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWZREPORTPRINTING] DEFAULT ((0)) FOR [ALLOWZREPORTPRINTING];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWCREATEORDER]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWCREATEORDER] DEFAULT ((0)) FOR [ALLOWCREATEORDER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_POSITION]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_POSITION] DEFAULT ((0)) FOR [POSITION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWPRICEOVERRIDE]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWPRICEOVERRIDE] DEFAULT ((0)) FOR [ALLOWPRICEOVERRIDE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MANAGEDEVICE]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MANAGEDEVICE] DEFAULT ((0)) FOR [MANAGEDEVICE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWXREPORTPRINTING]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWXREPORTPRINTING] DEFAULT ((0)) FOR [ALLOWXREPORTPRINTING];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWCHANGENOVOID]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWCHANGENOVOID] DEFAULT ((0)) FOR [ALLOWCHANGENOVOID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_NAME]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWCHANGEPERIPHERALSTATION]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWCHANGEPERIPHERALSTATION] DEFAULT ((0)) FOR [ALLOWCHANGEPERIPHERALSTATION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWPASSWORDCHANGE]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWPASSWORDCHANGE] DEFAULT ((0)) FOR [ALLOWPASSWORDCHANGE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWRETRIEVEORDER]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWRETRIEVEORDER] DEFAULT ((0)) FOR [ALLOWRETRIEVEORDER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWEDITORDER]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWEDITORDER] DEFAULT ((0)) FOR [ALLOWEDITORDER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_USEHANDHELD]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_USEHANDHELD] DEFAULT ((0)) FOR [USEHANDHELD];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MAXIMUMDISCOUNTPCT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MAXIMUMDISCOUNTPCT] DEFAULT ((0)) FOR [MAXIMUMDISCOUNTPCT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWRESETPASSWORD]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWRESETPASSWORD] DEFAULT ((0)) FOR [ALLOWRESETPASSWORD];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU] DEFAULT ((0)) FOR [ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_POSPERMISSIONGROUP]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_POSPERMISSIONGROUP] DEFAULT ((0)) FOR [POSPERMISSIONGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MANAGERPRIVILEGES]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MANAGERPRIVILEGES] DEFAULT ((0)) FOR [MANAGERPRIVILEGES];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWMANAGESHAREDSHIFT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWMANAGESHAREDSHIFT] DEFAULT ((0)) FOR [ALLOWMANAGESHAREDSHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MAXLINERETURNAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MAXLINERETURNAMOUNT] DEFAULT ((0)) FOR [MAXLINERETURNAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWTENDERDECLARATION]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWTENDERDECLARATION] DEFAULT ((0)) FOR [ALLOWTENDERDECLARATION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWMULTIPLELOGINS]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWMULTIPLELOGINS] DEFAULT ((0)) FOR [ALLOWMULTIPLELOGINS];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWRETURNOFNONRETURNABLEITEM_RU]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWRETURNOFNONRETURNABLEITEM_RU] DEFAULT ((0)) FOR [ALLOWRETURNOFNONRETURNABLEITEM_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWFLOATINGTENDERDECLARATION]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWFLOATINGTENDERDECLARATION] DEFAULT ((0)) FOR [ALLOWFLOATINGTENDERDECLARATION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_MAXLINEDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_MAXLINEDISCOUNTAMOUNT] DEFAULT ((0)) FOR [MAXLINEDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_VIEWTIMECLOCKENTRIES]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_VIEWTIMECLOCKENTRIES] DEFAULT ((0)) FOR [VIEWTIMECLOCKENTRIES];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWKITDISASSEMBLY]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWKITDISASSEMBLY] DEFAULT ((0)) FOR [ALLOWKITDISASSEMBLY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSITIONPOSPERMISSION_ALLOWSALESTAXCHANGE]...';


GO
ALTER TABLE [ax].[RETAILPOSITIONPOSPERMISSION]
    ADD CONSTRAINT [DF_RETAILPOSITIONPOSPERMISSION_ALLOWSALESTAXCHANGE] DEFAULT ((0)) FOR [ALLOWSALESTAXCHANGE];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_NEWTEXTALIGNMENT]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_NEWTEXTALIGNMENT] DEFAULT ((0)) FOR [NEWTEXTALIGNMENT];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_FONTSTYLE]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_FONTSTYLE] DEFAULT ((0)) FOR [FONTSTYLE];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_BACKCOLOR]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_BACKCOLOR] DEFAULT ((0)) FOR [BACKCOLOR];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_COLOUR]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_COLOUR] DEFAULT ((0)) FOR [COLOUR];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_GRADIENTMODE]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_GRADIENTMODE] DEFAULT ((0)) FOR [GRADIENTMODE];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_PICTUREID]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_PICTUREID] DEFAULT ((0)) FOR [PICTUREID];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_COLSPAN]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_COLSPAN] DEFAULT ((0)) FOR [COLSPAN];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_BACKCOLOR2]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_BACKCOLOR2] DEFAULT ((0)) FOR [BACKCOLOR2];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_ID]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_ID] DEFAULT ((0)) FOR [ID];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_ROWNUM]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_ROWNUM] DEFAULT ((0)) FOR [ROWNUM];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_DISPLAYTEXT]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_DISPLAYTEXT] DEFAULT ('') FOR [DISPLAYTEXT];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_BORDERCOLOR]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_BORDERCOLOR] DEFAULT ((0)) FOR [BORDERCOLOR];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_IMAGEALIGNMENT]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_IMAGEALIGNMENT] DEFAULT ((0)) FOR [IMAGEALIGNMENT];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_BUTTONGRIDID]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_BUTTONGRIDID] DEFAULT ('') FOR [BUTTONGRIDID];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_FONTCOLOR]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_FONTCOLOR] DEFAULT ((0)) FOR [FONTCOLOR];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_ROWSPAN]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_ROWSPAN] DEFAULT ((0)) FOR [ROWSPAN];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_ACTION]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_ACTION] DEFAULT ((0)) FOR [ACTION];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_ACTIONPROPERTY]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_ACTIONPROPERTY] DEFAULT ('') FOR [ACTIONPROPERTY];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_USECUSTOMLOOKANDFEEL]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_USECUSTOMLOOKANDFEEL] DEFAULT ((0)) FOR [USECUSTOMLOOKANDFEEL];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_COL]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_COL] DEFAULT ((0)) FOR [COL];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_NEWIMAGEALIGNMENT]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_NEWIMAGEALIGNMENT] DEFAULT ((0)) FOR [NEWIMAGEALIGNMENT];


GO
PRINT N'Creating [ax].[DF_RETAILBUTTONGRIDBUTTONS_FONTSIZE]...';


GO
ALTER TABLE [ax].[RETAILBUTTONGRIDBUTTONS]
    ADD CONSTRAINT [DF_RETAILBUTTONGRIDBUTTONS_FONTSIZE] DEFAULT ((0)) FOR [FONTSIZE];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTAVAILABILITYPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[RETAILINVENTAVAILABILITYPARAMETERS]
    ADD CONSTRAINT [DF_RETAILINVENTAVAILABILITYPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTAVAILABILITYPARAMETERS_LASTINVENTTRANS]...';


GO
ALTER TABLE [ax].[RETAILINVENTAVAILABILITYPARAMETERS]
    ADD CONSTRAINT [DF_RETAILINVENTAVAILABILITYPARAMETERS_LASTINVENTTRANS] DEFAULT ((0)) FOR [LASTINVENTTRANS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TENDERTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TENDERTYPE] DEFAULT ('') FOR [TENDERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_AMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_AMOUNTCUR] DEFAULT ((0)) FOR [AMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_AMOUNTTENDERED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_AMOUNTTENDERED] DEFAULT ((0)) FOR [AMOUNTTENDERED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONPAYMENTTRANS_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONPAYMENTTRANS_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEGROUPATTRIBUTE_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEGROUPATTRIBUTE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEGROUPATTRIBUTE_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEGROUPATTRIBUTE_DEFAULTVALUE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEGROUPATTRIBUTE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEGROUPATTRIBUTE_DEFAULTVALUE] DEFAULT ((0)) FOR [DEFAULTVALUE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEGROUPATTRIBUTE_ATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEGROUPATTRIBUTE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEGROUPATTRIBUTE_ATTRIBUTEGROUP] DEFAULT ((0)) FOR [ATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_OMOPERATINGUNITID]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_OMOPERATINGUNITID] DEFAULT ((0)) FOR [OMOPERATINGUNITID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_CATEGORYHIERARCHY]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_CATEGORYHIERARCHY] DEFAULT ((0)) FOR [CATEGORYHIERARCHY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_INVENTLOCATION]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_INVENTLOCATION] DEFAULT ('') FOR [INVENTLOCATION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_PRICEINCLUDESSALESTAX]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_PRICEINCLUDESSALESTAX] DEFAULT ((0)) FOR [PRICEINCLUDESSALESTAX];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_INVENTLOCATIONDATAAREAID]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_INVENTLOCATIONDATAAREAID] DEFAULT ('') FOR [INVENTLOCATIONDATAAREAID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_CHANNELTYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_CHANNELTYPE] DEFAULT ((0)) FOR [CHANNELTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_ORIGINID]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_ORIGINID] DEFAULT ((0)) FOR [ORIGINID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_DEFAULTCUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_DEFAULTCUSTACCOUNT] DEFAULT ('') FOR [DEFAULTCUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_DEFAULTCUSTDATAAREAID]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_DEFAULTCUSTDATAAREAID] DEFAULT ('') FOR [DEFAULTCUSTDATAAREAID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_ORIGININSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_ORIGININSTANCERELATIONTYPE] DEFAULT ((0)) FOR [ORIGININSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_TRANSACTIONSERVICEPROFILE]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_TRANSACTIONSERVICEPROFILE] DEFAULT ('') FOR [TRANSACTIONSERVICEPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELTABLE_INTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELTABLE_INTERNALORGANIZATION] DEFAULT ((0)) FOR [INTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_TAXCOMPONENTTABLE_IN_COMPONENT]...';


GO
ALTER TABLE [ax].[TAXCOMPONENTTABLE_IN]
    ADD CONSTRAINT [DF_TAXCOMPONENTTABLE_IN_COMPONENT] DEFAULT ('') FOR [COMPONENT];


GO
PRINT N'Creating [ax].[DF_TAXCOMPONENTTABLE_IN_TAXTYPE]...';


GO
ALTER TABLE [ax].[TAXCOMPONENTTABLE_IN]
    ADD CONSTRAINT [DF_TAXCOMPONENTTABLE_IN_TAXTYPE] DEFAULT ((0)) FOR [TAXTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTAVAILABILITY_ITEMRECID]...';


GO
ALTER TABLE [ax].[RETAILINVENTAVAILABILITY]
    ADD CONSTRAINT [DF_RETAILINVENTAVAILABILITY_ITEMRECID] DEFAULT ((0)) FOR [ITEMRECID];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTAVAILABILITY_AVAILPHYSICAL]...';


GO
ALTER TABLE [ax].[RETAILINVENTAVAILABILITY]
    ADD CONSTRAINT [DF_RETAILINVENTAVAILABILITY_AVAILPHYSICAL] DEFAULT ((0)) FOR [AVAILPHYSICAL];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTAVAILABILITY_LASTINVENTTRANS]...';


GO
ALTER TABLE [ax].[RETAILINVENTAVAILABILITY]
    ADD CONSTRAINT [DF_RETAILINVENTAVAILABILITY_LASTINVENTTRANS] DEFAULT ((0)) FOR [LASTINVENTTRANS];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTAVAILABILITY_INVENTDIMRECID]...';


GO
ALTER TABLE [ax].[RETAILINVENTAVAILABILITY]
    ADD CONSTRAINT [DF_RETAILINVENTAVAILABILITY_INVENTDIMRECID] DEFAULT ((0)) FOR [INVENTDIMRECID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_MODIFIER]...';


GO
ALTER TABLE [ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_MODIFIER] DEFAULT ((0)) FOR [MODIFIER];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_ATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_ATTRIBUTEGROUP] DEFAULT ((0)) FOR [ATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_ORIGINRECVERSION]...';


GO
ALTER TABLE [ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_ORIGINRECVERSION] DEFAULT ((0)) FOR [ORIGINRECVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_INTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP]
    ADD CONSTRAINT [DF_RETAILPUBINTERNALORGATTRIBUTEGROUP_INTERNALORGANIZATION] DEFAULT ((0)) FOR [INTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATHEADING_UPDATETOADDRESS]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATHEADING]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATHEADING_UPDATETOADDRESS] DEFAULT ((0)) FOR [UPDATETOADDRESS];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATHEADING_NAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATHEADING]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATHEADING_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATHEADING_ADDRFORMAT]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATHEADING]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATHEADING_ADDRFORMAT] DEFAULT ('') FOR [ADDRFORMAT];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENT_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENT_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENT_QUANTITY]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENT_QUANTITY] DEFAULT ((0)) FOR [QUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENT_DONOTSHOWATREGISTER]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENT_DONOTSHOWATREGISTER] DEFAULT ((0)) FOR [DONOTSHOWATREGISTER];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENT_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENT_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENT_UNITOFMEASURE]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENT_UNITOFMEASURE] DEFAULT ((0)) FOR [UNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENT_KIT]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENT_KIT] DEFAULT ((0)) FOR [KIT];


GO
PRINT N'Creating [ax].[DF_RETAILKITCOMPONENT_COMPONENT]...';


GO
ALTER TABLE [ax].[RETAILKITCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITCOMPONENT_COMPONENT] DEFAULT ((0)) FOR [COMPONENT];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYRETAILGROUPMEMBERLINE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYRETAILGROUPMEMBERLINE] DEFAULT ((0)) FOR [FROMACTIVITYRETAILGROUPMEMBERLINE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_TOREWARDPOINTAMOUNTQTY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_TOREWARDPOINTAMOUNTQTY] DEFAULT ((0)) FOR [TOREWARDPOINTAMOUNTQTY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYAMOUNTCURRENCY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYAMOUNTCURRENCY] DEFAULT ('') FOR [FROMACTIVITYAMOUNTCURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_TOREWARDPOINT]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_TOREWARDPOINT] DEFAULT ((0)) FOR [TOREWARDPOINT];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_LOYALTYSCHEME]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_LOYALTYSCHEME] DEFAULT ((0)) FOR [LOYALTYSCHEME];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYTYPE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYTYPE] DEFAULT ((0)) FOR [FROMACTIVITYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYAMOUNTQTY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_FROMACTIVITYAMOUNTQTY] DEFAULT ((0)) FOR [FROMACTIVITYAMOUNTQTY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYEARNSCHEMELINE_LOYALTYTIER]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYEARNSCHEMELINE]
    ADD CONSTRAINT [DF_RETAILLOYALTYEARNSCHEMELINE_LOYALTYTIER] DEFAULT ((0)) FOR [LOYALTYTIER];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINVENTDIMCHANNELMETADATA_DIMENSIONFIELDID]...';


GO
ALTER TABLE [ax].[RETAILPUBINVENTDIMCHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBINVENTDIMCHANNELMETADATA_DIMENSIONFIELDID] DEFAULT ((0)) FOR [DIMENSIONFIELDID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINVENTDIMCHANNELMETADATA_ORIGINID]...';


GO
ALTER TABLE [ax].[RETAILPUBINVENTDIMCHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBINVENTDIMCHANNELMETADATA_ORIGINID] DEFAULT ((0)) FOR [ORIGINID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINVENTDIMCHANNELMETADATA_HOSTCHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPUBINVENTDIMCHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBINVENTDIMCHANNELMETADATA_HOSTCHANNEL] DEFAULT ((0)) FOR [HOSTCHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINVENTDIMCHANNELMETADATA_ISREFINABLE]...';


GO
ALTER TABLE [ax].[RETAILPUBINVENTDIMCHANNELMETADATA]
    ADD CONSTRAINT [DF_RETAILPUBINVENTDIMCHANNELMETADATA_ISREFINABLE] DEFAULT ((0)) FOR [ISREFINABLE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_CARDID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_CARDID] DEFAULT ('') FOR [CARDID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_QTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_POSCURRENCY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_POSCURRENCY] DEFAULT ('') FOR [POSCURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_AMOUNTTENDERED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_AMOUNTTENDERED] DEFAULT ((0)) FOR [AMOUNTTENDERED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_EXCHRATEMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_EXCHRATEMST] DEFAULT ((0)) FOR [EXCHRATEMST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TENDERTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TENDERTYPE] DEFAULT ('') FOR [TENDERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_AMOUNTMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_AMOUNTMST] DEFAULT ((0)) FOR [AMOUNTMST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_EXCHRATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_EXCHRATE] DEFAULT ((0)) FOR [EXCHRATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_AMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_AMOUNTCUR] DEFAULT ((0)) FOR [AMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTENDERDECLARATIONTRANS_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CARDAUTHORIZATIONNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CARDAUTHORIZATIONNUMBER] DEFAULT ('') FOR [CARDAUTHORIZATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_STORE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CARDPROCESSORCNPJCPF]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CARDPROCESSORCNPJCPF] DEFAULT ('') FOR [CARDPROCESSORCNPJCPF];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_PAYMENTTYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_PAYMENTTYPE] DEFAULT ((0)) FOR [PAYMENTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CARDLOGO]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_CARDLOGO] DEFAULT ((0)) FOR [CARDLOGO];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_TENDERTYPEID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_TENDERTYPEID] DEFAULT ('') FOR [TENDERTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTPAYMENTTRANS_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILDRAWERPOOL_NAME]...';


GO
ALTER TABLE [ax].[RETAILDRAWERPOOL]
    ADD CONSTRAINT [DF_RETAILDRAWERPOOL_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_CURRENCY_SYMBOL]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_SYMBOL] DEFAULT ('') FOR [SYMBOL];


GO
PRINT N'Creating [ax].[DF_CURRENCY_ROUNDOFFTYPEPURCH]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_ROUNDOFFTYPEPURCH] DEFAULT ((0)) FOR [ROUNDOFFTYPEPURCH];


GO
PRINT N'Creating [ax].[DF_CURRENCY_ROUNDOFFSALES]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_ROUNDOFFSALES] DEFAULT ((0)) FOR [ROUNDOFFSALES];


GO
PRINT N'Creating [ax].[DF_CURRENCY_ROUNDOFFPRICE]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_ROUNDOFFPRICE] DEFAULT ((0)) FOR [ROUNDOFFPRICE];


GO
PRINT N'Creating [ax].[DF_CURRENCY_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_CURRENCY_ROUNDOFFTYPESALES]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_ROUNDOFFTYPESALES] DEFAULT ((0)) FOR [ROUNDOFFTYPESALES];


GO
PRINT N'Creating [ax].[DF_CURRENCY_TXT]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_TXT] DEFAULT ('') FOR [TXT];


GO
PRINT N'Creating [ax].[DF_CURRENCY_ROUNDOFFTYPEPRICE]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_ROUNDOFFTYPEPRICE] DEFAULT ((0)) FOR [ROUNDOFFTYPEPRICE];


GO
PRINT N'Creating [ax].[DF_CURRENCY_ROUNDOFFPURCH]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_ROUNDOFFPURCH] DEFAULT ((0)) FOR [ROUNDOFFPURCH];


GO
PRINT N'Creating [ax].[DF_CURRENCY_CURRENCYCODEISO]...';


GO
ALTER TABLE [ax].[CURRENCY]
    ADD CONSTRAINT [DF_CURRENCY_CURRENCYCODEISO] DEFAULT ('') FOR [CURRENCYCODEISO];


GO
PRINT N'Creating [ax].[DF_EXCEPTIONCODETABLE_BR_APPROXTAXVALUEIMPORTED]...';


GO
ALTER TABLE [ax].[EXCEPTIONCODETABLE_BR]
    ADD CONSTRAINT [DF_EXCEPTIONCODETABLE_BR_APPROXTAXVALUEIMPORTED] DEFAULT ((0)) FOR [APPROXTAXVALUEIMPORTED];


GO
PRINT N'Creating [ax].[DF_EXCEPTIONCODETABLE_BR_APPROXTAXVALUENATIONAL]...';


GO
ALTER TABLE [ax].[EXCEPTIONCODETABLE_BR]
    ADD CONSTRAINT [DF_EXCEPTIONCODETABLE_BR_APPROXTAXVALUENATIONAL] DEFAULT ((0)) FOR [APPROXTAXVALUENATIONAL];


GO
PRINT N'Creating [ax].[DF_EXCEPTIONCODETABLE_BR_EXCEPTIONCODE]...';


GO
ALTER TABLE [ax].[EXCEPTIONCODETABLE_BR]
    ADD CONSTRAINT [DF_EXCEPTIONCODETABLE_BR_EXCEPTIONCODE] DEFAULT ('') FOR [EXCEPTIONCODE];


GO
PRINT N'Creating [ax].[DF_EXCEPTIONCODETABLE_BR_TAXFISCALCLASSIFICATIONID]...';


GO
ALTER TABLE [ax].[EXCEPTIONCODETABLE_BR]
    ADD CONSTRAINT [DF_EXCEPTIONCODETABLE_BR_TAXFISCALCLASSIFICATIONID] DEFAULT ('') FOR [TAXFISCALCLASSIFICATIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERCONFIGTABLE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERCONFIGTABLE]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERCONFIGTABLE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERCONFIGTABLE_CONFIGID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERCONFIGTABLE]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERCONFIGTABLE_CONFIGID] DEFAULT ('') FOR [CONFIGID];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDMAPPINGTABLE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDMAPPINGTABLE]
    ADD CONSTRAINT [DF_RETAILKEYBOARDMAPPINGTABLE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDMAPPINGTABLE_KEYBOARDMAPPINGID]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDMAPPINGTABLE]
    ADD CONSTRAINT [DF_RETAILKEYBOARDMAPPINGTABLE_KEYBOARDMAPPINGID] DEFAULT ('') FOR [KEYBOARDMAPPINGID];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERSTAGING_TRACKINGNUMBER]...';


GO
ALTER TABLE [ax].[SHIPCARRIERSTAGING]
    ADD CONSTRAINT [DF_SHIPCARRIERSTAGING_TRACKINGNUMBER] DEFAULT ('') FOR [TRACKINGNUMBER];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERSTAGING_PACKINGSLIPID]...';


GO
ALTER TABLE [ax].[SHIPCARRIERSTAGING]
    ADD CONSTRAINT [DF_SHIPCARRIERSTAGING_PACKINGSLIPID] DEFAULT ('') FOR [PACKINGSLIPID];


GO
PRINT N'Creating [ax].[DF_SHIPCARRIERSTAGING_SHIPDATE]...';


GO
ALTER TABLE [ax].[SHIPCARRIERSTAGING]
    ADD CONSTRAINT [DF_SHIPCARRIERSTAGING_SHIPDATE] DEFAULT ('1900-01-01') FOR [SHIPDATE];


GO
PRINT N'Creating [ax].[DF_RETAILPERMISSIONSGROUP_PERMISSIONGROUPNAME]...';


GO
ALTER TABLE [ax].[RETAILPERMISSIONSGROUP]
    ADD CONSTRAINT [DF_RETAILPERMISSIONSGROUP_PERMISSIONGROUPNAME] DEFAULT ('') FOR [PERMISSIONGROUPNAME];


GO
PRINT N'Creating [ax].[DF_RETAILPERMISSIONSGROUP_PERMISSIONGROUPID]...';


GO
ALTER TABLE [ax].[RETAILPERMISSIONSGROUP]
    ADD CONSTRAINT [DF_RETAILPERMISSIONSGROUP_PERMISSIONGROUPID] DEFAULT ((0)) FOR [PERMISSIONGROUPID];


GO
PRINT N'Creating [ax].[DF_RETAILPERMISSIONSGROUP_PERMISSIONID]...';


GO
ALTER TABLE [ax].[RETAILPERMISSIONSGROUP]
    ADD CONSTRAINT [DF_RETAILPERMISSIONSGROUP_PERMISSIONID] DEFAULT ((0)) FOR [PERMISSIONID];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_EFTPASSWORDENCRYPTION]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_EFTPASSWORDENCRYPTION] DEFAULT ('') FOR [EFTPASSWORDENCRYPTION];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_DEVICETOKENEXPIRATION]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_DEVICETOKENEXPIRATION] DEFAULT ((0)) FOR [DEVICETOKENEXPIRATION];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_WORKERDEFAULTATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_WORKERDEFAULTATTRIBUTEGROUP] DEFAULT ((0)) FOR [WORKERDEFAULTATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_DEVICETOKENALGORITHM]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_DEVICETOKENALGORITHM] DEFAULT ('') FOR [DEVICETOKENALGORITHM];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_PRODUCTDEFAULTATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_PRODUCTDEFAULTATTRIBUTEGROUP] DEFAULT ((0)) FOR [PRODUCTDEFAULTATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_IMAGESATTRIBUTETYPE]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_IMAGESATTRIBUTETYPE] DEFAULT ((0)) FOR [IMAGESATTRIBUTETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_CUSTOMERDEFAULTATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_CUSTOMERDEFAULTATTRIBUTEGROUP] DEFAULT ((0)) FOR [CUSTOMERDEFAULTATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_VIDEOSATTRIBUTETYPE]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_VIDEOSATTRIBUTETYPE] DEFAULT ((0)) FOR [VIDEOSATTRIBUTETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_TRANSACTIONSERVICEPROFILE]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_TRANSACTIONSERVICEPROFILE] DEFAULT ('') FOR [TRANSACTIONSERVICEPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_CATALOGDEFAULTATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_CATALOGDEFAULTATTRIBUTEGROUP] DEFAULT ((0)) FOR [CATALOGDEFAULTATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_CONSUMEREFDOCCSCENCRYPTION]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_CONSUMEREFDOCCSCENCRYPTION] DEFAULT ('') FOR [CONSUMEREFDOCCSCENCRYPTION];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_EARNLOYALTYOFFLINE]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_EARNLOYALTYOFFLINE] DEFAULT ((0)) FOR [EARNLOYALTYOFFLINE];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_STAFFPASSWORDHASH]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_STAFFPASSWORDHASH] DEFAULT ('') FOR [STAFFPASSWORDHASH];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_LOCALSTOREID]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_LOCALSTOREID] DEFAULT ('') FOR [LOCALSTOREID];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_CATEGORYDEFAULTATTRIBUTEGROUP]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_CATEGORYDEFAULTATTRIBUTEGROUP] DEFAULT ((0)) FOR [CATEGORYDEFAULTATTRIBUTEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_DEFAULTHWSSELFSERVICEPKG]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_DEFAULTHWSSELFSERVICEPKG] DEFAULT ((0)) FOR [DEFAULTHWSSELFSERVICEPKG];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_EXCHANGERATETYPE]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_EXCHANGERATETYPE] DEFAULT ((0)) FOR [EXCHANGERATETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSHAREDPARAMETERS_TSPASSWORDENCRYPTION]...';


GO
ALTER TABLE [ax].[RETAILSHAREDPARAMETERS]
    ADD CONSTRAINT [DF_RETAILSHAREDPARAMETERS_TSPASSWORDENCRYPTION] DEFAULT ('') FOR [TSPASSWORDENCRYPTION];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATIONPRICEGROUP_RETAILLOYALTYTIER]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATIONPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILAFFILIATIONPRICEGROUP_RETAILLOYALTYTIER] DEFAULT ((0)) FOR [RETAILLOYALTYTIER];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATIONPRICEGROUP_RETAILAFFILIATION]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATIONPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILAFFILIATIONPRICEGROUP_RETAILAFFILIATION] DEFAULT ((0)) FOR [RETAILAFFILIATION];


GO
PRINT N'Creating [ax].[DF_RETAILAFFILIATIONPRICEGROUP_PRICEDISCGROUP]...';


GO
ALTER TABLE [ax].[RETAILAFFILIATIONPRICEGROUP]
    ADD CONSTRAINT [DF_RETAILAFFILIATIONPRICEGROUP_PRICEDISCGROUP] DEFAULT ((0)) FOR [PRICEDISCGROUP];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONROLE_NAME]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONROLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONROLE_ISPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONROLE_ISPOSTALADDRESS] DEFAULT ((0)) FOR [ISPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONROLE_ISCONTACTINFO]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONROLE_ISCONTACTINFO] DEFAULT ((0)) FOR [ISCONTACTINFO];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATIONROLE_TYPE]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_LOGISTICSLOCATIONROLE_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_ECORESSTYLE_NAME]...';


GO
ALTER TABLE [ax].[ECORESSTYLE]
    ADD CONSTRAINT [DF_ECORESSTYLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARDTIER_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARDTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARDTIER_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARDTIER_LOYALTYTIER]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARDTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARDTIER_LOYALTYTIER] DEFAULT ((0)) FOR [LOYALTYTIER];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARDTIER_LOYALTYCARD]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARDTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARDTIER_LOYALTYCARD] DEFAULT ((0)) FOR [LOYALTYCARD];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARDTIER_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARDTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARDTIER_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYCARDTIER_AFFILIATION]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYCARDTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYCARDTIER_AFFILIATION] DEFAULT ((0)) FOR [AFFILIATION];


GO
PRINT N'Creating [ax].[DF_RETAILTHEMEPALLET_NAME]...';


GO
ALTER TABLE [ax].[RETAILTHEMEPALLET]
    ADD CONSTRAINT [DF_RETAILTHEMEPALLET_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MULTIBLEITEMSYMBOL]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MULTIBLEITEMSYMBOL] DEFAULT ('') FOR [MULTIBLEITEMSYMBOL];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_CANCELREASON]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_CANCELREASON] DEFAULT ('') FOR [CANCELREASON];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_VOIDPAYMENT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_VOIDPAYMENT] DEFAULT ('') FOR [VOIDPAYMENT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_AMOUNTROUNDINGTO]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_AMOUNTROUNDINGTO] DEFAULT ((0)) FOR [AMOUNTROUNDINGTO];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_VOIDTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_VOIDTRANSACTION] DEFAULT ('') FOR [VOIDTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_CREATEOFFLINECUSTOMERORDERS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_CREATEOFFLINECUSTOMERORDERS] DEFAULT ((0)) FOR [CREATEOFFLINECUSTOMERORDERS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_APPLYDISCOUNTONUNITPRICES]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_APPLYDISCOUNTONUNITPRICES] DEFAULT ((0)) FOR [APPLYDISCOUNTONUNITPRICES];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MUSTKEYINPRICEIFZERO]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MUSTKEYINPRICEIFZERO] DEFAULT ((0)) FOR [MUSTKEYINPRICEIFZERO];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_CREATEASYNCCUSTOMERS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_CREATEASYNCCUSTOMERS] DEFAULT ((0)) FOR [CREATEASYNCCUSTOMERS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_CONTINGENCYREASON]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_CONTINGENCYREASON] DEFAULT ('') FOR [CONTINGENCYREASON];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_NAME]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_AUDITENABLED]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_AUDITENABLED] DEFAULT ((0)) FOR [AUDITENABLED];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SEARCHCUSTOMERSINAX]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SEARCHCUSTOMERSINAX] DEFAULT ((0)) FOR [SEARCHCUSTOMERSINAX];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_NEGATIVEADJUSTMENT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_NEGATIVEADJUSTMENT] DEFAULT ('') FOR [NEGATIVEADJUSTMENT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSSENDTRANSACTIONS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSSENDTRANSACTIONS] DEFAULT ((0)) FOR [TSSENDTRANSACTIONS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_AGGREGATEITEMSFORPRINTING]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_AGGREGATEITEMSFORPRINTING] DEFAULT ((0)) FOR [AGGREGATEITEMSFORPRINTING];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSRESENDDELAY]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSRESENDDELAY] DEFAULT ((0)) FOR [TSRESENDDELAY];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MAXIMUMQTY]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MAXIMUMQTY] DEFAULT ((0)) FOR [MAXIMUMQTY];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MAXIMUMSTORETRANSLOG]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MAXIMUMSTORETRANSLOG] DEFAULT ((0)) FOR [MAXIMUMSTORETRANSLOG];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSSTAFF]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSSTAFF] DEFAULT ((0)) FOR [TSSTAFF];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSSENDVOIDTRANSACTIONS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSSENDVOIDTRANSACTIONS] DEFAULT ((0)) FOR [TSSENDVOIDTRANSACTIONS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_AGGREGATEPAYMENTS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_AGGREGATEPAYMENTS] DEFAULT ((0)) FOR [AGGREGATEPAYMENTS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MAXTRANSACTIONSEARCHRESULTS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MAXTRANSACTIONSEARCHRESULTS] DEFAULT ((0)) FOR [MAXTRANSACTIONSEARCHRESULTS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSTRANSACTIONRESENDLIMIT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSTRANSACTIONRESENDLIMIT] DEFAULT ((0)) FOR [TSTRANSACTIONRESENDLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_AMOUNTDECIMALPLACES]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_AMOUNTDECIMALPLACES] DEFAULT ('') FOR [AMOUNTDECIMALPLACES];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSSUSPENDRETRIEVETRANSACTIONS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSSUSPENDRETRIEVETRANSACTIONS] DEFAULT ((0)) FOR [TSSUSPENDRETRIEVETRANSACTIONS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MINIMUMPASSWORDLENGTH]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MINIMUMPASSWORDLENGTH] DEFAULT ((0)) FOR [MINIMUMPASSWORDLENGTH];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_VOIDISPRESSED]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_VOIDISPRESSED] DEFAULT ('') FOR [VOIDISPRESSED];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSUPDATEREPLICATIONCOUNTER]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSUPDATEREPLICATIONCOUNTER] DEFAULT ((0)) FOR [TSUPDATEREPLICATIONCOUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TRANSACTIONTAXCHANGE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TRANSACTIONTAXCHANGE] DEFAULT ('') FOR [TRANSACTIONTAXCHANGE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MANUALCALCULATEDISCOUNTS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MANUALCALCULATEDISCOUNTS] DEFAULT ((0)) FOR [MANUALCALCULATEDISCOUNTS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TRANSACTIONDELETEREMINDER]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TRANSACTIONDELETEREMINDER] DEFAULT ((0)) FOR [TRANSACTIONDELETEREMINDER];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSCENTRALTABLESERVER]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSCENTRALTABLESERVER] DEFAULT ((0)) FOR [TSCENTRALTABLESERVER];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MARKDOWN]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MARKDOWN] DEFAULT ('') FOR [MARKDOWN];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_ADDTAXONPRICES]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_ADDTAXONPRICES] DEFAULT ((0)) FOR [ADDTAXONPRICES];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_AGGREGATEITEMS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_AGGREGATEITEMS] DEFAULT ((0)) FOR [AGGREGATEITEMS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSDATAENTRIES]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSDATAENTRIES] DEFAULT ((0)) FOR [TSDATAENTRIES];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSCUSTOMER]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSCUSTOMER] DEFAULT ((0)) FOR [TSCUSTOMER];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MARKUP]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MARKUP] DEFAULT ('') FOR [MARKUP];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSINVENTORYLOOKUP]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSINVENTORYLOOKUP] DEFAULT ((0)) FOR [TSINVENTORYLOOKUP];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TSFLOATINGCASHIER]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TSFLOATINGCASHIER] DEFAULT ((0)) FOR [TSFLOATINGCASHIER];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_MAXIMUMPRICE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_MAXIMUMPRICE] DEFAULT ((0)) FOR [MAXIMUMPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_ITEMNOTONFILE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_ITEMNOTONFILE] DEFAULT ('') FOR [ITEMNOTONFILE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_STAFFCARDLOGONREQUIRESPASSWORD]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_STAFFCARDLOGONREQUIRESPASSWORD] DEFAULT ((0)) FOR [STAFFCARDLOGONREQUIRESPASSWORD];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SUPPORTEDCOUNTRYREGIONISOCODE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SUPPORTEDCOUNTRYREGIONISOCODE] DEFAULT ('') FOR [SUPPORTEDCOUNTRYREGIONISOCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_LIMITSTAFFLISTTOSTORE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_LIMITSTAFFLISTTOSTORE] DEFAULT ((0)) FOR [LIMITSTAFFLISTTOSTORE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_STARTOFTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_STARTOFTRANSACTION] DEFAULT ('') FOR [STARTOFTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_LINEITEMTAXCHANGE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_LINEITEMTAXCHANGE] DEFAULT ('') FOR [LINEITEMTAXCHANGE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TAENABLEREGISTRATION]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TAENABLEREGISTRATION] DEFAULT ((0)) FOR [TAENABLEREGISTRATION];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_PROFILEID]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_PROFILEID] DEFAULT ('') FOR [PROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TENDERDECLARATION]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TENDERDECLARATION] DEFAULT ('') FOR [TENDERDECLARATION];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_TAXREGISTRATIONNUMBERONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_TAXREGISTRATIONNUMBERONRECEIPT] DEFAULT ((0)) FOR [TAXREGISTRATIONNUMBERONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SHOWSTAFFLISTATLOGON]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SHOWSTAFFLISTATLOGON] DEFAULT ((0)) FOR [SHOWSTAFFLISTATLOGON];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_ENDOFTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_ENDOFTRANSACTION] DEFAULT ('') FOR [ENDOFTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SKIPTAXONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SKIPTAXONRECEIPT] DEFAULT ((0)) FOR [SKIPTAXONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_STAFFBARCODELOGONREQUIRESPASSWORD]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_STAFFBARCODELOGONREQUIRESPASSWORD] DEFAULT ((0)) FOR [STAFFBARCODELOGONREQUIRESPASSWORD];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_STAFFBARCODELOGON]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_STAFFBARCODELOGON] DEFAULT ((0)) FOR [STAFFBARCODELOGON];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_EODBANKTOTALSVERIFICATION]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_EODBANKTOTALSVERIFICATION] DEFAULT ((0)) FOR [EODBANKTOTALSVERIFICATION];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_STAFFCARDLOGON]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_STAFFCARDLOGON] DEFAULT ((0)) FOR [STAFFCARDLOGON];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_INCLUDEKITCOMPONENTS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_INCLUDEKITCOMPONENTS] DEFAULT ((0)) FOR [INCLUDEKITCOMPONENTS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_RETAILRECEIPTPROFILE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_RETAILRECEIPTPROFILE] DEFAULT ('') FOR [RETAILRECEIPTPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_DAYSTRANSACTIONSEXISTS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_DAYSTRANSACTIONSEXISTS] DEFAULT ((0)) FOR [DAYSTRANSACTIONSEXISTS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SALESPERSON]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SALESPERSON] DEFAULT ('') FOR [SALESPERSON];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_DECIMALNOTREQUIREDFORMINORCURRENCYUNIT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_DECIMALNOTREQUIREDFORMINORCURRENCYUNIT] DEFAULT ((0)) FOR [DECIMALNOTREQUIREDFORMINORCURRENCYUNIT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_DISCOUNTATTOTAL]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_DISCOUNTATTOTAL] DEFAULT ('') FOR [DISCOUNTATTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SALESPERSONMODE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SALESPERSONMODE] DEFAULT ((0)) FOR [SALESPERSONMODE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SERIALNUMBER] DEFAULT ('') FOR [SERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_DISPLAYSECONDARYTOTALCURRENCY]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_DISPLAYSECONDARYTOTALCURRENCY] DEFAULT ((0)) FOR [DISPLAYSECONDARYTOTALCURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_SECONDARYTOTALCURRENCY]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_SECONDARYTOTALCURRENCY] DEFAULT ('') FOR [SECONDARYTOTALCURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_PRICEDECIMALPLACES]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_PRICEDECIMALPLACES] DEFAULT ('') FOR [PRICEDECIMALPLACES];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_CENTRALTABLESERVERPORT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_CENTRALTABLESERVERPORT] DEFAULT ('') FOR [CENTRALTABLESERVERPORT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_CURRENCYSYMBOL]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_CURRENCYSYMBOL] DEFAULT ('') FOR [CURRENCYSYMBOL];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_PRICEROUNDINGTO]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_PRICEROUNDINGTO] DEFAULT ((0)) FOR [PRICEROUNDINGTO];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_REFUNDSALE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_REFUNDSALE] DEFAULT ('') FOR [REFUNDSALE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_DAYSCUSTOMERHISTORY]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_DAYSCUSTOMERHISTORY] DEFAULT ((0)) FOR [DAYSCUSTOMERHISTORY];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_PRINTXREPORTONTERMINAL]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_PRINTXREPORTONTERMINAL] DEFAULT ((0)) FOR [PRINTXREPORTONTERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_REQUIREAMOUNTDECLARATION]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_REQUIREAMOUNTDECLARATION] DEFAULT ((0)) FOR [REQUIREAMOUNTDECLARATION];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_NEGATIVESALESLINE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_NEGATIVESALESLINE] DEFAULT ('') FOR [NEGATIVESALESLINE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_BACKUPTRAININGTRANSACTIONS]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_BACKUPTRAININGTRANSACTIONS] DEFAULT ((0)) FOR [BACKUPTRAININGTRANSACTIONS];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_NOSALE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_NOSALE] DEFAULT ('') FOR [NOSALE];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_BLOCKEDCLOSEDACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_BLOCKEDCLOSEDACCOUNT] DEFAULT ((0)) FOR [BLOCKEDCLOSEDACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_NOTAXUSED]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_NOTAXUSED] DEFAULT ((0)) FOR [NOTAXUSED];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_CENTRALTABLESERVER]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_CENTRALTABLESERVER] DEFAULT ('') FOR [CENTRALTABLESERVER];


GO
PRINT N'Creating [ax].[DF_RETAILFUNCTIONALITYPROFILE_OVERRIDEPRICE]...';


GO
ALTER TABLE [ax].[RETAILFUNCTIONALITYPROFILE]
    ADD CONSTRAINT [DF_RETAILFUNCTIONALITYPROFILE_OVERRIDEPRICE] DEFAULT ('') FOR [OVERRIDEPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_TAXVALUE]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_TAXVALUE] DEFAULT ((0)) FOR [TAXVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_TOTALIZERNAME]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_TOTALIZERNAME] DEFAULT ('') FOR [TOTALIZERNAME];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_TOTALIZERSINTEGRANAME]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_TOTALIZERSINTEGRANAME] DEFAULT ('') FOR [TOTALIZERSINTEGRANAME];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_ZREPORTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_ZREPORTNUMBER] DEFAULT ((0)) FOR [ZREPORTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_TOTALIZERAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_TOTALIZERAMOUNT] DEFAULT ((0)) FOR [TOTALIZERAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_ADDITIONALFISCALMEMORYINDEX]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_ADDITIONALFISCALMEMORYINDEX] DEFAULT ((0)) FOR [ADDITIONALFISCALMEMORYINDEX];


GO
PRINT N'Creating [ax].[DF_RETAILZREPORTTOTALIZER_BR_FISCALPRINTERSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILZREPORTTOTALIZER_BR]
    ADD CONSTRAINT [DF_RETAILZREPORTTOTALIZER_BR_FISCALPRINTERSERIALNUMBER] DEFAULT ('') FOR [FISCALPRINTERSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEVALUE_VALUE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEVALUE_VALUE] DEFAULT ((0)) FOR [VALUE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEVALUE_INSTANCEVALUE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEVALUE_INSTANCEVALUE] DEFAULT ((0)) FOR [INSTANCEVALUE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTEVALUE_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTEVALUE_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTTRANSLATION_PRODUCT]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTTRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTTRANSLATION_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTTRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTTRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTTRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTTRANSLATION_NAME]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTTRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTTRANSLATION_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTTRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTTRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTTRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINT_REWARDPOINTCURRENCY]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINT]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINT_REWARDPOINTCURRENCY] DEFAULT ('') FOR [REWARDPOINTCURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINT_REDEEMRANKING]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINT]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINT_REDEEMRANKING] DEFAULT ((0)) FOR [REDEEMRANKING];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINT_EXPIRATIONTIMEVALUE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINT]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINT_EXPIRATIONTIMEVALUE] DEFAULT ((0)) FOR [EXPIRATIONTIMEVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINT_REWARDPOINTTYPE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINT]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINT_REWARDPOINTTYPE] DEFAULT ((0)) FOR [REWARDPOINTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINT_EXPIRATIONTIMEUNIT]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINT]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINT_EXPIRATIONTIMEUNIT] DEFAULT ((0)) FOR [EXPIRATIONTIMEUNIT];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINT_REWARDPOINTID]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINT]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINT_REWARDPOINTID] DEFAULT ('') FOR [REWARDPOINTID];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINT_REDEEMABLE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINT]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINT_REDEEMABLE] DEFAULT ((0)) FOR [REDEEMABLE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CUSTDISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CUSTDISCAMOUNT] DEFAULT ((0)) FOR [CUSTDISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_BATCHTERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_BATCHTERMINALID] DEFAULT ('') FOR [BATCHTERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_INVOICECOMMENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_INVOICECOMMENT] DEFAULT ('') FOR [INVOICECOMMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_DLVMODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_DLVMODE] DEFAULT ('') FOR [DLVMODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_NUMBEROFITEMS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_NUMBEROFITEMS] DEFAULT ((0)) FOR [NUMBEROFITEMS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_LOYALTYDISCAMOUNT_RU]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_LOYALTYDISCAMOUNT_RU] DEFAULT ((0)) FOR [LOYALTYDISCAMOUNT_RU];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_REFUNDRECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_REFUNDRECEIPTID] DEFAULT ('') FOR [REFUNDRECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TOTALMANUALDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TOTALMANUALDISCOUNTAMOUNT] DEFAULT ((0)) FOR [TOTALMANUALDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SALEISRETURNSALE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SALEISRETURNSALE] DEFAULT ((0)) FOR [SALEISRETURNSALE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_FISCALSERIALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_FISCALSERIALID] DEFAULT ('') FOR [FISCALSERIALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_POSTASSHIPMENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_POSTASSHIPMENT] DEFAULT ((0)) FOR [POSTASSHIPMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_COMMENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_COMMENT] DEFAULT ('') FOR [COMMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_WRONGSHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_WRONGSHIFT] DEFAULT ((0)) FOR [WRONGSHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_INFOCODEDISCGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_INFOCODEDISCGROUP] DEFAULT ('') FOR [INFOCODEDISCGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CREATEDONPOSTERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CREATEDONPOSTERMINAL] DEFAULT ('') FOR [CREATEDONPOSTERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SKIPAGGREGATION]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SKIPAGGREGATION] DEFAULT ((0)) FOR [SKIPAGGREGATION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SALESPAYMENTDIFFERENCE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SALESPAYMENTDIFFERENCE] DEFAULT ((0)) FOR [SALESPAYMENTDIFFERENCE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TIMEWHENTOTALPRESSED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TIMEWHENTOTALPRESSED] DEFAULT ((0)) FOR [TIMEWHENTOTALPRESSED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_BATCHID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_BATCHID] DEFAULT ((0)) FOR [BATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_LOYALTYCARDID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_LOYALTYCARDID] DEFAULT ('') FOR [LOYALTYCARDID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_INVENTSITEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_INVENTSITEID] DEFAULT ('') FOR [INVENTSITEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CUSTACCOUNT] DEFAULT ('') FOR [CUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_NUMBEROFITEMLINES]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_NUMBEROFITEMLINES] DEFAULT ((0)) FOR [NUMBEROFITEMLINES];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CHANNELREFERENCEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CHANNELREFERENCEID] DEFAULT ('') FOR [CHANNELREFERENCEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_DISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_DISCAMOUNT] DEFAULT ((0)) FOR [DISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_FISCALDOCUMENTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_FISCALDOCUMENTID] DEFAULT ('') FOR [FISCALDOCUMENTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_ROUNDEDAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_ROUNDEDAMOUNT] DEFAULT ((0)) FOR [ROUNDEDAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TRANSCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TRANSCODE] DEFAULT ((0)) FOR [TRANSCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_PAYMENTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_PAYMENTAMOUNT] DEFAULT ((0)) FOR [PAYMENTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SHIPPINGDATEREQUESTED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SHIPPINGDATEREQUESTED] DEFAULT ('1900-01-01') FOR [SHIPPINGDATEREQUESTED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SALESORDERID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SALESORDERID] DEFAULT ('') FOR [SALESORDERID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TOTALDISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TOTALDISCAMOUNT] DEFAULT ((0)) FOR [TOTALDISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_INCOMEEXPENSEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_INCOMEEXPENSEAMOUNT] DEFAULT ((0)) FOR [INCOMEEXPENSEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CREATEDOFFLINE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CREATEDOFFLINE] DEFAULT ((0)) FOR [CREATEDOFFLINE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_LOGISTICSPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_LOGISTICSPOSTALADDRESS] DEFAULT ((0)) FOR [LOGISTICSPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_AMOUNTTOACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_AMOUNTTOACCOUNT] DEFAULT ((0)) FOR [AMOUNTTOACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_OPENDRAWER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_OPENDRAWER] DEFAULT ((0)) FOR [OPENDRAWER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_NUMBEROFINVOICES]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_NUMBEROFINVOICES] DEFAULT ((0)) FOR [NUMBEROFINVOICES];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RETRIEVEDFROMRECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RETRIEVEDFROMRECEIPTID] DEFAULT ('') FOR [RETRIEVEDFROMRECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SALESORDERAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SALESORDERAMOUNT] DEFAULT ((0)) FOR [SALESORDERAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RECEIPTEMAIL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RECEIPTEMAIL] DEFAULT ('') FOR [RECEIPTEMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_EXCHRATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_EXCHRATE] DEFAULT ((0)) FOR [EXCHRATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_INCLUDEDINSTATISTICS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_INCLUDEDINSTATISTICS] DEFAULT ((0)) FOR [INCLUDEDINSTATISTICS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TOACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TOACCOUNT] DEFAULT ((0)) FOR [TOACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_ITEMSPOSTED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_ITEMSPOSTED] DEFAULT ((0)) FOR [ITEMSPOSTED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CUSTPURCHASEORDER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CUSTPURCHASEORDER] DEFAULT ('') FOR [CUSTPURCHASEORDER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_NUMBEROFPAYMENTLINES]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_NUMBEROFPAYMENTLINES] DEFAULT ((0)) FOR [NUMBEROFPAYMENTLINES];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_NETAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_NETAMOUNT] DEFAULT ((0)) FOR [NETAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_COSTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_COSTAMOUNT] DEFAULT ((0)) FOR [COSTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TRANSTABLEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TRANSTABLEID] DEFAULT ((0)) FOR [TRANSTABLEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SALESINVOICEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SALESINVOICEAMOUNT] DEFAULT ((0)) FOR [SALESINVOICEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TOTALMANUALDISCOUNTPERCENTAGE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TOTALMANUALDISCOUNTPERCENTAGE] DEFAULT ((0)) FOR [TOTALMANUALDISCOUNTPERCENTAGE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CUSTACCOUNTASYNC]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CUSTACCOUNTASYNC] DEFAULT ('') FOR [CUSTACCOUNTASYNC];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_ENTRYSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_ENTRYSTATUS] DEFAULT ((0)) FOR [ENTRYSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_RECEIPTDATEREQUESTED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_RECEIPTDATEREQUESTED] DEFAULT ('1900-01-01') FOR [RECEIPTDATEREQUESTED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_INVENTLOCATIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_INVENTLOCATIONID] DEFAULT ('') FOR [INVENTLOCATIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_TIMEWHENTRANSCLOSED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_TIMEWHENTRANSCLOSED] DEFAULT ((0)) FOR [TIMEWHENTRANSCLOSED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONTABLE_GROSSAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONTABLE]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONTABLE_GROSSAMOUNT] DEFAULT ((0)) FOR [GROSSAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_BLOCKEDONPOS]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_BLOCKEDONPOS] DEFAULT ((0)) FOR [BLOCKEDONPOS];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_QTYBECOMESNEGATIVE]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_QTYBECOMESNEGATIVE] DEFAULT ((0)) FOR [QTYBECOMESNEGATIVE];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_KEYINGINQTY]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_KEYINGINQTY] DEFAULT ((0)) FOR [KEYINGINQTY];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_ZEROPRICEVALID]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_ZEROPRICEVALID] DEFAULT ((0)) FOR [ZEROPRICEVALID];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_DATETOBEBLOCKED]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_DATETOBEBLOCKED] DEFAULT ('1900-01-01') FOR [DATETOBEBLOCKED];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_BARCODESETUPID]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_BARCODESETUPID] DEFAULT ('') FOR [BARCODESETUPID];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_PRINTVARIANTSSHELFLABELS]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_PRINTVARIANTSSHELFLABELS] DEFAULT ((0)) FOR [PRINTVARIANTSSHELFLABELS];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_DATEBLOCKED]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_DATEBLOCKED] DEFAULT ('1900-01-01') FOR [DATEBLOCKED];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_SCALEITEM]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_SCALEITEM] DEFAULT ((0)) FOR [SCALEITEM];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_MUSTKEYINCOMMENT]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_MUSTKEYINCOMMENT] DEFAULT ((0)) FOR [MUSTKEYINCOMMENT];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_PROHIBITRETURN_RU]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_PROHIBITRETURN_RU] DEFAULT ((0)) FOR [PROHIBITRETURN_RU];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_BASECOMPARISONUNITCODE]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_BASECOMPARISONUNITCODE] DEFAULT ('') FOR [BASECOMPARISONUNITCODE];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_USEEANSTANDARDBARCODE]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_USEEANSTANDARDBARCODE] DEFAULT ((0)) FOR [USEEANSTANDARDBARCODE];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_DATETOACTIVATEITEM]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_DATETOACTIVATEITEM] DEFAULT ('1900-01-01') FOR [DATETOACTIVATEITEM];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_NODISCOUNTALLOWED]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_NODISCOUNTALLOWED] DEFAULT ((0)) FOR [NODISCOUNTALLOWED];


GO
PRINT N'Creating [ax].[DF_RETAILINVENTTABLE_KEYINGINPRICE]...';


GO
ALTER TABLE [ax].[RETAILINVENTTABLE]
    ADD CONSTRAINT [DF_RETAILINVENTTABLE_KEYINGINPRICE] DEFAULT ((0)) FOR [KEYINGINPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_SLIPTEXT1]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_SLIPTEXT1] DEFAULT ('') FOR [SLIPTEXT1];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_ACCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_ACCOUNTTYPE] DEFAULT ((0)) FOR [ACCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_MESSAGELINE1]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_MESSAGELINE1] DEFAULT ('') FOR [MESSAGELINE1];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_SLIPTEXT2]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_SLIPTEXT2] DEFAULT ('') FOR [SLIPTEXT2];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_STOREID]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_MESSAGELINE2]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_MESSAGELINE2] DEFAULT ('') FOR [MESSAGELINE2];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_MODIFIEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_MODIFIEDTRANSACTIONID] DEFAULT ((0)) FOR [MODIFIEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_NAME]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_NAMEALIAS]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_NAMEALIAS] DEFAULT ('') FOR [NAMEALIAS];


GO
PRINT N'Creating [ax].[DF_RETAILINCOMEEXPENSEACCOUNTTABLE_ACCOUNTNUM]...';


GO
ALTER TABLE [ax].[RETAILINCOMEEXPENSEACCOUNTTABLE]
    ADD CONSTRAINT [DF_RETAILINCOMEEXPENSEACCOUNTTABLE_ACCOUNTNUM] DEFAULT ('') FOR [ACCOUNTNUM];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTVARIANTSIZE_SIZE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTVARIANTSIZE]
    ADD CONSTRAINT [DF_ECORESPRODUCTVARIANTSIZE_SIZE] DEFAULT ((0)) FOR [SIZE];


GO
PRINT N'Creating [ax].[DF_CUSTPARAMETERS_TAXGROUP_RU]...';


GO
ALTER TABLE [ax].[CUSTPARAMETERS]
    ADD CONSTRAINT [DF_CUSTPARAMETERS_TAXGROUP_RU] DEFAULT ('') FOR [TAXGROUP_RU];


GO
PRINT N'Creating [ax].[DF_CUSTPARAMETERS_KEY]...';


GO
ALTER TABLE [ax].[CUSTPARAMETERS]
    ADD CONSTRAINT [DF_CUSTPARAMETERS_KEY] DEFAULT ((0)) FOR [KEY];


GO
PRINT N'Creating [ax].[DF_CUSTPARAMETERS_TAXITEMGROUP_RU]...';


GO
ALTER TABLE [ax].[CUSTPARAMETERS]
    ADD CONSTRAINT [DF_CUSTPARAMETERS_TAXITEMGROUP_RU] DEFAULT ('') FOR [TAXITEMGROUP_RU];


GO
PRINT N'Creating [ax].[DF_RETAILSTORECASHDECLARATIONTABLE_STOREID]...';


GO
ALTER TABLE [ax].[RETAILSTORECASHDECLARATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTORECASHDECLARATIONTABLE_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORECASHDECLARATIONTABLE_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILSTORECASHDECLARATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTORECASHDECLARATIONTABLE_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILSTORECASHDECLARATIONTABLE_TYPE]...';


GO
ALTER TABLE [ax].[RETAILSTORECASHDECLARATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTORECASHDECLARATIONTABLE_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORECASHDECLARATIONTABLE_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILSTORECASHDECLARATIONTABLE]
    ADD CONSTRAINT [DF_RETAILSTORECASHDECLARATIONTABLE_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINETABLECOLUMNS_SYNCCOLUMNNAME]...';


GO
ALTER TABLE [ax].[RETAILOFFLINETABLECOLUMNS]
    ADD CONSTRAINT [DF_RETAILOFFLINETABLECOLUMNS_SYNCCOLUMNNAME] DEFAULT ('') FOR [SYNCCOLUMNNAME];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINETABLECOLUMNS_SYNCTABLE]...';


GO
ALTER TABLE [ax].[RETAILOFFLINETABLECOLUMNS]
    ADD CONSTRAINT [DF_RETAILOFFLINETABLECOLUMNS_SYNCTABLE] DEFAULT ((0)) FOR [SYNCTABLE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_FLOATVALUE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_FLOATVALUE] DEFAULT ((0)) FOR [FLOATVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_INTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_INTERNALORGANIZATION] DEFAULT ((0)) FOR [INTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_DATETIMEVALUE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_DATETIMEVALUE] DEFAULT ('1900-01-01 00:00:00.000') FOR [DATETIMEVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_UNITOFMEASURE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_UNITOFMEASURE] DEFAULT ((0)) FOR [UNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_DATETIMEVALUETZID]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_DATETIMEVALUETZID] DEFAULT ((37001)) FOR [DATETIMEVALUETZID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_PRODUCT]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_TEXTVALUE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_TEXTVALUE] DEFAULT ('') FOR [TEXTVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBPRODUCTATTRIBUTEVALUE_INTVALUE]...';


GO
ALTER TABLE [ax].[RETAILPUBPRODUCTATTRIBUTEVALUE]
    ADD CONSTRAINT [DF_RETAILPUBPRODUCTATTRIBUTEVALUE_INTVALUE] DEFAULT ((0)) FOR [INTVALUE];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_ISROLEDELIVERY]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_ISROLEDELIVERY] DEFAULT ((0)) FOR [ISROLEDELIVERY];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_ISPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_ISPOSTALADDRESS] DEFAULT ((0)) FOR [ISPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_PARTY]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_PARTY] DEFAULT ((0)) FOR [PARTY];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_ISPRIVATE]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_ISPRIVATE] DEFAULT ((0)) FOR [ISPRIVATE];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_ISLOCATIONOWNER]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_ISLOCATIONOWNER] DEFAULT ((0)) FOR [ISLOCATIONOWNER];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_LOCATION]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_LOCATION] DEFAULT ((0)) FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_ISPRIMARY]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_ISPRIMARY] DEFAULT ((0)) FOR [ISPRIMARY];


GO
PRINT N'Creating [ax].[DF_DIRPARTYLOCATION_ATTENTIONTOADDRESSLINE]...';


GO
ALTER TABLE [ax].[DIRPARTYLOCATION]
    ADD CONSTRAINT [DF_DIRPARTYLOCATION_ATTENTIONTOADDRESSLINE] DEFAULT ('') FOR [ATTENTIONTOADDRESSLINE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_CHANGEAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_CHANGEAMOUNTCUR] DEFAULT ((0)) FOR [CHANGEAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_COUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_COUNT] DEFAULT ((0)) FOR [COUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_CARDTYPEID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_CARDTYPEID] DEFAULT ('') FOR [CARDTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_TENDEREDAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_TENDEREDAMOUNTCUR] DEFAULT ((0)) FOR [TENDEREDAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_CHANGEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_CHANGEAMOUNT] DEFAULT ((0)) FOR [CHANGEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_TENDERTYPEID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_TENDERTYPEID] DEFAULT ('') FOR [TENDERTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_DECLARETENDERAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_DECLARETENDERAMOUNT] DEFAULT ((0)) FOR [DECLARETENDERAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_DECLARETENDERAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_DECLARETENDERAMOUNTCUR] DEFAULT ((0)) FOR [DECLARETENDERAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_COUNTINGREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_COUNTINGREQUIRED] DEFAULT ((0)) FOR [COUNTINGREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_SAFEDROPAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_SAFEDROPAMOUNT] DEFAULT ((0)) FOR [SAFEDROPAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_SAFEDROPAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_SAFEDROPAMOUNTCUR] DEFAULT ((0)) FOR [SAFEDROPAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_REMOVETENDERAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_REMOVETENDERAMOUNT] DEFAULT ((0)) FOR [REMOVETENDERAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_REMOVETENDERAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_REMOVETENDERAMOUNTCUR] DEFAULT ((0)) FOR [REMOVETENDERAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_BANKDROPAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_BANKDROPAMOUNTCUR] DEFAULT ((0)) FOR [BANKDROPAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_BATCHID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_BATCHID] DEFAULT ((0)) FOR [BATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_TENDEREDAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_TENDEREDAMOUNT] DEFAULT ((0)) FOR [TENDEREDAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_STARTINGAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_STARTINGAMOUNT] DEFAULT ((0)) FOR [STARTINGAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_ADDTOTENDERAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_ADDTOTENDERAMOUNT] DEFAULT ((0)) FOR [ADDTOTENDERAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_ADDTOTENDERAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_ADDTOTENDERAMOUNTCUR] DEFAULT ((0)) FOR [ADDTOTENDERAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_STARTINGAMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_STARTINGAMOUNTCUR] DEFAULT ((0)) FOR [STARTINGAMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTENDERTRANS_BANKDROPAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTENDERTRANS]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTENDERTRANS_BANKDROPAMOUNT] DEFAULT ((0)) FOR [BANKDROPAMOUNT];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATION_LOCATIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATION_LOCATIONID] DEFAULT ('') FOR [LOCATIONID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATION_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATION_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATION_ISPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATION_ISPOSTALADDRESS] DEFAULT ((0)) FOR [ISPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATION_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATION_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATION_DUNSNUMBERRECID]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATION_DUNSNUMBERRECID] DEFAULT ((0)) FOR [DUNSNUMBERRECID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSLOCATION_PARENTLOCATION]...';


GO
ALTER TABLE [ax].[LOGISTICSLOCATION]
    ADD CONSTRAINT [DF_LOGISTICSLOCATION_PARENTLOCATION] DEFAULT ((0)) FOR [PARENTLOCATION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_DLVMODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_DLVMODE] DEFAULT ('') FOR [DLVMODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_SCALEITEM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_SCALEITEM] DEFAULT ((0)) FOR [SCALEITEM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_FULFILLMENTSTOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_FULFILLMENTSTOREID] DEFAULT ('') FOR [FULFILLMENTSTOREID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TOTALDISCINFOCODELINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TOTALDISCINFOCODELINENUM] DEFAULT ((0)) FOR [TOTALDISCINFOCODELINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_NETAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_NETAMOUNT] DEFAULT ((0)) FOR [NETAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PERIODICDISCGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PERIODICDISCGROUP] DEFAULT ('') FOR [PERIODICDISCGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LINKEDITEMNOTORIGINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LINKEDITEMNOTORIGINAL] DEFAULT ((0)) FOR [LINKEDITEMNOTORIGINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TRANSACTIONCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TRANSACTIONCODE] DEFAULT ((0)) FOR [TRANSACTIONCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_DISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_DISCAMOUNT] DEFAULT ((0)) FOR [DISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CREATEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CREATEDTRANSACTIONID] DEFAULT ((0)) FOR [CREATEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ITEMIDSCANNED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ITEMIDSCANNED] DEFAULT ((0)) FOR [ITEMIDSCANNED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_BARCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_BARCODE] DEFAULT ('') FOR [BARCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_INVENTSERIALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_INVENTSERIALID] DEFAULT ('') FOR [INVENTSERIALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_COSTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_COSTAMOUNT] DEFAULT ((0)) FOR [COSTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PRESCRIPTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PRESCRIPTIONID] DEFAULT ('') FOR [PRESCRIPTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ORIGINALOFLINKEDITEMLIST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ORIGINALOFLINKEDITEMLIST] DEFAULT ((0)) FOR [ORIGINALOFLINKEDITEMLIST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PRICEINBARCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PRICEINBARCODE] DEFAULT ((0)) FOR [PRICEINBARCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LOYALTYDISCAMOUNT_RU]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LOYALTYDISCAMOUNT_RU] DEFAULT ((0)) FOR [LOYALTYDISCAMOUNT_RU];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_STAFFID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_STAFFID] DEFAULT ('') FOR [STAFFID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LINEDSCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LINEDSCAMOUNT] DEFAULT ((0)) FOR [LINEDSCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_GIFTCARD]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_GIFTCARD] DEFAULT ((0)) FOR [GIFTCARD];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RETURNQTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RETURNQTY] DEFAULT ((0)) FOR [RETURNQTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_COMMENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_COMMENT] DEFAULT ('') FOR [COMMENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TOTALROUNDEDAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TOTALROUNDEDAMOUNT] DEFAULT ((0)) FOR [TOTALROUNDEDAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_NETPRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_NETPRICE] DEFAULT ((0)) FOR [NETPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PERIODICPERCENTAGEDISCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PERIODICPERCENTAGEDISCOUNT] DEFAULT ((0)) FOR [PERIODICPERCENTAGEDISCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_INVENTLOCATIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_INVENTLOCATIONID] DEFAULT ('') FOR [INVENTLOCATIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_SHELF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_SHELF] DEFAULT ('') FOR [SHELF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LOGISTICSPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LOGISTICSPOSTALADDRESS] DEFAULT ((0)) FOR [LOGISTICSPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PRICECHANGE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PRICECHANGE] DEFAULT ((0)) FOR [PRICECHANGE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_SHIPPINGDATEREQUESTED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_SHIPPINGDATEREQUESTED] DEFAULT ('1900-01-01') FOR [SHIPPINGDATEREQUESTED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RETURNNOSALE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RETURNNOSALE] DEFAULT ((0)) FOR [RETURNNOSALE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ELECTRONICDELIVERYEMAILCONTENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ELECTRONICDELIVERYEMAILCONTENT] DEFAULT ('') FOR [ELECTRONICDELIVERYEMAILCONTENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_KEYBOARDITEMENTRY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_KEYBOARDITEMENTRY] DEFAULT ((0)) FOR [KEYBOARDITEMENTRY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RETURNTERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RETURNTERMINALID] DEFAULT ('') FOR [RETURNTERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CUSTACCOUNT] DEFAULT ('') FOR [CUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_INVENTTRANSID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_INVENTTRANSID] DEFAULT ('') FOR [INVENTTRANSID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_UNITPRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_UNITPRICE] DEFAULT ((0)) FOR [UNITPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ORIGINALTAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ORIGINALTAXGROUP] DEFAULT ('') FOR [ORIGINALTAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_DISCGROUPID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_DISCGROUPID] DEFAULT ('') FOR [DISCGROUPID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_INVENTBATCHID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_INVENTBATCHID] DEFAULT ('') FOR [INVENTBATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LINEMANUALDISCOUNTPERCENTAGE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LINEMANUALDISCOUNTPERCENTAGE] DEFAULT ((0)) FOR [LINEMANUALDISCOUNTPERCENTAGE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_WEIGHTITEM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_WEIGHTITEM] DEFAULT ((0)) FOR [WEIGHTITEM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_QTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_STDNETPRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_STDNETPRICE] DEFAULT ((0)) FOR [STDNETPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_UNIT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_UNIT] DEFAULT ('') FOR [UNIT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_INVENTSITEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_INVENTSITEID] DEFAULT ('') FOR [INVENTSITEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ORIGINALPRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ORIGINALPRICE] DEFAULT ((0)) FOR [ORIGINALPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PURCHID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PURCHID] DEFAULT ('') FOR [PURCHID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_VARIANTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_VARIANTID] DEFAULT ('') FOR [VARIANTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TAXITEMGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_INFOCODEDISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_INFOCODEDISCAMOUNT] DEFAULT ((0)) FOR [INFOCODEDISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LINEMANUALDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LINEMANUALDISCOUNTAMOUNT] DEFAULT ((0)) FOR [LINEMANUALDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RETURNSTORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RETURNSTORE] DEFAULT ('') FOR [RETURNSTORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CUSTACCOUNTASYNC]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CUSTACCOUNTASYNC] DEFAULT ('') FOR [CUSTACCOUNTASYNC];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_DISCOUNTAMOUNTFORPRINTING]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_DISCOUNTAMOUNTFORPRINTING] DEFAULT ((0)) FOR [DISCOUNTAMOUNTFORPRINTING];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RFIDTAGID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RFIDTAGID] DEFAULT ('') FOR [RFIDTAGID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TOTALDISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TOTALDISCAMOUNT] DEFAULT ((0)) FOR [TOTALDISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LOYALTYDISCPCT_RU]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LOYALTYDISCPCT_RU] DEFAULT ((0)) FOR [LOYALTYDISCPCT_RU];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PERIODICDISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PERIODICDISCAMOUNT] DEFAULT ((0)) FOR [PERIODICDISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LINEWASDISCOUNTED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LINEWASDISCOUNTED] DEFAULT ((0)) FOR [LINEWASDISCOUNTED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CUSTINVOICEDISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CUSTINVOICEDISCAMOUNT] DEFAULT ((0)) FOR [CUSTINVOICEDISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RETURNTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RETURNTRANSACTIONID] DEFAULT ('') FOR [RETURNTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ITEMCORRECTEDLINE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ITEMCORRECTEDLINE] DEFAULT ((0)) FOR [ITEMCORRECTEDLINE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_DISCOFFERID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_DISCOFFERID] DEFAULT ('') FOR [DISCOFFERID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_UNITQTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_UNITQTY] DEFAULT ((0)) FOR [UNITQTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ORIGINALTAXITEMGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ORIGINALTAXITEMGROUP] DEFAULT ('') FOR [ORIGINALTAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_INVENTDIMID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RECEIPTDATEREQUESTED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RECEIPTDATEREQUESTED] DEFAULT ('1900-01-01') FOR [RECEIPTDATEREQUESTED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_WEIGHTMANUALLYENTERED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_WEIGHTMANUALLYENTERED] DEFAULT ((0)) FOR [WEIGHTMANUALLYENTERED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CUSTDISCAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CUSTDISCAMOUNT] DEFAULT ((0)) FOR [CUSTDISCAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_SECTION]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_SECTION] DEFAULT ('') FOR [SECTION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PERIODICDISCTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PERIODICDISCTYPE] DEFAULT ((0)) FOR [PERIODICDISCTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_NETAMOUNTINCLTAX]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_NETAMOUNTINCLTAX] DEFAULT ((0)) FOR [NETAMOUNTINCLTAX];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TOTALDISCPCT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TOTALDISCPCT] DEFAULT ((0)) FOR [TOTALDISCPCT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_LISTINGID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_LISTINGID] DEFAULT ('') FOR [LISTINGID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_DISCAMOUNTFROMSTDPRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_DISCAMOUNTFROMSTDPRICE] DEFAULT ((0)) FOR [DISCAMOUNTFROMSTDPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_PRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_PRICE] DEFAULT ((0)) FOR [PRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_MODIFIEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_MODIFIEDTRANSACTIONID] DEFAULT ((0)) FOR [MODIFIEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_RETURNLINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_RETURNLINENUM] DEFAULT ((0)) FOR [RETURNLINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ELECTRONICDELIVERYEMAIL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ELECTRONICDELIVERYEMAIL] DEFAULT ('') FOR [ELECTRONICDELIVERYEMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSALESTRANS_ITEMPOSTINGGROUP]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSALESTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSALESTRANS_ITEMPOSTINGGROUP] DEFAULT ('') FOR [ITEMPOSTINGGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_IN_ISAPPLYINTERSTATETAX]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE_IN]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_IN_ISAPPLYINTERSTATETAX] DEFAULT ((0)) FOR [ISAPPLYINTERSTATETAX];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_IN_INTERSTATETAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE_IN]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_IN_INTERSTATETAXGROUP] DEFAULT ('') FOR [INTERSTATETAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_IN_RETAILCHANNELTABLE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE_IN]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_IN_RETAILCHANNELTABLE] DEFAULT ((0)) FOR [RETAILCHANNELTABLE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_IN_TAXGROUPDATAAREAID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE_IN]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_IN_TAXGROUPDATAAREAID] DEFAULT ('') FOR [TAXGROUPDATAAREAID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_AMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_AMOUNTCUR] DEFAULT ((0)) FOR [AMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_SALESORDERINVOICETYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_SALESORDERINVOICETYPE] DEFAULT ((0)) FOR [SALESORDERINVOICETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_SALESID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_SALESID] DEFAULT ('') FOR [SALESID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_INVOICEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_INVOICEID] DEFAULT ('') FOR [INVOICEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONORDERINVOICETRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONORDERINVOICETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONORDERINVOICETRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGTRANSLATION_IMAGE]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGTRANSLATION_IMAGE] DEFAULT ('') FOR [IMAGE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGTRANSLATION_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGTRANSLATION_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGTRANSLATION_LANGUAGE]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGTRANSLATION_LANGUAGE] DEFAULT ('') FOR [LANGUAGE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGTRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGTRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGTRANSLATION_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGTRANSLATION_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGTRANSLATION_FRIENDLYNAME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGTRANSLATION_FRIENDLYNAME] DEFAULT ('') FOR [FRIENDLYNAME];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_STAFF]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_CONTINGENCYMODE]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_CONTINGENCYMODE] DEFAULT ((0)) FOR [CONTINGENCYMODE];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_DATETIME]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_DATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [DATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_DATETIMEOFFSET]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_DATETIMEOFFSET] DEFAULT ((0)) FOR [DATETIMEOFFSET];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_STOREID]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_CONTINGENCYREASON]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_CONTINGENCYREASON] DEFAULT ('') FOR [CONTINGENCYREASON];


GO
PRINT N'Creating [ax].[DF_RETAILEFDOCCONTINGENCYMODE_DATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILEFDOCCONTINGENCYMODE]
    ADD CONSTRAINT [DF_RETAILEFDOCCONTINGENCYMODE_DATETIMETZID] DEFAULT ((37001)) FOR [DATETIMETZID];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPPRODUCT_PRODUCT]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPPRODUCT_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_ECORESTRACKINGDIMENSIONGROUPPRODUCT_TRACKINGDIMENSIONGROUP]...';


GO
ALTER TABLE [ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT]
    ADD CONSTRAINT [DF_ECORESTRACKINGDIMENSIONGROUPPRODUCT_TRACKINGDIMENSIONGROUP] DEFAULT ((0)) FOR [TRACKINGDIMENSIONGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTHEMEACCENT_ACCENTID]...';


GO
ALTER TABLE [ax].[RETAILTHEMEACCENT]
    ADD CONSTRAINT [DF_RETAILTHEMEACCENT_ACCENTID] DEFAULT ('') FOR [ACCENTID];


GO
PRINT N'Creating [ax].[DF_RETAILTHEMEACCENT_NAME]...';


GO
ALTER TABLE [ax].[RETAILTHEMEACCENT]
    ADD CONSTRAINT [DF_RETAILTHEMEACCENT_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYTIER_TIERLEVEL]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYTIER_TIERLEVEL] DEFAULT ((0)) FOR [TIERLEVEL];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYTIER_TIERID]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYTIER_TIERID] DEFAULT ('') FOR [TIERID];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYTIER_VALIDDATEINTERVAL]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYTIER_VALIDDATEINTERVAL] DEFAULT ('') FOR [VALIDDATEINTERVAL];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYTIER_AFFILIATION]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYTIER]
    ADD CONSTRAINT [DF_RETAILLOYALTYTIER_AFFILIATION] DEFAULT ((0)) FOR [AFFILIATION];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINESCOPE_LASTSYNCTIMETZID]...';


GO
ALTER TABLE [ax].[RETAILOFFLINESCOPE]
    ADD CONSTRAINT [DF_RETAILOFFLINESCOPE_LASTSYNCTIMETZID] DEFAULT ((37001)) FOR [LASTSYNCTIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINESCOPE_LASTSYNCTIME]...';


GO
ALTER TABLE [ax].[RETAILOFFLINESCOPE]
    ADD CONSTRAINT [DF_RETAILOFFLINESCOPE_LASTSYNCTIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [LASTSYNCTIME];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINESCOPE_SYNCFREQUENCY]...';


GO
ALTER TABLE [ax].[RETAILOFFLINESCOPE]
    ADD CONSTRAINT [DF_RETAILOFFLINESCOPE_SYNCFREQUENCY] DEFAULT ((0)) FOR [SYNCFREQUENCY];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINESCOPE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILOFFLINESCOPE]
    ADD CONSTRAINT [DF_RETAILOFFLINESCOPE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINESCOPE_SYNCDIRECTION]...';


GO
ALTER TABLE [ax].[RETAILOFFLINESCOPE]
    ADD CONSTRAINT [DF_RETAILOFFLINESCOPE_SYNCDIRECTION] DEFAULT ((0)) FOR [SYNCDIRECTION];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTIMAGE_REFRECORD]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTIMAGE]
    ADD CONSTRAINT [DF_ECORESPRODUCTIMAGE_REFRECORD] DEFAULT ((0)) FOR [REFRECORD];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTIMAGE_DEFAULTIMAGE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTIMAGE]
    ADD CONSTRAINT [DF_ECORESPRODUCTIMAGE_DEFAULTIMAGE] DEFAULT ((0)) FOR [DEFAULTIMAGE];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGROUPITEM_ITEMGROUPID]...';


GO
ALTER TABLE [ax].[INVENTITEMGROUPITEM]
    ADD CONSTRAINT [DF_INVENTITEMGROUPITEM_ITEMGROUPID] DEFAULT ('') FOR [ITEMGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGROUPITEM_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTITEMGROUPITEM]
    ADD CONSTRAINT [DF_INVENTITEMGROUPITEM_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGROUPITEM_ITEMDATAAREAID]...';


GO
ALTER TABLE [ax].[INVENTITEMGROUPITEM]
    ADD CONSTRAINT [DF_INVENTITEMGROUPITEM_ITEMDATAAREAID] DEFAULT ('') FOR [ITEMDATAAREAID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGROUPITEM_ITEMGROUPDATAAREAID]...';


GO
ALTER TABLE [ax].[INVENTITEMGROUPITEM]
    ADD CONSTRAINT [DF_INVENTITEMGROUPITEM_ITEMGROUPDATAAREAID] DEFAULT ('') FOR [ITEMGROUPDATAAREAID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_CARDNUMBERSWIPED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_CARDNUMBERSWIPED] DEFAULT ((0)) FOR [CARDNUMBERSWIPED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_MAXNORMALDIFFERENCEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_MAXNORMALDIFFERENCEAMOUNT] DEFAULT ((0)) FOR [MAXNORMALDIFFERENCEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_NAME]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_CHECKMODULUS]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_CHECKMODULUS] DEFAULT ((0)) FOR [CHECKMODULUS];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_CARDFEE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_CARDFEE] DEFAULT ((0)) FOR [CARDFEE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_TENDERTYPEID]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_TENDERTYPEID] DEFAULT ('') FOR [TENDERTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_MANUALAUTHORIZATION]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_MANUALAUTHORIZATION] DEFAULT ((0)) FOR [MANUALAUTHORIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_CHECKEXPIREDDATE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_CHECKEXPIREDDATE] DEFAULT ((0)) FOR [CHECKEXPIREDDATE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_ENTERFLEETINFO]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_ENTERFLEETINFO] DEFAULT ((0)) FOR [ENTERFLEETINFO];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_CASHBACKLIMIT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_CASHBACKLIMIT] DEFAULT ((0)) FOR [CASHBACKLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_ALLOWMANUALINPUT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_ALLOWMANUALINPUT] DEFAULT ((0)) FOR [ALLOWMANUALINPUT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_SAMECARDALLOWED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_SAMECARDALLOWED] DEFAULT ((0)) FOR [SAMECARDALLOWED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_COUNTINGREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_COUNTINGREQUIRED] DEFAULT ((0)) FOR [COUNTINGREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_CARDTYPEID]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_CARDTYPEID] DEFAULT ('') FOR [CARDTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_PROCESSLOCALLY]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_PROCESSLOCALLY] DEFAULT ((0)) FOR [PROCESSLOCALLY];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPECARDTABLE_ACCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPECARDTABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPECARDTABLE_ACCOUNTTYPE] DEFAULT ((0)) FOR [ACCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATION_INVENTLOCATIONTYPE]...';


GO
ALTER TABLE [ax].[INVENTLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATION_INVENTLOCATIONTYPE] DEFAULT ((0)) FOR [INVENTLOCATIONTYPE];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATION_INVENTSITEID]...';


GO
ALTER TABLE [ax].[INVENTLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATION_INVENTSITEID] DEFAULT ('') FOR [INVENTSITEID];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATION_INVENTLOCATIONID]...';


GO
ALTER TABLE [ax].[INVENTLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATION_INVENTLOCATIONID] DEFAULT ('') FOR [INVENTLOCATIONID];


GO
PRINT N'Creating [ax].[DF_INVENTLOCATION_NAME]...';


GO
ALTER TABLE [ax].[INVENTLOCATION]
    ADD CONSTRAINT [DF_INVENTLOCATION_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISPRIMARY]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATION_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISPRIMARY] DEFAULT ((0)) FOR [ISPRIMARY];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISDEFAULT]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATION_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISDEFAULT] DEFAULT ((0)) FOR [ISDEFAULT];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISPRIVATE]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATION_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISPRIVATE] DEFAULT ((0)) FOR [ISPRIVATE];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISPOSTALADDRESS]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATION_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATION_BR_ISPOSTALADDRESS] DEFAULT ((0)) FOR [ISPOSTALADDRESS];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATION_BR_ACCOUNTANT]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATION_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATION_BR_ACCOUNTANT] DEFAULT ((0)) FOR [ACCOUNTANT];


GO
PRINT N'Creating [ax].[DF_ACCOUNTANTLOGISTICSLOCATION_BR_LOCATION]...';


GO
ALTER TABLE [ax].[ACCOUNTANTLOGISTICSLOCATION_BR]
    ADD CONSTRAINT [DF_ACCOUNTANTLOGISTICSLOCATION_BR_LOCATION] DEFAULT ((0)) FOR [LOCATION];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGROUP_ITEMGROUPID]...';


GO
ALTER TABLE [ax].[INVENTITEMGROUP]
    ADD CONSTRAINT [DF_INVENTITEMGROUP_ITEMGROUPID] DEFAULT ('') FOR [ITEMGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMGROUP_NAME]...';


GO
ALTER TABLE [ax].[INVENTITEMGROUP]
    ADD CONSTRAINT [DF_INVENTITEMGROUP_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_DOCUREF_REFCOMPANYID]...';


GO
ALTER TABLE [ax].[DOCUREF]
    ADD CONSTRAINT [DF_DOCUREF_REFCOMPANYID] DEFAULT ('') FOR [REFCOMPANYID];


GO
PRINT N'Creating [ax].[DF_DOCUREF_VALUERECID]...';


GO
ALTER TABLE [ax].[DOCUREF]
    ADD CONSTRAINT [DF_DOCUREF_VALUERECID] DEFAULT ((0)) FOR [VALUERECID];


GO
PRINT N'Creating [ax].[DF_DOCUREF_REFTABLEID]...';


GO
ALTER TABLE [ax].[DOCUREF]
    ADD CONSTRAINT [DF_DOCUREF_REFTABLEID] DEFAULT ((0)) FOR [REFTABLEID];


GO
PRINT N'Creating [ax].[DF_DOCUREF_REFRECID]...';


GO
ALTER TABLE [ax].[DOCUREF]
    ADD CONSTRAINT [DF_DOCUREF_REFRECID] DEFAULT ((0)) FOR [REFRECID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_ACCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_ACCOUNTTYPE] DEFAULT ((0)) FOR [ACCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_INCOMEEXEPENSEACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_INCOMEEXEPENSEACCOUNT] DEFAULT ('') FOR [INCOMEEXEPENSEACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONINCOMEEXPENSETRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_CITY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_CITY] DEFAULT ('') FOR [CITY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_STREET]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_STREET] DEFAULT ('') FOR [STREET];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_STREETNUMBER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_STREETNUMBER] DEFAULT ('') FOR [STREETNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_DELIVERYNAME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_DELIVERYNAME] DEFAULT ('') FOR [DELIVERYNAME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_DISTRICTNAME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_DISTRICTNAME] DEFAULT ('') FOR [DISTRICTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_ZIPCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_ZIPCODE] DEFAULT ('') FOR [ZIPCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_COUNTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_COUNTY] DEFAULT ('') FOR [COUNTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_PHONE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_PHONE] DEFAULT ('') FOR [PHONE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_SALELINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_SALELINENUM] DEFAULT ((0)) FOR [SALELINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_EMAIL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_EMAIL] DEFAULT ('') FOR [EMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_EMAILCONTENT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_EMAILCONTENT] DEFAULT ('') FOR [EMAILCONTENT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_SALESNAME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_SALESNAME] DEFAULT ('') FOR [SALESNAME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONADDRESSTRANS_STATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONADDRESSTRANS_STATE] DEFAULT ('') FOR [STATE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_COUNTINGREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_COUNTINGREQUIRED] DEFAULT ((0)) FOR [COUNTINGREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MAXRECOUNT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MAXRECOUNT] DEFAULT ((0)) FOR [MAXRECOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_FUNCTION]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_FUNCTION] DEFAULT ((0)) FOR [FUNCTION];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_OPENDRAWER]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_OPENDRAWER] DEFAULT ((0)) FOR [OPENDRAWER];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_TAKENTOSAFE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_TAKENTOSAFE] DEFAULT ((0)) FOR [TAKENTOSAFE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ALLOWUNDERTENDER]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ALLOWUNDERTENDER] DEFAULT ((0)) FOR [ALLOWUNDERTENDER];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_SEEKAUTHORIZATION]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_SEEKAUTHORIZATION] DEFAULT ((0)) FOR [SEEKAUTHORIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_SIGCAPENABLED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_SIGCAPENABLED] DEFAULT ((0)) FOR [SIGCAPENABLED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ASKFORDATE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ASKFORDATE] DEFAULT ((0)) FOR [ASKFORDATE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_PAYACCOUNTBILL]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_PAYACCOUNTBILL] DEFAULT ((0)) FOR [PAYACCOUNTBILL];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ENDORSECHECK]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ENDORSECHECK] DEFAULT ((0)) FOR [ENDORSECHECK];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_TENDERTYPEID]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_TENDERTYPEID] DEFAULT ('') FOR [TENDERTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ABOVEMINIMUMTENDERID]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ABOVEMINIMUMTENDERID] DEFAULT ('') FOR [ABOVEMINIMUMTENDERID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ALLOWRETURNNEGATIVE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ALLOWRETURNNEGATIVE] DEFAULT ((0)) FOR [ALLOWRETURNNEGATIVE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_TAKENTOBANK]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_TAKENTOBANK] DEFAULT ((0)) FOR [TAKENTOBANK];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MAXIMUMAMOUNTENTERED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MAXIMUMAMOUNTENTERED] DEFAULT ((0)) FOR [MAXIMUMAMOUNTENTERED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MULTIPLYINTENDEROPERATIONS]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MULTIPLYINTENDEROPERATIONS] DEFAULT ((0)) FOR [MULTIPLYINTENDEROPERATIONS];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_CHANGETENDERID]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_CHANGETENDERID] DEFAULT ('') FOR [CHANGETENDERID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_COMPRESSPAYMENTENTRIES]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_COMPRESSPAYMENTENTRIES] DEFAULT ((0)) FOR [COMPRESSPAYMENTENTRIES];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ROUNDINGMETHOD]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ROUNDINGMETHOD] DEFAULT ((0)) FOR [ROUNDINGMETHOD];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_FRONTOFCHECK]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_FRONTOFCHECK] DEFAULT ((0)) FOR [FRONTOFCHECK];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_NAME]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MAXIMUMOVERTENDERAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MAXIMUMOVERTENDERAMOUNT] DEFAULT ((0)) FOR [MAXIMUMOVERTENDERAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_POSOPERATION]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_POSOPERATION] DEFAULT ((0)) FOR [POSOPERATION];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MAXIMUMAMOUNTALLOWED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MAXIMUMAMOUNTALLOWED] DEFAULT ((0)) FOR [MAXIMUMAMOUNTALLOWED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MINIMUMCHANGEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MINIMUMCHANGEAMOUNT] DEFAULT ((0)) FOR [MINIMUMCHANGEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ENDORSMENTLINE2]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ENDORSMENTLINE2] DEFAULT ('') FOR [ENDORSMENTLINE2];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ALLOWFLOAT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ALLOWFLOAT] DEFAULT ((0)) FOR [ALLOWFLOAT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_SLIPBACKINPRINTER]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_SLIPBACKINPRINTER] DEFAULT ('') FOR [SLIPBACKINPRINTER];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_SLIPFRONTINPRINTER]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_SLIPFRONTINPRINTER] DEFAULT ('') FOR [SLIPFRONTINPRINTER];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ROUNDING]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ROUNDING] DEFAULT ((0)) FOR [ROUNDING];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_CHECKPAYEE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_CHECKPAYEE] DEFAULT ('') FOR [CHECKPAYEE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_FISCALPRINTERTENDERTYPE_BR]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_FISCALPRINTERTENDERTYPE_BR] DEFAULT ('') FOR [FISCALPRINTERTENDERTYPE_BR];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ALLOWOVERTENDER]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ALLOWOVERTENDER] DEFAULT ((0)) FOR [ALLOWOVERTENDER];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ACCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ACCOUNTTYPE] DEFAULT ((0)) FOR [ACCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_UNDERTENDERAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_UNDERTENDERAMOUNT] DEFAULT ((0)) FOR [UNDERTENDERAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_SIGCAPMINAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_SIGCAPMINAMOUNT] DEFAULT ((0)) FOR [SIGCAPMINAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MINIMUMAMOUNTALLOWED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MINIMUMAMOUNTALLOWED] DEFAULT ((0)) FOR [MINIMUMAMOUNTALLOWED];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_LINENUMINTRANSACTION]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_LINENUMINTRANSACTION] DEFAULT ('') FOR [LINENUMINTRANSACTION];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_CHANGELINEONRECEIPT]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_CHANGELINEONRECEIPT] DEFAULT ('') FOR [CHANGELINEONRECEIPT];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_ENDORSMENTLINE1]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_ENDORSMENTLINE1] DEFAULT ('') FOR [ENDORSMENTLINE1];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_POSCOUNTENTRIES]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_POSCOUNTENTRIES] DEFAULT ((0)) FOR [POSCOUNTENTRIES];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MAXCOUNTINGDIFFERENCE]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MAXCOUNTINGDIFFERENCE] DEFAULT ((0)) FOR [MAXCOUNTINGDIFFERENCE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORETENDERTYPETABLE_MINIMUMAMOUNTENTERED]...';


GO
ALTER TABLE [ax].[RETAILSTORETENDERTYPETABLE]
    ADD CONSTRAINT [DF_RETAILSTORETENDERTYPETABLE_MINIMUMAMOUNTENTERED] DEFAULT ((0)) FOR [MINIMUMAMOUNTENTERED];


GO
PRINT N'Creating [ax].[DF_ECORESCOLOR_NAME]...';


GO
ALTER TABLE [ax].[ECORESCOLOR]
    ADD CONSTRAINT [DF_ECORESCOLOR_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESTEXTVALUETRANSLATION_TEXTVALUE]...';


GO
ALTER TABLE [ax].[ECORESTEXTVALUETRANSLATION]
    ADD CONSTRAINT [DF_ECORESTEXTVALUETRANSLATION_TEXTVALUE] DEFAULT ('') FOR [TEXTVALUE];


GO
PRINT N'Creating [ax].[DF_ECORESTEXTVALUETRANSLATION_LANGUAGE]...';


GO
ALTER TABLE [ax].[ECORESTEXTVALUETRANSLATION]
    ADD CONSTRAINT [DF_ECORESTEXTVALUETRANSLATION_LANGUAGE] DEFAULT ('') FOR [LANGUAGE];


GO
PRINT N'Creating [ax].[DF_ECORESTEXTVALUETRANSLATION_TEXTVALUETABLE]...';


GO
ALTER TABLE [ax].[ECORESTEXTVALUETRANSLATION]
    ADD CONSTRAINT [DF_ECORESTEXTVALUETRANSLATION_TEXTVALUETABLE] DEFAULT ((0)) FOR [TEXTVALUETABLE];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATIONLEGALENTITY_IN_PANNUMBER]...';


GO
ALTER TABLE [ax].[TAXINFORMATIONLEGALENTITY_IN]
    ADD CONSTRAINT [DF_TAXINFORMATIONLEGALENTITY_IN_PANNUMBER] DEFAULT ('') FOR [PANNUMBER];


GO
PRINT N'Creating [ax].[DF_TAXINFORMATIONLEGALENTITY_IN_LEGALENTITY]...';


GO
ALTER TABLE [ax].[TAXINFORMATIONLEGALENTITY_IN]
    ADD CONSTRAINT [DF_TAXINFORMATIONLEGALENTITY_IN_LEGALENTITY] DEFAULT ((0)) FOR [LEGALENTITY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_CATEGORY]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_HOSTCHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_HOSTCHANNEL] DEFAULT ((0)) FOR [HOSTCHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_ORIGINID]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_ORIGINID] DEFAULT ((0)) FOR [ORIGINID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_ATTRIBUTEVALUE]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_ATTRIBUTEVALUE] DEFAULT ((0)) FOR [ATTRIBUTEVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_KEYNAME]...';


GO
ALTER TABLE [ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE_KEYNAME] DEFAULT ('') FOR [KEYNAME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_VALIDFROMDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_VALIDFROMDATETIMETZID] DEFAULT ((37001)) FOR [VALIDFROMDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_PUBLISHEDVALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_PUBLISHEDVALIDFROM] DEFAULT ('1900-01-01') FOR [PUBLISHEDVALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_ENABLESNAPSHOT]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_ENABLESNAPSHOT] DEFAULT ((0)) FOR [ENABLESNAPSHOT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_PUBLISHEDDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_PUBLISHEDDATETIMETZID] DEFAULT ((37001)) FOR [PUBLISHEDDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_PUBLISHEDVALIDTO]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_PUBLISHEDVALIDTO] DEFAULT ('1900-01-01') FOR [PUBLISHEDVALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_OWNER]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_OWNER] DEFAULT ((0)) FOR [OWNER];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_STATE]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_STATE] DEFAULT ((0)) FOR [STATE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_VALIDFROMDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_VALIDFROMDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDFROMDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOG_PUBLISHEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOG_PUBLISHEDDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [PUBLISHEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_CREATEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_CREATEDTRANSACTIONID] DEFAULT ((0)) FOR [CREATEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_EXCHRATEMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_EXCHRATEMST] DEFAULT ((0)) FOR [EXCHRATEMST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_CARDTYPEID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_CARDTYPEID] DEFAULT ('') FOR [CARDTYPEID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTTENDERED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTTENDERED] DEFAULT ((0)) FOR [AMOUNTTENDERED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSDATE] DEFAULT ('1900-01-01') FOR [TRANSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_BUSINESSDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_BUSINESSDATE] DEFAULT ('1900-01-01') FOR [BUSINESSDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_TENDERTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_TENDERTYPE] DEFAULT ('') FOR [TENDERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTCUR]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTCUR] DEFAULT ((0)) FOR [AMOUNTCUR];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTMST]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTMST] DEFAULT ((0)) FOR [AMOUNTMST];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_STATEMENTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_STATEMENTID] DEFAULT ('') FOR [STATEMENTID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_STAFF]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_STAFF] DEFAULT ('') FOR [STAFF];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_QTY]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_QTY] DEFAULT ((0)) FOR [QTY];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_SHIFT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_SHIFT] DEFAULT ('') FOR [SHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_MANAGERSKEYLIVE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_MANAGERSKEYLIVE] DEFAULT ((0)) FOR [MANAGERSKEYLIVE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_COUNTER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_COUNTER] DEFAULT ((0)) FOR [COUNTER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_EXCHRATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_EXCHRATE] DEFAULT ((0)) FOR [EXCHRATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_CARDORACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_CARDORACCOUNT] DEFAULT ('') FOR [CARDORACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSTIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSTIME] DEFAULT ((0)) FOR [TRANSTIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_CHANGELINE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_CHANGELINE] DEFAULT ((0)) FOR [CHANGELINE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTMSTPOS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTMSTPOS] DEFAULT ((0)) FOR [AMOUNTMSTPOS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTTENDEREDPOS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTTENDEREDPOS] DEFAULT ((0)) FOR [AMOUNTTENDEREDPOS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSACTIONSTATUS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_TRANSACTIONSTATUS] DEFAULT ((0)) FOR [TRANSACTIONSTATUS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_STORE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTCURPOS]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_AMOUNTCURPOS] DEFAULT ((0)) FOR [AMOUNTCURPOS];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_STATUSTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_STATUSTYPE] DEFAULT ((0)) FOR [STATUSTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_SHIFTDATE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_SHIFTDATE] DEFAULT ('1900-01-01') FOR [SHIFTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_STATEMENTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_STATEMENTCODE] DEFAULT ('') FOR [STATEMENTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_REPLICATED]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_REPLICATED] DEFAULT ((0)) FOR [REPLICATED];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_MODIFIEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_MODIFIEDTRANSACTIONID] DEFAULT ((0)) FOR [MODIFIEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONSAFETENDERTRANS_MESSAGENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONSAFETENDERTRANS_MESSAGENUM] DEFAULT ((0)) FOR [MESSAGENUM];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_PRICEVALIDONDATE]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_PRICEVALIDONDATE] DEFAULT ('1900-01-01') FOR [PRICEVALIDONDATE];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_VARIANTID]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_VARIANTID] DEFAULT ('') FOR [VARIANTID];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_PRICE]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_PRICE] DEFAULT ((0)) FOR [PRICE];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_CONFIRMED]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_CONFIRMED] DEFAULT ((0)) FOR [CONFIRMED];


GO
PRINT N'Creating [ax].[DF_RETAILLABELCHANGEJOURNALTRANS_JOURNALNUM]...';


GO
ALTER TABLE [ax].[RETAILLABELCHANGEJOURNALTRANS]
    ADD CONSTRAINT [DF_RETAILLABELCHANGEJOURNALTRANS_JOURNALNUM] DEFAULT ('') FOR [JOURNALNUM];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_STORE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXATIONORIGIN]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXATIONORIGIN] DEFAULT ((0)) FOR [TAXATIONORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXBASEAMOUNTOTHER]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXBASEAMOUNTOTHER] DEFAULT ((0)) FOR [TAXBASEAMOUNTOTHER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_FISCALVALUE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_FISCALVALUE] DEFAULT ((0)) FOR [FISCALVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_RETAINEDTAX]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_RETAINEDTAX] DEFAULT ((0)) FOR [RETAINEDTAX];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXATIONCODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXATIONCODE] DEFAULT ('') FOR [TAXATIONCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXBASEAMOUNTEXEMPT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXBASEAMOUNTEXEMPT] DEFAULT ((0)) FOR [TAXBASEAMOUNTEXEMPT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXAMOUNTOTHER]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXAMOUNTOTHER] DEFAULT ((0)) FOR [TAXAMOUNTOTHER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXBASEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXBASEAMOUNT] DEFAULT ((0)) FOR [TAXBASEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXVALUE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXVALUE] DEFAULT ((0)) FOR [TAXVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_INCLUDEDTAX]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_INCLUDEDTAX] DEFAULT ((0)) FOR [INCLUDEDTAX];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXCODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTTAXTRANS_BR_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_OMHIERARCHYPURPOSE_ISDEFAULT]...';


GO
ALTER TABLE [ax].[OMHIERARCHYPURPOSE]
    ADD CONSTRAINT [DF_OMHIERARCHYPURPOSE_ISDEFAULT] DEFAULT ((0)) FOR [ISDEFAULT];


GO
PRINT N'Creating [ax].[DF_OMHIERARCHYPURPOSE_HIERARCHYTYPE]...';


GO
ALTER TABLE [ax].[OMHIERARCHYPURPOSE]
    ADD CONSTRAINT [DF_OMHIERARCHYPURPOSE_HIERARCHYTYPE] DEFAULT ((0)) FOR [HIERARCHYTYPE];


GO
PRINT N'Creating [ax].[DF_OMHIERARCHYPURPOSE_HIERARCHYPURPOSE]...';


GO
ALTER TABLE [ax].[OMHIERARCHYPURPOSE]
    ADD CONSTRAINT [DF_OMHIERARCHYPURPOSE_HIERARCHYPURPOSE] DEFAULT ((0)) FOR [HIERARCHYPURPOSE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_PRODUCTMASTERDIMENSIONVALUE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_PRODUCTMASTERDIMENSIONVALUE] DEFAULT ((0)) FOR [PRODUCTMASTERDIMENSIONVALUE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_NAME]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION]
    ADD CONSTRAINT [DF_ECORESPRODUCTMASTERDIMVALUETRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_ECORESREFERENCEVALUE_REFTABLEID]...';


GO
ALTER TABLE [ax].[ECORESREFERENCEVALUE]
    ADD CONSTRAINT [DF_ECORESREFERENCEVALUE_REFTABLEID] DEFAULT ((0)) FOR [REFTABLEID];


GO
PRINT N'Creating [ax].[DF_RETAILCONFIGURATION_BR_TYPE]...';


GO
ALTER TABLE [ax].[RETAILCONFIGURATION_BR]
    ADD CONSTRAINT [DF_RETAILCONFIGURATION_BR_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILCONFIGURATION_BR_VALUE]...';


GO
ALTER TABLE [ax].[RETAILCONFIGURATION_BR]
    ADD CONSTRAINT [DF_RETAILCONFIGURATION_BR_VALUE] DEFAULT ('') FOR [VALUE];


GO
PRINT N'Creating [ax].[DF_RETAILCONFIGURATION_BR_PURPOSE]...';


GO
ALTER TABLE [ax].[RETAILCONFIGURATION_BR]
    ADD CONSTRAINT [DF_RETAILCONFIGURATION_BR_PURPOSE] DEFAULT ((0)) FOR [PURPOSE];


GO
PRINT N'Creating [ax].[DF_ECORESINSTANCEVALUE_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[ECORESINSTANCEVALUE]
    ADD CONSTRAINT [DF_ECORESINSTANCEVALUE_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILIDENTITYPROVIDER_ISSUER]...';


GO
ALTER TABLE [ax].[RETAILIDENTITYPROVIDER]
    ADD CONSTRAINT [DF_RETAILIDENTITYPROVIDER_ISSUER] DEFAULT ('') FOR [ISSUER];


GO
PRINT N'Creating [ax].[DF_RETAILIDENTITYPROVIDER_TYPE]...';


GO
ALTER TABLE [ax].[RETAILIDENTITYPROVIDER]
    ADD CONSTRAINT [DF_RETAILIDENTITYPROVIDER_TYPE] DEFAULT ((0)) FOR [TYPE];


GO
PRINT N'Creating [ax].[DF_RETAILIDENTITYPROVIDER_NAME]...';


GO
ALTER TABLE [ax].[RETAILIDENTITYPROVIDER]
    ADD CONSTRAINT [DF_RETAILIDENTITYPROVIDER_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDMAPPINGTRANS_KEYBOARDMAPPINGID]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDMAPPINGTRANS]
    ADD CONSTRAINT [DF_RETAILKEYBOARDMAPPINGTRANS_KEYBOARDMAPPINGID] DEFAULT ('') FOR [KEYBOARDMAPPINGID];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDMAPPINGTRANS_ACTIONPROPERTY]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDMAPPINGTRANS]
    ADD CONSTRAINT [DF_RETAILKEYBOARDMAPPINGTRANS_ACTIONPROPERTY] DEFAULT ('') FOR [ACTIONPROPERTY];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDMAPPINGTRANS_KEYCHAR]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDMAPPINGTRANS]
    ADD CONSTRAINT [DF_RETAILKEYBOARDMAPPINGTRANS_KEYCHAR] DEFAULT ('') FOR [KEYCHAR];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDMAPPINGTRANS_ASCIIVALUE]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDMAPPINGTRANS]
    ADD CONSTRAINT [DF_RETAILKEYBOARDMAPPINGTRANS_ASCIIVALUE] DEFAULT ((0)) FOR [ASCIIVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILKEYBOARDMAPPINGTRANS_ACTION]...';


GO
ALTER TABLE [ax].[RETAILKEYBOARDMAPPINGTRANS]
    ADD CONSTRAINT [DF_RETAILKEYBOARDMAPPINGTRANS_ACTION] DEFAULT ((0)) FOR [ACTION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_LONGNAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_LONGNAME] DEFAULT ('') FOR [LONGNAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_SHORTNAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_SHORTNAME] DEFAULT ('') FOR [SHORTNAME];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTE_ATTRIBUTETYPE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTE_ATTRIBUTETYPE] DEFAULT ((0)) FOR [ATTRIBUTETYPE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTE_ATTRIBUTEMODIFIER]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTE_ATTRIBUTEMODIFIER] DEFAULT ((0)) FOR [ATTRIBUTEMODIFIER];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTE_NAME]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MAXLINEDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MAXLINEDISCOUNTAMOUNT] DEFAULT ((0)) FOR [MAXLINEDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWFLOATINGTENDERDECLARATION]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWFLOATINGTENDERDECLARATION] DEFAULT ((0)) FOR [ALLOWFLOATINGTENDERDECLARATION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWPRICEOVERRIDE]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWPRICEOVERRIDE] DEFAULT ((0)) FOR [ALLOWPRICEOVERRIDE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_USEHANDHELD]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_USEHANDHELD] DEFAULT ((0)) FOR [USEHANDHELD];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWTRANSACTIONVOIDING]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWTRANSACTIONVOIDING] DEFAULT ((0)) FOR [ALLOWTRANSACTIONVOIDING];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWTASKGUIDES]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWTASKGUIDES] DEFAULT ((0)) FOR [ALLOWTASKGUIDES];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWEDITORDER]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWEDITORDER] DEFAULT ((0)) FOR [ALLOWEDITORDER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWPASSWORDCHANGE]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWPASSWORDCHANGE] DEFAULT ((0)) FOR [ALLOWPASSWORDCHANGE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWTRANSACTIONSUSPENSION]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWTRANSACTIONSUSPENSION] DEFAULT ((0)) FOR [ALLOWTRANSACTIONSUSPENSION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_POSPERMISSIONGROUPID]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_POSPERMISSIONGROUPID] DEFAULT ('') FOR [POSPERMISSIONGROUPID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_VIEWTIMECLOCKENTRIES]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_VIEWTIMECLOCKENTRIES] DEFAULT ((0)) FOR [VIEWTIMECLOCKENTRIES];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWXREPORTPRINTING]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWXREPORTPRINTING] DEFAULT ((0)) FOR [ALLOWXREPORTPRINTING];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWCHANGENOVOID]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWCHANGENOVOID] DEFAULT ((0)) FOR [ALLOWCHANGENOVOID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MAXTOTALDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MAXTOTALDISCOUNTAMOUNT] DEFAULT ((0)) FOR [MAXTOTALDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWMULTIPLELOGINS]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWMULTIPLELOGINS] DEFAULT ((0)) FOR [ALLOWMULTIPLELOGINS];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWRETRIEVEORDER]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWRETRIEVEORDER] DEFAULT ((0)) FOR [ALLOWRETRIEVEORDER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MAXLINERETURNAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MAXLINERETURNAMOUNT] DEFAULT ((0)) FOR [MAXLINERETURNAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWKITDISASSEMBLY]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWKITDISASSEMBLY] DEFAULT ((0)) FOR [ALLOWKITDISASSEMBLY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWBLINDCLOSE]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWBLINDCLOSE] DEFAULT ((0)) FOR [ALLOWBLINDCLOSE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWRESETPASSWORD]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWRESETPASSWORD] DEFAULT ((0)) FOR [ALLOWRESETPASSWORD];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWRETURNOFNONRETURNABLEITEM_RU]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWRETURNOFNONRETURNABLEITEM_RU] DEFAULT ((0)) FOR [ALLOWRETURNOFNONRETURNABLEITEM_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MANAGEDEVICE]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MANAGEDEVICE] DEFAULT ((0)) FOR [MANAGEDEVICE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWSETUPLABELPRINTER]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWSETUPLABELPRINTER] DEFAULT ((0)) FOR [ALLOWSETUPLABELPRINTER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWNOTSAMEDATERETURN_RU]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWNOTSAMEDATERETURN_RU] DEFAULT ((0)) FOR [ALLOWNOTSAMEDATERETURN_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWCREATEORDER]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWCREATEORDER] DEFAULT ((0)) FOR [ALLOWCREATEORDER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWMANAGESHAREDSHIFT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWMANAGESHAREDSHIFT] DEFAULT ((0)) FOR [ALLOWMANAGESHAREDSHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWZREPORTPRINTING]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWZREPORTPRINTING] DEFAULT ((0)) FOR [ALLOWZREPORTPRINTING];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWMULTIPLESHIFTLOGON]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWMULTIPLESHIFTLOGON] DEFAULT ((0)) FOR [ALLOWMULTIPLESHIFTLOGON];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWCHANGEPERIPHERALSTATION]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWCHANGEPERIPHERALSTATION] DEFAULT ((0)) FOR [ALLOWCHANGEPERIPHERALSTATION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MAXTOTALDISCOUNTPCT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MAXTOTALDISCOUNTPCT] DEFAULT ((0)) FOR [MAXTOTALDISCOUNTPCT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWOPENDRAWERONLY]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWOPENDRAWERONLY] DEFAULT ((0)) FOR [ALLOWOPENDRAWERONLY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWTENDERDECLARATION]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWTENDERDECLARATION] DEFAULT ((0)) FOR [ALLOWTENDERDECLARATION];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_NAME]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MAXIMUMDISCOUNTPCT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MAXIMUMDISCOUNTPCT] DEFAULT ((0)) FOR [MAXIMUMDISCOUNTPCT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MAXTOTALRETURNAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MAXTOTALRETURNAMOUNT] DEFAULT ((0)) FOR [MAXTOTALRETURNAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWSALESTAXCHANGE]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWSALESTAXCHANGE] DEFAULT ((0)) FOR [ALLOWSALESTAXCHANGE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_MANAGERPRIVILEGES]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_MANAGERPRIVILEGES] DEFAULT ((0)) FOR [MANAGERPRIVILEGES];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU] DEFAULT ((0)) FOR [ALLOWDIFFERENTPAYMENTMETHODREFUNDS_RU];


GO
PRINT N'Creating [ax].[DF_RETAILPOSPERMISSIONGROUP_ALLOWUSESHAREDSHIFT]...';


GO
ALTER TABLE [ax].[RETAILPOSPERMISSIONGROUP]
    ADD CONSTRAINT [DF_RETAILPOSPERMISSIONGROUP_ALLOWUSESHAREDSHIFT] DEFAULT ((0)) FOR [ALLOWUSESHAREDSHIFT];


GO
PRINT N'Creating [ax].[DF_RETAILMULTIBUYDISCOUNTLINE_QTYLOWEST]...';


GO
ALTER TABLE [ax].[RETAILMULTIBUYDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILMULTIBUYDISCOUNTLINE_QTYLOWEST] DEFAULT ((0)) FOR [QTYLOWEST];


GO
PRINT N'Creating [ax].[DF_RETAILMULTIBUYDISCOUNTLINE_PRICEDISCPCT]...';


GO
ALTER TABLE [ax].[RETAILMULTIBUYDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILMULTIBUYDISCOUNTLINE_PRICEDISCPCT] DEFAULT ((0)) FOR [PRICEDISCPCT];


GO
PRINT N'Creating [ax].[DF_RETAILMULTIBUYDISCOUNTLINE_MULTIBUYID]...';


GO
ALTER TABLE [ax].[RETAILMULTIBUYDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILMULTIBUYDISCOUNTLINE_MULTIBUYID] DEFAULT ('') FOR [MULTIBUYID];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINTTRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINTTRANSLATION]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINTTRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINTTRANSLATION_REWARDPOINT]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINTTRANSLATION]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINTTRANSLATION_REWARDPOINT] DEFAULT ((0)) FOR [REWARDPOINT];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYREWARDPOINTTRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYREWARDPOINTTRANSLATION]
    ADD CONSTRAINT [DF_RETAILLOYALTYREWARDPOINTTRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILESCOPES_PROFILEID]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILESCOPES]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILESCOPES_PROFILEID] DEFAULT ((0)) FOR [PROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILOFFLINEPROFILESCOPES_SCOPEID]...';


GO
ALTER TABLE [ax].[RETAILOFFLINEPROFILESCOPES]
    ADD CONSTRAINT [DF_RETAILOFFLINEPROFILESCOPES_SCOPEID] DEFAULT ((0)) FOR [SCOPEID];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTINSTANCEVALUE_PRODUCT]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTINSTANCEVALUE]
    ADD CONSTRAINT [DF_ECORESPRODUCTINSTANCEVALUE_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_FISCALVALUE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_FISCALVALUE] DEFAULT ((0)) FOR [FISCALVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXVALUE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXVALUE] DEFAULT ((0)) FOR [TAXVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXTYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXTYPE] DEFAULT ((0)) FOR [TAXTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXCODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXBASEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXBASEAMOUNT] DEFAULT ((0)) FOR [TAXBASEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXATIONORIGIN]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXATIONORIGIN] DEFAULT ((0)) FOR [TAXATIONORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXATIONCODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXATIONCODE] DEFAULT ('') FOR [TAXATIONCODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TAXAMOUNT] DEFAULT ((0)) FOR [TAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TOTALIZERNAME]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TOTALIZERNAME] DEFAULT ('') FOR [TOTALIZERNAME];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALRECEIPTTAXTRANS_BR_TOTALIZERINDEX]...';


GO
ALTER TABLE [ax].[RETAILFISCALRECEIPTTAXTRANS_BR]
    ADD CONSTRAINT [DF_RETAILFISCALRECEIPTTAXTRANS_BR_TOTALIZERINDEX] DEFAULT ((0)) FOR [TOTALIZERINDEX];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_MARKUPCODE]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_MARKUPCODE] DEFAULT ('') FOR [MARKUPCODE];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_USEINMATCHING]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_USEINMATCHING] DEFAULT ((0)) FOR [USEINMATCHING];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_ISLETTEROFCREDIT_SA]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_ISLETTEROFCREDIT_SA] DEFAULT ((0)) FOR [ISLETTEROFCREDIT_SA];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_TXT]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_TXT] DEFAULT ('') FOR [TXT];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_CUSTTYPE]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_CUSTTYPE] DEFAULT ((0)) FOR [CUSTTYPE];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_TAXITEMGROUP]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_TAXITEMGROUP] DEFAULT ('') FOR [TAXITEMGROUP];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_VENDTYPE]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_VENDTYPE] DEFAULT ((0)) FOR [VENDTYPE];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_CUSTPOSTING]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_CUSTPOSTING] DEFAULT ((0)) FOR [CUSTPOSTING];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_MODULETYPE]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_MODULETYPE] DEFAULT ((0)) FOR [MODULETYPE];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_VENDPOSTING]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_VENDPOSTING] DEFAULT ((0)) FOR [VENDPOSTING];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_CUSTOMERLEDGERDIMENSION]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_CUSTOMERLEDGERDIMENSION] DEFAULT ((0)) FOR [CUSTOMERLEDGERDIMENSION];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_MAXAMOUNT]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_MAXAMOUNT] DEFAULT ((0)) FOR [MAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_MARKUPTABLE_VENDORLEDGERDIMENSION]...';


GO
ALTER TABLE [ax].[MARKUPTABLE]
    ADD CONSTRAINT [DF_MARKUPTABLE_VENDORLEDGERDIMENSION] DEFAULT ((0)) FOR [VENDORLEDGERDIMENSION];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTSTORE_STORE]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTSTORE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTSTORE_STORE] DEFAULT ((0)) FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTSTORE_LAYOUTID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTSTORE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTSTORE_LAYOUTID] DEFAULT ('') FOR [LAYOUTID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_ISIMMUTABLE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_ISIMMUTABLE] DEFAULT ((0)) FOR [ISIMMUTABLE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_TIMEZONE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_TIMEZONE] DEFAULT ((0)) FOR [TIMEZONE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_ADDRESSUSEZIPPLUS4]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_ADDRESSUSEZIPPLUS4] DEFAULT ((0)) FOR [ADDRESSUSEZIPPLUS4];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_BACENCODE_BR]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_BACENCODE_BR] DEFAULT ('') FOR [BACENCODE_BR];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_ISOCODE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_ISOCODE] DEFAULT ('') FOR [ISOCODE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCOUNTRYREGION_ADDRFORMAT]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCOUNTRYREGION]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCOUNTRYREGION_ADDRFORMAT] DEFAULT ('') FOR [ADDRFORMAT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGINTERNALORG_INTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGINTERNALORG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGINTERNALORG_INTERNALORGANIZATION] DEFAULT ((0)) FOR [INTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGINTERNALORG_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGINTERNALORG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGINTERNALORG_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGINTERNALORG_ORIGINRECVERSION]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGINTERNALORG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGINTERNALORG_ORIGINRECVERSION] DEFAULT ((0)) FOR [ORIGINRECVERSION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGINTERNALORG_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGINTERNALORG]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGINTERNALORG_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_DIRADDRESSBOOK_NAME]...';


GO
ALTER TABLE [ax].[DIRADDRESSBOOK]
    ADD CONSTRAINT [DF_DIRADDRESSBOOK_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_DIRADDRESSBOOK_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[DIRADDRESSBOOK]
    ADD CONSTRAINT [DF_DIRADDRESSBOOK_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_DIRADDRESSBOOK_DESCRIPTION]...';


GO
ALTER TABLE [ax].[DIRADDRESSBOOK]
    ADD CONSTRAINT [DF_DIRADDRESSBOOK_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_DIRADDRESSBOOK_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[DIRADDRESSBOOK]
    ADD CONSTRAINT [DF_DIRADDRESSBOOK_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_ECORESCURRENCYVALUE_CURRENCYCODE]...';


GO
ALTER TABLE [ax].[ECORESCURRENCYVALUE]
    ADD CONSTRAINT [DF_ECORESCURRENCYVALUE_CURRENCYCODE] DEFAULT ('') FOR [CURRENCYCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTZONE_ZONENAME]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTZONE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTZONE_ZONENAME] DEFAULT ('') FOR [ZONENAME];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTZONE_ZONETYPE]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTZONE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTZONE_ZONETYPE] DEFAULT ((0)) FOR [ZONETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTZONE_ZONEID]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTZONE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTZONE_ZONEID] DEFAULT ('') FOR [ZONEID];


GO
PRINT N'Creating [ax].[DF_RETAILTILLLAYOUTZONE_DEVICETYPE]...';


GO
ALTER TABLE [ax].[RETAILTILLLAYOUTZONE]
    ADD CONSTRAINT [DF_RETAILTILLLAYOUTZONE_DEVICETYPE] DEFAULT ((0)) FOR [DEVICETYPE];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENTINVENTSITE_BR_INVENTSITE]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENTINVENTSITE_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENTINVENTSITE_BR_INVENTSITE] DEFAULT ('') FOR [INVENTSITE];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENTINVENTSITE_BR_FISCALESTABLISHMENT_BR]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENTINVENTSITE_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENTINVENTSITE_BR_FISCALESTABLISHMENT_BR] DEFAULT ((0)) FOR [FISCALESTABLISHMENT_BR];


GO
PRINT N'Creating [ax].[DF_RETAILMIXANDMATCHLINEGROUPS_MIXANDMATCHID]...';


GO
ALTER TABLE [ax].[RETAILMIXANDMATCHLINEGROUPS]
    ADD CONSTRAINT [DF_RETAILMIXANDMATCHLINEGROUPS_MIXANDMATCHID] DEFAULT ('') FOR [MIXANDMATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILMIXANDMATCHLINEGROUPS_NUMBEROFITEMSNEEDED]...';


GO
ALTER TABLE [ax].[RETAILMIXANDMATCHLINEGROUPS]
    ADD CONSTRAINT [DF_RETAILMIXANDMATCHLINEGROUPS_NUMBEROFITEMSNEEDED] DEFAULT ((0)) FOR [NUMBEROFITEMSNEEDED];


GO
PRINT N'Creating [ax].[DF_RETAILMIXANDMATCHLINEGROUPS_DISCOUNTLINECOLORID]...';


GO
ALTER TABLE [ax].[RETAILMIXANDMATCHLINEGROUPS]
    ADD CONSTRAINT [DF_RETAILMIXANDMATCHLINEGROUPS_DISCOUNTLINECOLORID] DEFAULT ((0)) FOR [DISCOUNTLINECOLORID];


GO
PRINT N'Creating [ax].[DF_RETAILMIXANDMATCHLINEGROUPS_MIXANDMATCHLINEGROUP]...';


GO
ALTER TABLE [ax].[RETAILMIXANDMATCHLINEGROUPS]
    ADD CONSTRAINT [DF_RETAILMIXANDMATCHLINEGROUPS_MIXANDMATCHLINEGROUP] DEFAULT ('') FOR [MIXANDMATCHLINEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILTAXFILTERS_STATEID]...';


GO
ALTER TABLE [ax].[RETAILTAXFILTERS]
    ADD CONSTRAINT [DF_RETAILTAXFILTERS_STATEID] DEFAULT ('') FOR [STATEID];


GO
PRINT N'Creating [ax].[DF_RETAILTAXFILTERS_TAXGROUPHEADING]...';


GO
ALTER TABLE [ax].[RETAILTAXFILTERS]
    ADD CONSTRAINT [DF_RETAILTAXFILTERS_TAXGROUPHEADING] DEFAULT ('') FOR [TAXGROUPHEADING];


GO
PRINT N'Creating [ax].[DF_RETAILTAXFILTERS_DISTRICT]...';


GO
ALTER TABLE [ax].[RETAILTAXFILTERS]
    ADD CONSTRAINT [DF_RETAILTAXFILTERS_DISTRICT] DEFAULT ((0)) FOR [DISTRICT];


GO
PRINT N'Creating [ax].[DF_RETAILTAXFILTERS_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[RETAILTAXFILTERS]
    ADD CONSTRAINT [DF_RETAILTAXFILTERS_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTAXFILTERS_COUNTYID]...';


GO
ALTER TABLE [ax].[RETAILTAXFILTERS]
    ADD CONSTRAINT [DF_RETAILTAXFILTERS_COUNTYID] DEFAULT ('') FOR [COUNTYID];


GO
PRINT N'Creating [ax].[DF_RETAILTAXFILTERS_ZIPCODE]...';


GO
ALTER TABLE [ax].[RETAILTAXFILTERS]
    ADD CONSTRAINT [DF_RETAILTAXFILTERS_ZIPCODE] DEFAULT ((0)) FOR [ZIPCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTAXFILTERS_CITY]...';


GO
ALTER TABLE [ax].[RETAILTAXFILTERS]
    ADD CONSTRAINT [DF_RETAILTAXFILTERS_CITY] DEFAULT ((0)) FOR [CITY];


GO
PRINT N'Creating [ax].[DF_LANGUAGETABLE_USERDEFINEDLANGUAGE]...';


GO
ALTER TABLE [ax].[LANGUAGETABLE]
    ADD CONSTRAINT [DF_LANGUAGETABLE_USERDEFINEDLANGUAGE] DEFAULT ((0)) FOR [USERDEFINEDLANGUAGE];


GO
PRINT N'Creating [ax].[DF_LANGUAGETABLE_LABELFILE]...';


GO
ALTER TABLE [ax].[LANGUAGETABLE]
    ADD CONSTRAINT [DF_LANGUAGETABLE_LABELFILE] DEFAULT ((0)) FOR [LABELFILE];


GO
PRINT N'Creating [ax].[DF_LANGUAGETABLE_LANGUAGEID]...';


GO
ALTER TABLE [ax].[LANGUAGETABLE]
    ADD CONSTRAINT [DF_LANGUAGETABLE_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALCOUNTER_STORE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALCOUNTER]
    ADD CONSTRAINT [DF_RETAILTERMINALCOUNTER_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALCOUNTER_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILTERMINALCOUNTER]
    ADD CONSTRAINT [DF_RETAILTERMINALCOUNTER_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALCOUNTER_COUNTERTYPE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALCOUNTER]
    ADD CONSTRAINT [DF_RETAILTERMINALCOUNTER_COUNTERTYPE] DEFAULT ((0)) FOR [COUNTERTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTERMINALCOUNTER_COUNTERVALUE]...';


GO
ALTER TABLE [ax].[RETAILTERMINALCOUNTER]
    ADD CONSTRAINT [DF_RETAILTERMINALCOUNTER_COUNTERVALUE] DEFAULT ((0)) FOR [COUNTERVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILKITVARIANTCOMPONENT_KITVARIANT]...';


GO
ALTER TABLE [ax].[RETAILKITVARIANTCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITVARIANTCOMPONENT_KITVARIANT] DEFAULT ((0)) FOR [KITVARIANT];


GO
PRINT N'Creating [ax].[DF_RETAILKITVARIANTCOMPONENT_UNITOFMEASURE]...';


GO
ALTER TABLE [ax].[RETAILKITVARIANTCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITVARIANTCOMPONENT_UNITOFMEASURE] DEFAULT ((0)) FOR [UNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_RETAILKITVARIANTCOMPONENT_COMPONENT]...';


GO
ALTER TABLE [ax].[RETAILKITVARIANTCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITVARIANTCOMPONENT_COMPONENT] DEFAULT ((0)) FOR [COMPONENT];


GO
PRINT N'Creating [ax].[DF_RETAILKITVARIANTCOMPONENT_QUANTITY]...';


GO
ALTER TABLE [ax].[RETAILKITVARIANTCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITVARIANTCOMPONENT_QUANTITY] DEFAULT ((0)) FOR [QUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILKITVARIANTCOMPONENT_COMPONENTRECID]...';


GO
ALTER TABLE [ax].[RETAILKITVARIANTCOMPONENT]
    ADD CONSTRAINT [DF_RETAILKITVARIANTCOMPONENT_COMPONENTRECID] DEFAULT ((0)) FOR [COMPONENTRECID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMSALESSETUP_MANDATORYINVENTLOCATION]...';


GO
ALTER TABLE [ax].[INVENTITEMSALESSETUP]
    ADD CONSTRAINT [DF_INVENTITEMSALESSETUP_MANDATORYINVENTLOCATION] DEFAULT ((0)) FOR [MANDATORYINVENTLOCATION];


GO
PRINT N'Creating [ax].[DF_INVENTITEMSALESSETUP_INVENTDIMID]...';


GO
ALTER TABLE [ax].[INVENTITEMSALESSETUP]
    ADD CONSTRAINT [DF_INVENTITEMSALESSETUP_INVENTDIMID] DEFAULT ('') FOR [INVENTDIMID];


GO
PRINT N'Creating [ax].[DF_INVENTITEMSALESSETUP_MANDATORYINVENTSITE]...';


GO
ALTER TABLE [ax].[INVENTITEMSALESSETUP]
    ADD CONSTRAINT [DF_INVENTITEMSALESSETUP_MANDATORYINVENTSITE] DEFAULT ((0)) FOR [MANDATORYINVENTSITE];


GO
PRINT N'Creating [ax].[DF_INVENTITEMSALESSETUP_INVENTDIMIDDEFAULT]...';


GO
ALTER TABLE [ax].[INVENTITEMSALESSETUP]
    ADD CONSTRAINT [DF_INVENTITEMSALESSETUP_INVENTDIMIDDEFAULT] DEFAULT ('') FOR [INVENTDIMIDDEFAULT];


GO
PRINT N'Creating [ax].[DF_INVENTITEMSALESSETUP_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTITEMSALESSETUP]
    ADD CONSTRAINT [DF_INVENTITEMSALESSETUP_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTPROFILE_PROFILEID]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTPROFILE]
    ADD CONSTRAINT [DF_RETAILRECEIPTPROFILE_PROFILEID] DEFAULT ('') FOR [PROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTPROFILE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTPROFILE]
    ADD CONSTRAINT [DF_RETAILRECEIPTPROFILE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILKITRELEASEDSUBSTITUTECHARGE_SUBSTITUTECHARGE]...';


GO
ALTER TABLE [ax].[RETAILKITRELEASEDSUBSTITUTECHARGE]
    ADD CONSTRAINT [DF_RETAILKITRELEASEDSUBSTITUTECHARGE_SUBSTITUTECHARGE] DEFAULT ((0)) FOR [SUBSTITUTECHARGE];


GO
PRINT N'Creating [ax].[DF_RETAILKITRELEASEDSUBSTITUTECHARGE_KITCOMPONENTSUBSTITUTE]...';


GO
ALTER TABLE [ax].[RETAILKITRELEASEDSUBSTITUTECHARGE]
    ADD CONSTRAINT [DF_RETAILKITRELEASEDSUBSTITUTECHARGE_KITCOMPONENTSUBSTITUTE] DEFAULT ((0)) FOR [KITCOMPONENTSUBSTITUTE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSSEEDDATA_DATAVALUE]...';


GO
ALTER TABLE [ax].[RETAILPOSSEEDDATA]
    ADD CONSTRAINT [DF_RETAILPOSSEEDDATA_DATAVALUE] DEFAULT ((0)) FOR [DATAVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSSEEDDATA_DATATYPE]...';


GO
ALTER TABLE [ax].[RETAILPOSSEEDDATA]
    ADD CONSTRAINT [DF_RETAILPOSSEEDDATA_DATATYPE] DEFAULT ((0)) FOR [DATATYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSSEEDDATA_STORENUMBER]...';


GO
ALTER TABLE [ax].[RETAILPOSSEEDDATA]
    ADD CONSTRAINT [DF_RETAILPOSSEEDDATA_STORENUMBER] DEFAULT ('') FOR [STORENUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILPOSSEEDDATA_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILPOSSEEDDATA]
    ADD CONSTRAINT [DF_RETAILPOSSEEDDATA_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_TAXDATA_TAXTODATE]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_TAXTODATE] DEFAULT ('1900-01-01') FOR [TAXTODATE];


GO
PRINT N'Creating [ax].[DF_TAXDATA_SALESTAXFORMTYPES_IN]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_SALESTAXFORMTYPES_IN] DEFAULT ((0)) FOR [SALESTAXFORMTYPES_IN];


GO
PRINT N'Creating [ax].[DF_TAXDATA_TAXREDUCTIONPCT_BR]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_TAXREDUCTIONPCT_BR] DEFAULT ((0)) FOR [TAXREDUCTIONPCT_BR];


GO
PRINT N'Creating [ax].[DF_TAXDATA_TAXVALUE]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_TAXVALUE] DEFAULT ((0)) FOR [TAXVALUE];


GO
PRINT N'Creating [ax].[DF_TAXDATA_TAXCODE]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_TAXDATA_TAXLIMITMAX]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_TAXLIMITMAX] DEFAULT ((0)) FOR [TAXLIMITMAX];


GO
PRINT N'Creating [ax].[DF_TAXDATA_VATEXEMPTPCT]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_VATEXEMPTPCT] DEFAULT ((0)) FOR [VATEXEMPTPCT];


GO
PRINT N'Creating [ax].[DF_TAXDATA_TAXFROMDATE]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_TAXFROMDATE] DEFAULT ('1900-01-01') FOR [TAXFROMDATE];


GO
PRINT N'Creating [ax].[DF_TAXDATA_TAXLIMITMIN]...';


GO
ALTER TABLE [ax].[TAXDATA]
    ADD CONSTRAINT [DF_TAXDATA_TAXLIMITMIN] DEFAULT ((0)) FOR [TAXLIMITMIN];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTMASKS_ISINDEPENDENT]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTMASKS]
    ADD CONSTRAINT [DF_RETAILRECEIPTMASKS_ISINDEPENDENT] DEFAULT ((0)) FOR [ISINDEPENDENT];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTMASKS_RECEIPTTRANSTYPE]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTMASKS]
    ADD CONSTRAINT [DF_RETAILRECEIPTMASKS_RECEIPTTRANSTYPE] DEFAULT ((0)) FOR [RECEIPTTRANSTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTMASKS_FUNCPROFILEID]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTMASKS]
    ADD CONSTRAINT [DF_RETAILRECEIPTMASKS_FUNCPROFILEID] DEFAULT ('') FOR [FUNCPROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILRECEIPTMASKS_MASK]...';


GO
ALTER TABLE [ax].[RETAILRECEIPTMASKS]
    ADD CONSTRAINT [DF_RETAILRECEIPTMASKS_MASK] DEFAULT ('') FOR [MASK];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_CREATEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_CREATEDTRANSACTIONID] DEFAULT ((0)) FOR [CREATEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_LOYALTYTIER]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_LOYALTYTIER] DEFAULT ((0)) FOR [LOYALTYTIER];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_MODIFIEDTRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_MODIFIEDTRANSACTIONID] DEFAULT ((0)) FOR [MODIFIEDTRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_AFFILIATION]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_AFFILIATION] DEFAULT ((0)) FOR [AFFILIATION];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_STAFFID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_STAFFID] DEFAULT ('') FOR [STAFFID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONAFFILIATIONTRANS_RECEIPTID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONAFFILIATIONTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONAFFILIATIONTRANS_RECEIPTID] DEFAULT ('') FOR [RECEIPTID];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETRANSLATION_FRIENDLYNAME]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETRANSLATION]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETRANSLATION_FRIENDLYNAME] DEFAULT ('') FOR [FRIENDLYNAME];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETRANSLATION]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETRANSLATION_LANGUAGE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETRANSLATION]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETRANSLATION_LANGUAGE] DEFAULT ('') FOR [LANGUAGE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETRANSLATION_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETRANSLATION]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETRANSLATION_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETRANSLATION_HELPTEXT]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETRANSLATION]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETRANSLATION_HELPTEXT] DEFAULT ('') FOR [HELPTEXT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTRELATION_CATALOGPRODUCT]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTRELATION_CATALOGPRODUCT] DEFAULT ((0)) FOR [CATALOGPRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTRELATION_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTRELATION_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTRELATION_PRODUCTRELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTRELATION_PRODUCTRELATIONTYPE] DEFAULT ((0)) FOR [PRODUCTRELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCTRELATION_RELATEDPRODUCT]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCTRELATION_RELATEDPRODUCT] DEFAULT ((0)) FOR [RELATEDPRODUCT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_PRODGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_PRODGROUPID] DEFAULT ('') FOR [PRODGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_WIDTH]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_WIDTH] DEFAULT ((0)) FOR [WIDTH];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_DEPTH]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_DEPTH] DEFAULT ((0)) FOR [DEPTH];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_TAXFISCALCLASSIFICATION_BR]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_TAXFISCALCLASSIFICATION_BR] DEFAULT ('') FOR [TAXFISCALCLASSIFICATION_BR];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_NETWEIGHT]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_NETWEIGHT] DEFAULT ((0)) FOR [NETWEIGHT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_COSTMODEL]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_COSTMODEL] DEFAULT ((0)) FOR [COSTMODEL];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_UNITVOLUME]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_UNITVOLUME] DEFAULT ((0)) FOR [UNITVOLUME];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_TARAWEIGHT]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_TARAWEIGHT] DEFAULT ((0)) FOR [TARAWEIGHT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ITEMTYPE]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ITEMTYPE] DEFAULT ((0)) FOR [ITEMTYPE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_APPROXTAXVALUE_BR]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_APPROXTAXVALUE_BR] DEFAULT ((0)) FOR [APPROXTAXVALUE_BR];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ABCVALUE]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ABCVALUE] DEFAULT ((0)) FOR [ABCVALUE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_SERIALNUMGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_SERIALNUMGROUPID] DEFAULT ('') FOR [SERIALNUMGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_SALESPERCENTMARKUP]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_SALESPERCENTMARKUP] DEFAULT ((0)) FOR [SALESPERCENTMARKUP];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ITEMBUYERGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ITEMBUYERGROUPID] DEFAULT ('') FOR [ITEMBUYERGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_SALESCONTRIBUTIONRATIO]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_SALESCONTRIBUTIONRATIO] DEFAULT ((0)) FOR [SALESCONTRIBUTIONRATIO];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ABCREVENUE]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ABCREVENUE] DEFAULT ((0)) FOR [ABCREVENUE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_HEIGHT]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_HEIGHT] DEFAULT ((0)) FOR [HEIGHT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_GROSSHEIGHT]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_GROSSHEIGHT] DEFAULT ((0)) FOR [GROSSHEIGHT];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ITEMID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_PURCHMODEL]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_PURCHMODEL] DEFAULT ((0)) FOR [PURCHMODEL];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_EXCEPTIONCODE_BR]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_EXCEPTIONCODE_BR] DEFAULT ('') FOR [EXCEPTIONCODE_BR];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_PROJCATEGORYID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_PROJCATEGORYID] DEFAULT ('') FOR [PROJCATEGORYID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_USEALTITEMID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_USEALTITEMID] DEFAULT ((0)) FOR [USEALTITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_DENSITY]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_DENSITY] DEFAULT ((0)) FOR [DENSITY];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_PRODPOOLID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_PRODPOOLID] DEFAULT ('') FOR [PRODPOOLID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_WMSPICKINGQTYTIME]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_WMSPICKINGQTYTIME] DEFAULT ((0)) FOR [WMSPICKINGQTYTIME];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_BATCHNUMGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_BATCHNUMGROUPID] DEFAULT ('') FOR [BATCHNUMGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_TAXSERVICECODE_BR]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_TAXSERVICECODE_BR] DEFAULT ('') FOR [TAXSERVICECODE_BR];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_PRIMARYVENDORID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_PRIMARYVENDORID] DEFAULT ('') FOR [PRIMARYVENDORID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_TAXATIONORIGIN_BR]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_TAXATIONORIGIN_BR] DEFAULT ((0)) FOR [TAXATIONORIGIN_BR];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_NAMEALIAS]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_NAMEALIAS] DEFAULT ('') FOR [NAMEALIAS];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ITEMDIMCOSTPRICE]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ITEMDIMCOSTPRICE] DEFAULT ((0)) FOR [ITEMDIMCOSTPRICE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_SORTCODE]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_SORTCODE] DEFAULT ((0)) FOR [SORTCODE];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ALTITEMID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ALTITEMID] DEFAULT ('') FOR [ALTITEMID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_SALESMODEL]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_SALESMODEL] DEFAULT ((0)) FOR [SALESMODEL];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_INVENTPRODUCTTYPE_BR]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_INVENTPRODUCTTYPE_BR] DEFAULT ('') FOR [INVENTPRODUCTTYPE_BR];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ABCTIEUP]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ABCTIEUP] DEFAULT ((0)) FOR [ABCTIEUP];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_SALESPRICEMODELBASIC]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_SALESPRICEMODELBASIC] DEFAULT ((0)) FOR [SALESPRICEMODELBASIC];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_ABCCONTRIBUTIONMARGIN]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_ABCCONTRIBUTIONMARGIN] DEFAULT ((0)) FOR [ABCCONTRIBUTIONMARGIN];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_REQGROUPID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_REQGROUPID] DEFAULT ('') FOR [REQGROUPID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_GROSSWIDTH]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_GROSSWIDTH] DEFAULT ((0)) FOR [GROSSWIDTH];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_PROPERTYID]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_PROPERTYID] DEFAULT ('') FOR [PROPERTYID];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_GROSSDEPTH]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_GROSSDEPTH] DEFAULT ((0)) FOR [GROSSDEPTH];


GO
PRINT N'Creating [ax].[DF_INVENTTABLE_PRODUCT]...';


GO
ALTER TABLE [ax].[INVENTTABLE]
    ADD CONSTRAINT [DF_INVENTTABLE_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_ELEMENT]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_ELEMENT] DEFAULT ((0)) FOR [ELEMENT];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_SEPARATOR]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_SEPARATOR] DEFAULT ('') FOR [SEPARATOR];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_INACTIVE]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_INACTIVE] DEFAULT ((0)) FOR [INACTIVE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_DATAENTRYONLY]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_DATAENTRYONLY] DEFAULT ((0)) FOR [DATAENTRYONLY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_SPECIAL]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_SPECIAL] DEFAULT ((0)) FOR [SPECIAL];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_NUMOFSPACES]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_NUMOFSPACES] DEFAULT ((0)) FOR [NUMOFSPACES];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_EXPAND]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_EXPAND] DEFAULT ((0)) FOR [EXPAND];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_ADDRFORMAT]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_ADDRFORMAT] DEFAULT ('') FOR [ADDRFORMAT];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_SEPARATORCRLF]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_SEPARATORCRLF] DEFAULT ((0)) FOR [SEPARATORCRLF];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSFORMATLINES_LINENUM]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSFORMATLINES]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSFORMATLINES_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORYTRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORYTRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORYTRANSLATION_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORYTRANSLATION_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORYTRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORYTRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORYTRANSLATION_ORIGINID]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORYTRANSLATION_ORIGINID] DEFAULT ((0)) FOR [ORIGINID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORYTRANSLATION_SEARCHTEXT]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORYTRANSLATION_SEARCHTEXT] DEFAULT ('') FOR [SEARCHTEXT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORYTRANSLATION_FRIENDLYNAME]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORYTRANSLATION_FRIENDLYNAME] DEFAULT ('') FOR [FRIENDLYNAME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBECORESCATEGORYTRANSLATION_CATEGORY]...';


GO
ALTER TABLE [ax].[RETAILPUBECORESCATEGORYTRANSLATION]
    ADD CONSTRAINT [DF_RETAILPUBECORESCATEGORYTRANSLATION_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTTHRESHOLDTIERS_DISCOUNTVALUE]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTTHRESHOLDTIERS]
    ADD CONSTRAINT [DF_RETAILDISCOUNTTHRESHOLDTIERS_DISCOUNTVALUE] DEFAULT ((0)) FOR [DISCOUNTVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTTHRESHOLDTIERS_AMOUNTTHRESHOLD]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTTHRESHOLDTIERS]
    ADD CONSTRAINT [DF_RETAILDISCOUNTTHRESHOLDTIERS_AMOUNTTHRESHOLD] DEFAULT ((0)) FOR [AMOUNTTHRESHOLD];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTTHRESHOLDTIERS_OFFERID]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTTHRESHOLDTIERS]
    ADD CONSTRAINT [DF_RETAILDISCOUNTTHRESHOLDTIERS_OFFERID] DEFAULT ('') FOR [OFFERID];


GO
PRINT N'Creating [ax].[DF_RETAILDISCOUNTTHRESHOLDTIERS_DISCOUNTMETHOD]...';


GO
ALTER TABLE [ax].[RETAILDISCOUNTTHRESHOLDTIERS]
    ADD CONSTRAINT [DF_RETAILDISCOUNTTHRESHOLDTIERS_DISCOUNTMETHOD] DEFAULT ((0)) FOR [DISCOUNTMETHOD];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDEGROUP_CODE]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDEGROUP]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDEGROUP_CODE] DEFAULT ('') FOR [CODE];


GO
PRINT N'Creating [ax].[DF_RETAILSALESTAXOVERRIDEGROUP_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILSALESTAXOVERRIDEGROUP]
    ADD CONSTRAINT [DF_RETAILSALESTAXOVERRIDEGROUP_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAPRODUCTRELATION_PRODUCT]...';


GO
ALTER TABLE [ax].[RETAILMEDIAPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAPRODUCTRELATION_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAPRODUCTRELATION_ISDEFAULT]...';


GO
ALTER TABLE [ax].[RETAILMEDIAPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAPRODUCTRELATION_ISDEFAULT] DEFAULT ((0)) FOR [ISDEFAULT];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAPRODUCTRELATION_MEDIARESOURCE]...';


GO
ALTER TABLE [ax].[RETAILMEDIAPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAPRODUCTRELATION_MEDIARESOURCE] DEFAULT ((0)) FOR [MEDIARESOURCE];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAPRODUCTRELATION_INTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILMEDIAPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAPRODUCTRELATION_INTERNALORGANIZATION] DEFAULT ((0)) FOR [INTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAPRODUCTRELATION_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILMEDIAPRODUCTRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAPRODUCTRELATION_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_PLFISCALTAXTABLE_TAXCODE]...';


GO
ALTER TABLE [ax].[PLFISCALTAXTABLE]
    ADD CONSTRAINT [DF_PLFISCALTAXTABLE_TAXCODE] DEFAULT ('') FOR [TAXCODE];


GO
PRINT N'Creating [ax].[DF_PLFISCALTAXTABLE_FISCALTAXCODE]...';


GO
ALTER TABLE [ax].[PLFISCALTAXTABLE]
    ADD CONSTRAINT [DF_PLFISCALTAXTABLE_FISCALTAXCODE] DEFAULT ((0)) FOR [FISCALTAXCODE];


GO
PRINT N'Creating [ax].[DF_PLFISCALTAXTABLE_FISCALPRINTERCODE]...';


GO
ALTER TABLE [ax].[PLFISCALTAXTABLE]
    ADD CONSTRAINT [DF_PLFISCALTAXTABLE_FISCALPRINTERCODE] DEFAULT ('') FOR [FISCALPRINTERCODE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_PRICEINCLUDESSALESTAX]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_PRICEINCLUDESSALESTAX] DEFAULT ((0)) FOR [PRICEINCLUDESSALESTAX];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_INVENTLOCATION]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_INVENTLOCATION] DEFAULT ('') FOR [INVENTLOCATION];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_CHANNELTIMEZONEINFOID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_CHANNELTIMEZONEINFOID] DEFAULT ('') FOR [CHANNELTIMEZONEINFOID];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_TRANSACTIONSERVICEPROFILE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_TRANSACTIONSERVICEPROFILE] DEFAULT ('') FOR [TRANSACTIONSERVICEPROFILE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_DEFAULTCUSTDATAAREAID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_DEFAULTCUSTDATAAREAID] DEFAULT ('') FOR [DEFAULTCUSTDATAAREAID];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_CHANNELTYPE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_CHANNELTYPE] DEFAULT ((0)) FOR [CHANNELTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_INVENTLOCATIONDATAAREAID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_INVENTLOCATIONDATAAREAID] DEFAULT ('') FOR [INVENTLOCATIONDATAAREAID];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_EVENTNOTIFICATIONPROFILEID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_EVENTNOTIFICATIONPROFILEID] DEFAULT ('') FOR [EVENTNOTIFICATIONPROFILEID];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_DISPLAYTAXPERTAXCOMPONENT]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_DISPLAYTAXPERTAXCOMPONENT] DEFAULT ((0)) FOR [DISPLAYTAXPERTAXCOMPONENT];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_OMOPERATINGUNITID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_OMOPERATINGUNITID] DEFAULT ((0)) FOR [OMOPERATINGUNITID];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_CHANNELTIMEZONE]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_CHANNELTIMEZONE] DEFAULT ((0)) FOR [CHANNELTIMEZONE];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_DEFAULTCUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_DEFAULTCUSTACCOUNT] DEFAULT ('') FOR [DEFAULTCUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILCHANNELTABLE_RETAILCHANNELID]...';


GO
ALTER TABLE [ax].[RETAILCHANNELTABLE]
    ADD CONSTRAINT [DF_RETAILCHANNELTABLE_RETAILCHANNELID] DEFAULT ('') FOR [RETAILCHANNELID];


GO
PRINT N'Creating [ax].[DF_DIRADDRESSBOOKPARTY_ADDRESSBOOK]...';


GO
ALTER TABLE [ax].[DIRADDRESSBOOKPARTY]
    ADD CONSTRAINT [DF_DIRADDRESSBOOKPARTY_ADDRESSBOOK] DEFAULT ((0)) FOR [ADDRESSBOOK];


GO
PRINT N'Creating [ax].[DF_DIRADDRESSBOOKPARTY_PARTY]...';


GO
ALTER TABLE [ax].[DIRADDRESSBOOKPARTY]
    ADD CONSTRAINT [DF_DIRADDRESSBOOKPARTY_PARTY] DEFAULT ((0)) FOR [PARTY];


GO
PRINT N'Creating [ax].[DF_INVENTSITELOGISTICSLOCATIONROLE_SITELOGISTICSLOCATION]...';


GO
ALTER TABLE [ax].[INVENTSITELOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_INVENTSITELOGISTICSLOCATIONROLE_SITELOGISTICSLOCATION] DEFAULT ((0)) FOR [SITELOGISTICSLOCATION];


GO
PRINT N'Creating [ax].[DF_INVENTSITELOGISTICSLOCATIONROLE_LOCATIONROLE]...';


GO
ALTER TABLE [ax].[INVENTSITELOGISTICSLOCATIONROLE]
    ADD CONSTRAINT [DF_INVENTSITELOGISTICSLOCATIONROLE_LOCATIONROLE] DEFAULT ((0)) FOR [LOCATIONROLE];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREADDRESSBOOK_ADDRESSBOOK]...';


GO
ALTER TABLE [ax].[RETAILSTOREADDRESSBOOK]
    ADD CONSTRAINT [DF_RETAILSTOREADDRESSBOOK_ADDRESSBOOK] DEFAULT ((0)) FOR [ADDRESSBOOK];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREADDRESSBOOK_STORERECID]...';


GO
ALTER TABLE [ax].[RETAILSTOREADDRESSBOOK]
    ADD CONSTRAINT [DF_RETAILSTOREADDRESSBOOK_STORERECID] DEFAULT ((0)) FOR [STORERECID];


GO
PRINT N'Creating [ax].[DF_RETAILSTOREADDRESSBOOK_ADDRESSBOOKTYPE]...';


GO
ALTER TABLE [ax].[RETAILSTOREADDRESSBOOK]
    ADD CONSTRAINT [DF_RETAILSTOREADDRESSBOOK_ADDRESSBOOKTYPE] DEFAULT ((0)) FOR [ADDRESSBOOKTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTANDARDATTRIBUTE_ATTRIBUTE]...';


GO
ALTER TABLE [ax].[RETAILSTANDARDATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILSTANDARDATTRIBUTE_ATTRIBUTE] DEFAULT ((0)) FOR [ATTRIBUTE];


GO
PRINT N'Creating [ax].[DF_RETAILSTANDARDATTRIBUTE_STANDARDATTRIBUTEID]...';


GO
ALTER TABLE [ax].[RETAILSTANDARDATTRIBUTE]
    ADD CONSTRAINT [DF_RETAILSTANDARDATTRIBUTE_STANDARDATTRIBUTEID] DEFAULT ((0)) FOR [STANDARDATTRIBUTEID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_CREDITDEBITRECEIPTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_CREDITDEBITRECEIPTNUMBER] DEFAULT ((0)) FOR [CREDITDEBITRECEIPTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_REPORTDATETIME]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_REPORTDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [REPORTDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_RECEIPTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_RECEIPTNUMBER] DEFAULT ((0)) FOR [RECEIPTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_ADDITIONALFISCALMEMORYINDEX]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_ADDITIONALFISCALMEMORYINDEX] DEFAULT ((0)) FOR [ADDITIONALFISCALMEMORYINDEX];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_NONFISCALOPERATIONNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_NONFISCALOPERATIONNUMBER] DEFAULT ((0)) FOR [NONFISCALOPERATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_RESTARTOPERATIONNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_RESTARTOPERATIONNUMBER] DEFAULT ((0)) FOR [RESTARTOPERATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_REPORTTYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_REPORTTYPE] DEFAULT ('') FOR [REPORTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_TRANSACTIONDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_TRANSACTIONDATETIMETZID] DEFAULT ((37001)) FOR [TRANSACTIONDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_MANAGEMENTREPORTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_MANAGEMENTREPORTNUMBER] DEFAULT ((0)) FOR [MANAGEMENTREPORTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_FISCALPRINTERSERIALNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_FISCALPRINTERSERIALNUMBER] DEFAULT ('') FOR [FISCALPRINTERSERIALNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_REPORTDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_REPORTDATETIMETZID] DEFAULT ((37001)) FOR [REPORTDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_TRANSACTIONDATETIME]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_TRANSACTIONDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [TRANSACTIONDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALPRINTERREPORT_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALPRINTERREPORT_BR]
    ADD CONSTRAINT [DF_RETAILFISCALPRINTERREPORT_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILSTORELOCATORGROUP_NAME]...';


GO
ALTER TABLE [ax].[RETAILSTORELOCATORGROUP]
    ADD CONSTRAINT [DF_RETAILSTORELOCATORGROUP_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILSTORELOCATORGROUP_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILSTORELOCATORGROUP]
    ADD CONSTRAINT [DF_RETAILSTORELOCATORGROUP_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAANDMASTERENTITYRELATION_ISDEFAULT]...';


GO
ALTER TABLE [ax].[RETAILMEDIAANDMASTERENTITYRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAANDMASTERENTITYRELATION_ISDEFAULT] DEFAULT ((0)) FOR [ISDEFAULT];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAANDMASTERENTITYRELATION_MEDIARESOURCEID]...';


GO
ALTER TABLE [ax].[RETAILMEDIAANDMASTERENTITYRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAANDMASTERENTITYRELATION_MEDIARESOURCEID] DEFAULT ((0)) FOR [MEDIARESOURCEID];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAANDMASTERENTITYRELATION_MASTERENTITYRECID]...';


GO
ALTER TABLE [ax].[RETAILMEDIAANDMASTERENTITYRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAANDMASTERENTITYRELATION_MASTERENTITYRECID] DEFAULT ((0)) FOR [MASTERENTITYRECID];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIAANDMASTERENTITYRELATION_MASTERENTITYTYPE]...';


GO
ALTER TABLE [ax].[RETAILMEDIAANDMASTERENTITYRELATION]
    ADD CONSTRAINT [DF_RETAILMEDIAANDMASTERENTITYRELATION_MASTERENTITYTYPE] DEFAULT ((0)) FOR [MASTERENTITYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUP_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUP_VALIDFROM] DEFAULT ('1900-01-01') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUP_PRODUCTID]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUP_PRODUCTID] DEFAULT ((0)) FOR [PRODUCTID];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUP_ASSORTMENTID]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUP_ASSORTMENTID] DEFAULT ((0)) FOR [ASSORTMENTID];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUP_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUP_VALIDTO] DEFAULT ('1900-01-01') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUP_LINETYPE]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUP_LINETYPE] DEFAULT ((0)) FOR [LINETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUP_VARIANTID]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUP_VARIANTID] DEFAULT ((0)) FOR [VARIANTID];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUP_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUP_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIATEMPLATE_IMAGEINDEX]...';


GO
ALTER TABLE [ax].[RETAILMEDIATEMPLATE]
    ADD CONSTRAINT [DF_RETAILMEDIATEMPLATE_IMAGEINDEX] DEFAULT ((0)) FOR [IMAGEINDEX];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIATEMPLATE_MASTERENTITYTYPE]...';


GO
ALTER TABLE [ax].[RETAILMEDIATEMPLATE]
    ADD CONSTRAINT [DF_RETAILMEDIATEMPLATE_MASTERENTITYTYPE] DEFAULT ((0)) FOR [MASTERENTITYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILMEDIATEMPLATE_ISDEFAULT]...';


GO
ALTER TABLE [ax].[RETAILMEDIATEMPLATE]
    ADD CONSTRAINT [DF_RETAILMEDIATEMPLATE_ISDEFAULT] DEFAULT ((0)) FOR [ISDEFAULT];


GO
PRINT N'Creating [ax].[DF_RETURNREASONCODEGROUP_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETURNREASONCODEGROUP]
    ADD CONSTRAINT [DF_RETURNREASONCODEGROUP_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETURNREASONCODEGROUP_REASONCODEGROUPID]...';


GO
ALTER TABLE [ax].[RETURNREASONCODEGROUP]
    ADD CONSTRAINT [DF_RETURNREASONCODEGROUP_REASONCODEGROUPID] DEFAULT ('') FOR [REASONCODEGROUPID];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODECHANNELEXPLODED_OMOPERATINGUNIT]...';


GO
ALTER TABLE [ax].[RETAILDLVMODECHANNELEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODECHANNELEXPLODED_OMOPERATINGUNIT] DEFAULT ((0)) FOR [OMOPERATINGUNIT];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODECHANNELEXPLODED_DLVMODE]...';


GO
ALTER TABLE [ax].[RETAILDLVMODECHANNELEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODECHANNELEXPLODED_DLVMODE] DEFAULT ((0)) FOR [DLVMODE];


GO
PRINT N'Creating [ax].[DF_RETAILGROUPMEMBERLINE_PRODUCT]...';


GO
ALTER TABLE [ax].[RETAILGROUPMEMBERLINE]
    ADD CONSTRAINT [DF_RETAILGROUPMEMBERLINE_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILGROUPMEMBERLINE_CATEGORY]...';


GO
ALTER TABLE [ax].[RETAILGROUPMEMBERLINE]
    ADD CONSTRAINT [DF_RETAILGROUPMEMBERLINE_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILGROUPMEMBERLINE_VARIANT]...';


GO
ALTER TABLE [ax].[RETAILGROUPMEMBERLINE]
    ADD CONSTRAINT [DF_RETAILGROUPMEMBERLINE_VARIANT] DEFAULT ((0)) FOR [VARIANT];


GO
PRINT N'Creating [ax].[DF_EFDRETURNCODE_BR_STATUS]...';


GO
ALTER TABLE [ax].[EFDRETURNCODE_BR]
    ADD CONSTRAINT [DF_EFDRETURNCODE_BR_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_EFDRETURNCODE_BR_DESCRIPTION]...';


GO
ALTER TABLE [ax].[EFDRETURNCODE_BR]
    ADD CONSTRAINT [DF_EFDRETURNCODE_BR_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_EFDRETURNCODE_BR_MESSAGETYPE]...';


GO
ALTER TABLE [ax].[EFDRETURNCODE_BR]
    ADD CONSTRAINT [DF_EFDRETURNCODE_BR_MESSAGETYPE] DEFAULT ((0)) FOR [MESSAGETYPE];


GO
PRINT N'Creating [ax].[DF_EFDRETURNCODE_BR_RETURNCODE]...';


GO
ALTER TABLE [ax].[EFDRETURNCODE_BR]
    ADD CONSTRAINT [DF_EFDRETURNCODE_BR_RETURNCODE] DEFAULT ('') FOR [RETURNCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_MANUALDISCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_MANUALDISCOUNTTYPE] DEFAULT ((0)) FOR [MANUALDISCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_DEALPRICE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_DEALPRICE] DEFAULT ((0)) FOR [DEALPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_STOREID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_PERCENTAGE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_PERCENTAGE] DEFAULT ((0)) FOR [PERCENTAGE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTAMOUNT] DEFAULT ((0)) FOR [DISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTCODE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTCODE] DEFAULT ('') FOR [DISCOUNTCODE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_AMOUNT]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_AMOUNT] DEFAULT ((0)) FOR [AMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_PERIODICDISCOUNTOFFERID]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_PERIODICDISCOUNTOFFERID] DEFAULT ('') FOR [PERIODICDISCOUNTOFFERID];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_CUSTOMERDISCOUNTTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_CUSTOMERDISCOUNTTYPE] DEFAULT ((0)) FOR [CUSTOMERDISCOUNTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_SALELINENUM]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_SALELINENUM] DEFAULT ((0)) FOR [SALELINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTORIGINTYPE]...';


GO
ALTER TABLE [ax].[RETAILTRANSACTIONDISCOUNTTRANS]
    ADD CONSTRAINT [DF_RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTORIGINTYPE] DEFAULT ((0)) FOR [DISCOUNTORIGINTYPE];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORK_PUBLISHER]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORK]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORK_PUBLISHER] DEFAULT ('') FOR [PUBLISHER];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORK_NAME]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORK]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORK_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORK_FRAMEWORKID]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORK]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORK_FRAMEWORKID] DEFAULT ('') FOR [FRAMEWORKID];


GO
PRINT N'Creating [ax].[DF_SYSTASKRECORDERFRAMEWORK_SYNCID]...';


GO
ALTER TABLE [ax].[SYSTASKRECORDERFRAMEWORK]
    ADD CONSTRAINT [DF_SYSTASKRECORDERFRAMEWORK_SYNCID] DEFAULT ('{00000000-0000-0000-0000-000000000000}') FOR [SYNCID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCITY_CITYKEY]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCITY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCITY_CITYKEY] DEFAULT ('') FOR [CITYKEY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCITY_COUNTYID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCITY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCITY_COUNTYID] DEFAULT ('') FOR [COUNTYID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCITY_IBGECODE_BR]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCITY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCITY_IBGECODE_BR] DEFAULT ('') FOR [IBGECODE_BR];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCITY_STATEID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCITY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCITY_STATEID] DEFAULT ('') FOR [STATEID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCITY_COUNTRYREGIONID]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCITY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCITY_COUNTRYREGIONID] DEFAULT ('') FOR [COUNTRYREGIONID];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCITY_DESCRIPTION]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCITY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCITY_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSCITY_NAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSCITY]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSCITY_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_DELETEDDATETIMETZID]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_DELETEDDATETIMETZID] DEFAULT ((37001)) FOR [DELETEDDATETIMETZID];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_CREDENTIALID]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_CREDENTIALID] DEFAULT ('') FOR [CREDENTIALID];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_GRANTTYPE]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_GRANTTYPE] DEFAULT ('') FOR [GRANTTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_SALT]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_SALT] DEFAULT ('') FOR [SALT];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_HASHEDCREDENTIAL]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_HASHEDCREDENTIAL] DEFAULT ('') FOR [HASHEDCREDENTIAL];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_DELETEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_DELETEDDATETIME] DEFAULT ('1900-01-01 00:00:00.000') FOR [DELETEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_HASHALGORITHM]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_HASHALGORITHM] DEFAULT ('') FOR [HASHALGORITHM];


GO
PRINT N'Creating [ax].[DF_RETAILSTAFFCREDENTIALTABLE_STAFFID]...';


GO
ALTER TABLE [ax].[RETAILSTAFFCREDENTIALTABLE]
    ADD CONSTRAINT [DF_RETAILSTAFFCREDENTIALTABLE_STAFFID] DEFAULT ('') FOR [STAFFID];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTVARIANTCOLOR_COLOR]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTVARIANTCOLOR]
    ADD CONSTRAINT [DF_ECORESPRODUCTVARIANTCOLOR_COLOR] DEFAULT ((0)) FOR [COLOR];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_IENUM_BR]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_IENUM_BR] DEFAULT ('') FOR [IENUM_BR];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_CCMNUM_BR]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_CCMNUM_BR] DEFAULT ('') FOR [CCMNUM_BR];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_CNPJCPFNUM_BR]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_CNPJCPFNUM_BR] DEFAULT ('') FOR [CNPJCPFNUM_BR];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_NAME]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCAUTHORITY]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCAUTHORITY] DEFAULT ('') FOR [CONSUMEREFDOCAUTHORITY];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_DIRPARTYLOCATION]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_DIRPARTYLOCATION] DEFAULT ((0)) FOR [DIRPARTYLOCATION];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCCSCTOKEN]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCCSCTOKEN] DEFAULT ('') FOR [CONSUMEREFDOCCSCTOKEN];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_EFDOCAUTHORITY]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_EFDOCAUTHORITY] DEFAULT ('') FOR [EFDOCAUTHORITY];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_EFDOCDIGITALCERTIFICATESUBJECT]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_EFDOCDIGITALCERTIFICATESUBJECT] DEFAULT ('') FOR [EFDOCDIGITALCERTIFICATESUBJECT];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCENVIRONMENT]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCENVIRONMENT] DEFAULT ((0)) FOR [CONSUMEREFDOCENVIRONMENT];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCVERSION]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_CONSUMEREFDOCVERSION] DEFAULT ((0)) FOR [CONSUMEREFDOCVERSION];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_ACCOUNTANT_BR]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_ACCOUNTANT_BR] DEFAULT ((0)) FOR [ACCOUNTANT_BR];


GO
PRINT N'Creating [ax].[DF_FISCALESTABLISHMENT_BR_FISCALESTABLISHMENTID]...';


GO
ALTER TABLE [ax].[FISCALESTABLISHMENT_BR]
    ADD CONSTRAINT [DF_FISCALESTABLISHMENT_BR_FISCALESTABLISHMENTID] DEFAULT ('') FOR [FISCALESTABLISHMENTID];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETYPE_DATATYPE]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETYPE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETYPE_DATATYPE] DEFAULT ((0)) FOR [DATATYPE];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETYPE_NAME]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETYPE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETYPE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETYPE_ISHIDDEN]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETYPE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETYPE_ISHIDDEN] DEFAULT ((0)) FOR [ISHIDDEN];


GO
PRINT N'Creating [ax].[DF_ECORESATTRIBUTETYPE_ISENUMERATION]...';


GO
ALTER TABLE [ax].[ECORESATTRIBUTETYPE]
    ADD CONSTRAINT [DF_ECORESATTRIBUTETYPE_ISENUMERATION] DEFAULT ((0)) FOR [ISENUMERATION];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_APPROXIMATETAXAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_APPROXIMATETAXAMOUNT] DEFAULT ((0)) FOR [APPROXIMATETAXAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_LINEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_LINEAMOUNT] DEFAULT ((0)) FOR [LINEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_GLOBALTRADEITEMNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_GLOBALTRADEITEMNUMBER] DEFAULT ('') FOR [GLOBALTRADEITEMNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_STORE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_STORE] DEFAULT ('') FOR [STORE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_UNITPRICE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_UNITPRICE] DEFAULT ((0)) FOR [UNITPRICE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_TERMINAL]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_TERMINAL] DEFAULT ('') FOR [TERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_ITEMTYPE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_ITEMTYPE] DEFAULT ((0)) FOR [ITEMTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_FISCALCLASSIFICATION]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_FISCALCLASSIFICATION] DEFAULT ('') FOR [FISCALCLASSIFICATION];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_SERVICECODE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_SERVICECODE] DEFAULT ('') FOR [SERVICECODE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_CFOP]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_CFOP] DEFAULT ('') FOR [CFOP];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_UNIT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_UNIT] DEFAULT ('') FOR [UNIT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_LINEDISCOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_LINEDISCOUNT] DEFAULT ((0)) FOR [LINEDISCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_ITEMID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_ITEMID] DEFAULT ('') FOR [ITEMID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_TAXATIONORIGIN]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_TAXATIONORIGIN] DEFAULT ((0)) FOR [TAXATIONORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTLINE_BR_QUANTITY]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTLINE_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTLINE_BR_QUANTITY] DEFAULT ((0)) FOR [QUANTITY];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODEADDRESSEXPLODED_DLVMODE]...';


GO
ALTER TABLE [ax].[RETAILDLVMODEADDRESSEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODEADDRESSEXPLODED_DLVMODE] DEFAULT ((0)) FOR [DLVMODE];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODEADDRESSEXPLODED_COUNTRYREGION]...';


GO
ALTER TABLE [ax].[RETAILDLVMODEADDRESSEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODEADDRESSEXPLODED_COUNTRYREGION] DEFAULT ('') FOR [COUNTRYREGION];


GO
PRINT N'Creating [ax].[DF_RETAILDLVMODEADDRESSEXPLODED_STATE]...';


GO
ALTER TABLE [ax].[RETAILDLVMODEADDRESSEXPLODED]
    ADD CONSTRAINT [DF_RETAILDLVMODEADDRESSEXPLODED_STATE] DEFAULT ('') FOR [STATE];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSDISTRICT_COUNTRYREGIONID_RU]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSDISTRICT]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSDISTRICT_COUNTRYREGIONID_RU] DEFAULT ('') FOR [COUNTRYREGIONID_RU];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSDISTRICT_STATEID_RU]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSDISTRICT]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSDISTRICT_STATEID_RU] DEFAULT ('') FOR [STATEID_RU];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSDISTRICT_DESCRIPTION]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSDISTRICT]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSDISTRICT_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSDISTRICT_CITY]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSDISTRICT]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSDISTRICT_CITY] DEFAULT ((0)) FOR [CITY];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSDISTRICT_PROPERTIES_RU]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSDISTRICT]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSDISTRICT_PROPERTIES_RU] DEFAULT ((0)) FOR [PROPERTIES_RU];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSDISTRICT_COUNTYID_RU]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSDISTRICT]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSDISTRICT_COUNTYID_RU] DEFAULT ('') FOR [COUNTYID_RU];


GO
PRINT N'Creating [ax].[DF_LOGISTICSADDRESSDISTRICT_NAME]...';


GO
ALTER TABLE [ax].[LOGISTICSADDRESSDISTRICT]
    ADD CONSTRAINT [DF_LOGISTICSADDRESSDISTRICT_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCT_DISPLAYPRODUCTNUMBER]...';


GO
ALTER TABLE [ax].[ECORESPRODUCT]
    ADD CONSTRAINT [DF_ECORESPRODUCT_DISPLAYPRODUCTNUMBER] DEFAULT ('') FOR [DISPLAYPRODUCTNUMBER];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCT_SEARCHNAME]...';


GO
ALTER TABLE [ax].[ECORESPRODUCT]
    ADD CONSTRAINT [DF_ECORESPRODUCT_SEARCHNAME] DEFAULT ('') FOR [SEARCHNAME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCT_PRODUCTTYPE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCT]
    ADD CONSTRAINT [DF_ECORESPRODUCT_PRODUCTTYPE] DEFAULT ((0)) FOR [PRODUCTTYPE];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCT_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[ECORESPRODUCT]
    ADD CONSTRAINT [DF_ECORESPRODUCT_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILSTORELOCATORGROUPOWNER_LOCATORGROUP]...';


GO
ALTER TABLE [ax].[RETAILSTORELOCATORGROUPOWNER]
    ADD CONSTRAINT [DF_RETAILSTORELOCATORGROUPOWNER_LOCATORGROUP] DEFAULT ((0)) FOR [LOCATORGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILSTORELOCATORGROUPOWNER_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILSTORELOCATORGROUPOWNER]
    ADD CONSTRAINT [DF_RETAILSTORELOCATORGROUPOWNER_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUPCHANNELGROUP_OMOPERATINGUNITID]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUPCHANNELGROUP_OMOPERATINGUNITID] DEFAULT ((0)) FOR [OMOPERATINGUNITID];


GO
PRINT N'Creating [ax].[DF_RETAILASSORTMENTLOOKUPCHANNELGROUP_ASSORTMENTID]...';


GO
ALTER TABLE [ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP]
    ADD CONSTRAINT [DF_RETAILASSORTMENTLOOKUPCHANNELGROUP_ASSORTMENTID] DEFAULT ((0)) FOR [ASSORTMENTID];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_EMAIL]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_EMAIL] DEFAULT ('') FOR [EMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_MIDDLENAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_MIDDLENAME] DEFAULT ('') FOR [MIDDLENAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CUSTACCOUNTASYNC]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CUSTACCOUNTASYNC] DEFAULT ('') FOR [CUSTACCOUNTASYNC];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CELLULARPHONE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CELLULARPHONE] DEFAULT ('') FOR [CELLULARPHONE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ONLINECUSTCREATED]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ONLINECUSTCREATED] DEFAULT ((0)) FOR [ONLINECUSTCREATED];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_RELATIONSHIPTYPE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_RELATIONSHIPTYPE] DEFAULT ((0)) FOR [RELATIONSHIPTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_VATNUM]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_VATNUM] DEFAULT ('') FOR [VATNUM];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CUSTACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CUSTACCOUNT] DEFAULT ('') FOR [CUSTACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_LASTNAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_LASTNAME] DEFAULT ('') FOR [LASTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_DISTRICTNAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_DISTRICTNAME] DEFAULT ('') FOR [DISTRICTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_MANDATORYCREDITLIMIT]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_MANDATORYCREDITLIMIT] DEFAULT ((0)) FOR [MANDATORYCREDITLIMIT];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_STREETNUMBER]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_STREETNUMBER] DEFAULT ('') FOR [STREETNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_INVOICEACCOUNT]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_INVOICEACCOUNT] DEFAULT ('') FOR [INVOICEACCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_URL]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_URL] DEFAULT ('') FOR [URL];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_BUILDINGCOMPLEMENT]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_BUILDINGCOMPLEMENT] DEFAULT ('') FOR [BUILDINGCOMPLEMENT];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CUSTGROUP]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CUSTGROUP] DEFAULT ('') FOR [CUSTGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ENDDISC]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ENDDISC] DEFAULT ('') FOR [ENDDISC];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_MULTILINEDISC]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_MULTILINEDISC] DEFAULT ('') FOR [MULTILINEDISC];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CUSTNAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CUSTNAME] DEFAULT ('') FOR [CUSTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_PHONEEXTENSION]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_PHONEEXTENSION] DEFAULT ('') FOR [PHONEEXTENSION];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CONTACTPERSONID]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CONTACTPERSONID] DEFAULT ('') FOR [CONTACTPERSONID];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_RECEIPTOPTION]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_RECEIPTOPTION] DEFAULT ((0)) FOR [RECEIPTOPTION];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ADDRESSTYPE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ADDRESSTYPE] DEFAULT ((0)) FOR [ADDRESSTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_USEORDERNUMBERREFERENCE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_USEORDERNUMBERREFERENCE] DEFAULT ((0)) FOR [USEORDERNUMBERREFERENCE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CNPJCPFNUM_BR]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CNPJCPFNUM_BR] DEFAULT ('') FOR [CNPJCPFNUM_BR];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CURRENCY]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CURRENCY] DEFAULT ('') FOR [CURRENCY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_LINEDISC]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_LINEDISC] DEFAULT ('') FOR [LINEDISC];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_RECEIPTEMAIL]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_RECEIPTEMAIL] DEFAULT ('') FOR [RECEIPTEMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_TAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_TAXGROUP] DEFAULT ('') FOR [TAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_STREET]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_STREET] DEFAULT ('') FOR [STREET];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ADDRESSPHONE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ADDRESSPHONE] DEFAULT ('') FOR [ADDRESSPHONE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ADDRESSNAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ADDRESSNAME] DEFAULT ('') FOR [ADDRESSNAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_PRICEGROUP]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_PRICEGROUP] DEFAULT ('') FOR [PRICEGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CREDITMAX]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CREDITMAX] DEFAULT ((0)) FOR [CREDITMAX];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ADDRESSEMAIL]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ADDRESSEMAIL] DEFAULT ('') FOR [ADDRESSEMAIL];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ZIPCODE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ZIPCODE] DEFAULT ('') FOR [ZIPCODE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_CITY]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_CITY] DEFAULT ('') FOR [CITY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_IDENTIFICATIONNUMBER]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_IDENTIFICATIONNUMBER] DEFAULT ('') FOR [IDENTIFICATIONNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_COUNTY]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_COUNTY] DEFAULT ('') FOR [COUNTY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ORGANIZATIONID]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ORGANIZATIONID] DEFAULT ('') FOR [ORGANIZATIONID];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_COUNTRY]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_COUNTRY] DEFAULT ('') FOR [COUNTRY];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_STATE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_STATE] DEFAULT ('') FOR [STATE];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_BLOCKED]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_BLOCKED] DEFAULT ((0)) FOR [BLOCKED];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ADDRESSURL]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ADDRESSURL] DEFAULT ('') FOR [ADDRESSURL];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_STORERECID]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_STORERECID] DEFAULT ((0)) FOR [STORERECID];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_USEPURCHREQUEST]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_USEPURCHREQUEST] DEFAULT ((0)) FOR [USEPURCHREQUEST];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_FIRSTNAME]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_FIRSTNAME] DEFAULT ('') FOR [FIRSTNAME];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_ADDRESSTAXGROUP]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_ADDRESSTAXGROUP] DEFAULT ('') FOR [ADDRESSTAXGROUP];


GO
PRINT N'Creating [ax].[DF_RETAILASYNCCUSTOMER_PHONE]...';


GO
ALTER TABLE [ax].[RETAILASYNCCUSTOMER]
    ADD CONSTRAINT [DF_RETAILASYNCCUSTOMER_PHONE] DEFAULT ('') FOR [PHONE];


GO
PRINT N'Creating [ax].[DF_RETURNREASONCODE_REASONCODEGROUPID]...';


GO
ALTER TABLE [ax].[RETURNREASONCODE]
    ADD CONSTRAINT [DF_RETURNREASONCODE_REASONCODEGROUPID] DEFAULT ('') FOR [REASONCODEGROUPID];


GO
PRINT N'Creating [ax].[DF_RETURNREASONCODE_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETURNREASONCODE]
    ADD CONSTRAINT [DF_RETURNREASONCODE_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETURNREASONCODE_REASONCODEID]...';


GO
ALTER TABLE [ax].[RETURNREASONCODE]
    ADD CONSTRAINT [DF_RETURNREASONCODE_REASONCODEID] DEFAULT ('') FOR [REASONCODEID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSTHEME_DEVICETYPE]...';


GO
ALTER TABLE [ax].[RETAILPOSTHEME]
    ADD CONSTRAINT [DF_RETAILPOSTHEME_DEVICETYPE] DEFAULT ((0)) FOR [DEVICETYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSTHEME_NAME]...';


GO
ALTER TABLE [ax].[RETAILPOSTHEME]
    ADD CONSTRAINT [DF_RETAILPOSTHEME_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_LOGONSCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_LOGONSCOUNT] DEFAULT ((0)) FOR [LOGONSCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_DISCOUNTTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_DISCOUNTTOTAL] DEFAULT ((0)) FOR [DISCOUNTTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_NOSALECOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_NOSALECOUNT] DEFAULT ((0)) FOR [NOSALECOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_PAIDTOACCOUNTTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_PAIDTOACCOUNTTOTAL] DEFAULT ((0)) FOR [PAIDTOACCOUNTTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_CUSTOMERSCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_CUSTOMERSCOUNT] DEFAULT ((0)) FOR [CUSTOMERSCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_RETURNSTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_RETURNSTOTAL] DEFAULT ((0)) FOR [RETURNSTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_CLOSEDATETIMEUTCTZID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_CLOSEDATETIMEUTCTZID] DEFAULT ((37001)) FOR [CLOSEDATETIMEUTCTZID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_CLOSETIME]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_CLOSETIME] DEFAULT ((0)) FOR [CLOSETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_POSTED]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_POSTED] DEFAULT ((0)) FOR [POSTED];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_CLOSEDATTERMINAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_CLOSEDATTERMINAL] DEFAULT ('') FOR [CLOSEDATTERMINAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_CLOSEDATETIMEUTC]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_CLOSEDATETIMEUTC] DEFAULT ('1900-01-01 00:00:00.000') FOR [CLOSEDATETIMEUTC];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_SALESCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_SALESCOUNT] DEFAULT ((0)) FOR [SALESCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_ROUNDEDAMOUNTTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_ROUNDEDAMOUNTTOTAL] DEFAULT ((0)) FOR [ROUNDEDAMOUNTTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_STARTDATETIMEUTCTZID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_STARTDATETIMEUTCTZID] DEFAULT ((37001)) FOR [STARTDATETIMEUTCTZID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_STARTTIME]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_STARTTIME] DEFAULT ((0)) FOR [STARTTIME];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_STATUS]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_SALESTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_SALESTOTAL] DEFAULT ((0)) FOR [SALESTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_CLOSEDATE]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_CLOSEDATE] DEFAULT ('1900-01-01') FOR [CLOSEDATE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_BATCHID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_BATCHID] DEFAULT ((0)) FOR [BATCHID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_CHANNEL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_CHANNEL] DEFAULT ((0)) FOR [CHANNEL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_STAFFID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_STAFFID] DEFAULT ('') FOR [STAFFID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_STARTDATE]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_STARTDATE] DEFAULT ('1900-01-01') FOR [STARTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_STARTDATETIMEUTC]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_STARTDATETIMEUTC] DEFAULT ('1900-01-01 00:00:00.000') FOR [STARTDATETIMEUTC];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_TRANSACTIONSCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_TRANSACTIONSCOUNT] DEFAULT ((0)) FOR [TRANSACTIONSCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_VOIDSCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_VOIDSCOUNT] DEFAULT ((0)) FOR [VOIDSCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_GOODSSOLDQTY]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_GOODSSOLDQTY] DEFAULT ((0)) FOR [GOODSSOLDQTY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_STOREID]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_TAXTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_TAXTOTAL] DEFAULT ((0)) FOR [TAXTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_RECEIPTCOPIESCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_RECEIPTCOPIESCOUNT] DEFAULT ((0)) FOR [RECEIPTCOPIESCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_RECEIPTCOPIESTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_RECEIPTCOPIESTOTAL] DEFAULT ((0)) FOR [RECEIPTCOPIESTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_PRICEOVERRIDETOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_PRICEOVERRIDETOTAL] DEFAULT ((0)) FOR [PRICEOVERRIDETOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_SALESGRANDTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_SALESGRANDTOTAL] DEFAULT ((0)) FOR [SALESGRANDTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_RETURNSCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_RETURNSCOUNT] DEFAULT ((0)) FOR [RETURNSCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_RETURNSGRANDTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_RETURNSGRANDTOTAL] DEFAULT ((0)) FOR [RETURNSGRANDTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_SUSPENDEDTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_SUSPENDEDTOTAL] DEFAULT ((0)) FOR [SUSPENDEDTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_SERVICESSOLDQTY]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_SERVICESSOLDQTY] DEFAULT ((0)) FOR [SERVICESSOLDQTY];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_SUSPENDEDCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_SUSPENDEDCOUNT] DEFAULT ((0)) FOR [SUSPENDEDCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_TRAININGTOTAL]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_TRAININGTOTAL] DEFAULT ((0)) FOR [TRAININGTOTAL];


GO
PRINT N'Creating [ax].[DF_RETAILPOSBATCHTABLE_TRAININGCOUNT]...';


GO
ALTER TABLE [ax].[RETAILPOSBATCHTABLE]
    ADD CONSTRAINT [DF_RETAILPOSBATCHTABLE_TRAININGCOUNT] DEFAULT ((0)) FOR [TRAININGCOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_OFFERID]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_OFFERID] DEFAULT ('') FOR [OFFERID];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_NAME]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_NAME] DEFAULT ('') FOR [NAME];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_RETAILGROUPMEMBERLINE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_RETAILGROUPMEMBERLINE] DEFAULT ((0)) FOR [RETAILGROUPMEMBERLINE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_INSTANCERELATIONTYPE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_INSTANCERELATIONTYPE] DEFAULT ((0)) FOR [INSTANCERELATIONTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_LINENUM]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_LINENUM] DEFAULT ((0)) FOR [LINENUM];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_ISDISCOUNTCODEREQUIRED]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_ISDISCOUNTCODEREQUIRED] DEFAULT ((0)) FOR [ISDISCOUNTCODEREQUIRED];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_DISCOUNTPERCENTORVALUE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_DISCOUNTPERCENTORVALUE] DEFAULT ((0)) FOR [DISCOUNTPERCENTORVALUE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_UNITOFMEASURE]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_UNITOFMEASURE] DEFAULT ((0)) FOR [UNITOFMEASURE];


GO
PRINT N'Creating [ax].[DF_RETAILPERIODICDISCOUNTLINE_STATUS]...';


GO
ALTER TABLE [ax].[RETAILPERIODICDISCOUNTLINE]
    ADD CONSTRAINT [DF_RETAILPERIODICDISCOUNTLINE_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTCATEGORY_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_ECORESPRODUCTCATEGORY_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTCATEGORY_PRODUCT]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_ECORESPRODUCTCATEGORY_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTCATEGORY_CATEGORYHIERARCHY]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_ECORESPRODUCTCATEGORY_CATEGORYHIERARCHY] DEFAULT ((0)) FOR [CATEGORYHIERARCHY];


GO
PRINT N'Creating [ax].[DF_ECORESPRODUCTCATEGORY_CATEGORY]...';


GO
ALTER TABLE [ax].[ECORESPRODUCTCATEGORY]
    ADD CONSTRAINT [DF_ECORESPRODUCTCATEGORY_CATEGORY] DEFAULT ((0)) FOR [CATEGORY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCT_PRODUCT]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCT]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCT_PRODUCT] DEFAULT ((0)) FOR [PRODUCT];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCT_USEHIERARCHY]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCT]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCT_USEHIERARCHY] DEFAULT ((0)) FOR [USEHIERARCHY];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCT_CATALOG]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCT]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCT_CATALOG] DEFAULT ((0)) FOR [CATALOG];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCT_CREATEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCT]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCT_CREATEDDATETIME] DEFAULT (getutcdate()) FOR [CREATEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCT_ORIGIN]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCT]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCT_ORIGIN] DEFAULT ((0)) FOR [ORIGIN];


GO
PRINT N'Creating [ax].[DF_RETAILPUBCATALOGPRODUCT_MODIFIEDDATETIME]...';


GO
ALTER TABLE [ax].[RETAILPUBCATALOGPRODUCT]
    ADD CONSTRAINT [DF_RETAILPUBCATALOGPRODUCT_MODIFIEDDATETIME] DEFAULT (getutcdate()) FOR [MODIFIEDDATETIME];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETRANSLATION_INFOSUBCODE]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETRANSLATION]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETRANSLATION_INFOSUBCODE] DEFAULT ((0)) FOR [INFOSUBCODE];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETRANSLATION_LANGUAGEID]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETRANSLATION]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETRANSLATION_LANGUAGEID] DEFAULT ('') FOR [LANGUAGEID];


GO
PRINT N'Creating [ax].[DF_RETAILINFORMATIONSUBCODETRANSLATION_DESCRIPTION]...';


GO
ALTER TABLE [ax].[RETAILINFORMATIONSUBCODETRANSLATION]
    ADD CONSTRAINT [DF_RETAILINFORMATIONSUBCODETRANSLATION_DESCRIPTION] DEFAULT ('') FOR [DESCRIPTION];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTSERIES]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTSERIES] DEFAULT ('') FOR [FISCALDOCUMENTSERIES];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTACCOUNTNUM]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTACCOUNTNUM] DEFAULT ('') FOR [FISCALDOCUMENTACCOUNTNUM];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_STOREID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_STOREID] DEFAULT ('') FOR [STOREID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_TOTALDISCOUNTAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_TOTALDISCOUNTAMOUNT] DEFAULT ((0)) FOR [TOTALDISCOUNTAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_CONSUMERCNPJCPFNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_CONSUMERCNPJCPFNUMBER] DEFAULT ('') FOR [CONSUMERCNPJCPFNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTNUMBER]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTNUMBER] DEFAULT ('') FOR [FISCALDOCUMENTNUMBER];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_TRANSACTIONID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_TRANSACTIONID] DEFAULT ('') FOR [TRANSACTIONID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_STATUS]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_STATUS] DEFAULT ((0)) FOR [STATUS];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_TOTALAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_TOTALAMOUNT] DEFAULT ((0)) FOR [TOTALAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTDATE]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_FISCALDOCUMENTDATE] DEFAULT ('1900-01-01') FOR [FISCALDOCUMENTDATE];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_TERMINALID]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_TERMINALID] DEFAULT ('') FOR [TERMINALID];


GO
PRINT N'Creating [ax].[DF_RETAILFISCALDOCUMENTMODEL2_BR_TOTALSURCHARGEAMOUNT]...';


GO
ALTER TABLE [ax].[RETAILFISCALDOCUMENTMODEL2_BR]
    ADD CONSTRAINT [DF_RETAILFISCALDOCUMENTMODEL2_BR_TOTALSURCHARGEAMOUNT] DEFAULT ((0)) FOR [TOTALSURCHARGEAMOUNT];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEMECHANNEL_OMINTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEMECHANNEL]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEMECHANNEL_OMINTERNALORGANIZATION] DEFAULT ((0)) FOR [OMINTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEMECHANNEL_OMHIERARCHYTYPE]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEMECHANNEL]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEMECHANNEL_OMHIERARCHYTYPE] DEFAULT ((0)) FOR [OMHIERARCHYTYPE];


GO
PRINT N'Creating [ax].[DF_RETAILLOYALTYSCHEMECHANNEL_LOYALTYSCHEME]...';


GO
ALTER TABLE [ax].[RETAILLOYALTYSCHEMECHANNEL]
    ADD CONSTRAINT [DF_RETAILLOYALTYSCHEMECHANNEL_LOYALTYSCHEME] DEFAULT ((0)) FOR [LOYALTYSCHEME];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDTO]...';


GO
ALTER TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]
    ADD CONSTRAINT [DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDTO] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDTO];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTORGINHERITANCEEXPLODED_INTERNALORGANIZATION]...';


GO
ALTER TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]
    ADD CONSTRAINT [DF_RETAILPUBINTORGINHERITANCEEXPLODED_INTERNALORGANIZATION] DEFAULT ((0)) FOR [INTERNALORGANIZATION];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDTOTZID]...';


GO
ALTER TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]
    ADD CONSTRAINT [DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDTOTZID] DEFAULT ((37001)) FOR [VALIDTOTZID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDFROM]...';


GO
ALTER TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]
    ADD CONSTRAINT [DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDFROM] DEFAULT ('1900-01-01 00:00:00.000') FOR [VALIDFROM];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTORGINHERITANCEEXPLODED_ANCESTORINTERNALORG]...';


GO
ALTER TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]
    ADD CONSTRAINT [DF_RETAILPUBINTORGINHERITANCEEXPLODED_ANCESTORINTERNALORG] DEFAULT ((0)) FOR [ANCESTORINTERNALORG];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDFROMTZID]...';


GO
ALTER TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]
    ADD CONSTRAINT [DF_RETAILPUBINTORGINHERITANCEEXPLODED_VALIDFROMTZID] DEFAULT ((37001)) FOR [VALIDFROMTZID];


GO
PRINT N'Creating [ax].[DF_RETAILPUBINTORGINHERITANCEEXPLODED_DISTANCE]...';


GO
ALTER TABLE [ax].[RETAILPUBINTORGINHERITANCEEXPLODED]
    ADD CONSTRAINT [DF_RETAILPUBINTORGINHERITANCEEXPLODED_DISTANCE] DEFAULT ((0)) FOR [DISTANCE];


GO
PRINT N'Creating [ax].[DF_ECORESTEXTVALUE_TEXTVALUE]...';


GO
ALTER TABLE [ax].[ECORESTEXTVALUE]
    ADD CONSTRAINT [DF_ECORESTEXTVALUE_TEXTVALUE] DEFAULT ('') FOR [TEXTVALUE];


GO
PRINT N'Creating Full-text Index on [ax].[RETAILASYNCADDRESS]...';


GO
CREATE FULLTEXT INDEX ON [ax].[RETAILASYNCADDRESS]
    ([STREET], [PHONE], [EMAIL])
    KEY INDEX [I_RETAILASYNCADDRESS_REPLICATIONCOUNTERFROMORIGIN]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[RETAILLOYALTYCARD]...';


GO
CREATE FULLTEXT INDEX ON [ax].[RETAILLOYALTYCARD]
    ([CARDNUMBER])
    KEY INDEX [IX_RETAILLOYALTYCARD_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[LOGISTICSPOSTALADDRESS]...';


GO
CREATE FULLTEXT INDEX ON [ax].[LOGISTICSPOSTALADDRESS]
    ([ADDRESS])
    KEY INDEX [I_LOGISTICSPOSTALADDRESS_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[DIRPARTYTABLE]...';


GO
CREATE FULLTEXT INDEX ON [ax].[DIRPARTYTABLE]
    ([NAME])
    KEY INDEX [I_DIRPARTYTABLE_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESCONFIGURATION]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESCONFIGURATION]
    ([NAME])
    KEY INDEX [I_ECORESCONFIGURATION_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[CUSTTABLE]...';


GO
CREATE FULLTEXT INDEX ON [ax].[CUSTTABLE]
    ([ACCOUNTNUM])
    KEY INDEX [IX_CUSTTABLE_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESSIZE]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESSIZE]
    ([NAME])
    KEY INDEX [I_ECORESSIZE_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[LOGISTICSELECTRONICADDRESS]...';


GO
CREATE FULLTEXT INDEX ON [ax].[LOGISTICSELECTRONICADDRESS]
    ([LOCATOR])
    KEY INDEX [I_LOGISTICSELECTRONICADDRESS_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESSTYLE]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESSTYLE]
    ([NAME])
    KEY INDEX [I_ECORESSTYLE_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESPRODUCTTRANSLATION]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESPRODUCTTRANSLATION]
    ([NAME], [DESCRIPTION])
    KEY INDEX [I_ECORESPRODUCTTRANSLATION_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[RETAILTRANSACTIONADDRESSTRANS]...';


GO
CREATE FULLTEXT INDEX ON [ax].[RETAILTRANSACTIONADDRESSTRANS]
    ([DELIVERYNAME])
    KEY INDEX [I_RETAILTRANSACTIONADDRESSTRANS_REPLICATIONCOUNTERFROMORIGIN]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESCOLOR]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESCOLOR]
    ([NAME])
    KEY INDEX [I_ECORESCOLOR_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION]
    ([NAME])
    KEY INDEX [I_ECORESPRODUCTMASTERDIMVALUETRANSLATION_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[INVENTTABLE]...';


GO
CREATE FULLTEXT INDEX ON [ax].[INVENTTABLE]
    ([ITEMID])
    KEY INDEX [IX_INVENTTABLE_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESPRODUCT]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESPRODUCT]
    ([SEARCHNAME], [DISPLAYPRODUCTNUMBER])
    KEY INDEX [I_ECORESPRODUCT_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[RETAILASYNCCUSTOMER]...';


GO
CREATE FULLTEXT INDEX ON [ax].[RETAILASYNCCUSTOMER]
    ([CUSTACCOUNTASYNC], [CUSTNAME], [STREET], [PHONE], [CELLULARPHONE], [EMAIL])
    KEY INDEX [I_RETAILASYNCCUSTOMER_REPLICATIONCOUNTERFROMORIGIN]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating Full-text Index on [ax].[ECORESTEXTVALUE]...';


GO
CREATE FULLTEXT INDEX ON [ax].[ECORESTEXTVALUE]
    ([TEXTVALUE])
    KEY INDEX [I_ECORESTEXTVALUE_RECID]
    ON [COMMERCEFULLTEXTCATALOG];


GO
PRINT N'Creating [crt].[fn_kErrorDbItemOutOfStock]...';


GO
create function [crt].fn_kErrorDbItemOutOfStock () returns int as begin return 100002 end;
GO
PRINT N'Creating [crt].[ISASYNCCUSTOMERID]...';


GO

CREATE FUNCTION [crt].ISASYNCCUSTOMERID
(
    @nvc_CustomerId                 NVARCHAR(38) -- 38 because Async CustomerId can be that big (while AX customer ID is only 20)
)
RETURNS INT AS
BEGIN
    RETURN 
        CASE
            WHEN EXISTS (SELECT 1/0 FROM [ax].RETAILASYNCCUSTOMER WHERE CUSTACCOUNTASYNC = @nvc_CustomerId) 
            THEN 1
            ELSE 0
        END
END;
GO
PRINT N'Creating [crt].[GETMERGEQUERY]...';


GO

CREATE FUNCTION [crt].[GETMERGEQUERY]
(
    @tblname nvarchar(50),
    @schema nvarchar(50)
)
RETURNS nvarchar(max)
AS
BEGIN;
-- Composes strings related to column names.
DECLARE tbl_cursor CURSOR
FOR
    SELECT
    'XmlTab.C.value(''@' + COLUMN_NAME + ''', ' AS valueName,
    'AS [' + COLUMN_NAME + ']' AS asName,
    '[' + COLUMN_NAME + ']' AS bracketName,
    's.[' + COLUMN_NAME + ']' AS sDotBracketName,
    't.['+ COLUMN_NAME +'] = s.[' + COLUMN_NAME + ']' AS equalName,
    DATA_TYPE AS dataType,
    CHARACTER_MAXIMUM_LENGTH AS strLen,
    NUMERIC_PRECISION AS numPrecision,
    NUMERIC_SCALE AS numScale
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_NAME = @tblname AND TABLE_SCHEMA = @schema
    ORDER BY COLUMN_NAME ASC;
OPEN tbl_cursor;

DECLARE @NewLineChar AS CHAR(2) = CHAR(13) + CHAR(10)

DECLARE @xmlsrc_aux nvarchar(max) = '';
DECLARE @xmlsrc nvarchar(max) = '';
DECLARE @colList nvarchar(max) = '';
DECLARE @colVal nvarchar(max) = '';
DECLARE @updateSet nvarchar(max) = '';

DECLARE @valueName nvarchar(200);
DECLARE @asName nvarchar(200);
DECLARE @bracketName nvarchar(200);
DECLARE @sDotBracketName nvarchar(200);
DECLARE @equalName nvarchar(200);

DECLARE @dataType nvarchar(20);
DECLARE @strLen nvarchar(10);
DECLARE @numPrecision nvarchar(10);
DECLARE @numScale nvarchar(10);

FETCH NEXT FROM tbl_cursor
INTO
@valueName,
@asName,
@bracketName,
@sDotBracketName,
@equalName,
@dataType,
@strLen,
@numPrecision,
@numScale;

-- Iterates through the results and constructs components of the merge query statement.
WHILE (@@FETCH_STATUS <> -1)
BEGIN;

    IF @bracketName != '[ROWVERSION]' AND @bracketName != '[REPLICATIONCOUNTERFROMORIGIN]'
    BEGIN;
        SET @xmlsrc_aux = @valueName + '''' + @dataType;
        IF @numScale > 0
            SET @xmlsrc_aux = @xmlsrc_aux
                    + '(' + @numPrecision + ', ' + @numScale + ')'') ';
        ELSE
            IF @strLen > 0
                SET @xmlsrc_aux  = @xmlsrc_aux
                    + '(' + @strLen + ')'') ';
            ELSE
                SET @xmlsrc_aux = @xmlsrc_aux + ''') ';

        SET @xmlsrc_aux = @xmlsrc_aux + @asName;

        IF @xmlsrc = ''
            SET @xmlsrc = @xmlsrc_aux;
        ELSE
            SET @xmlsrc = @xmlsrc + ',' + @NewLineChar + @xmlsrc_aux;

        IF @colList = ''
            SET @colList = @bracketName;
        ELSE
            SET @colList = @colList + ',' + @NewLineChar + @bracketName;

        IF @colVal = ''
            SET @colVal = @sDotBracketName;
        ELSE
            SET @colVal = @colVal + ',' + @NewLineChar + @sDotBracketName;

        IF @updateSet = ''
            SET @updateSet = @equalName;
        ELSE
            SET @updateSet = @updateSet + ',' + @NewLineChar + @equalName;
    END;

    FETCH NEXT FROM tbl_cursor
    INTO
    @valueName,
    @asName,
    @bracketName,
    @sDotBracketName,
    @equalName,
    @dataType,
    @strLen,
    @numPrecision,
    @numScale;
END;

CLOSE tbl_cursor;
DEALLOCATE tbl_cursor;

-- Composes strings related to primary keys.
DECLARE pk_cursor CURSOR
FOR
    SELECT 't.' + C.COLUMN_NAME + ' = s.' + C.COLUMN_NAME
    FROM
    INFORMATION_SCHEMA.TABLE_CONSTRAINTS T,
    INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE C
    WHERE
    C.CONSTRAINT_NAME = T.CONSTRAINT_NAME
    AND C.TABLE_NAME = T.TABLE_NAME
    AND CONSTRAINT_TYPE = 'PRIMARY KEY'
    AND C.TABLE_NAME = @tblname
    ORDER BY C.COLUMN_NAME
OPEN pk_cursor;

DECLARE @row nvarchar(500) = '';
DECLARE @pkMatchingStatement nvarchar(500) = '';
FETCH NEXT FROM pk_cursor INTO @row

WHILE (@@FETCH_STATUS <> -1)
BEGIN;
    IF @pkMatchingStatement = ''
        SET @pkMatchingStatement = @row;
    ELSE
        SET @pkMatchingStatement = @pkMatchingStatement + ' AND ' + @row;
    FETCH NEXT FROM pk_cursor INTO @row
END;

CLOSE pk_cursor;
DEALLOCATE pk_cursor;

-- Constructs merge query.
DECLARE @result nvarchar(max) = 'MERGE [' + @schema + '].[' + @tblname + '] AS t' + @NewLineChar;

SET @result = @result + 'USING (' + @NewLineChar + 'SELECT' + @NewLineChar + @xmlsrc + @NewLineChar;
SET @result = @result + 'FROM @offlineTransactions.nodes(''/OfflineTransactions/' + @schema + '_' + @tblname + '/ROW'') XmlTab(C)' + @NewLineChar;
SET @result = @result + ') AS s (' + @NewLineChar + @colList + @NewLineChar + ')' + @NewLineChar;
SET @result = @result + 'ON (' + @pkMatchingStatement + ')' + @NewLineChar;
SET @result = @result + 'WHEN NOT MATCHED THEN INSERT (' + @NewLineChar + @colList + @NewLineChar;
SET @result = @result + ') VALUES (' + @NewLineChar + @colVal + @NewLineChar;
SET @result = @result + ') WHEN MATCHED THEN UPDATE SET ' + @NewLineChar + @updateSet + ';' + @NewLineChar;

RETURN @result;
END;
GO
PRINT N'Creating [crt].[GETELECTRONICDELIVERYTYPE]...';


GO

CREATE FUNCTION [crt].GETELECTRONICDELIVERYTYPE()
RETURNS INT AS
BEGIN
	RETURN 3
END;
GO
PRINT N'Creating [crt].[GETSHIPTOADDRESSDELIVERYTYPE]...';


GO

CREATE FUNCTION [crt].GETSHIPTOADDRESSDELIVERYTYPE()
RETURNS INT AS
BEGIN
	RETURN 1
END;
GO
PRINT N'Creating [crt].[GETACTIVEACCOUNTACTIVATIONREQUESTSTATUS]...';


GO

CREATE FUNCTION [crt].GETACTIVEACCOUNTACTIVATIONREQUESTSTATUS()
RETURNS INT
BEGIN
    RETURN 0; -- 0: The request is open
END
GO
PRINT N'Creating [crt].[fn_kErrorDbAuthorizationError]...';


GO
create function [crt].fn_kErrorDbAuthorizationError () returns int as begin return 100003 end;
GO
PRINT N'Creating [crt].[GETCLOSEDACCOUNTACTIVATIONREQUESTSTATUS]...';


GO

CREATE FUNCTION [crt].GETCLOSEDACCOUNTACTIVATIONREQUESTSTATUS()
RETURNS INT
BEGIN
    RETURN 1; -- 1: The request is completed
END
GO
PRINT N'Creating [crt].[GETCATEGORYPATH]...';


GO

CREATE FUNCTION [crt].GETCATEGORYPATH 
(
    @bi_ChannelId BIGINT,
	@bi_CategoryId BIGINT
)
RETURNS NVARCHAR(MAX)
BEGIN
    DECLARE @BUFFER NVARCHAR(MAX)
	DECLARE @CATEGORYHIERARCHY BIGINT 
	DECLARE @NESTEDSETLEFT BIGINT 
	DECLARE @NESTEDSETRIGHT BIGINT 
	DECLARE @CURRENTCATEGORYNAME NVARCHAR(254) 
	
	-- INITIALIZING FOR TOP-LEVEL CATEGORIES, OTHERWISE COALESCE WILL NOT RETURN PROPER RESULT
	SET @BUFFER = N'';

	SELECT @CATEGORYHIERARCHY =  RPERC.CATEGORYHIERARCHY , 
		   @NESTEDSETLEFT =	 RPERC.NESTEDSETLEFT, 
		   @NESTEDSETRIGHT = RPERC.NESTEDSETRIGHT,
		   @CURRENTCATEGORYNAME = RPERC.NAME
		   FROM [ax].RETAILPUBECORESCATEGORY RPERC 
		   WHERE RPERC.CHANNEL = @bi_ChannelId AND RPERC.ORIGINID = @bi_CategoryId

	SELECT @BUFFER = COALESCE(@BUFFER + '/' + ERC.NAME, ERC.NAME) 
	FROM [ax].ECORESCATEGORY ERC
	WHERE ERC.CATEGORYHIERARCHY = @CATEGORYHIERARCHY
                        AND ERC.NESTEDSETLEFT  < @NESTEDSETLEFT
                        AND ERC.NESTEDSETRIGHT > @NESTEDSETRIGHT
						ORDER BY ERC.NESTEDSETLEFT 

	-- APPEND CURRENT CATEGORY NAME
	SELECT @BUFFER = COALESCE(@BUFFER + '/' + @CURRENTCATEGORYNAME, @BUFFER) 
            
    RETURN @BUFFER
END
GO
PRINT N'Creating [crt].[GETEMPLOYEEIMAGEATTRIBUTEDEFAULTVALUE]...';


GO
CREATE FUNCTION [crt].GETEMPLOYEEIMAGEATTRIBUTEDEFAULTVALUE()
RETURNS nvarchar(MAX)
BEGIN
    DECLARE @IMAGE nvarchar(MAX);

    SELECT  TOP 1 @IMAGE = IMAGEURL
    FROM AX.RETAILMEDIATEMPLATE 
    WHERE MASTERENTITYTYPE = 15 -- 15 means Employee entity type, refer to AX enum RetailMediaMasterEntity.

    RETURN ISNULL(@IMAGE, '');
END
GO
PRINT N'Creating [crt].[fn_kSuccess]...';


GO
create function [crt].fn_kSuccess () returns int as begin return 0 end;
GO
PRINT N'Creating [crt].[GETCATALOGIMAGEATTRIBUTEDEFAULTVALUE]...';


GO

CREATE FUNCTION [crt].GETCATALOGIMAGEATTRIBUTEDEFAULTVALUE ()
RETURNS nvarchar(MAX)
BEGIN
    DECLARE @IMAGE nvarchar(MAX);

    SELECT  TOP 1 @IMAGE = IMAGEURL
    FROM AX.RETAILMEDIATEMPLATE 
    WHERE MASTERENTITYTYPE = 11 -- 11 means Catalog entity type, refer to AX enum RetailMediaMasterEntity.

    RETURN ISNULL(@IMAGE, '');
END
GO
PRINT N'Creating [crt].[GETPICKUPDELIVERYTYPE]...';


GO

CREATE FUNCTION [crt].GETPICKUPDELIVERYTYPE()
RETURNS INT AS
BEGIN
	RETURN 2
END;
GO
PRINT N'Creating [crt].[GETCOMPANYDEFAULTLOCATIONINDIA]...';


GO

CREATE FUNCTION [crt].[GETCOMPANYDEFAULTLOCATIONINDIA]
(
    @nvc_InventLocationDataAreaId   NVARCHAR(4),
    @tvp_LogisticsLocationRoleId [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS BIGINT
BEGIN
    DECLARE @bi_LogisticsLocationRecid BIGINT
    -- search primary addresss by delivery role, the primary address as the first choice
    SET @bi_LogisticsLocationRecid = (
        SELECT
            ll.[RECID]
        FROM [ax].[LOGISTICSLOCATION] AS ll
        INNER JOIN [ax].[DIRPARTYLOCATION] AS dl
            ON dl.[LOCATION] = ll.[RECID]
        INNER JOIN [ax].[COMPANYINFO] AS ci
            ON ci.[RECID] = dl.[PARTY]
        WHERE dl.[ISPOSTALADDRESS] = 1
            AND dl.[ISPRIMARY] = 1
            AND dl.[ISROLEDELIVERY] = 1
            AND ci.[DATAAREA] = @nvc_InventLocationDataAreaId)

    IF (@bi_LogisticsLocationRecid is NULL)
    BEGIN
        -- search company default location by delivery role
        SET @bi_LogisticsLocationRecid = (
        SELECT
            ll.[RECID]
        FROM [ax].[COMPANYDEFAULTLOCATION] AS cdl
        INNER JOIN [ax].[COMPANYINFO] AS ci
            ON cdl.LEGALENTITY = ci.RECID
        INNER JOIN [ax].[DIRPARTYLOCATIONROLE] AS dlr
            ON cdl.PARTYLOCATIONROLE = dlr.RECID
        INNER JOIN @tvp_LogisticsLocationRoleId as llr
            ON dlr.[LOCATIONROLE] = llr.[RECID]
        INNER JOIN [ax].[DIRPARTYLOCATION] AS dl
            ON dlr.[PARTYLOCATION] = dl.[RECID]
        INNER JOIN [ax].[LOGISTICSLOCATION] AS ll
            ON dl.[LOCATION] = ll.[RECID]
        WHERE ci.[DATAAREA] = @nvc_InventLocationDataAreaId)

        IF (@bi_LogisticsLocationRecid is NULL)
        BEGIN
            -- search primary address
            SET @bi_LogisticsLocationRecid = (
            SELECT
                ll.[RECID]
            FROM [ax].[LOGISTICSLOCATION] AS ll
            INNER JOIN [ax].[DIRPARTYLOCATION] AS dl
                ON dl.[LOCATION] = ll.[RECID]
            INNER JOIN [ax].[COMPANYINFO] AS ci
                ON ci.[RECID] = dl.[PARTY]
            WHERE dl.[ISPOSTALADDRESS] = 1
                AND dl.[ISPRIMARY] = 1
                AND ci.[DATAAREA] = @nvc_INVENTLOCATIONDATAAREAID)

            IF (@bi_LogisticsLocationRecid is NULL)
            BEGIN
                SET @bi_LogisticsLocationRecid = 0
            End
        END
    END

    RETURN @bi_LogisticsLocationRecid
END;
GO
PRINT N'Creating [crt].[GETALLBLANKINVENTDIMID]...';


GO

-- Get the inventory dimension ID with all blank fields.
CREATE FUNCTION [crt].GETALLBLANKINVENTDIMID ()
RETURNS nvarchar(20)
BEGIN
    DECLARE @INVENTDIMID nvarchar(20);

    SELECT TOP 1 @INVENTDIMID = id.INVENTDIMID
        FROM [ax].INVENTDIM id
        WHERE id.INVENTDIMID IN ('AllBlank', 'AllBlank2') 
            AND id.CONFIGID = ''
            AND id.INVENTBATCHID = ''
            AND id.INVENTCOLORID = ''
            AND id.INVENTLOCATIONID = ''
            AND id.INVENTSERIALID = ''
            AND id.INVENTSITEID = ''
            AND id.INVENTSIZEID = ''
            AND id.INVENTSTYLEID = ''
            AND id.WMSLOCATIONID = ''
            AND id.WMSPALLETID = ''
        ORDER BY id.INVENTDIMID;

    IF @INVENTDIMID IS NULL
    BEGIN
        SELECT TOP 1 @INVENTDIMID = id.INVENTDIMID
        FROM [ax].INVENTDIM id
        WHERE id.CONFIGID = ''
            AND id.INVENTBATCHID = ''
            AND id.INVENTCOLORID = ''
            AND id.INVENTLOCATIONID = ''
            AND id.INVENTSERIALID = ''
            AND id.INVENTSITEID = ''
            AND id.INVENTSIZEID = ''
            AND id.INVENTSTYLEID = ''
            AND id.WMSLOCATIONID = ''
            AND id.WMSPALLETID = ''
        ORDER BY id.INVENTDIMID
    END
            
    RETURN ISNULL(@INVENTDIMID, '');
END
GO
PRINT N'Creating [crt].[GETINVENTLOCATIONDEFAULTLOCATIONINDIA]...';


GO

CREATE FUNCTION [crt].[GETINVENTLOCATIONDEFAULTLOCATIONINDIA]
(
    @nv_InventLocationId    NVARCHAR(10),
    @nvc_InventLocationDataAreaId   NVARCHAR(4),
    @tvp_LogisticsLocationRoleId [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS BIGINT
BEGIN
    DECLARE @bi_LogisticsLocationRecid BIGINT
    -- search invent location default location
    SET @bi_LogisticsLocationRecid = (
        SELECT
            ll.[RECID]
        FROM [ax].[INVENTLOCATIONDEFAULTLOCATION] AS ildl
        INNER JOIN [ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE] AS illr
            ON ildl.[LOCATIONLOGISTICSLOCATIONROLE] = illr.[RECID]
        INNER JOIN @tvp_LogisticsLocationRoleId as llr
            ON illr.[LOCATIONROLE] = llr.[RECID]
        INNER JOIN [ax].INVENTLOCATIONLOGISTICSLOCATION AS illl
            ON illr.[LOCATIONLOGISTICSLOCATION] = illl.[RECID]
        INNER JOIN [ax].[LOGISTICSLOCATION] AS ll
            ON illl.[LOCATION] = ll.[RECID]
        WHERE ildl.[INVENTLOCATIONID] = @nv_InventLocationId
            AND ildl.[DATAAREAID] = @nvc_InventLocationDataAreaId)

    IF (@bi_LogisticsLocationRecid IS NULL)
    BEGIN
        -- search primary addresss
        SET @bi_LogisticsLocationRecid = (
            SELECT
                ll.[RECID]
            FROM [ax].[LOGISTICSLOCATION] AS ll
            INNER JOIN [ax].[INVENTLOCATIONLOGISTICSLOCATION] AS illl
                ON illl.[LOCATION] = ll.[RECID]
            INNER JOIN [ax].[INVENTLOCATION] AS il
                ON il.[RECID] = illl.[INVENTLOCATION]
            WHERE illl.[ISPOSTALADDRESS] = 1
                AND illl.[ISPRIMARY] = 1
                AND il.[INVENTLOCATIONID] = @nv_InventLocationId
                AND il.[DATAAREAID] = @nvc_InventLocationDataAreaId)

        IF (@bi_LogisticsLocationRecid IS NULL)
        BEGIN
            SET @bi_LogisticsLocationRecid = 0
        END
    END

    RETURN @bi_LogisticsLocationRecid
END;
GO
PRINT N'Creating [crt].[PRICEDATEEFFECTIVITYFROMTYPE]...';


GO

CREATE FUNCTION [crt].[PRICEDATEEFFECTIVITYFROMTYPE]()
RETURNS INT AS
BEGIN
    RETURN 1
END;
GO
PRINT N'Creating [crt].[GETINVENTSITEDEFAULTLOCATIONINDIA]...';


GO

CREATE FUNCTION [crt].[GETINVENTSITEDEFAULTLOCATIONINDIA]
(
    @nv_InventLocationId    NVARCHAR(10),
    @nvc_InventLocationDataAreaId   NVARCHAR(4),
    @tvp_LogisticsLocationRoleId [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS BIGINT
BEGIN
    DECLARE @bi_LogisticsLocationRecid BIGINT
    -- search invent site default location
    SET @bi_LogisticsLocationRecid = (
        SELECT
            ll.[RECID]
        FROM [ax].[INVENTSITEDEFAULTLOCATION] AS isdl
        INNER JOIN [ax].[INVENTLOCATION] AS il
            ON il.[INVENTSITEID] = isdl.[SITEID]
        INNER JOIN [ax].[INVENTSITELOGISTICSLOCATIONROLE] AS islr
            ON isdl.[SITELOGISTICSLOCATIONROLE] = islr.[RECID]
        INNER JOIN @tvp_LogisticsLocationRoleId as llr
            ON islr.[LOCATIONROLE] = llr.[RECID]
        INNER JOIN [ax].[INVENTSITELOGISTICSLOCATION] AS isll
            ON islr.[SITELOGISTICSLOCATION] = isll.[RECID]
        INNER JOIN [ax].[LOGISTICSLOCATION] AS ll
            ON isll.[LOCATION] = ll.[RECID]
        WHERE il.[INVENTLOCATIONID] = @nv_InventLocationId
            AND isdl.[DATAAREAID] = @nvc_InventLocationDataAreaId)

    IF (@bi_LogisticsLocationRecid IS NULL)
    BEGIN
        -- search primary addresss
        SET @bi_LogisticsLocationRecid = (
            SELECT
                ll.[RECID]
            FROM [ax].[LOGISTICSLOCATION] AS ll
            INNER JOIN [ax].[INVENTSITELOGISTICSLOCATION] AS isll
                ON isll.[LOCATION] = ll.[RECID]
            INNER JOIN [ax].[INVENTSITE] AS its
                ON its.[RECID] = isll.[SITE]
            INNER JOIN [ax].[INVENTLOCATION] AS il
                ON il.[INVENTSITEID] = its.[SITEID]
            WHERE isll.[ISPOSTALADDRESS] = 1
                AND isll.[ISPRIMARY] = 1
                AND il.[INVENTLOCATIONID] = @nv_InventLocationId
                AND il.[DATAAREAID] = @nvc_InventLocationDataAreaId
                AND its.[DATAAREAID] = @nvc_InventLocationDataAreaId)

        IF (@bi_LogisticsLocationRecid IS NULL)
        BEGIN
            SET @bi_LogisticsLocationRecid = 0
        END
    END

    RETURN @bi_LogisticsLocationRecid
END
GO
PRINT N'Creating [crt].[fn_kErrorDbCriticalError]...';


GO
create function [crt].fn_kErrorDbCriticalError () returns int as begin return 100001 end;
GO
PRINT N'Creating [crt].[REPLACEUNWANTEDCHARACTERS]...';


GO
CREATE FUNCTION [crt].[REPLACEUNWANTEDCHARACTERS]
(  
    @nvc_InputString NVARCHAR(MAX)
)
RETURNS NVARCHAR(MAX)
AS 
BEGIN
    WITH UnwantedCharacterList as
    (
        SELECT '\\' AS UnwantedCharacter
        UNION ALL
        SELECT '/' AS UnwantedCharacter
        UNION ALL
        SELECT ':' AS UnwantedCharacter
        UNION ALL
        SELECT '*' AS UnwantedCharacter
        UNION ALL
        SELECT '?' AS UnwantedCharacter
        UNION ALL
        SELECT '"' AS UnwantedCharacter
        UNION ALL
        SELECT '<' AS UnwantedCharacter
        UNION ALL
        SELECT '>' AS UnwantedCharacter
        UNION ALL
        SELECT '|' AS UnwantedCharacter
    )
    SELECT @nvc_InputString = REPLACE(@nvc_InputString, UnwantedCharacter, '^')
    FROM UnwantedCharacterList
    RETURN @nvc_InputString 
END
GO
PRINT N'Creating [crt].[GETTENDERDECLARATIONCALCULATIONTYPE]...';


GO

CREATE FUNCTION [crt].[GETTENDERDECLARATIONCALCULATIONTYPE]
(
	@bi_ChannelId						bigint
)

RETURNS INT

BEGIN
DECLARE @TENDERDECLARATIONCALCTYPE as INT 

	SET @TENDERDECLARATIONCALCTYPE = (SELECT TENDERDECLARATIONCALCULATION
	FROM	[ax].[RETAILSTORETABLE]
	WHERE	RECID = @bi_ChannelId)

	RETURN @TENDERDECLARATIONCALCTYPE
END
GO
PRINT N'Creating [crt].[GETCATEGORYIMAGEATTRIBUTEDEFAULTVALUE]...';


GO
CREATE FUNCTION [crt].GETCATEGORYIMAGEATTRIBUTEDEFAULTVALUE()
RETURNS nvarchar(MAX)
BEGIN
    DECLARE @IMAGE nvarchar(MAX);

    SELECT  TOP 1 @IMAGE = IMAGEURL
    FROM AX.RETAILMEDIATEMPLATE 
    WHERE MASTERENTITYTYPE = 13  -- 13 means Category entity type, refer to AX enum RetailMediaMasterEntity.

    RETURN ISNULL(@IMAGE, '');
END
GO
PRINT N'Creating [crt].[GETCUSTOMERIMAGEATTRIBUTEDEFAULTVALUE]...';


GO
CREATE FUNCTION [crt].[GETCUSTOMERIMAGEATTRIBUTEDEFAULTVALUE] ()
RETURNS nvarchar(MAX)
BEGIN
    DECLARE @IMAGE nvarchar(MAX);

    SELECT  TOP 1 @IMAGE = IMAGEURL
    FROM AX.RETAILMEDIATEMPLATE 
    WHERE MASTERENTITYTYPE = 16 -- 16 means Customer entity type, refer to AX enum RetailMediaMasterEntity.

    RETURN ISNULL(@IMAGE, '');
END
GO
PRINT N'Creating [crt].[GETMAXAXDATETIME]...';


GO

CREATE FUNCTION [crt].GETMAXAXDATETIME
(
)
RETURNS DATETIME
BEGIN
    DECLARE @MaxAxDateTime DATETIME;
    SET @MaxAxDateTime = CONVERT(DATETIME, '2154-12-31 23:59:59.000', 20);
    
    RETURN @MaxAxDateTime
END
GO
PRINT N'Creating [crt].[PRICEDATEEFFECTIVITYTOTYPE]...';


GO



CREATE FUNCTION [crt].[PRICEDATEEFFECTIVITYTOTYPE]()
RETURNS INT AS
BEGIN
    RETURN 2
END;
GO
PRINT N'Creating [crt].[GETMINAXDATETIME]...';


GO

CREATE FUNCTION [crt].GETMINAXDATETIME
(
)
RETURNS DATETIME
BEGIN
    DECLARE @MinAxDateTime DATETIME;
    SET @MinAxDateTime = CONVERT(DATETIME, '1900-01-01 00:00:00.000', 20);
    
    RETURN @MinAxDateTime
END
GO
PRINT N'Creating [crt].[fn_kErrorVersionMismatchError]...';


GO
create function [crt].fn_kErrorVersionMismatchError () returns int as begin return 100004 end;
GO
PRINT N'Creating [crt].[GETPRODUCTIMAGEATTRIBUTEDEFAULTVALUE]...';


GO
CREATE FUNCTION [crt].GETPRODUCTIMAGEATTRIBUTEDEFAULTVALUE()
RETURNS nvarchar(1999)
BEGIN
    DECLARE @IMAGE nvarchar(1999);

    SELECT TOP 1 @IMAGE = ERTV.TEXTVALUE
    FROM ax.RETAILSHAREDPARAMETERS RSP 
    INNER JOIN ax.ECORESATTRIBUTEGROUPATTRIBUTE AGA on RSP.PRODUCTDEFAULTATTRIBUTEGROUP = AGA.ATTRIBUTEGROUP
    INNER JOIN ax.ECORESATTRIBUTE ERA on ERA.RECID = AGA.ATTRIBUTE AND ERA.ATTRIBUTETYPE = RSP.IMAGESATTRIBUTETYPE
    INNER JOIN ax.ECORESTEXTVALUE ERTV on AGA.DEFAULTVALUE = ERTV.RECID
    WHERE RSP.[KEY] = 0 -- no key specified in the Retail shared parameters.

    RETURN ISNULL(@IMAGE, '');
END
GO
PRINT N'Creating [crt].[GETMAXAXDATE]...';


GO

CREATE FUNCTION [crt].GETMAXAXDATE 
(
)
RETURNS DATE
BEGIN
    DECLARE @MaxAxDate DATE;
    SET @MaxAxDate = [crt].GETMAXAXDATETIME() -- Truncated to DATE automatically by SQL

    RETURN @MaxAxDate
END
GO
PRINT N'Creating [crt].[GETMINAXDATE]...';


GO

CREATE FUNCTION [crt].GETMINAXDATE 
(
)
RETURNS DATE
BEGIN
    DECLARE @MinAxDate DATE;
    SET @MinAxDate = [crt].GETMINAXDATETIME() -- Truncated to DATE automatically by SQL

    RETURN @MinAxDate
END
GO
PRINT N'Creating [crt].[GETUNITOFMEASURECONVERSIONS]...';


GO

-- Get unit of measure conversions for the collection of specified items.
CREATE FUNCTION [crt].GETUNITOFMEASURECONVERSIONS
(
    @nvc_DataAreaId             NVARCHAR(4),
    @tvp_ItemUnitConversions    [crt].ITEMUNITCONVERSIONTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    SELECT
        u.[ITEMID],
        u.[FROMUNITID],
        u.[TOUNITID],
        u.[FROMUOMSYMBOL],
        u.[TOUOMSYMBOL],
        u.[ISBACKWARD],
        uomc.[RECID],
        uomc.[DENOMINATOR],
        uomc.[FACTOR],
        uomc.[FROMUNITOFMEASURE],
        uomc.[INNEROFFSET],
        uomc.[NUMERATOR],
        uomc.[OUTEROFFSET],
        uomc.[PRODUCT],
        uomc.[ROUNDING],
        uomc.[TOUNITOFMEASURE],
        uomc.[ROWVERSION]
    FROM
    (
        SELECT
            iuc.ITEMID,
            iuc.FROMUNITID,
            iuc.TOUNITID,
            uom_from.SYMBOL AS FROMUOMSYMBOL,
            uom_to.SYMBOL AS TOUOMSYMBOL,
            CASE
                WHEN uomc1.RECID IS NOT NULL THEN 0
                WHEN uomc2.RECID IS NOT NULL THEN 1
                WHEN uomc3.RECID IS NOT NULL THEN 0
                WHEN uomc4.RECID IS NOT NULL THEN 1
            END ISBACKWARD,
            CASE
                WHEN uomc1.RECID IS NOT NULL THEN uomc1.RECID
                WHEN uomc2.RECID IS NOT NULL THEN uomc2.RECID
                WHEN uomc3.RECID IS NOT NULL THEN uomc3.RECID
                WHEN uomc4.RECID IS NOT NULL THEN uomc4.RECID
            END RECID
        FROM @tvp_ItemUnitConversions iuc
        INNER JOIN [ax].UNITOFMEASURE uom_from ON uom_from.SYMBOL = iuc.FROMUNITID
        INNER JOIN [ax].UNITOFMEASURE uom_to ON uom_to.SYMBOL = iuc.TOUNITID
        LEFT JOIN [ax].INVENTTABLE it ON it.ITEMID = iuc.ITEMID AND it.DATAAREAID = @nvc_DataAreaId
        LEFT JOIN [ax].UNITOFMEASURECONVERSION uomc1
            ON uomc1.FROMUNITOFMEASURE = uom_from.RECID
                AND uomc1.TOUNITOFMEASURE = uom_to.RECID
                AND uomc1.PRODUCT = it.PRODUCT
        LEFT JOIN [ax].UNITOFMEASURECONVERSION uomc2
            ON uomc2.FROMUNITOFMEASURE = uom_to.RECID
                AND uomc2.TOUNITOFMEASURE = uom_from.RECID
                AND uomc2.PRODUCT = it.PRODUCT
        LEFT JOIN [ax].UNITOFMEASURECONVERSION uomc3
            ON uomc3.FROMUNITOFMEASURE = uom_from.RECID
                AND uomc3.TOUNITOFMEASURE = uom_to.RECID
                AND uomc3.PRODUCT = 0
        LEFT JOIN [ax].UNITOFMEASURECONVERSION uomc4
            ON uomc4.FROMUNITOFMEASURE = uom_to.RECID
                AND uomc4.TOUNITOFMEASURE = uom_from.RECID
                AND uomc4.PRODUCT = 0
    ) U
    INNER JOIN [ax].UNITOFMEASURECONVERSION uomc ON uomc.RECID = u.RECID
GO
PRINT N'Creating [crt].[CUSTOMERSEARCHASYNC]...';


GO
--DROP FUNCTION [crt].[CUSTOMERSEARCHASYNC]
--GO

CREATE FUNCTION [crt].[CUSTOMERSEARCHASYNC]
(
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATETIME,
    @nvc_SearchText             NVARCHAR(255)  -- length is 255 because [ax].LOGISTICSELECTRONICADDRESS.LOCATOR has a length of 255 and is the longest compared string.
)
RETURNS TABLE
RETURN
    SELECT PARTYID, 1 AS ISASYNCCUSTOMER, SUM(RANKING) AS RANKING
    FROM (
        -- search by account number
        SELECT
            [ct].REPLICATIONCOUNTERFROMORIGIN AS PARTYID, COALESCE([CustomerAccountAsyncFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].RETAILASYNCCUSTOMER ct
		LEFT JOIN FREETEXTTABLE([ax].RETAILASYNCCUSTOMER, [CUSTACCOUNTASYNC], @nvc_SearchText) CustomerAccountAsyncFullTextKey_Key ON [ct].REPLICATIONCOUNTERFROMORIGIN = [CustomerAccountAsyncFullTextKey_Key].[KEY]
        WHERE CONTAINS([ct].CUSTACCOUNTASYNC, @nvc_SearchText)

        UNION ALL

        -- search by customer name 
        SELECT
            [ct].REPLICATIONCOUNTERFROMORIGIN AS PARTYID, COALESCE([CustomerNameFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].RETAILASYNCCUSTOMER ct
		LEFT JOIN FREETEXTTABLE([ax].RETAILASYNCCUSTOMER, [CUSTNAME], @nvc_SearchText) CustomerNameFullTextKey_Key ON [ct].REPLICATIONCOUNTERFROMORIGIN = [CustomerNameFullTextKey_Key].[KEY]
        WHERE CONTAINS([ct].CUSTNAME, @nvc_SearchText)

        UNION ALL

        -- search by customer name with FREETEXT to match inflections of names
        SELECT
            [ct].REPLICATIONCOUNTERFROMORIGIN AS PARTYID, COALESCE([CustomerNameFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].RETAILASYNCCUSTOMER ct
		LEFT JOIN FREETEXTTABLE([ax].RETAILASYNCCUSTOMER, [CUSTNAME], @nvc_SearchText) CustomerNameFullTextKey_Key ON [ct].REPLICATIONCOUNTERFROMORIGIN = [CustomerNameFullTextKey_Key].[KEY]
        WHERE FREETEXT([ct].CUSTNAME, @nvc_SearchText)

        UNION ALL

        -- search by phone number
        SELECT
            [ct].REPLICATIONCOUNTERFROMORIGIN AS PARTYID, COALESCE([CustomerPhoneFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].RETAILASYNCCUSTOMER ct
		LEFT JOIN FREETEXTTABLE([ax].RETAILASYNCCUSTOMER, [PHONE], @nvc_SearchText) CustomerPhoneFullTextKey_Key ON [ct].REPLICATIONCOUNTERFROMORIGIN = [CustomerPhoneFullTextKey_Key].[KEY]
        WHERE CONTAINS([ct].PHONE, @nvc_SearchText)

        UNION ALL

        -- search by receipt email
        SELECT
            [ct].REPLICATIONCOUNTERFROMORIGIN AS PARTYID, COALESCE([CustomerEmailFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].RETAILASYNCCUSTOMER ct
		LEFT JOIN FREETEXTTABLE([ax].RETAILASYNCCUSTOMER, [EMAIL], @nvc_SearchText) CustomerEmailFullTextKey_Key ON [ct].REPLICATIONCOUNTERFROMORIGIN = [CustomerEmailFullTextKey_Key].[KEY]
        WHERE CONTAINS([ct].EMAIL, @nvc_SearchText)

        UNION ALL

        -- search by address
        SELECT
            [ct].REPLICATIONCOUNTERFROMORIGIN as PARTYID, COALESCE([CustomerStreetFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].RETAILASYNCCUSTOMER ct
        LEFT OUTER JOIN [ax].RETAILASYNCADDRESS adr ON [ct].CUSTACCOUNTASYNC = [adr].CUSTACCOUNTASYNC
		LEFT JOIN FREETEXTTABLE([ax].RETAILASYNCADDRESS, [STREET], @nvc_SearchText) CustomerStreetFullTextKey_Key ON [ct].REPLICATIONCOUNTERFROMORIGIN = [CustomerStreetFullTextKey_Key].[KEY]
        WHERE CONTAINS([adr].[STREET], @nvc_SearchText)

    ) results
    GROUP BY [results].PARTYID
GO
PRINT N'Creating [crt].[GETRETAILTRANSACTIONSALESTRANSQTYSUM]...';


GO

CREATE FUNCTION [crt].[GETRETAILTRANSACTIONSALESTRANSQTYSUM]
(
    @tvp_ids crt.ITEMQUANTITYTABLETYPE READONLY
)
RETURNS TABLE
RETURN

    SELECT
        rtst.ITEMID,
        ids.VARIANTINVENTDIMID,
        rtst.INVENTLOCATIONID,
        SUM(rtst.QTY) AS QUANTITY,
        rtst.DATAAREAID
    FROM @tvp_ids ids
    INNER JOIN [ax].RETAILTRANSACTIONSALESTRANS rtst ON ids.ITEMID = rtst.ITEMID
    INNER JOIN [ax].RETAILINVENTAVAILABILITYPARAMETERS riap ON riap.[KEY] = 0
    LEFT JOIN [ax].INVENTDIMCOMBINATION idc ON idc.RETAILVARIANTID = rtst.VARIANTID AND idc.DATAAREAID = rtst.DATAAREAID
    LEFT JOIN [ax].RETAILTRANSACTIONORDERSTATUS rtos
        ON rtos.STORE = rtst.STORE
        AND rtos.TERMINAL = rtst.TERMINALID
        AND rtos.TRANSACTIONID = rtst.TRANSACTIONID
    WHERE
        rtst.TRANSACTIONSTATUS != 1         -- exclude voided lines
        AND ((rtst.VARIANTID = '' AND ids.VARIANTINVENTDIMID = '') OR idc.INVENTDIMID = ids.VARIANTINVENTDIMID)
        AND (
            -- Sales order creation not yet confirmed from AX
            rtos.LASTINVENTTRANS IS NULL

            -- Sales order creation confirmed but AX availability calculated before sales order creation
            OR riap.LASTINVENTTRANS < rtos.LASTINVENTTRANS
        )
    GROUP BY rtst.DATAAREAID, rtst.ITEMID, ids.VARIANTINVENTDIMID, rtst.INVENTLOCATIONID
GO
PRINT N'Creating [crt].[GETCATALOGPRODUCTCATEGORY]...';


GO

-- Gets catalog product's categories
CREATE FUNCTION [crt].[GETCATALOGPRODUCTCATEGORY]
(
	@bi_ChannelId		BIGINT,
	@b_ProductIdsPassed BIT, -- 1 when @tvp_ProductIds parameter is passed, 0 otherwise.
	@tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN

		SELECT
			rpcp.CATALOG,
			rpcp.PRODUCT,
			rpcpc.CATEGORY,
			rpcpc.CATEGORYHIERARCHY,
			rpcpc.INCLUDEEXCLUDETYPE
		FROM [ax].RETAILPUBCATALOGPRODUCT rpcp
		JOIN @tvp_ProductIds AS ids on @b_ProductIdsPassed = 0 OR rpcp.PRODUCT = ids.RECID
		JOIN [ax].RETAILPUBCATALOGPRODUCTCATEGORY rpcpc ON rpcp.ORIGIN = rpcpc.CATALOGPRODUCT
GO
PRINT N'Creating [crt].[GETUNITSOFMEASURE]...';


GO

CREATE FUNCTION [crt].[GETUNITSOFMEASURE]
(
    @nvc_LanguageId NVARCHAR(7)
)
RETURNS TABLE
RETURN
    SELECT
        [uom].SYMBOL,
        [uom].DECIMALPRECISION,
        [uom].RECID,
        [uomt].DESCRIPTION
    FROM [ax].UNITOFMEASURE uom
    LEFT OUTER JOIN [ax].UNITOFMEASURETRANSLATION uomt ON uom.RECID = uomt.UNITOFMEASURE AND ([uomt].LANGUAGEID IS NULL OR [uomt].LANGUAGEID = @nvc_LanguageId)
GO
PRINT N'Creating [crt].[GETITEMINVENTORYSETTINGS]...';


GO

-- Get inventory settings for items based on customer, item and channel setup.
CREATE FUNCTION [crt].GETITEMINVENTORYSETTINGS
(
    @bi_ChannelId               BIGINT,
    @tvp_ItemVariantInventDims  [crt].ITEMVARIANTINVENTDIMTABLETYPE READONLY ,
    @nvc_CustomerAccountNumber  NVARCHAR(20)
)
RETURNS TABLE
RETURN
    SELECT
        IVID.ITEMID
        ,IVID.VARIANTINVENTDIMID
        ,CT.INVENTLOCATION AS CUSTOMERWAREHOUSE
        ,CT.INVENTSITEID AS CUSTOMERSITE
        ,ID_WAREHOUSE.INVENTLOCATIONID AS ITEMWAREHOUSE
        ,ID_SITE.INVENTSITEID AS ITEMSITE
        ,RCT.INVENTLOCATION AS CHANNELWAREHOUSE
        ,IL_CHANNEL.INVENTSITEID AS CHANNELSITE
        ,IISS_WAREHOUSE.MANDATORYINVENTLOCATION AS ISITEMWAREHOUSEMANDATORY
        ,IISS_SITE.MANDATORYINVENTSITE AS ISITEMSITEMANDATORY
    FROM @tvp_ItemVariantInventDims IVID
    JOIN [ax].RETAILCHANNELTABLE CHANNEL ON CHANNEL.RECID = @bi_ChannelId
    LEFT JOIN [ax].INVENTITEMSALESSETUP IISS_SITE ON IISS_SITE.ITEMID = IVID.ITEMID AND IISS_SITE.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID AND IISS_SITE.INVENTDIMID = [crt].GETALLBLANKINVENTDIMID() 
    LEFT JOIN [ax].INVENTDIM ID_SITE ON ID_SITE.INVENTDIMID = IISS_SITE.INVENTDIMIDDEFAULT AND ID_SITE.DATAAREAID = IISS_SITE.DATAAREAID
    LEFT JOIN [ax].INVENTITEMSALESSETUP IISS_WAREHOUSE ON IISS_WAREHOUSE.ITEMID = IVID.ITEMID AND IISS_WAREHOUSE.INVENTDIMID = IISS_SITE.INVENTDIMIDDEFAULT AND IISS_WAREHOUSE.DATAAREAID = IISS_SITE.DATAAREAID
    LEFT JOIN [ax].INVENTDIM ID_WAREHOUSE ON ID_WAREHOUSE.INVENTDIMID = IISS_WAREHOUSE.INVENTDIMIDDEFAULT AND ID_WAREHOUSE.DATAAREAID = IISS_WAREHOUSE.DATAAREAID
    LEFT JOIN [ax].CUSTTABLE CT ON CT.ACCOUNTNUM = @nvc_CustomerAccountNumber AND CT.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
    LEFT JOIN [ax].RETAILPUBRETAILCHANNELTABLE RCT ON RCT.ORIGINID = @bi_ChannelId
    LEFT JOIN [ax].INVENTLOCATION IL_CHANNEL ON IL_CHANNEL.INVENTLOCATIONID = RCT.INVENTLOCATION AND IL_CHANNEL.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
GO
PRINT N'Creating [crt].[GETPRODUCTIDSWITHPUBLISHEDATTRIBUTEVALUECHANGES]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSWITHPUBLISHEDATTRIBUTEVALUECHANGES]
(
    @watermark AS [crt].[PRODUCTCHANGETRACKINGANCHORSET] READONLY 
)
RETURNS TABLE
RETURN
	-- get ids of changed product records
	SELECT
		rppav.PRODUCT AS RECID,
		rppav.ROWVERSION AS SEQUENCE 
	FROM ax.RETAILPUBPRODUCTATTRIBUTEVALUE rppav
    JOIN @watermark w ON rppav.ROWVERSION > w.RETAILPUBPRODUCTATTRIBUTEVALUE
GO
PRINT N'Creating [crt].[GETASSORTEDINVENTDIMCOMBINATIONFORITEM]...';


GO

-- Returns the row from AssortedInventDimCombination for the specified channel, date, and item id.
CREATE FUNCTION [crt].[GETASSORTEDINVENTDIMCOMBINATIONFORITEM]
(
	@bi_ChannelId BIGINT,
	@dt_ChannelDate DATE,
	@nvc_ItemId NVARCHAR(20)
)
RETURNS TABLE
RETURN
    SELECT RCT.RECID AS STORERECID, IDC.ITEMID, IDC.INVENTDIMID, IDC.DISTINCTPRODUCTVARIANT, IDC.CREATEDDATETIME, IDC.DATAAREAID, IDC.RECID, IDC.RETAILVARIANTID
    FROM [ax].RETAILCHANNELTABLE RCT
		INNER JOIN [ax].INVENTTABLE IT ON IT.DATAAREAID = RCT.INVENTLOCATIONDATAAREAID
		INNER JOIN [ax].INVENTDIMCOMBINATION IDC ON IDC.ITEMID = IT.ITEMID AND IDC.DATAAREAID = IT.DATAAREAID
    WHERE RCT.RECID = @bi_ChannelId
		AND IT.ITEMID = @nvc_ItemId
	AND (EXISTS
    (
		SELECT ral.RECID
		FROM [ax].RETAILASSORTMENTLOOKUP ral
		INNER JOIN [ax].RETAILASSORTMENTLOOKUPCHANNELGROUP ralcg on ralcg.ASSORTMENTID = ral.ASSORTMENTID
		LEFT OUTER JOIN [ax].INVENTDIMCOMBINATION idc on idc.ITEMID = it.ITEMID and idc.DATAAREAID = it.DATAAREAID and (ral.VARIANTID = idc.DISTINCTPRODUCTVARIANT or ral.VARIANTID = 0)
		WHERE ral.PRODUCTID = IT.PRODUCT
			AND ralcg.OMOPERATINGUNITID = rct.OMOPERATINGUNITID
			AND @dt_ChannelDate >= ral.VALIDFROM and @dt_ChannelDate <= ral.VALIDTO -- Enforce date effectivity
		GROUP BY ralcg.ASSORTMENTID, idc.INVENTDIMID, ral.VARIANTID, ral.VALIDFROM, ral.VALIDTO, ral.RECID
		HAVING MIN(ral.LINETYPE) = 1 -- Remove excluded products
    )
	OR EXISTS (
        SELECT TAP.PRODUCTID
        FROM [crt].TMPASSORTEDPRODUCTS TAP
        WHERE
            TAP.PRODUCTID = IT.PRODUCT AND
            TAP.CHANNELID = RCT.RECID AND
            @dt_ChannelDate BETWEEN TAP.VALIDFROM and TAP.VALIDTO -- Enforce date effectivity
        ))
GO
PRINT N'Creating [crt].[GETPRODUCTMEDIABLOBS]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTMEDIABLOBS]
(
    @bi_ChannelId    BIGINT,
    @bi_CatalogId    BIGINT,
    @bi_ProductId    BIGINT,
    @nvc_LanguageId  NVARCHAR(7)
)
RETURNS TABLE
RETURN
    SELECT
        'OFFLINEIMAGE' AS MEDIATYPE,
        CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("[erpi].[MEDIUMSIZE]")))', 'NVARCHAR(MAX)') AS CONTENT,
        erpi.DEFAULTIMAGE AS ISDEFAULT
    FROM [ax].RETAILCHANNELTABLE rct
    INNER JOIN [ax].INVENTTABLE it ON it.PRODUCT = @bi_ProductId AND it.DATAAREAID = rct.INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTIMAGE erpi ON erpi.REFRECORD = it.RECID
    WHERE rct.RECID = @bi_ChannelId
GO
PRINT N'Creating [crt].[CUSTOMERSEARCH]...';


GO
CREATE FUNCTION [crt].[CUSTOMERSEARCH]
(
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATETIME,
    @nvc_SearchText             NVARCHAR(255)  -- length is 255 because [ax].LOGISTICSELECTRONICADDRESS.LOCATOR has a length of 255 and is the longest compared string.
)
RETURNS TABLE
RETURN
    SELECT PARTYID, 0 AS ISASYNCCUSTOMER, SUM(RANKING) AS RANKING
    FROM (
        -- search by account number
        SELECT
            [ct].PARTY AS PARTYID, COALESCE([AccountNumberFullText_Key].[RANK], 0) AS RANKING
        FROM [ax].CUSTTABLE ct
        INNER JOIN [ax].DIRPARTYTABLE dpt ON [ct].PARTY = [dpt].RECID
        INNER JOIN (SELECT PARTY, ADDRESSBOOK FROM [ax].DIRADDRESSBOOKPARTY WHERE PARTY NOT IN (SELECT RECID FROM [ax].OMINTERNALORGANIZATION)) dap on [dpt].RECID = [dap].PARTY
        INNER JOIN [ax].RETAILSTOREADDRESSBOOK rsab on [dap].ADDRESSBOOK = [rsab].ADDRESSBOOK AND [rsab].ADDRESSBOOKTYPE = 0  -- Customer address
        LEFT JOIN FREETEXTTABLE([ax].CUSTTABLE, [ACCOUNTNUM], @nvc_SearchText) AccountNumberFullText_Key ON [ct].RECID = [AccountNumberFullText_Key].[KEY]
        WHERE CONTAINS([ct].ACCOUNTNUM, @nvc_SearchText) AND [rsab].STORERECID = @bi_ChannelId

        UNION ALL

        -- search by customer name with CONTAINS to match partial names
        SELECT
            [dpt].RECID AS PARTYID, COALESCE([CustomerNameFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].DIRPARTYTABLE dpt
        INNER JOIN (SELECT PARTY, ADDRESSBOOK FROM [ax].DIRADDRESSBOOKPARTY WHERE PARTY NOT IN (SELECT RECID FROM [ax].OMINTERNALORGANIZATION)) dap on [dpt].RECID = [dap].PARTY
        LEFT JOIN FREETEXTTABLE([ax].DIRPARTYTABLE, [NAME], @nvc_SearchText) CustomerNameFullTextKey_Key ON [dpt].RECID = [CustomerNameFullTextKey_Key].[KEY]
        WHERE CONTAINS([dpt].NAME, @nvc_SearchText)

        UNION ALL

        -- search by customer name with FREETEXT to match inflections of names
        SELECT
            [dpt].RECID AS PARTYID, COALESCE([CustomerNameFullTextKey_Key].[RANK], 0) AS RANKING
        FROM [ax].DIRPARTYTABLE dpt
        INNER JOIN (SELECT PARTY, ADDRESSBOOK FROM [ax].DIRADDRESSBOOKPARTY WHERE PARTY NOT IN (SELECT RECID FROM [ax].OMINTERNALORGANIZATION)) dap on [dpt].RECID = [dap].PARTY
        LEFT JOIN FREETEXTTABLE([ax].DIRPARTYTABLE, [NAME], @nvc_SearchText) CustomerNameFullTextKey_Key ON [dpt].RECID = [CustomerNameFullTextKey_Key].[KEY]
        WHERE FREETEXT([dpt].NAME, @nvc_SearchText)

        UNION ALL

        -- search by phone or email
        SELECT
            [ct].PARTY AS PARTYID, COALESCE([ElectronicAddressFullText_Key].[RANK], 0) AS RANKING
        FROM [ax].DIRPARTYTABLE dpt
        INNER JOIN [ax].CUSTTABLE ct ON [ct].PARTY = [dpt].RECID
        INNER JOIN (SELECT PARTY, ADDRESSBOOK FROM [ax].DIRADDRESSBOOKPARTY WHERE PARTY NOT IN (SELECT RECID FROM [ax].OMINTERNALORGANIZATION)) dap on [dpt].RECID = [dap].PARTY
        INNER JOIN [ax].RETAILSTOREADDRESSBOOK rsab on [dap].ADDRESSBOOK = [rsab].ADDRESSBOOK AND [rsab].ADDRESSBOOKTYPE = 0  -- Customer address
        INNER JOIN [ax].DIRPARTYLOCATION dpl ON [dpt].RECID = [dpl].PARTY
        INNER JOIN [ax].LOGISTICSLOCATION ll ON [dpl].LOCATION = [ll].RECID
        INNER JOIN [ax].LOGISTICSELECTRONICADDRESS lea ON [lea].LOCATION = [ll].RECID AND [lea].ISPRIVATE = 0 AND ([lea].[TYPE] = 1 /* phone */ OR [lea].[TYPE] = 2 /* e-mail */ OR [lea].[TYPE] = 3 /* URL */)
        LEFT JOIN FREETEXTTABLE([ax].LOGISTICSELECTRONICADDRESS, [LOCATOR], @nvc_SearchText) ElectronicAddressFullText_Key ON [lea].RECID = [ElectronicAddressFullText_Key].[KEY]
        WHERE CONTAINS([lea].LOCATOR, @nvc_SearchText) AND [rsab].STORERECID = @bi_ChannelId

        UNION ALL

        -- search by address
        SELECT
            [ct].PARTY as PARTYID, COALESCE([PostalAddressFullText_Key].[RANK], 0) AS RANKING
        FROM [ax].DIRPARTYTABLE dpt
        INNER JOIN [ax].CUSTTABLE ct on [ct].PARTY = [dpt].RECID
        INNER JOIN (SELECT PARTY, ADDRESSBOOK FROM [ax].DIRADDRESSBOOKPARTY WHERE PARTY NOT IN (SELECT RECID FROM [ax].OMINTERNALORGANIZATION)) dap on [dpt].RECID = [dap].PARTY
        INNER JOIN [ax].RETAILSTOREADDRESSBOOK rsab on [dap].ADDRESSBOOK = [rsab].ADDRESSBOOK AND [rsab].ADDRESSBOOKTYPE = 0  -- Customer address
        INNER JOIN [ax].DIRPARTYLOCATION dpl ON [dpt].RECID = [dpl].PARTY
        INNER JOIN [ax].LOGISTICSLOCATION ll ON [dpl].LOCATION = [ll].RECID
        INNER JOIN [ax].LOGISTICSPOSTALADDRESS lpa on [lpa].LOCATION = [ll].RECID AND [lpa].ISPRIVATE = 0 AND @dt_ChannelDate BETWEEN [lpa].VALIDFROM AND [lpa].VALIDTO AND [ll].ISPOSTALADDRESS = 1
        LEFT JOIN FREETEXTTABLE([ax].LOGISTICSPOSTALADDRESS, [ADDRESS], @nvc_SearchText) PostalAddressFullText_Key ON [lpa].RECID = [PostalAddressFullText_Key].[KEY]
        WHERE CONTAINS([lpa].[ADDRESS], @nvc_SearchText) AND [rsab].STORERECID = @bi_ChannelId

        UNION ALL

        -- search by loyalty card number
        SELECT
            [ct].PARTY AS PARTYID, COALESCE([LoyaltyCardFullText_Key].[RANK], 0) AS RANKING
        FROM [ax].RETAILLOYALTYCARD rlc
        INNER JOIN [ax].DIRPARTYTABLE dpt ON [rlc].PARTY = [dpt].RECID
        INNER JOIN [ax].CUSTTABLE ct ON [ct].PARTY = [dpt].RECID
        INNER JOIN (SELECT PARTY, ADDRESSBOOK FROM [ax].DIRADDRESSBOOKPARTY WHERE PARTY NOT IN (SELECT RECID FROM [ax].OMINTERNALORGANIZATION)) dap on [dpt].RECID = [dap].PARTY
        INNER JOIN [ax].RETAILSTOREADDRESSBOOK rsab on [dap].ADDRESSBOOK = [rsab].ADDRESSBOOK AND [rsab].ADDRESSBOOKTYPE = 0  -- Customer address
        LEFT JOIN FREETEXTTABLE([ax].RETAILLOYALTYCARD, [CARDNUMBER], @nvc_SearchText) LoyaltyCardFullText_Key ON [rlc].RECID = [LoyaltyCardFullText_Key].[KEY]
        WHERE CONTAINS([rlc].CARDNUMBER, @nvc_SearchText) AND [rsab].STORERECID = @bi_ChannelId
    ) results
    GROUP BY [results].PARTYID
GO
PRINT N'Creating [crt].[GETNONCATALOGPRODUCTCATEGORY]...';


GO

-- Gets noncatalog product's categories
CREATE FUNCTION [crt].[GETNONCATALOGPRODUCTCATEGORY]
(
    @bi_ChannelId       BIGINT,
    @b_ProductIdsPassed BIT, -- 1 when @tvp_ProductIds parameter is passed, 0 otherwise.
    @tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN

    SELECT
        erpc.PRODUCT,
        erpc.CATEGORY,
		erpc.CATEGORYHIERARCHY
    FROM [ax].ECORESPRODUCTCATEGORY AS erpc
    JOIN @tvp_ProductIds AS ids ON @b_ProductIdsPassed = 0 OR ids.RECID = erpc.PRODUCT
	JOIN [ax].RETAILPUBECORESCATEGORY AS rperc ON rperc.CHANNEL = @bi_ChannelId AND rperc.ORIGINID = erpc.CATEGORY 
		 
    UNION ALL

    SELECT
        erdpv.RECID AS PRODUCT,
        erpc.CATEGORY,
		erpc.CATEGORYHIERARCHY
    FROM [ax].ECORESDISTINCTPRODUCTVARIANT AS erdpv
    JOIN @tvp_ProductIds AS ids ON @b_ProductIdsPassed = 0 OR erdpv.RECID = ids.RECID
    JOIN [ax].ECORESPRODUCTCATEGORY AS erpc ON erpc.PRODUCT = erdpv.PRODUCTMASTER
	JOIN [ax].RETAILPUBECORESCATEGORY AS rperc ON rperc.CHANNEL = @bi_ChannelId AND rperc.ORIGINID = ERPC.CATEGORY
GO
PRINT N'Creating [crt].[GETPRODUCTIDSWITHCATEGORYCHANGES]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSWITHCATEGORYCHANGES]
(
    @watermark AS [crt].[PRODUCTCHANGETRACKINGANCHORSET] READONLY 
)
RETURNS TABLE
RETURN
	SELECT 
		erp.RECID,
		erp.ROWVERSION AS SEQUENCE
	FROM ax.ECORESPRODUCT erp
		INNER JOIN ax.ECORESPRODUCTCATEGORY erpc ON erpc.PRODUCT = erp.RECID
		WHERE erpc.ROWVERSION > (SELECT ECORESPRODUCTCATEGORY FROM @watermark)
GO
PRINT N'Creating [crt].[SEARCHPRODUCTSBYITEMID]...';


GO

CREATE FUNCTION [crt].[SEARCHPRODUCTSBYITEMID]
(
    @nvc_DataAreaId     NVARCHAR(4),
    @tvp_ItemIds        [crt].ITEMIDSEARCHTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    -- Retrieve product identifiers for item identifiers.
    SELECT [it].PRODUCT AS RECID
    FROM @tvp_ItemIds ids
    INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [ids].ITEMID AND [it].DATAAREAID = @nvc_DataAreaId
    WHERE [ids].INVENTDIMID = ''

    UNION ALL

    -- Retrieve variant identifiers for inventory dimensions.
    SELECT [idc].DISTINCTPRODUCTVARIANT AS RECID
    FROM @tvp_ItemIds ids
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].ITEMID = [ids].ITEMID AND [idc].INVENTDIMID = [ids].INVENTDIMID AND [idc].DATAAREAID = @nvc_DataAreaId
    WHERE [ids].INVENTDIMID != ''
GO
PRINT N'Creating [crt].[CONVERTATTRIBUTEVALUESTOREFINERVALUES]...';


GO

CREATE FUNCTION [crt].[CONVERTATTRIBUTEVALUESTOREFINERVALUES]
(
    @bi_ChannelId               BIGINT,
    @nvc_Locale                 NVARCHAR(7),
    @bi_RefinerId               BIGINT,
    @i_RefinerSource            INT,
    @tvp_AttributeValues        [crt].[PRODUCTATTRIBUTEVALUETABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    -- Retrieving list style attribute refiner values
    SELECT DISTINCT
        [pavfn].ATTRIBUTE AS RECID,
        1 AS REFINERSOURCE,  -- Attribute
        [cra].DATATYPE,
        CASE [cra].DATATYPE
            WHEN 1 THEN CONVERT(nvarchar(1999), [pavfn].CURRENCYVALUE)
            WHEN 3 THEN CONVERT(nvarchar(1999), [pavfn].FLOATVALUE)
            WHEN 4 THEN CONVERT(nvarchar(1999), [pavfn].INTVALUE)
            WHEN 5 THEN
                CASE
                    WHEN [pavfn].LANGUAGE = @nvc_Locale THEN CONVERT(nvarchar(1999), [pavfn].TRANSLATION)
                    ELSE CONVERT(nvarchar(1999), [pavfn].TEXTVALUE)
                END
            WHEN 6 THEN CONVERT(nvarchar(1999), [pavfn].BOOLEANVALUE)
            ELSE NULL
        END AS LEFTBOUNDVALUE,
        CASE [cra].DATATYPE
            WHEN 1 THEN CONVERT(nvarchar(1999), [pavfn].CURRENCYVALUE)
            WHEN 3 THEN CONVERT(nvarchar(1999), [pavfn].FLOATVALUE)
            WHEN 4 THEN CONVERT(nvarchar(1999), [pavfn].INTVALUE)
            WHEN 5 THEN
                CASE
                    WHEN [pavfn].LANGUAGE = @nvc_Locale THEN CONVERT(nvarchar(1999), [pavfn].TRANSLATION)
                    ELSE CONVERT(nvarchar(1999), [pavfn].TEXTVALUE)
                END
            WHEN 6 THEN CONVERT(nvarchar(1999), [pavfn].BOOLEANVALUE)
            ELSE NULL
        END AS RIGHTBOUNDVALUE,
        CASE [cra].DATATYPE
            WHEN 1 THEN [pavfn].CURRENCYCODE
            WHEN 3 THEN [pavfn].FLOATUNITSYMBOL
            WHEN 4 THEN [pavfn].INTUNITSYMBOL
            ELSE NULL
        END AS UNIT
    FROM @tvp_AttributeValues AS pavfn
    INNER JOIN [crt].CHANNELREFINABLEATTRIBUTE cra ON  [cra].CHANNEL = @bi_ChannelId AND [cra].ATTRIBUTE = [pavfn].ATTRIBUTE
    INNER JOIN [ax].RETAILATTRIBUTEFILTER raf ON [raf].ATTRIBUTE = [pavfn].ATTRIBUTE AND [raf].DISPLAYTEMPLATE = 0 /* List */
    WHERE [pavfn].ATTRIBUTE = @bi_RefinerId AND @i_RefinerSource = 1  /* Attribute refiner */

    UNION ALL
    
    -- Retrieving slider style attribute refiner values
    SELECT DISTINCT
        [pavfn].ATTRIBUTE AS RECID,
        1 AS REFINERSOURCE,  -- Attribute
        [cra].DATATYPE,
        CASE [cra].DATATYPE
            WHEN 1 THEN CONVERT(nvarchar(1999), MIN([pavfn].CURRENCYVALUE))
            WHEN 3 THEN CONVERT(nvarchar(1999), MIN([pavfn].FLOATVALUE))
            WHEN 4 THEN CONVERT(nvarchar(1999), MIN([pavfn].INTVALUE))
            ELSE NULL
        END AS LEFTBOUNDVALUE,
        CASE [cra].DATATYPE
            WHEN 1 THEN CONVERT(nvarchar(1999), MAX([pavfn].CURRENCYVALUE))
            WHEN 3 THEN CONVERT(nvarchar(1999), MAX([pavfn].FLOATVALUE))
            WHEN 4 THEN CONVERT(nvarchar(1999), MAX([pavfn].INTVALUE))
            ELSE NULL
        END AS RIGHTBOUNDVALUE,
        CASE [cra].DATATYPE
            WHEN 1 THEN [pavfn].CURRENCYCODE
            WHEN 3 THEN [pavfn].FLOATUNITSYMBOL
            WHEN 4 THEN [pavfn].INTUNITSYMBOL
            ELSE NULL
        END AS UNIT
    FROM @tvp_AttributeValues AS pavfn
    INNER JOIN [crt].CHANNELREFINABLEATTRIBUTE cra ON  [cra].CHANNEL = @bi_ChannelId AND [cra].ATTRIBUTE = [pavfn].ATTRIBUTE
    INNER JOIN [ax].RETAILATTRIBUTEFILTER raf ON [raf].ATTRIBUTE = [pavfn].ATTRIBUTE AND [raf].DISPLAYTEMPLATE = 1 /* Slider */
    WHERE [pavfn].ATTRIBUTE = @bi_RefinerId AND @i_RefinerSource = 1  /* Attribute refiner */
    GROUP BY [pavfn].ATTRIBUTE, [cra].DATATYPE, [pavfn].CURRENCYCODE, [pavfn].FLOATUNITSYMBOL, [pavfn].INTUNITSYMBOL, [cra].DATATYPE

    UNION ALL
    
    -- TODO from saabdul to saabdul: Fix this implementation.
    -- Retrieving range style attribute refiner values
    SELECT
        n.RECID,
        n.REFINERSOURCE,
        n.DATATYPE,
        CASE WHEN IDENT%2=1 THEN n.LEFTBOUNDVALUE ELSE NULL END AS LEFTBOUNDVALUE,
        CASE WHEN IDENT%2=0 THEN n.RIGHTBOUNDVALUE ELSE NULL END AS RIGHTBOUNDVALUE,
        n.UNIT
    FROM
    (
        SELECT 
            a.ATTRIBUTE AS RECID,
            1 AS REFINERSOURCE,  -- Attribute
            a.DATATYPE,
            y.i.value('(./text())[1]', 'nvarchar(200)') AS LEFTBOUNDVALUE,
            y.i.value('(./text())[1]', 'nvarchar(200)') AS RIGHTBOUNDVALUE,
            NULL AS UNIT,
            ROW_NUMBER() OVER (ORDER BY a.ATTRIBUTE) AS IDENT
        FROM 
        ( 
            SELECT x = CONVERT(XML, '<i>' 
                + REPLACE([raf].THRESHOLDVALUE, ';', '</i><i>') 
                + '</i>').query('.'),
                [raf].ATTRIBUTE,
                [cra].DATATYPE
            FROM [ax].RETAILATTRIBUTEFILTER raf
            INNER JOIN [crt].CHANNELREFINABLEATTRIBUTE cra ON  [cra].CHANNEL = @bi_ChannelId AND [cra].ATTRIBUTE = [raf].ATTRIBUTE
            WHERE [raf].ATTRIBUTE = @bi_RefinerId AND @i_RefinerSource = 1  /* Attribute refiner */ AND [raf].DISPLAYTEMPLATE = 3 /* Range */
        ) AS a CROSS APPLY x.nodes('i') AS y(i)
    ) AS n
GO
PRINT N'Creating [crt].[GETASSORTEDINVENTITEM]...';


GO

-- Returns the row from AssortedItemsView for the specified channel, date, and item id.
CREATE FUNCTION [crt].[GETASSORTEDINVENTITEM]
(
	@bi_ChannelId BIGINT,
	@dt_ChannelDate DATE,
	@nvc_ItemId NVARCHAR(20)
)
RETURNS TABLE
RETURN
    SELECT RCT.RECID AS STORERECID, 
		IT.[ITEMID],
		CONVERT([nvarchar](60), '') AS 'ITEMNAME',
		IT.[ITEMTYPE],
		IT.[PURCHMODEL],
		IT.[HEIGHT],
		IT.[WIDTH],
		IT.[SALESMODEL],
		IT.[REQGROUPID],
		IT.[PRIMARYVENDORID],
		IT.[NETWEIGHT],
		IT.[DEPTH],
		IT.[UNITVOLUME],
		IT.[DENSITY],
		CONVERT([nvarchar](10), '') AS 'DIMENSION',
		CONVERT([nvarchar](10), '') AS 'DIMENSION2_',
		CONVERT([nvarchar](10), '') AS 'DIMENSION3_',
		IT.[COSTMODEL],
		IT.[USEALTITEMID],
		IT.[ALTITEMID],
		CONVERT([int], 0) AS 'BOMMANUALCONSUMP',
		CONVERT([int], 0) AS 'BOMMANUALRECEIPT',
		CONVERT([int], 0) AS 'STOPEXPLODE',
		IT.[BATCHNUMGROUPID],
		IT.[PRODPOOLID],
		IT.[PROPERTYID],
		IT.[ABCTIEUP],
		IT.[ABCREVENUE],
		IT.[ABCVALUE],
		IT.[ABCCONTRIBUTIONMARGIN],
		IT.[SALESPERCENTMARKUP],
		IT.[SALESCONTRIBUTIONRATIO],
		IT.[SALESPRICEMODELBASIC],
		CONVERT([numeric](28, 12), 0) AS 'MINAVERAGESETTLE',
		IT.[NAMEALIAS],
		IT.[PRODGROUPID],
		IT.[PROJCATEGORYID],
		IT.[GROSSDEPTH],
		IT.[GROSSWIDTH],
		IT.[GROSSHEIGHT],
		IT.[SORTCODE],
		IT.[SERIALNUMGROUPID],
		CONVERT([nvarchar](10), '') AS 'DIMGROUPID',
		IT.[ITEMBUYERGROUPID],
		IT.[WMSPICKINGQTYTIME],
		IT.[TARAWEIGHT],
		CONVERT([int], 0) AS 'ITEMDIMCOMBINATIONAUTOCREATE',
		IT.[ITEMDIMCOSTPRICE],
		CONVERT([nvarchar](20), '') AS 'ITEMIDCOMPANY',
		IT.[PRODUCT],
		IT.[DATAAREAID],
		IT.[RECID],
		IT.[TAXFISCALCLASSIFICATION_BR],
		IT.[EXCEPTIONCODE_BR],
		IT.[TAXSERVICECODE_BR],
		IT.[INVENTPRODUCTTYPE_BR],
		IT.[TAXATIONORIGIN_BR],
		IT.[APPROXTAXVALUE_BR],
		ISNULL(IIGI.ITEMGROUPID, '') AS ITEMGROUPID
    FROM [ax].RETAILCHANNELTABLE RCT
		INNER JOIN [ax].INVENTTABLE IT ON IT.DATAAREAID = RCT.INVENTLOCATIONDATAAREAID
		LEFT JOIN [ax].INVENTITEMGROUPITEM IIGI ON IT.DATAAREAID = IIGI.ITEMDATAAREAID AND IT.ITEMID = IIGI.ITEMID
    WHERE RCT.RECID = @bi_ChannelId
		AND IT.ITEMID = @nvc_ItemId
	AND (EXISTS
    (
		SELECT ral.RECID
		FROM [ax].RETAILASSORTMENTLOOKUP ral
		INNER JOIN [ax].RETAILASSORTMENTLOOKUPCHANNELGROUP ralcg on ralcg.ASSORTMENTID = ral.ASSORTMENTID
		LEFT OUTER JOIN [ax].INVENTDIMCOMBINATION idc on idc.ITEMID = it.ITEMID and idc.DATAAREAID = it.DATAAREAID and (ral.VARIANTID = idc.DISTINCTPRODUCTVARIANT or ral.VARIANTID = 0)
		WHERE ral.PRODUCTID = IT.PRODUCT
			AND ralcg.OMOPERATINGUNITID = rct.OMOPERATINGUNITID
			AND @dt_ChannelDate >= ral.VALIDFROM and @dt_ChannelDate <= ral.VALIDTO -- Enforce date effectivity
		GROUP BY ralcg.ASSORTMENTID, idc.INVENTDIMID, ral.VARIANTID, ral.VALIDFROM, ral.VALIDTO, ral.RECID
		HAVING MIN(ral.LINETYPE) = 1 -- Remove excluded products
    )
	OR EXISTS (
        SELECT TAP.PRODUCTID
        FROM [crt].TMPASSORTEDPRODUCTS TAP
        WHERE
            TAP.PRODUCTID = IT.PRODUCT AND
            TAP.CHANNELID = RCT.RECID AND
            @dt_ChannelDate BETWEEN TAP.VALIDFROM and TAP.VALIDTO -- Enforce date effectivity
        ))
GO
PRINT N'Creating [crt].[GETMEDIALOCATIONBYPRODUCTID]...';


GO
/**
 * Product media( in particular image) is modeled as attributes.These attributes can be set at various levels and are checked
 * in the following order and it also shows their priority.
 *   1. ChannelCatalogProduct (priority = 1)
 *   2. CatalogProduct (priority = 2)
 *   3. ChannelProduct (priority = 3)
 *   4. Product (priority = 4)
 *   5. Default product attribute template (priority = 5)
 *...Product media association information is stored in the RetailMediaProductRelation table and this function retrieves the same from this table.
 */
CREATE FUNCTION [crt].[GETMEDIALOCATIONBYPRODUCTID]
(
    @bi_ChannelId    BIGINT,
    @bi_CatalogId    BIGINT,
    @bi_ProductId    BIGINT,
    @nvc_LanguageId  NVARCHAR(7)
)
RETURNS TABLE
RETURN

-- Select image by Channel, Catalog and Product(1st priority).
SELECT rmd.RESOURCEURL AS URI, rmd.Description AS ALTTEXT, rmpr.ISDEFAULT AS ISDEFAULT, 0 as ISSELFHOSTED, 1 AS PRIORITY
FROM [ax].RETAILMEDIARESOURCE rmd
INNER JOIN [ax].RETAILMEDIAPRODUCTRELATION rmpr ON rmd.RECID = rmpr.MEDIARESOURCE
INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rprct.ORIGINID = @bi_ChannelId
WHERE rmpr.PRODUCT = @bi_ProductId AND rmpr.CATALOG = @bi_CatalogId AND rmpr.INTERNALORGANIZATION = rprct.INTERNALORGANIZATION

UNION ALL

-- Select image by Catalog and Product(2nd priority).
SELECT rmd.RESOURCEURL AS URI, rmd.Description AS ALTTEXT, rmpr.ISDEFAULT AS ISDEFAULT, 0 as ISSELFHOSTED, 2 AS PRIORITY
FROM [ax].RETAILMEDIARESOURCE rmd
INNER JOIN [ax].RETAILMEDIAPRODUCTRELATION rmpr ON rmd.RECID = rmpr.MEDIARESOURCE
WHERE rmpr.PRODUCT = @bi_ProductId AND rmpr.CATALOG = @bi_CatalogId AND rmpr.INTERNALORGANIZATION = 0

UNION ALL

-- Select image by Channel and Product(3rd priority).
SELECT rmd.RESOURCEURL AS URI, rmd.Description AS ALTTEXT, rmpr.ISDEFAULT AS ISDEFAULT, 0 as ISSELFHOSTED, 3 AS PRIORITY
FROM [ax].RETAILMEDIARESOURCE rmd
INNER JOIN [ax].RETAILMEDIAPRODUCTRELATION rmpr ON rmd.RECID = rmpr.MEDIARESOURCE
INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rprct.ORIGINID = @bi_ChannelId
WHERE rmpr.PRODUCT = @bi_ProductId AND rmpr.CATALOG = 0 AND rmpr.INTERNALORGANIZATION = rprct.INTERNALORGANIZATION

UNION ALL

-- Select image by Product(4th priority).
SELECT rmd.RESOURCEURL AS URI, rmd.Description AS ALTTEXT, rmpr.ISDEFAULT AS ISDEFAULT, 0 as ISSELFHOSTED, 4 AS PRIORITY
FROM [ax].RETAILMEDIARESOURCE rmd
INNER JOIN [ax].RETAILMEDIAPRODUCTRELATION rmpr ON rmd.RECID = rmpr.MEDIARESOURCE
WHERE rmpr.PRODUCT = @bi_ProductId AND rmpr.CATALOG = 0 AND rmpr.INTERNALORGANIZATION = 0

UNION ALL

-- Select image by Product template(5th or the last priority).
SELECT rmt.IMAGEURL AS URI, NULL AS ALTTEXT, rmt.ISDEFAULT AS ISDEFAULT, 0 as ISSELFHOSTED, 5 AS PRIORITY
FROM [ax].RETAILMEDIATEMPLATE rmt 
WHERE rmt.MASTERENTITYTYPE = 12 -- 12 means product entity type, refer to AX enum RetailMediaMasterEntity.
GO
PRINT N'Creating [crt].[GETPRODUCTMEDIALOCATIONS]...';


GO
/**
 * Product media is modeled as attributes. These attributes can be set at various levels and are checked
 * in the following order and it also shows their rank.
 *   1. ChannelCatalogProduct (rank = 1)
 *   2. CatalogProduct (rank = 2)
 *   3. ChannelProduct (rank = 3)
 *   4. Product (rank = 4)
 *   5. Default product attribute template (rank = 5)
 * The first attribute found is returned for the specified product. Image and video attributes are stored
 * as RichMediaLocations XML blob. Each XML document is parsed and the collection of media locations is returned.
 */
CREATE FUNCTION [crt].[GETPRODUCTMEDIALOCATIONS]
(
    @bi_ChannelId    BIGINT,
    @bi_CatalogId    BIGINT,
    @bi_ProductId    BIGINT,
    @nvc_LanguageId  NVARCHAR(7)
)
RETURNS TABLE
RETURN
SELECT REPLACE(REPLACE(gpml.URI, '{LANGUAGEID}', @nvc_LanguageId), 
       '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS(erp.DISPLAYPRODUCTNUMBER))) AS URI,
       gpml.ALTTEXT AS ALTTEXT,
       gpml.ISDEFAULT AS ISDEFAULT,
       gpml.ISSELFHOSTED as ISSELFHOSTED,
       gpml.PRIORITY
FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, @bi_ProductId, @nvc_LanguageId) gpml
JOIN [ax].ECORESPRODUCT erp ON erp.RECID = @bi_ProductId
WHERE gpml.PRIORITY = (
        SELECT MIN(gpml_1.PRIORITY) FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, @bi_ProductId, @nvc_LanguageId) gpml_1
        WHERE gpml_1.PRIORITY < 5 -- exclude the default product image template.
        )

UNION ALL 

SELECT REPLACE(REPLACE(gpml_2.URI, '{LANGUAGEID}', @nvc_LanguageId), 
       '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS(erp.DISPLAYPRODUCTNUMBER))) AS URI,
       gpml_2.ALTTEXT AS ALTTEXT,
       gpml_2.ISDEFAULT AS ISDEFAULT,
       gpml_2.ISSELFHOSTED as ISSELFHOSTED,
       gpml_2.PRIORITY
FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, @bi_ProductId, @nvc_LanguageId)  gpml_2
JOIN [ax].ECORESPRODUCT erp ON erp.RECID = @bi_ProductId
WHERE gpml_2.PRIORITY = 5 -- only the default product image template.

UNION ALL

-- Retrieving master product's media locations, if the product is of variant type.
SELECT REPLACE(REPLACE(gpml.URI, '{LANGUAGEID}', @nvc_LanguageId), 
       '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS(erp.DISPLAYPRODUCTNUMBER))) AS URI,
       gpml.ALTTEXT AS ALTTEXT,
       gpml.ISDEFAULT AS ISDEFAULT,
       gpml.ISSELFHOSTED as ISSELFHOSTED,
       gpml.PRIORITY + 5  -- Adding 5 to ensure master product locations are after variant product locations.
FROM [ax].ECORESDISTINCTPRODUCTVARIANT erdpv
JOIN [ax].ECORESPRODUCT erp ON erp.RECID = [erdpv].PRODUCTMASTER
OUTER APPLY [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, [erdpv].PRODUCTMASTER, @nvc_LanguageId) gpml
WHERE [erdpv].RECID = @bi_ProductId AND gpml.PRIORITY = (
        SELECT MIN(gpml_1.PRIORITY) FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, [erdpv].PRODUCTMASTER, @nvc_LanguageId) gpml_1
        WHERE gpml_1.PRIORITY < 5 -- exclude the default product image template.
        )

UNION ALL 

SELECT REPLACE(REPLACE(gpml_2.URI, '{LANGUAGEID}', @nvc_LanguageId), 
       '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS(erp.DISPLAYPRODUCTNUMBER))) AS URI,
       gpml_2.ALTTEXT AS ALTTEXT,
       gpml_2.ISDEFAULT AS ISDEFAULT,
       gpml_2.ISSELFHOSTED as ISSELFHOSTED,
       gpml_2.PRIORITY + 5  -- Adding 5 to ensure master product locations are after variant product locations.
FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, @bi_ProductId, @nvc_LanguageId)  gpml_2
JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON erdpv.RECID = @bi_ProductId
JOIN [ax].ECORESPRODUCT erp ON erp.RECID = erdpv.PRODUCTMASTER
WHERE gpml_2.PRIORITY = 5 -- only the default product image template.
GO
PRINT N'Creating [crt].[GETELECTRONICADDRESS]...';


GO
CREATE FUNCTION [crt].[GETELECTRONICADDRESS]
(
	@i_MethodType INT,
	@i_IsPrimary INT,
	@bi_ParentLocation BIGINT,
	@bi_DirPartyRecId BIGINT,
	@i_IsMobilePhone INT
)
RETURNS TABLE
RETURN

 SELECT
        lea.TYPE AS METHODYTPE,
        lea.RECID AS RECORDID,
		dpl.RECID AS DIRPARTYLOCATIONRECORDID,
        dpt.RECID AS DIRPARTYRECORDID,
        dpt.PARTYNUMBER AS PARTYNUMBER,
		lea.DESCRIPTION AS LOCATIONDESCRIPTION,
        lea.LOCATOR,
        lea.LOCATOREXTENSION,
		ll.LOCATIONID,
        ll.RECID AS LOGISTICSLOCATIONRECORDID,
        ll.PARENTLOCATION,
		lea.ISPRIMARY,
	    lea.ISMOBILEPHONE
    FROM [ax].LOGISTICSELECTRONICADDRESS lea
    INNER JOIN [ax].LOGISTICSLOCATION ll ON lea.LOCATION = ll.RECID
    INNER JOIN [ax].DIRPARTYLOCATION dpl ON ll.RECID = dpl.LOCATION
    INNER JOIN [ax].DIRPARTYTABLE dpt ON dpt.RECID = dpl.PARTY 
    WHERE
        (ll.ISPOSTALADDRESS = 0)
    AND (dpl.ISPOSTALADDRESS = 0)
    AND (lea.ISPRIVATE = 0) 

	AND lea.TYPE = @i_MethodType
	AND lea.ISPRIMARY = @i_IsPrimary
	AND ((@bi_ParentLocation IS NOT NULL AND (@bi_ParentLocation = ll.PARENTLOCATION)) OR (ll.PARENTLOCATION = ll.PARENTLOCATION))
	AND ((@i_IsMobilePhone IS NOT NULL AND (@i_IsMobilePhone = lea.ISMOBILEPHONE)) OR (lea.ISMOBILEPHONE = lea.ISMOBILEPHONE))
	AND @bi_DirPartyRecId = dpt.RECID
GO
PRINT N'Creating [crt].[CONVERTITEMANDINVENTDIMIDSTOPRODUCTIDS]...';


GO

CREATE FUNCTION [crt].[CONVERTITEMANDINVENTDIMIDSTOPRODUCTIDS]
(
    @nvc_DataAreaId     NVARCHAR(4),
    @tvp_ItemIds        [crt].ITEMIDSEARCHTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    -- Retrieve product identifiers for item identifiers.
    SELECT [it].PRODUCT AS PRODUCTID
    FROM @tvp_ItemIds ids
    INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [ids].ITEMID AND [it].DATAAREAID = @nvc_DataAreaId
    WHERE [ids].INVENTDIMID = ''

    UNION ALL

    -- Retrieve variant identifiers for item and inventory dimension combinations.
    SELECT [idc].DISTINCTPRODUCTVARIANT AS PRODUCTID
    FROM @tvp_ItemIds ids
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].ITEMID = [ids].ITEMID AND [idc].INVENTDIMID = [ids].INVENTDIMID AND [idc].DATAAREAID = @nvc_DataAreaId
    WHERE [ids].INVENTDIMID != ''
GO
PRINT N'Creating [crt].[GETPRODUCTDIMENSIONVALUESBYVARIANTPRODUCTIDS_V2]...';


GO
CREATE FUNCTION [crt].[GETPRODUCTDIMENSIONVALUESBYVARIANTPRODUCTIDS_V2]
(
    @nvc_DataAreaId          NVARCHAR(10),
    @nvc_Locale              NVARCHAR(7),
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    WITH PRODUCTDIMENSIONS AS
    (
        SELECT
            [idc].DISTINCTPRODUCTVARIANT AS PRODUCTID,
            [pv].PRODUCTMASTER,
            [id].INVENTSIZEID AS SIZE,
            [id].INVENTCOLORID AS COLOR,
            [id].CONFIGID AS CONFIG,
            [id].INVENTSTYLEID AS STYLE
        FROM [ax].INVENTDIMCOMBINATION idc
            INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID
            INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [idc].DISTINCTPRODUCTVARIANT
        WHERE
            [idc].DISTINCTPRODUCTVARIANT IN (SELECT RECID FROM @tvp_ProductIds)
            AND [idc].DATAAREAID = @nvc_DataAreaId
            AND [id].DATAAREAID = @nvc_DataAreaId
    )
    
    SELECT
        [pd].PRODUCTID,
        1 AS DIMENSION,  -- Color
        [pd].COLOR AS DIMENSIONID,
        COALESCE([dvc].NAME, [pd].COLOR, '') AS VALUE
    FROM PRODUCTDIMENSIONS pd
        INNER JOIN [ax].ECORESCOLOR erc ON [erc].NAME = [pd].COLOR
            INNER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLOR = [erc].RECID AND [erpmc].COLORPRODUCTMASTER = [pd].PRODUCTMASTER
                LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON [dvc].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID AND [dvc].LANGUAGEID = @nvc_Locale    

    UNION ALL
    
    SELECT
        [pd].PRODUCTID,
        2 AS DIMENSION,  -- Configuration
        [pd].CONFIG AS DIMENSIONID,
        COALESCE([dvcfg].NAME, [pd].CONFIG, '') AS VALUE
    FROM PRODUCTDIMENSIONS pd
        INNER JOIN [ax].ECORESCONFIGURATION ercfg ON [ercfg].NAME = [pd].CONFIG
            INNER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON [erpmcfg].CONFIGURATION = [ercfg].RECID AND [erpmcfg].CONFIGPRODUCTMASTER = [pd].PRODUCTMASTER
                LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON [dvcfg].PRODUCTMASTERDIMENSIONVALUE = [erpmcfg].RECID AND [dvcfg].LANGUAGEID = @nvc_Locale

    UNION ALL
    
    SELECT
        [pd].PRODUCTID,
        3 AS DIMENSION,  -- Size
        [pd].SIZE AS DIMENSIONID,
        COALESCE([dvsz].NAME, [pd].SIZE, '') AS VALUE
    FROM PRODUCTDIMENSIONS pd
        INNER JOIN [ax].ECORESSIZE ers ON [ers].NAME = [pd].SIZE
            INNER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZE = [ers].RECID AND [erpms].SIZEPRODUCTMASTER = [pd].PRODUCTMASTER
                LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON [dvsz].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID AND [dvsz].LANGUAGEID = @nvc_Locale

    UNION ALL
    
    SELECT
        [pd].PRODUCTID,
        4 AS DIMENSION,  -- Style
        [pd].STYLE AS DIMENSIONID,
        COALESCE([dvst].NAME, [pd].STYLE, '') AS VALUE
    FROM PRODUCTDIMENSIONS pd
        INNER JOIN [ax].ECORESSTYLE erst ON [erst].NAME = [pd].STYLE
            INNER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON [erpmst].STYLE = [erst].RECID AND [erpmst].STYLEPRODUCTMASTER = [pd].PRODUCTMASTER
                LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON [dvst].PRODUCTMASTERDIMENSIONVALUE = [erpmst].RECID AND [dvst].LANGUAGEID = @nvc_Locale
GO
PRINT N'Creating [crt].[GETRETAILINVENTAVAILABILITYSALESORDERSUM]...';


GO

CREATE FUNCTION [crt].[GETRETAILINVENTAVAILABILITYSALESORDERSUM]
(
	@tvp_ids crt.ITEMQUANTITYTABLETYPE READONLY
)
RETURNS TABLE
RETURN

SELECT
	ria.RECID AS INVENTAVAILABILITY,
	SUM(rtstqsv.QUANTITY) AS QUANTITY
FROM [crt].GETRETAILTRANSACTIONSALESTRANSQTYSUM(@tvp_ids) rtstqsv
INNER JOIN [ax].INVENTTABLE it ON it.ITEMID = rtstqsv.ITEMID AND it.DATAAREAID = rtstqsv.DATAAREAID
LEFT JOIN [ax].INVENTDIM vid ON vid.INVENTDIMID = rtstqsv.VARIANTINVENTDIMID AND vid.DATAAREAID = rtstqsv.DATAAREAID
INNER JOIN [ax].INVENTDIM id ON 
    id.INVENTLOCATIONID = rtstqsv.INVENTLOCATIONID 
    AND ((rtstqsv.VARIANTINVENTDIMID = ''
        AND id.CONFIGID = '' 
        AND id.INVENTCOLORID = '' 
        AND id.INVENTSIZEID = '' 
        AND id.INVENTSTYLEID = ''
    ) OR (
        rtstqsv.VARIANTINVENTDIMID != ''
        AND id.CONFIGID = vid.CONFIGID
        AND id.INVENTCOLORID = vid.INVENTCOLORID 
        AND id.INVENTSIZEID = vid.INVENTSIZEID 
        AND id.INVENTSTYLEID = vid.INVENTSTYLEID)) 
    AND id.DATAAREAID = rtstqsv.DATAAREAID
INNER JOIN [ax].RETAILINVENTAVAILABILITY ria ON ria.ITEMRECID = it.RECID AND ria.INVENTDIMRECID = id.RECID
GROUP BY ria.RECID
GO
PRINT N'Creating [crt].[GETPRODUCTIDSWITHTRANSLATIONCHANGES]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSWITHTRANSLATIONCHANGES]
(
    @watermark AS [crt].[PRODUCTCHANGETRACKINGANCHORSET] READONLY 
)
RETURNS TABLE
RETURN	
	
	SELECT 
		erp.RECID,
		erp.ROWVERSION AS SEQUENCE
	FROM ax.ECORESPRODUCT erp
		INNER JOIN ax.ECORESPRODUCTTRANSLATION erpt ON erpt.PRODUCT = erp.RECID
		WHERE erpt.ROWVERSION > (SELECT ECORESPRODUCTTRANSLATION FROM @watermark)
GO
PRINT N'Creating [crt].[GETRETAILKITVARIANTMAP]...';


GO

CREATE FUNCTION [crt].[GETRETAILKITVARIANTMAP] 
(	
    @bi_ChannelId           BIGINT, -- The unique channel identifier.
    @dt_ChannelDate         DATE,   -- The current date in the channel's time zone.
    @tvp_ProductIds         [crt].[RECORDIDTABLETYPE] READONLY  -- Kit's product master id
)
RETURNS TABLE
AS
RETURN
(
    SELECT DISTINCT 
        @bi_ChannelId       AS CHANNEL, 
        RKVC.COMPONENT      AS COMPONENTPRODUCTLISTING,
        RKVC.KITVARIANT     AS KITPRODUCTVARIANTLISTING,
        IT.PRODUCT          AS KITPRODUCTMASTERLISTING,
        IDC.INVENTDIMID,
        ID.CONFIGID,
        RKVC.COMPONENTRECID AS KITLINEIDENTIFIER
    FROM [ax].RETAILKITVARIANTCOMPONENT RKVC
        INNER JOIN [ax].INVENTDIMCOMBINATION IDC ON IDC.DISTINCTPRODUCTVARIANT = RKVC.KITVARIANT
        INNER JOIN [ax].RETAILCHANNELTABLE RCT ON RCT.RECID = @bi_ChannelId
        INNER JOIN [ax].INVENTDIM ID ON ID.INVENTDIMID = IDC.INVENTDIMID AND ID.DATAAREAID = RCT.INVENTLOCATIONDATAAREAID
        INNER JOIN [ax].INVENTTABLE IT ON IT.ITEMID = IDC.ITEMID
        INNER JOIN @tvp_ProductIds PID ON PID.RECID = IT.PRODUCT
)
GO
PRINT N'Creating [crt].[GETPRODUCTVARIANTDIMENSIONVALUES]...';


GO

-- Gets dimensions by given set of Ids
CREATE FUNCTION [crt].[GETPRODUCTVARIANTDIMENSIONVALUES]
(
	@b_ProductIdsPassed     BIT,
	@tvp_ProductIds         [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS @resultTable TABLE
(
	RECID BIGINT,
	DISTINCTPRODUCTVARIANT BIGINT
)
AS BEGIN
	
	IF @b_ProductIdsPassed = 0
	BEGIN
		INSERT @resultTable
		SELECT 
			RECID, 
			DISTINCTPRODUCTVARIANT
		FROM ax.ECORESPRODUCTVARIANTDIMENSIONVALUE
	END
	ELSE
	BEGIN
		INSERT @resultTable
		SELECT 
			EPVDV.RECID, 
			DISTINCTPRODUCTVARIANT
		FROM @tvp_ProductIds ids
		JOIN ax.ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV ON EPVDV.DISTINCTPRODUCTVARIANT = ids.RECID
		OPTION (FORCE ORDER)
	END

	RETURN 

END
GO
PRINT N'Creating [crt].[GETPRODUCTIDSWITHATTRIBUTEVALUECHANGES]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSWITHATTRIBUTEVALUECHANGES]
(
    @watermark AS [crt].[PRODUCTCHANGETRACKINGANCHORSET] READONLY 
)
RETURNS @changedAttributeValues TABLE
(
    RECID BIGINT,
    SEQUENCE BIGINT
)
AS
BEGIN

	-- retain product ids
	INSERT @changedAttributeValues(RECID, SEQUENCE)

	-- get ids of changed product records
	SELECT
		erp.RECID,
		erp.ROWVERSION AS SEQUENCE 
	FROM ax.ECORESPRODUCT erp
    JOIN @watermark w ON erp.ROWVERSION > w.ECORESPRODUCT 
	
	UNION 

	-- get ids of products whose instance values have changed directly
	SELECT 
		erpiv.PRODUCT AS RECID,
		erpiv.ROWVERSION AS SEQUENCE
	FROM ax.ECORESPRODUCTINSTANCEVALUE erpiv
    JOIN @watermark w ON erpiv.ROWVERSION > w.ECORESPRODUCTINSTANCEVALUE 

	UNION

	-- get ids of products whose instance values have changed indirectly
	SELECT
		erpiv.PRODUCT,
		erpiv.ROWVERSION AS SEQUENCE 
	FROM ax.ECORESPRODUCTINSTANCEVALUE erpiv
	INNER JOIN (

		-- get ids of instance values which have changed directly
		SELECT
			eriv.RECID
		FROM ax.ECORESINSTANCEVALUE eriv
        JOIN @watermark w ON eriv.ROWVERSION > w.ECORESINSTANCEVALUE 

		UNION

		-- get ids of instance values which have changed indirectly
		SELECT 
			eriv.RECID
		FROM ax.ECORESINSTANCEVALUE eriv
		INNER JOIN (

			-- get ids of attribute values which have changed directly
			SELECT 
				erav.INSTANCEVALUE
			FROM ax.ECORESATTRIBUTEVALUE erav
            JOIN @watermark w ON erav.ROWVERSION > w.ECORESATTRIBUTEVALUE 

			UNION

			-- get ids of attribe values which have changed indirectly
			SELECT 
				erav.INSTANCEVALUE
			FROM ax.ECORESATTRIBUTEVALUE erav	
				INNER JOIN (

					-- get ids of values which have changed directly
					SELECT 
						erv.RECID
					FROM ax.ECORESVALUE erv
                    JOIN @watermark w ON erv.ROWVERSION > w.ECORESVALUE 

					UNION

					-- get ids of changed values of specific types
					SELECT 		
						erv.RECID
					FROM ax.ECORESVALUE erv
						inner join ax.ECORESBOOLEANVALUE erbv on erbv.RECID = erv.RECID
						WHERE erbv.ROWVERSION > (SELECT ECORESBOOLEANVALUE FROM @watermark)

					UNION 

					-- get ids of changed values of specific types
					SELECT  		
						erv.RECID
					FROM ax.ECORESVALUE erv
						inner join ax.ECORESDATETIMEVALUE erbv on erbv.RECID = erv.RECID
						WHERE erbv.ROWVERSION > (SELECT ECORESDATETIMEVALUE FROM @watermark)

					UNION 

					-- get ids of changed values of specific types
					SELECT  		
						erv.RECID
					FROM ax.ECORESVALUE erv
						inner join ax.ECORESFLOATVALUE erbv on erbv.RECID = erv.RECID
						WHERE erbv.ROWVERSION > (SELECT ECORESFLOATVALUE FROM @watermark)

					UNION 

					-- get ids of changed values of specific types
					SELECT  		
						erv.RECID
					FROM ax.ECORESVALUE erv
						inner join ax.ECORESINTVALUE erbv on erbv.RECID = erv.RECID
						WHERE erbv.ROWVERSION > (SELECT ECORESINTVALUE FROM @watermark)

					UNION 

					-- get ids of changed values of specific types
					SELECT  		
						erv.RECID
					FROM ax.ECORESVALUE erv
						inner join ax.ECORESTEXTVALUE erbv on erbv.RECID = erv.RECID
						WHERE erbv.ROWVERSION > (SELECT ECORESTEXTVALUE FROM @watermark)

					UNION 

					-- get ids of changed values of specific types
					SELECT  		
						erv.RECID
					FROM ax.ECORESVALUE erv
						inner join ax.ECORESCURRENCYVALUE erbv on erbv.RECID = erv.RECID
						WHERE erbv.ROWVERSION > (SELECT ECORESCURRENCYVALUE FROM @watermark)

					UNION 

					-- get ids of changed values of specific types
					SELECT  		
						erv.RECID
					FROM ax.ECORESVALUE erv
						inner join ax.ECORESREFERENCEVALUE erbv on erbv.RECID = erv.RECID
						WHERE erbv.ROWVERSION > (SELECT ECORESREFERENCEVALUE FROM @watermark)
			
					) AS changedValues ON erav.VALUE = changedValues.RECID
				) AS changedAttributeValues ON eriv.RECID = changedAttributeValues.INSTANCEVALUE
			) AS changedInstanceValues ON erpiv.RECID = changedInstanceValues.RECID

	RETURN;
END
GO
PRINT N'Creating [crt].[GETPRODUCTIDSWITHCOMPOSITIONCHANGES]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSWITHCOMPOSITIONCHANGES]
(
    @watermark AS [crt].[PRODUCTCHANGETRACKINGANCHORSET] READONLY 
)
RETURNS @changedAttributeValues TABLE
(
    RECID BIGINT,
    SEQUENCE BIGINT
)
AS
BEGIN
	RETURN;
END
GO
PRINT N'Creating [crt].[GETPURCHASEHISTORY]...';


GO
/**
 * Get the recently purchased products for a customer.
 * Only distinct item id will be put into one receipt id. 
 */
CREATE FUNCTION [crt].[GETPURCHASEHISTORY]
(
    @nvc_CustAccount NVARCHAR(38),
    @nvc_Locale NVARCHAR(7),
    @startDateTime DATETIME
)
RETURNS @PurchaseHistory TABLE
(
    RECEIPTID       NVARCHAR(18),
    ITEMID          NVARCHAR(20),
    DATEPURCHASED   DATETIME,
    PRODUCTNAME     NVARCHAR(60),
    IMAGEURL        NVARCHAR(MAX) NULL,
    PRODUCTID       BIGINT
)
AS
BEGIN

    INSERT INTO @PurchaseHistory
    SELECT
        rtst.RECEIPTID,
        rtst.ITEMID,
        Max(rtst.CREATEDDATETIME) AS DATEPURCHASED,
        erpt.NAME AS PRODUCTNAME,
        gpml.URI AS IMAGEURL,
        rtst.LISTINGID AS PRODUCTID
    FROM ax.RETAILTRANSACTIONSALESTRANS rtst
    INNER JOIN ax.RETAILTRANSACTIONTABLE rtt on rtt.DATAAREAID = rtst.DATAAREAID AND rtt.TRANSACTIONID = rtst.TRANSACTIONID AND rtt.TYPE = 2 AND rtt.ENTRYSTATUS = 0 -- normal sales transaction
    INNER JOIN ax.ECORESPRODUCTTRANSLATION erpt ON erpt.PRODUCT = rtst.LISTINGID AND erpt.LANGUAGEID = @nvc_Locale -- get the localized name
    INNER JOIN ax.ECORESPRODUCT erp ON erp.RECID = erpt.PRODUCT
    OUTER APPLY (SELECT TOP 1 REPLACE(REPLACE(URI, '{LANGUAGEID}', @nvc_Locale), '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS(erp.DISPLAYPRODUCTNUMBER))) AS URI FROM [crt].GETMEDIALOCATIONBYPRODUCTID(rtst.CHANNEL, 0, rtst.LISTINGID, @nvc_Locale) ORDER BY PRIORITY, ISDEFAULT, URI) gpml
    WHERE rtst.CUSTACCOUNT = @nvc_CustAccount
        AND rtst.CREATEDDATETIME >= @startDateTime
        AND rtst.QTY < 0 -- filter out sales lines for returning
        AND rtst.GIFTCARD != 1 -- filter out sales lines for issuing gift card
        AND rtst.TRANSACTIONSTATUS = 0 -- filter out voided (1), Posted (2), Concluded (3), Canceled (4), OnHold (5), Training (6) sales lines
    GROUP BY rtst.RECEIPTID, rtst.ITEMID, rtst.LISTINGID, erpt.NAME, gpml.URI
    RETURN;
END
GO
PRINT N'Creating [crt].[GETMERGEDASSORTMENTRULES]...';


GO

CREATE FUNCTION [crt].[GETMERGEDASSORTMENTRULES]
(
    @bi_ChannelId           BIGINT, -- The unique channel identifier.
    @dt_ChannelDate         DATETIME,   -- The current date in the channel's time zone.
    @b_IsForwardLooking     BIT,    -- A value indicating whether to include products in future assortments.
    @b_ProductIdsPassed     BIT,    -- A value indicating whether @tvp_ProductIds has been populated. If false, all assorted products are returned.
    @tvp_ProductIds         [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS @MERGEDASSORTMENTRULES TABLE
(
    [PRODUCTID] BIGINT NOT NULL,
    [VARIANTID] BIGINT NOT NULL,
    [ITEMID] NVARCHAR(20) NOT NULL,
    [LINETYPE] INT NOT NULL,
    [VALIDFROM] DATETIME NOT NULL,
    [VALIDTO] DATETIME NOT NULL
)
AS
BEGIN
    DECLARE @i_Sequence BIGINT;
    DECLARE @bi_ProductId BIGINT;
    DECLARE @bi_VariantId BIGINT;
    DECLARE @b_LineType INT;
    DECLARE @dt_ValidFrom DATETIME;
    DECLARE @dt_ValidTo DATETIME;

    -- Create a temporary table to merge any overlapping dates.
    DECLARE @tbl_WorkingSet TABLE (
        PRODUCTID BIGINT NOT NULL,
        VARIANTID BIGINT NOT NULL,
        ITEMID NVARCHAR(20) NOT NULL,
        LINETYPE INT NOT NULL,
        VALIDFROM DATETIME NOT NULL,
        VALIDTO DATETIME NOT NULL,
        SEQUENCE BIGINT
    )

	-- Populate the working set with all applicable assortment rules.
	-- The 2 SELECTs (separated by IF) below are almost identical, the only difference is in presense of JOIN against @tvp_ProductIds in the second query.
	IF @b_ProductIdsPassed = 0
		BEGIN
			INSERT @tbl_WorkingSet (PRODUCTID, ITEMID, VARIANTID, LINETYPE, VALIDFROM, VALIDTO, SEQUENCE)
			SELECT ral.PRODUCTID, it.ITEMID, ral.VARIANTID, ral.LINETYPE, ral.VALIDFROM, ral.VALIDTO, NULL
			FROM [ax].RETAILASSORTMENTLOOKUP ral
			INNER JOIN [ax].RETAILASSORTMENTLOOKUPCHANNELGROUP ralcg ON ralcg.ASSORTMENTID = ral.ASSORTMENTID
			INNER JOIN [ax].RETAILCHANNELTABLE rct ON rct.OMOPERATINGUNITID = ralcg.OMOPERATINGUNITID AND rct.RECID = @bi_ChannelId -- Resolve OM to channel
			INNER JOIN [ax].INVENTTABLE it ON it.PRODUCT = ral.PRODUCTID AND it.DATAAREAID = rct.INVENTLOCATIONDATAAREAID -- Include only Released items
			WHERE ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN ral.VALIDFROM AND ral.VALIDTO) OR
				(@b_IsForwardLooking = 1 AND ral.VALIDTO >= @dt_ChannelDate))
			ORDER BY ral.PRODUCTID, ral.VARIANTID, it.ITEMID, ral.LINETYPE, ral.VALIDFROM
		END
     ELSE
		BEGIN
			INSERT @tbl_WorkingSet (PRODUCTID, ITEMID, VARIANTID, LINETYPE, VALIDFROM, VALIDTO, SEQUENCE)
			SELECT ral.PRODUCTID, it.ITEMID, ral.VARIANTID, ral.LINETYPE, ral.VALIDFROM, ral.VALIDTO, NULL
			FROM [ax].RETAILASSORTMENTLOOKUP ral
			INNER JOIN @tvp_ProductIds ids ON ids.RECID = ral.PRODUCTID
			INNER JOIN [ax].RETAILASSORTMENTLOOKUPCHANNELGROUP ralcg ON ralcg.ASSORTMENTID = ral.ASSORTMENTID
			INNER JOIN [ax].RETAILCHANNELTABLE rct ON rct.OMOPERATINGUNITID = ralcg.OMOPERATINGUNITID AND rct.RECID = @bi_ChannelId -- Resolve OM to channel
			INNER JOIN [ax].INVENTTABLE it ON it.PRODUCT = ral.PRODUCTID AND it.DATAAREAID = rct.INVENTLOCATIONDATAAREAID -- Include only Released items
			WHERE ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN ral.VALIDFROM AND ral.VALIDTO) OR
				(@b_IsForwardLooking = 1 AND ral.VALIDTO >= @dt_ChannelDate))
			ORDER BY ral.PRODUCTID, ral.VARIANTID, it.ITEMID, ral.LINETYPE, ral.VALIDFROM
		END

    SELECT TOP 1
        @i_Sequence = 0,
        @bi_ProductId = PRODUCTID,
        @bi_VariantId = VARIANTID,
        @b_LineType = LINETYPE,
        @dt_ValidFrom = VALIDFROM,
        @dt_ValidTo = VALIDTO
    FROM @tbl_WorkingSet
    ORDER BY PRODUCTID, VARIANTID, ITEMID, LINETYPE, VALIDFROM

    UPDATE @tbl_WorkingSet
    SET @i_Sequence =
        CASE
            WHEN VALIDFROM > @dt_ValidTo THEN @i_Sequence + 1
            WHEN PRODUCTID > @bi_ProductId AND VARIANTID > @bi_VariantId THEN @i_Sequence + 1
            ELSE @i_Sequence
        END,
        @dt_ValidFrom =
        CASE
            WHEN VALIDTO > @dt_ValidTo THEN VALIDFROM
            WHEN PRODUCTID > @bi_ProductId AND VARIANTID > @bi_VariantId THEN VALIDFROM
            ELSE @dt_ValidFrom
        END,
        @dt_ValidTo =
        CASE
            WHEN VALIDTO > @dt_ValidTo THEN VALIDTO
            WHEN PRODUCTID > @bi_ProductId AND VARIANTID > @bi_VariantId THEN VALIDTO
            ELSE @dt_ValidTo
        END,
        SEQUENCE = @i_Sequence,
        @bi_ProductId = PRODUCTID,
        @bi_VariantId = VARIANTID

    -- Return the assortment rules with merged date ranges.
    INSERT @MERGEDASSORTMENTRULES
    SELECT PRODUCTID, VARIANTID, ITEMID, LINETYPE, MIN(VALIDFROM) AS VALIDFROM, MAX(VALIDTO) AS VALIDTO
    FROM @tbl_WorkingSet
    GROUP BY PRODUCTID, VARIANTID, ITEMID, LINETYPE, SEQUENCE
    ORDER BY SEQUENCE

    RETURN
END;
GO
PRINT N'Creating [crt].[GETUDTTCOLUMNS]...';


GO

CREATE FUNCTION [crt].[GETUDTTCOLUMNS]
(
    @nvc_SchemaId            NVARCHAR(100),
    @nvc_TableName           NVARCHAR(255)
    
)
RETURNS @UDTTColumns TABLE
(
    TABLE_TYPE_COL_NAME NVARCHAR(255),
    TABLE_TYPE_COL_DATATYPE NVARCHAR(100)
)
AS
BEGIN

    INSERT INTO @UDTTColumns
    SELECT c.name AS table_type_col_name, st.name AS table_type_col_datatype
    FROM sys.table_types tt
    INNER JOIN sys.schemas s on tt.schema_id = s.schema_id
    INNER JOIN sys.columns c on c.object_id = tt.type_table_object_id
    INNER JOIN sys.systypes st ON st.xtype = c.system_type_id AND st.xusertype = c.user_type_id
    WHERE s.name = @nvc_SchemaId AND tt.name = @nvc_TableName

    RETURN;
END
GO
PRINT N'Creating [crt].[GETINCLUDEDDATERANGES]...';


GO

-- Excludes one date range from another.
-- Returns either zero (exclude fully covers), one (partially covered or disjoint) or two date ranges (split).
-- The excluded dates are exclusive so returned ranges are moved up/down one day on the boundaries.
CREATE FUNCTION [crt].[GETINCLUDEDDATERANGES]
(
    @dt_IncludedFrom DATE,
    @dt_IncludedTo DATE,
    @dt_ExcludedFrom DATE,
    @dt_ExcludedTo DATE
)
RETURNS @DATERANGES TABLE
(
    VALIDFROM DATE NOT NULL,
    VALIDTO DATE NOT NULL
)
AS BEGIN
    -- No excludes specified? Return the original date range.
    IF (@dt_ExcludedFrom IS NULL AND @dt_ExcludedTo IS NULL)
        INSERT @DATERANGES
        SELECT @dt_IncludedFrom, @dt_IncludedTo

    -- Excluded date range covers entire included range. Return nothing.
    IF (@dt_ExcludedFrom <= @dt_IncludedFrom AND @dt_ExcludedTo >= @dt_IncludedTo)
        RETURN

    -- Excluded start is within included range.
    IF (@dt_ExcludedFrom > @dt_IncludedFrom AND @dt_ExcludedFrom <= @dt_IncludedTo)
        INSERT @DATERANGES
        SELECT @dt_IncludedFrom, DATEADD(d, -1, @dt_ExcludedFrom)

    -- Excluded end is within include range.
    IF (@dt_ExcludedTo >= @dt_IncludedFrom AND @dt_ExcludedTo < @dt_IncludedTo)
        INSERT @DATERANGES
        SELECT DATEADD(d, 1, @dt_ExcludedTo), @dt_IncludedTo

    -- Excluded date range is disjoint from included range. Return original range.
    IF (@dt_ExcludedTo < @dt_IncludedFrom OR @dt_ExcludedFrom > @dt_IncludedTo)
        INSERT @DATERANGES
        SELECT @dt_IncludedFrom, @dt_IncludedTo

    RETURN
END;
GO
PRINT N'Creating [crt].[GETASSORTEDPRODUCTS]...';


GO
-- (UPGRADE) Dropping previous inline function in order to re-create table function.


-- Gets all assorted products including standalone products, master products, variant products and temporary products due to virtual catalog.
CREATE FUNCTION [crt].[GETASSORTEDPRODUCTS]
(
    @bi_ChannelId           BIGINT, -- The unique channel identifier.
    @dt_ChannelDate         DATETIME,   -- The current date in the channel's time zone.
    @b_IsForwardLooking     BIT,    -- A value indicating whether to include products in future assortments.
    @b_SkipVariantExpansion BIT,    -- A value indicating whether product masters are to be expanded.
    @b_ProductIdsPassed     BIT,    -- A value indicating whether @tvp_ProductIds has been populated. If false, all assorted products are returned.
    @tvp_ProductIds         [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS @AssortedProducts TABLE
(
    PRODUCTID BIGINT NOT NULL,
    ITEMID NVARCHAR(20) NOT NULL,
    VARIANTID BIGINT NOT NULL,
    ISREMOTE BIT NOT NULL,
    VALIDFROM DATETIME NOT NULL,
    VALIDTO DATETIME NOT NULL
)
AS
BEGIN
    DECLARE @tbl_MergedAssortmentRules TABLE
    (
        [PRODUCTID] BIGINT NOT NULL,
        [VARIANTID] BIGINT NOT NULL,
        [ITEMID] NVARCHAR(20) NOT NULL,
        [LINETYPE] INT NOT NULL,
        [VALIDFROM] DATETIME NOT NULL,
        [VALIDTO] DATETIME NOT NULL
    )

    INSERT INTO @tbl_MergedAssortmentRules
    SELECT PRODUCTID, VARIANTID, ITEMID, LINETYPE, VALIDFROM, VALIDTO
    FROM [crt].GETMERGEDASSORTMENTRULES(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking, @b_ProductIdsPassed, @tvp_ProductIds) ral

    -- Retrieve implicitly included product variants for explicitly included product masters.
    INSERT INTO @AssortedProducts
    SELECT
        pv.PRODUCTMASTER AS 'PRODUCTID',
        ral.ITEMID,
        pv.RECID AS 'VARIANTID',
        0 AS 'ISREMOTE',
        dr.VALIDFROM,
        dr.VALIDTO
    FROM @tbl_MergedAssortmentRules ral
    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON pv.PRODUCTMASTER = ral.PRODUCTID -- Include variants only
    LEFT OUTER JOIN @tbl_MergedAssortmentRules epv ON epv.LINETYPE = 0 /* Explicitly excluded Products and Variants */ AND epv.PRODUCTID = ral.PRODUCTID AND (epv.VARIANTID = 0 OR epv.VARIANTID = pv.RECID)
        AND NOT (ral.VALIDFROM > epv.VALIDTO OR ral.VALIDTO < epv.VALIDFROM)
    CROSS APPLY [crt].GETINCLUDEDDATERANGES(ral.VALIDFROM, ral.VALIDTO, epv.VALIDFROM, epv.VALIDTO) dr
    WHERE ral.LINETYPE = 1 AND ral.VARIANTID = 0 AND @b_SkipVariantExpansion = 0 AND
        ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN dr.VALIDFROM AND dr.VALIDTO) OR
            (@b_IsForwardLooking = 1 AND dr.VALIDTO >= @dt_ChannelDate))

    UNION ALL

    -- Retrieve explicitly included products and/or variants that have not been excluded.
    SELECT
        ral.PRODUCTID,
        ral.ITEMID,
        ral.VARIANTID,
        0 AS 'ISREMOTE',
        dr.VALIDFROM,
        dr.VALIDTO
    FROM @tbl_MergedAssortmentRules ral
    LEFT OUTER JOIN @tbl_MergedAssortmentRules epv ON epv.LINETYPE = 0 /* Explicitly excluded Products and Variants */ AND epv.PRODUCTID = ral.PRODUCTID AND (epv.VARIANTID = 0 OR epv.VARIANTID = ral.VARIANTID)
        AND NOT (ral.VALIDFROM > epv.VALIDTO OR ral.VALIDTO < epv.VALIDFROM)
    CROSS APPLY [crt].GETINCLUDEDDATERANGES(ral.VALIDFROM, ral.VALIDTO, epv.VALIDFROM, epv.VALIDTO) dr
    WHERE ral.LINETYPE = 1 AND
        ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN dr.VALIDFROM AND dr.VALIDTO) OR
            (@b_IsForwardLooking = 1 AND dr.VALIDTO >= @dt_ChannelDate))

    UNION

    -- Retrieve product masters that have been implicitly included by variant inclusions.
    SELECT
        ral.PRODUCTID AS 'PRODUCTID',
        ral.ITEMID,
        0 AS 'VARIANTID',
        0 AS 'ISREMOTE',
        dr.VALIDFROM,
        dr.VALIDTO
    FROM @tbl_MergedAssortmentRules ral
    LEFT OUTER JOIN @tbl_MergedAssortmentRules epv ON epv.LINETYPE = 0 /* Explicitly excluded Products and Variants */ AND epv.PRODUCTID = ral.PRODUCTID AND (epv.VARIANTID = 0 OR epv.VARIANTID = ral.VARIANTID)
        AND NOT (ral.VALIDFROM > epv.VALIDTO OR ral.VALIDTO < epv.VALIDFROM)
    CROSS APPLY [crt].GETINCLUDEDDATERANGES(ral.VALIDFROM, ral.VALIDTO, epv.VALIDFROM, epv.VALIDTO) dr
    WHERE ral.LINETYPE = 1 AND ral.VARIANTID != 0 AND
        ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN dr.VALIDFROM AND dr.VALIDTO) OR
            (@b_IsForwardLooking = 1 AND dr.VALIDTO >= @dt_ChannelDate))

    UNION ALL

    -- Retrieve temporarily assorted products that have been downloaded by way of virtual catalog.
    SELECT
        tap.PRODUCTID AS 'PRODUCTID',
        tap.ITEMID,
        0 AS 'VARIANTID',
        1 AS 'ISREMOTE',
        tap.VALIDFROM,
        tap.VALIDTO
    FROM [crt].TMPASSORTEDPRODUCTS tap
    INNER JOIN @tvp_ProductIds ids ON @b_ProductIdsPassed = 0 OR ids.RECID = tap.PRODUCTID
    WHERE tap.CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN tap.VALIDFROM AND tap.VALIDTO

    UNION ALL

    -- Retrieve all the variants of temporarily assorted products that have been downloaded by way of virtual catalog.
    SELECT
        tap.PRODUCTID AS 'PRODUCTID',
        tap.ITEMID,
        pv.RECID AS 'VARIANTID',
        1 AS 'ISREMOTE',
        tap.VALIDFROM,
        tap.VALIDTO
    FROM [crt].TMPASSORTEDPRODUCTS tap  
    INNER  JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON pv.PRODUCTMASTER = tap.PRODUCTID
    INNER JOIN @tvp_ProductIds ids ON @b_ProductIdsPassed = 0 OR ids.RECID = tap.PRODUCTID
    WHERE tap.CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN tap.VALIDFROM AND tap.VALIDTO 

    RETURN;
END
GO
PRINT N'Creating [crt].[GETPRODUCTINFOSOURCESCURRENTTIMESTAMPS]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTINFOSOURCESCURRENTTIMESTAMPS]
(
	@bi_ChannelId BIGINT
)
RETURNS @watermark TABLE
(
	CHANNELID BIGINT,
	ECORESPRODUCT BIGINT,
	ECORESPRODUCTINSTANCEVALUE BIGINT,
	ECORESINSTANCEVALUE BIGINT,
	ECORESATTRIBUTE BIGINT,
	ECORESATTRIBUTEVALUE BIGINT,
	ECORESVALUE BIGINT,
	ECORESBOOLEANVALUE BIGINT,
	ECORESDATETIMEVALUE BIGINT,
	ECORESCURRENCYVALUE BIGINT,
	ECORESFLOATVALUE BIGINT,
	ECORESINTVALUE BIGINT,
	ECORESREFERENCEVALUE BIGINT,
	ECORESTEXTVALUE BIGINT,
	ECORESTEXTVALUETRANSLATION BIGINT,
	ECORESPRODUCTTRANSLATION BIGINT,
	ECORESPRODUCTVARIANTCOLOR BIGINT,
	ECORESPRODUCTVARIANTCONFIGURATION BIGINT,
	ECORESPRODUCTVARIANTDIMENSIONVALUE BIGINT,
	ECORESPRODUCTVARIANTSIZE BIGINT,
	ECORESPRODUCTVARIANTSTYLE BIGINT,
	ECORESCOLOR BIGINT,
	ECORESCONFIGURATION BIGINT,
	ECORESSIZE BIGINT,
	ECORESSTYLE BIGINT,
	ECORESATTRIBUTEGROUPATTRIBUTE BIGINT,
	ECORESCATEGORYATTRIBUTEGROUP BIGINT,
	ECORESCATEGORYATTRIBUTELOOKUP BIGINT,
	ECORESDISTINCTPRODUCTVARIANT BIGINT,
	ECORESPRODUCTCATEGORY BIGINT,
	RETAILCATEGORYCONTAINMENTLOOKUP BIGINT,
	RETAILPUBCATALOGPRODUCT BIGINT,
	RETAILPUBCATALOGPRODUCTCATEGORY BIGINT,
	RETAILPUBCATALOGPRODUCTRELATION BIGINT,
	RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION BIGINT,
	RETAILPUBINTERNALORGATTRIBUTEGROUP BIGINT,
	RETAILPUBINTORGINHERITANCEEXPLODED BIGINT,
	RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA BIGINT,
	RETAILPUBPRODUCTATTRIBUTEVALUE BIGINT,
	RETAILPUBRETAILCHANNELTABLE BIGINT,
	RETAILSHAREDPARAMETERS BIGINT,
	RETAILSTANDARDATTRIBUTE BIGINT,
	UNITOFMEASURE BIGINT
)
AS
BEGIN

	INSERT @watermark(
		CHANNELID,
		ECORESPRODUCT,
		ECORESPRODUCTINSTANCEVALUE,
		ECORESINSTANCEVALUE,
		ECORESATTRIBUTE,
		ECORESATTRIBUTEVALUE,
		ECORESVALUE,
		ECORESBOOLEANVALUE,
		ECORESDATETIMEVALUE,
		ECORESCURRENCYVALUE,
		ECORESFLOATVALUE,
		ECORESINTVALUE,
		ECORESREFERENCEVALUE,
		ECORESTEXTVALUE,
		ECORESTEXTVALUETRANSLATION,
		ECORESPRODUCTTRANSLATION,
		ECORESPRODUCTVARIANTCOLOR,
		ECORESPRODUCTVARIANTCONFIGURATION,
		ECORESPRODUCTVARIANTDIMENSIONVALUE,
		ECORESPRODUCTVARIANTSIZE,
		ECORESPRODUCTVARIANTSTYLE,
		ECORESCOLOR,
		ECORESCONFIGURATION,
		ECORESSIZE,
		ECORESSTYLE,
		ECORESATTRIBUTEGROUPATTRIBUTE,
		ECORESCATEGORYATTRIBUTEGROUP,
		ECORESCATEGORYATTRIBUTELOOKUP,
		ECORESDISTINCTPRODUCTVARIANT,
		ECORESPRODUCTCATEGORY,
		RETAILCATEGORYCONTAINMENTLOOKUP,
		RETAILPUBCATALOGPRODUCT,
		RETAILPUBCATALOGPRODUCTCATEGORY,
		RETAILPUBCATALOGPRODUCTRELATION,
		RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION,
		RETAILPUBINTERNALORGATTRIBUTEGROUP,
		RETAILPUBINTORGINHERITANCEEXPLODED,
		RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA,
		RETAILPUBPRODUCTATTRIBUTEVALUE,
		RETAILPUBRETAILCHANNELTABLE,
		RETAILSHAREDPARAMETERS,
		RETAILSTANDARDATTRIBUTE,
		UNITOFMEASURE
	)
	VALUES (
		@bi_ChannelId,
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCT), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTINSTANCEVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESINSTANCEVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESATTRIBUTE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESATTRIBUTEVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESBOOLEANVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESDATETIMEVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESCURRENCYVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESFLOATVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESINTVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESREFERENCEVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESTEXTVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESTEXTVALUETRANSLATION), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTTRANSLATION), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTVARIANTCOLOR), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTVARIANTCONFIGURATION), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTVARIANTDIMENSIONVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTVARIANTSIZE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTVARIANTSTYLE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESCOLOR), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESCONFIGURATION), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESSIZE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESSTYLE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESATTRIBUTEGROUPATTRIBUTE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESCATEGORYATTRIBUTEGROUP), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESCATEGORYATTRIBUTELOOKUP), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESDISTINCTPRODUCTVARIANT), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.ECORESPRODUCTCATEGORY), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILCATEGORYCONTAINMENTLOOKUP), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBCATALOGPRODUCT), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBCATALOGPRODUCTCATEGORY), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBCATALOGPRODUCTRELATION), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBINTERNALORGATTRIBUTEGROUP), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBINTORGINHERITANCEEXPLODED), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBPRODUCTATTRIBUTEVALUE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILPUBRETAILCHANNELTABLE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILSHAREDPARAMETERS), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.RETAILSTANDARDATTRIBUTE), 0),
		ISNULL((SELECT MAX(ROWVERSION) FROM ax.UNITOFMEASURE), 0)
	)

	RETURN;
END
GO
PRINT N'Creating [crt].[GETPRODUCTIDSWITHPUBLISHEDCATALOGCHANGES]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSWITHPUBLISHEDCATALOGCHANGES]
(
    @watermark AS [crt].[PRODUCTCHANGETRACKINGANCHORSET] READONLY 
)
RETURNS @changedAttributeValues TABLE
(
    RECID BIGINT,
    SEQUENCE BIGINT
)
AS
BEGIN

	-- retain product ids
	INSERT @changedAttributeValues(RECID, SEQUENCE)

    -- get ids of products whose instance values have changed directly
	SELECT
		rpcp.PRODUCT AS RECID,
		rpcp.ROWVERSION AS SEQUENCE
	FROM ax.RETAILPUBCATALOGPRODUCT rpcp
    JOIN @watermark w ON w.RETAILPUBCATALOGPRODUCT IS NOT NULL AND rpcp.ROWVERSION > ISNULL(w.RETAILPUBCATALOGPRODUCT, 0)

	UNION 

	-- get ids of products whose category associations have changed
	SELECT
		rpcp.PRODUCT,
		rpcp.ROWVERSION AS SEQUENCE 
	FROM ax.RETAILPUBCATALOGPRODUCT rpcp
		INNER JOIN ax.RETAILPUBCATALOGPRODUCTCATEGORY rpcpc ON rpcpc.CATALOGPRODUCT = rpcp.ORIGIN 
		WHERE rpcpc.ROWVERSION > (SELECT RETAILPUBCATALOGPRODUCTCATEGORY FROM @watermark)

	UNION

	-- get ids of products whose catalog relations have changed 
	SELECT
		rpcp.PRODUCT AS RECID,
		rpcp.ROWVERSION AS SEQUENCE
	FROM ax.RETAILPUBCATALOGPRODUCT rpcp
		INNER JOIN ax.RETAILPUBCATALOGPRODUCTRELATION rpcpr ON rpcpr.CATALOGPRODUCT = rpcp.ORIGIN
		WHERE rpcpr.ROWVERSION > (SELECT RETAILPUBCATALOGPRODUCTRELATION FROM @watermark)

	UNION

	-- get ids of products whose catalog relation exclusions have changed 
	SELECT
		rpcp.PRODUCT AS RECID,
		rpcp.ROWVERSION AS SEQUENCE
	FROM ax.RETAILPUBCATALOGPRODUCT rpcp
		INNER JOIN ax.RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION rpcpre ON rpcpre.CATALOGPRODUCT = rpcp.ORIGIN
		WHERE rpcpre.ROWVERSION > (SELECT RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION FROM @watermark)

	RETURN;
END
GO
PRINT N'Creating [crt].[GETRETAILKITLISTING]...';


GO

CREATE FUNCTION [crt].[GETRETAILKITLISTING]
(
    @bi_ChannelId               BIGINT, -- The unique channel identifier.
    @dt_ChannelDate             DATE,   -- The current date in the channel's time zone.
    @tvp_KitProductMasterIds    [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN

    SELECT DISTINCT
        AP.PRODUCTID as KITPRODUCTMASTERLISTING,
        @bi_ChannelId AS CHANNEL,
        RK.DISASSEMBLYATREGISTERALLOWED,
        RK.RECID as KITRECID
    FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0, 1, 1, @tvp_KitProductMasterIds) AP
    INNER JOIN [ax].RETAILKIT RK ON AP.PRODUCTID = RK.PRODUCTMASTER
GO
PRINT N'Creating [crt].[GETRETAILKITLINEDEFINITION]...';


GO

CREATE FUNCTION [crt].[GETRETAILKITLINEDEFINITION]
(
    @bi_ChannelId               BIGINT, -- The unique channel identifier.
    @dt_ChannelDate             DATE,   -- The current date in the channel's time zone.
    @tvp_KitProductMasterIds    [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS @RETAILKITLINEDEFINITION TABLE
(
    [KITLINEPRODUCTLISTING]         BIGINT NOT NULL,
    [CHANNEL]                       BIGINT NOT NULL,
    [KITLINEPRODUCTMASTERLISTING]   BIGINT NOT NULL,
    [QUANTITY]                      NUMERIC(32, 16) NOT NULL,
    [UNIT]                          NVARCHAR(10) NOT NULL,
    [CHARGE]                        NUMERIC(32, 16) NOT NULL,
    [ISDEFAULTCOMPONENT]            INT NOT NULL,
    [KITPRODUCTMASTERLISTING]       BIGINT NOT NULL,
    [KITLINEIDENTIFIER]             BIGINT NOT NULL,
    [ITEMID]                        NVARCHAR(20) NOT NULL
)
AS
BEGIN
    DECLARE @components [crt].[RECORDIDTABLETYPE];
    
    -- Create a temporary table
    DECLARE @tbl_WorkingSet TABLE (
        KIT                             BIGINT NOT NULL,
        KITPRODUCTMASTERLISTING         BIGINT NOT NULL,
        KITLINEPRODUCTLISTING           BIGINT NOT NULL,
        KITLINEIDENTIFIER               BIGINT NOT NULL,
        UOM                             NVARCHAR(10) NOT NULL,
        QUANTITY                        NUMERIC(32, 16) NOT NULL
    )

    DECLARE @tbl_AssortedProducts TABLE (
        PRODUCTID                   BIGINT NOT NULL,
        VARIANTID                   BIGINT NOT NULL,
        ITEMID                      NVARCHAR(20) NOT NULL
    )

    INSERT @tbl_WorkingSet (KIT, KITPRODUCTMASTERLISTING, KITLINEPRODUCTLISTING, KITLINEIDENTIFIER, UOM, QUANTITY)
    SELECT 
		RK.RECID, 
		RK.PRODUCTMASTER, 
		RKC.COMPONENT, 
		RKC.RECID, 
		UOM.SYMBOL, 
		RKC.QUANTITY 
    FROM [ax].RETAILKITCOMPONENT RKC
        INNER JOIN [ax].RETAILKIT RK ON RK.RECID = RKC.KIT
        INNER JOIN [ax].UNITOFMEASURE UOM ON UOM.RECID = RKC.UNITOFMEASURE
        INNER JOIN @tvp_KitProductMasterIds ids ON ids.RECID = RK.PRODUCTMASTER

    -- Get assorted products

    INSERT @components
        SELECT WS.KITLINEPRODUCTLISTING FROM @tbl_WorkingSet WS
            INNER JOIN [ax].INVENTTABLE IT ON IT.PRODUCT = WS.KITLINEPRODUCTLISTING
    UNION 
        SELECT DPV.PRODUCTMASTER FROM @tbl_WorkingSet WS
            INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT DPV ON DPV.RECID = WS.KITLINEPRODUCTLISTING
    UNION 
        SELECT RKCS.SUBSTITUTEPRODUCT FROM [ax].RETAILKITCOMPONENTSUBSTITUTE RKCS
            INNER JOIN @tbl_WorkingSet WS ON RKCS.KITCOMPONENT = WS.KITLINEIDENTIFIER
            INNER JOIN [ax].INVENTTABLE IT ON IT.PRODUCT = RKCS.SUBSTITUTEPRODUCT
    UNION
        SELECT DPV.PRODUCTMASTER FROM [ax].RETAILKITCOMPONENTSUBSTITUTE RKCS
            INNER JOIN @tbl_WorkingSet WS ON RKCS.KITCOMPONENT = WS.KITLINEIDENTIFIER
            INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT DPV ON DPV.RECID = RKCS.SUBSTITUTEPRODUCT

    INSERT @tbl_AssortedProducts (PRODUCTID, VARIANTID, ITEMID)
        SELECT AP.PRODUCTID, AP.VARIANTID, AP.ITEMID
        FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0, 0, 1, @components) AP

    -- Generate results

    INSERT @RETAILKITLINEDEFINITION (KITLINEPRODUCTLISTING, CHANNEL, KITLINEPRODUCTMASTERLISTING, QUANTITY, UNIT, CHARGE, ISDEFAULTCOMPONENT, KITPRODUCTMASTERLISTING, KITLINEIDENTIFIER, ITEMID)

    -- Get components
    SELECT WS.KITLINEPRODUCTLISTING, @bi_ChannelId, 
        CASE 
            WHEN AP.VARIANTID = 0 THEN 0
            ELSE AP.PRODUCTID
        END,
        WS.QUANTITY, WS.UOM, 0.0, 1, WS.KITPRODUCTMASTERLISTING, WS.KITLINEIDENTIFIER, AP.ITEMID
    FROM @tbl_WorkingSet WS
        INNER JOIN @tbl_AssortedProducts AP ON (AP.PRODUCTID = WS.KITLINEPRODUCTLISTING  AND AP.VARIANTID = 0) OR AP.VARIANTID = WS.KITLINEPRODUCTLISTING

    UNION ALL

    -- Get substitutes
    SELECT 
		RKCS.SUBSTITUTEPRODUCT, 
		@bi_ChannelId, 
        CASE 
            WHEN AP.VARIANTID = 0 THEN 0
            ELSE AP.PRODUCTID
        END,
        RKCS.QUANTITY, 
		UOM.SYMBOL, 
		ISNULL(RKRSC.SUBSTITUTECHARGE, 0.0), 
		0, 
		WS.KITPRODUCTMASTERLISTING, 
		WS.KITLINEIDENTIFIER, 
		AP.ITEMID
    FROM [ax].RETAILKITCOMPONENTSUBSTITUTE RKCS
        INNER JOIN @tbl_WorkingSet WS on RKCS.KITCOMPONENT = WS.KITLINEIDENTIFIER
        INNER JOIN [ax].RETAILCHANNELTABLE RCT ON RCT.RECID = @bi_ChannelId
        INNER JOIN [ax].UNITOFMEASURE UOM ON UOM.RECID = RKCS.UNITOFMEASURE
        INNER JOIN @tbl_AssortedProducts AP ON (AP.PRODUCTID = RKCS.SUBSTITUTEPRODUCT  AND AP.VARIANTID = 0) OR AP.VARIANTID = RKCS.SUBSTITUTEPRODUCT
        LEFT JOIN [ax].RETAILKITRELEASEDSUBSTITUTECHARGE RKRSC ON RKRSC.KITCOMPONENTSUBSTITUTE = RKCS.RECID AND RKRSC.DATAAREAID = RCT.INVENTLOCATIONDATAAREAID

    RETURN;
END
GO
PRINT N'Creating [crt].[ATTRIBUTENAMETRANSLATIONSVIEW]...';


GO

CREATE VIEW [crt].[ATTRIBUTENAMETRANSLATIONSVIEW] AS
(
    SELECT
        erat.[ATTRIBUTE],
        erat.[FRIENDLYNAME],
        erat.[LANGUAGE]
    FROM [ax].ECORESATTRIBUTETRANSLATION erat
)
GO
PRINT N'Creating [crt].[SHIPPINGADAPTERCONFIGURATIONBYDELIVERYMODEIDVIEW]...';


GO

CREATE VIEW [crt].[SHIPPINGADAPTERCONFIGURATIONBYDELIVERYMODEIDVIEW] AS
(
    SELECT
        dlv.CODE AS DELIVERYMODEID,
        'Name' AS KEYNAME,
        rsci.CARRIERADAPTERID AS KEYVALUE,
        dlv.RECID AS RECID,
		dlv.DATAAREAID
    FROM [ax].DLVMODE dlv
    INNER JOIN [ax].SHIPCARRIERTABLE sct ON dlv.SHIPCARRIERID = sct.CARRIERID AND dlv.DATAAREAID = sct.DATAAREAID
    INNER JOIN [ax].RETAILSHIPCARRIERINTERFACE rsci ON rsci.RECID = sct.RETAILSHIPCARRIERINTERFACE AND rsci.DATAAREAID = sct.DATAAREAID

    UNION

    SELECT
        dlv.CODE AS DELIVERYMODEID,
        rscac.PROPERTYKEY AS KEYNAME,
        rscac.VALUE AS KEYVALUE,
        rscac.RECID AS RECID,		
		dlv.DATAAREAID
    FROM [ax].DLVMODE dlv
    INNER JOIN [ax].SHIPCARRIERCOMPANYACCOUNTS scca ON scca.CARRIERNAME = dlv.SHIPCARRIERNAME AND scca.ACCOUNTCODE = dlv.SHIPCARRIERACCOUNTCODE AND scca.DATAAREAID = dlv.DATAAREAID
    INNER JOIN [ax].RETAILSHIPCARRIERACCOUNTCONFIGURATION rscac ON rscac.SHIPCARRIERCOMPANYACCOUNTS = scca.RECID AND rscac.DATAAREAID = scca.DATAAREAID

    UNION

    SELECT
        dlv.CODE AS DELIVERYMODEID,
        'CurrencyCode' AS KEYNAME,
        scca.CURRENCYCODE AS KEYVALUE,
        scca.RECID AS RECID,		
		dlv.DATAAREAID
    FROM [ax].DLVMODE dlv
    INNER JOIN [ax].SHIPCARRIERCOMPANYACCOUNTS scca ON scca.CARRIERNAME = dlv.SHIPCARRIERNAME AND scca.ACCOUNTCODE = dlv.SHIPCARRIERACCOUNTCODE AND scca.DATAAREAID = dlv.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILTERMINALDEVICESVIEW]...';


GO

CREATE VIEW [crt].[RETAILTERMINALDEVICESVIEW] AS
(
	-- DEVICETYPEID by TERMINALID
	SELECT
		rd.TYPE AS DEVICETYPEID,
		rtt.RECID AS TERMINALID,
		1 AS PRIORITY
	FROM
		ax.RETAILDEVICE AS rd
		INNER JOIN ax.RETAILTERMINALTABLE AS rtt ON rtt.TERMINALID = rd.TERMINAL
	
	UNION ALL

	-- DEVICETYPEID by default
	SELECT
		rdt.RECID AS DEVICETYPEID,
		NULL AS TERMINALID,
		2 AS PRIORITY
	FROM
		ax.RETAILDEVICETYPES AS rdt
	WHERE
		rdt.TYPE = 0 -- Retail POS
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONTAXTRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONTAXTRANSVIEW] AS
(
    SELECT
        rttt.[AMOUNT] AS [TAXAMOUNT],
        rttt.[DATAAREAID],
        CAST(rttt.[ISINCLUDEDINPRICE] AS BIT) AS [ISINCLUDEDINPRICE],
        rttt.[TERMINALID],
        rttt.[TRANSACTIONID],
        rttt.[STOREID],
        rttt.[SALELINENUM],
        rttt.[TAXCODE]
    FROM [ax].RETAILTRANSACTIONTAXTRANS rttt
)
GO
PRINT N'Creating [crt].[DISCOUNTCODEVIEW]...';


GO

CREATE VIEW [crt].[DISCOUNTCODEVIEW] AS
(
    SELECT
        rdc.[RECID],
        rdc.[BARCODE],
        rdc.[DISCOUNTCODE],
        rdc.[DISCOUNTOFFERID],
        rpd.[NAME],
        rpd.[DESCRIPTION],
        rpd.[DISCLAIMER],
        rpd.[VALIDFROM],
        rpd.[VALIDTO],
        rpd.[CONCURRENCYMODE],
        rpd.[STATUS],
        rpd.[ISDISCOUNTCODEREQUIRED],
		rdc.[DATAAREAID]
    FROM [ax].[RETAILDISCOUNTCODE] AS rdc
    INNER JOIN [ax].[RETAILPERIODICDISCOUNT] AS rpd ON rpd.[OFFERID] = rdc.[DISCOUNTOFFERID] AND rpd.DATAAREAID = rdc.DATAAREAID
	INNER JOIN [ax].[RETAILPERIODICDISCOUNT] pd ON pd.OFFERID = rdc.DISCOUNTOFFERID AND pd.DATAAREAID = rdc.DATAAREAID
	WHERE pd.STATUS = 1
	    AND (pd.PERIODICDISCOUNTTYPE != 3) -- Don't fetch promotions
)
GO
PRINT N'Creating [crt].[SERIALIZEDITEMSVIEW]...';


GO

CREATE VIEW [crt].[SERIALIZEDITEMSVIEW]
WITH SCHEMABINDING AS
(
    SELECT tdgi.RECID,
           tdgi.ITEMID,
           tdgi.ITEMDATAAREAID,
           it.PRODUCT AS 'PRODUCTID',
           tdgs.ISSALESPROCESSACTIVATED
    FROM [ax].ECORESTRACKINGDIMENSIONGROUPFLDSETUP tdgs
        INNER JOIN [ax].ECORESTRACKINGDIMENSIONGROUPITEM tdgi ON tdgi.TRACKINGDIMENSIONGROUP = tdgs.TRACKINGDIMENSIONGROUP
        INNER JOIN [ax].INVENTTABLE it ON it.ITEMID = tdgi.ITEMID AND it.DATAAREAID = tdgi.ITEMDATAAREAID
    -- DIMENSIONFIELDID is the identifier accessed from fieldnum(InventDim, InventSerialId), in AX 2012 its value 5, in AX7 its value is 9
    WHERE TDGS.DIMENSIONFIELDID = 9 AND (tdgs.ISACTIVE = 1 OR tdgs.ISSALESPROCESSACTIVATED = 1)
)
GO
PRINT N'Creating [crt].[INFOSUBCODEVIEW]...';


GO

CREATE VIEW [crt].[INFOSUBCODEVIEW] AS
(
	SELECT
		rist.[INFOCODEID] AS REASONCODEID,
		rist.[SUBCODEID],
		rist.[RECID],
		rist.[TRIGGERFUNCTION],
		rist.[TRIGGERCODE],
		rist.[NEWSALESLINE],
		rist.[PRICETYPE],
		rist.[AMOUNTPERCENT],
		rist.[DATAAREAID]
	FROM [ax].[RETAILINFORMATIONSUBCODETABLE] AS rist
)
GO
PRINT N'Creating [crt].[RETAILTILLLAYOUTBUTTONGRIDZONEVIEW]...';


GO
-- Combining reference tables to simplify selection of ButtonGrid zones 
CREATE VIEW [crt].[RETAILTILLLAYOUTBUTTONGRIDZONEVIEW] AS
(
	SELECT 
		bgz.[BUTTONGRIDID]
		,bgz.[RECID]
		,rtlzr.[LAYOUTID]
		,rtlz.[ZONEID]
		,rtlz.[ZONENAME]
		,rtlz.[ZONETYPE]
	FROM [ax].[RETAILTILLLAYOUTBUTTONGRIDZONE] AS bgz
	LEFT JOIN [ax].[RETAILTILLLAYOUTZONEREFERENCE] AS rtlzr on rtlzr.RECID = bgz.RECID
	LEFT JOIN [ax].[RETAILTILLLAYOUTZONE] AS rtlz ON rtlz.RECID = rtlzr.ZONE
)
GO
PRINT N'Creating [crt].[TERMINALPAYMENTCONNECTORVIEW]...';


GO

CREATE VIEW [crt].[TERMINALPAYMENTCONNECTORVIEW] AS
(
    SELECT
       rhp.[RECID]
       ,rhp.[PROFILEID]
       ,rhp.[EFTCONNECTORNAME] AS NAME
       ,rhp.[EFTCONNECTORPROPERTIES] AS PROPERTIES
       ,rt.[TERMINALID]
       ,rhp.[EFTTESTMODE] AS ISTESTMODE
    FROM [ax].RETAILTERMINALTABLE rt
    INNER JOIN [ax].RETAILHARDWAREPROFILE rhp ON rt.HARDWAREPROFILE = rhp.PROFILEID
)
GO
PRINT N'Creating [crt].[RECEIPTINFOVIEW]...';


GO

CREATE VIEW [crt].[RECEIPTINFOVIEW] AS
(
    SELECT
        rfl.[TITLE],
        rfl.[DESCRIPTION],
        rfl.[UPPERCASE],
        rfl.[PRINTASSLIP],
        rfl.[PRINTBEHAVIOUR],
        rfl.[HEADERXML],
        rfl.[LINESXML],
        rfl.[FOOTERXML],
        rfl.[FORMLAYOUTID]
    FROM [ax].RETAILFORMLAYOUT rfl
)
GO
PRINT N'Creating [crt].[DELIVERYMODESVIEW]...';


GO

CREATE VIEW [crt].[DELIVERYMODESVIEW] AS
(
    SELECT
        dm.RECID,
        dm.CODE,
        dm.TXT,
        dm.MARKUPGROUP,
		dm.DATAAREAID
    FROM [ax].DLVMODE dm
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONAFFILIATIONTRANSVIEW]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[RETAILTRANSACTIONAFFILIATIONTRANSVIEW] creates a view 
    about retail transaction affiliation.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE VIEW [crt].[RETAILTRANSACTIONAFFILIATIONTRANSVIEW] AS
(
    SELECT
      RTAT.AFFILIATION,
      RTAT.LOYALTYTIER,
      RTAT.TRANSACTIONID,
      RTAT.TERMINALID,
      RTAT.RECEIPTID,
      RTAT.STAFFID,
      RTAT.DATAAREAID,
      RTAT.CHANNEL,
	  RA.AFFILIATIONTYPE
    FROM [ax].RETAILTRANSACTIONAFFILIATIONTRANS RTAT
	INNER JOIN [ax].RETAILAFFILIATION RA
	ON RA.RECID = RTAT.AFFILIATION
)
GO
PRINT N'Creating [crt].[INFOCODESETTINGSVIEW]...';


GO

CREATE VIEW [crt].[INFOCODESETTINGSVIEW] AS
(
    SELECT
        RST.STOREORIGINID AS CHANNELID,
        RFP.RECID AS RECID,
        RFP.PROFILEID,
        RFP.SALESPERSON AS ADDSALESPERSON,
        RFP.CANCELREASON AS NFCEVOIDED,
        RFP.CONTINGENCYREASON AS NFCECONTINGENCYMNODENABLED,
        RFP.ENDOFTRANSACTION,
        RFP.MARKDOWN AS ITEMDISCOUNT,
        RFP.MARKUP,
        RFP.ITEMNOTONFILE,
        RFP.LINEITEMTAXCHANGE,
        RFP.NEGATIVEADJUSTMENT,
        RFP.OVERRIDEPRICE,
        RFP.NOSALE AS OPENDRAWER,
        RFP.NEGATIVESALESLINE AS RETURNITEM,
        RFP.REFUNDSALE AS RETURNTRANSACTION,
        RFP.SERIALNUMBER,
        RFP.STARTOFTRANSACTION,
        RFP.TENDERDECLARATION,
        RFP.DISCOUNTATTOTAL AS TOTALDISCOUNT,
        RFP.TRANSACTIONTAXCHANGE,
        RFP.VOIDISPRESSED AS VOIDITEM,
        RFP.VOIDPAYMENT,
        RFP.VOIDTRANSACTION
    FROM [ax].RETAILFUNCTIONALITYPROFILE AS RFP
    INNER JOIN [ax].RETAILPUBRETAILSTORETABLE AS RST ON RFP.PROFILEID = RST.FUNCTIONALITYPROFILE
)
GO
PRINT N'Creating [crt].[CATALOGPRODUCTRELATIONEXCLUSIONVIEW]...';


GO

CREATE VIEW [crt].[CATALOGPRODUCTRELATIONEXCLUSIONVIEW] AS
(
    SELECT
		rpcp.CATALOG,
        rpcp.PRODUCT,
        rpcpre.PRODUCTRELATION
        FROM ax.RETAILPUBCATALOGPRODUCT rpcp
            JOIN ax.RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION rpcpre 
                ON rpcpre.CATALOGPRODUCT = rpcp.ORIGIN
)
GO
PRINT N'Creating [crt].[RETAILDEVICESVIEW]...';


GO

CREATE VIEW [crt].[RETAILDEVICESVIEW] AS
(
	-- DEVICETYPEID by DEVICEID
	SELECT
		rd.TYPE AS DEVICETYPEID,
		rd.DEVICEID AS DEVICEID
	FROM
		ax.RETAILDEVICE AS rd
)
GO
PRINT N'Creating [crt].[TRANSACTIONPROPERTIESVIEW]...';


GO

CREATE VIEW [crt].[TRANSACTIONPROPERTIESVIEW] AS
(
    SELECT
        [rtp].[DATAAREAID],
        [rtp].[CHANNEL],
        [rtp].[STOREID],
        [rtp].[TERMINALID],
        [rtp].[TRANSACTIONID],
        [rtp].[SALELINENUM],
        [rtp].[NAME],
        [rtp].[VALUE]
    FROM [crt].RETAILTRANSACTIONPROPERTIES rtp
)
GO
PRINT N'Creating [crt].[TAXPARAMETERSVIEW]...';


GO

CREATE VIEW [crt].[TAXPARAMETERSVIEW] AS
(
    SELECT
        tp.[RECID],
        tp.[SALESTAX_IN],
		tp.[SERVICETAX_IN],
		tp.[VAT_IN],
		rct.[RECID] AS [CHANNELID]
    FROM [ax].TAXPARAMETERS tp
	INNER JOIN [ax].RETAILCHANNELTABLE rct ON rct.INVENTLOCATIONDATAAREAID = tp.DATAAREAID
)
GO
PRINT N'Creating [crt].[CHANNELCURRENCIESVIEW]...';


GO

CREATE VIEW [crt].[CHANNELCURRENCIESVIEW] AS
(
    SELECT
        rccur.CHANNEL AS 'CHANNELID',
        cur.RECID,
        cur.CURRENCYCODE,
        cur.SYMBOL
    FROM [ax].CURRENCY cur
    INNER JOIN [ax].RETAILCHANNELCURRENCY rccur ON cur.CURRENCYCODE = rccur.CURRENCYCODE
)
GO
PRINT N'Creating [crt].[SHIFTTENDERBANKDROPTRANSVIEW]...';


GO

CREATE VIEW [crt].[SHIFTTENDERBANKDROPTRANSVIEW] AS
(

			SELECT		PAYMENT.[TENDERTYPE] AS [TENDERTYPEID], 
						TENDER.[NAME] AS [TENDERTYPENAME],
						PAYMENT.[CURRENCY], 
						TENDER.[COUNTINGREQUIRED], 
						PAYMENT.[AMOUNTTENDERED] AS [TENDEREDAMOUNT], 
						PAYMENT.[AMOUNTCUR] AS [TENDEREDAMOUNTCUR],
						TRANS.[TYPE] AS [TRANSACTIONTYPE],
						TRANS.[CHANNEL],
						TRANS.[DATAAREAID],
						TRANS.[BATCHTERMINALID],
						TRANS.[BATCHID],
						PAYMENT.[CARDTYPEID],
						TRANS.[CREATEDDATETIME]

			FROM		[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] PAYMENT

			INNER JOIN	[ax].[RETAILTRANSACTIONTABLE] AS TRANS
						ON TRANS.TRANSACTIONID = PAYMENT.TRANSACTIONID 
						AND TRANS.CHANNEL = PAYMENT.CHANNEL
						AND TRANS.TERMINAL = PAYMENT.TERMINAL 
						AND TRANS.DATAAREAID = PAYMENT.DATAAREAID 

			INNER JOIN	[ax].[RETAILSTORETENDERTYPETABLE] AS TENDER 
						ON TENDER.TENDERTYPEID = PAYMENT.TENDERTYPE 
						AND TENDER.DATAAREAID = PAYMENT.DATAAREAID 
						AND TENDER.CHANNEL = PAYMENT.CHANNEL

			INNER JOIN	[ax].[RETAILSTORETABLE] AS ST 
						ON ST.RECID = TENDER.CHANNEL 
						AND ST.RECID = PAYMENT.CHANNEL

			WHERE		TRANSACTIONSTATUS = 0	-- 0 indicates Transaction status is normal
						AND (COUNTINGREQUIRED = 1 OR TAKENTOBANK = 1 OR TAKENTOSAFE = 1)

)
GO
PRINT N'Creating [crt].[CHANNELVIEW]...';


GO

CREATE VIEW [crt].[CHANNELVIEW] AS
(
    SELECT
        rprct.ORIGINID AS RECID,
        rprct.CHANNELTYPE,
        rprct.CATEGORYHIERARCHY,
        dp.NAME,
        rprct.INVENTLOCATION,
        rprct.DEFAULTCUSTACCOUNT
    FROM [ax].RETAILPUBRETAILCHANNELTABLE rprct
    INNER JOIN [ax].DIRPARTYTABLE dp ON dp.RECID = rprct.OMOPERATINGUNITID
	UNION ALL
    SELECT
        rct.RECID,
        rct.CHANNELTYPE,
        0 AS CATEGORYHIERARCHY,
        dp.NAME,
        rct.INVENTLOCATION,
        rct.DEFAULTCUSTACCOUNT
    FROM [ax].RETAILCHANNELTABLE rct
    INNER JOIN [ax].DIRPARTYTABLE dp ON dp.RECID = rct.OMOPERATINGUNITID
	WHERE NOT EXISTS (SELECT * FROM [ax].RETAILPUBRETAILCHANNELTABLE rprct WHERE rprct.ORIGINID = rct.RECID)
)
GO
PRINT N'Creating [crt].[SHIFTTENDERLINESVIEW]...';


GO

CREATE VIEW [crt].[SHIFTTENDERLINESVIEW] AS
(
    SELECT
        TENDERLINE.[ADDTOTENDERAMOUNT],
        TENDERLINE.[ADDTOTENDERAMOUNTCUR],
        TENDERLINE.[BANKDROPAMOUNT],
        TENDERLINE.[BANKDROPAMOUNTCUR],
        TENDERLINE.[CARDTYPEID],
        CARDTYPE.[NAME] AS CARDTYPENAME,
        TENDERLINE.[CHANGEAMOUNT],
        TENDERLINE.[CHANGEAMOUNTCUR],
        TENDERLINE.[CHANNEL],
        TENDERLINE.[COUNT],
        CAST(TENDERLINE.[COUNTINGREQUIRED] AS BIT) AS [COUNTINGREQUIRED],
        TENDERLINE.[CURRENCY],
        TENDERLINE.[DECLARETENDERAMOUNT],
        TENDERLINE.[DECLARETENDERAMOUNTCUR],
        TENDERLINE.[REMOVETENDERAMOUNT],
        TENDERLINE.[REMOVETENDERAMOUNTCUR],
        TENDERLINE.[SAFEDROPAMOUNT],
        TENDERLINE.[SAFEDROPAMOUNTCUR],
        TENDERLINE.[BATCHID] AS [SHIFTID],
        TENDERLINE.[STARTINGAMOUNT],
        TENDERLINE.[STARTINGAMOUNTCUR],
        TENDERLINE.[STOREID],
        TENDERLINE.[TENDEREDAMOUNT],
        TENDERLINE.[TENDEREDAMOUNTCUR],
        TENDERLINE.[TENDERTYPEID],
        TENDERTYPE.[NAME] AS TENDERTYPENAME,
        TENDERLINE.[TERMINALID],
        TENDERLINE.[DATAAREAID],
        TENDERLINE.[ROWVERSION]
    FROM [ax].RETAILPOSBATCHTENDERTRANS TENDERLINE
    INNER JOIN [ax].RETAILSTORETENDERTYPETABLE TENDERTYPE ON TENDERLINE.CHANNEL = TENDERTYPE.CHANNEL AND TENDERLINE.TENDERTYPEID = TENDERTYPE.TENDERTYPEID
    LEFT OUTER JOIN [ax].RETAILSTORETENDERTYPECARDTABLE CARDTYPE ON TENDERLINE.CHANNEL = CARDTYPE.CHANNEL AND TENDERLINE.TENDERTYPEID = CARDTYPE.TENDERTYPEID AND TENDERLINE.CARDTYPEID = CARDTYPE.CARDTYPEID
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONMARKUPTRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONMARKUPTRANSVIEW] AS
(
    SELECT
        MT.CURRENCYCODE
        ,MT.MARKUPCODE
        ,MT.MARKUPLINENUM
        ,MT.SALELINENUM
        ,MT.STORE
        ,MT.TAXGROUP
        ,MT.TAXITEMGROUP as ITEMTAXGROUPID
        ,MT.TERMINALID
        ,MT.TRANSACTIONID
        ,MT.VALUE
        ,MT.METHOD
        ,MT.CALCULATEDAMOUNT
		,MT.TAXAMOUNT
		,MT.TAXAMOUNTINCLUSIVE
		,MT.TAXAMOUNTEXCLUSIVE
        ,MT.DATAAREAID
    FROM [ax].RETAILTRANSACTIONMARKUPTRANS MT
)
GO
PRINT N'Creating [crt].[ITEMPHYSICALDIMENSIONSVIEW]...';


GO

CREATE VIEW [crt].[ITEMPHYSICALDIMENSIONSVIEW] AS
(
    SELECT
       it.[RECID],
       it.[ITEMID],
       it.[GROSSDEPTH],
       it.[GROSSHEIGHT],
       it.[GROSSWIDTH],
       it.[NETWEIGHT],
       it.[TARAWEIGHT],
       it.[DATAAREAID]
    FROM [ax].INVENTTABLE it
)
GO
PRINT N'Creating [crt].[GETHARDWARESTATIONSVIEW]...';


GO

CREATE VIEW [crt].[GETHARDWARESTATIONSVIEW] AS
(
    SELECT
        rshws.[RECID],
        rhws.[HARDWAREPROFILEID],
        rhws.[HARDWARESTATIONID],
        rhws.[HARDWARESTATIONNAME],
        rshws.[DESCRIPTION] AS [HARDWARESTATIONDESCRIPTION],
        rshws.[STORE] AS [STORE],
        rshws.[HOSTNAME] AS [HOSTNAME],
        CASE
        WHEN rhws.[HARDWARESTATIONPORTNUMBER] = 0
        THEN
        'https://' + rshws.[HOSTNAME] + '/HardwareStation'
        ELSE
        'https://' + rshws.[HOSTNAME] + ':' + CAST(rhws.[HARDWARESTATIONPORTNUMBER] AS varchar(15)) + '/HardwareStation'
        END
        AS [HARDWARESTATIONURL],
        rshws.EFTTERMINALID AS [EFTTERMINALID]
    FROM ax.RETAILHARDWARESTATION rhws
    INNER JOIN ax.RETAILSTOREHARDWARESTATIONTABLE rshws
    ON rhws.HARDWARESTATIONID = rshws.HARDWARESTATIONID
)
GO
PRINT N'Creating [crt].[PRICEGROUPSVIEW]...';


GO

CREATE VIEW [crt].[PRICEGROUPSVIEW] AS
(
    SELECT
        [pdg].[RECID],
        [pdg].[RECID] AS PRICEGROUP,
        [pdg].[GROUPID],
		[pdg].[RETAILPRICINGPRIORITYNUMBER],
        [c].[RECID] AS CHANNELID
    FROM [ax].PRICEDISCGROUP pdg
    INNER JOIN [ax].RETAILCHANNELTABLE c on c.INVENTLOCATIONDATAAREAID = pdg.DATAAREAID
	WHERE pdg.Module = 1 AND pdg.Type = 0
)
GO
PRINT N'Creating [crt].[RETAILDISCOUNTLINESVIEW]...';


GO
/********************************************************************************
    RetailDiscountLinesView retrieves the discount detail line information by joining six tables.
	RETAILPERIODICDISCOUNTLINE - AX table that stores the discount line definitions.
    RETAILPERIODICDISCOUNT - AX table that stores the discount definitions.
	RETAILGROUPMEMBERLINE - AX table that contains category/product/variants for a group.
    RETAILDISCOUNTLINEMIXANDMATCH - AX table that holds mix and match discount line groups.
    RETAILDISCOUNTLINEOFFER - AX table that holds the amount values for line-specific discounts.
	UNITOFMEASURE - AX table that holds units of measurement for products.
********************************************************************************/
CREATE VIEW crt.RETAILDISCOUNTLINESVIEW
AS
(
	SELECT
		pdl.DATAAREAID,
		pdl.OFFERID,
		pdl.LINENUM,
        pdl.DISCOUNTPERCENTORVALUE,

        ISNULL(mmol.LINEGROUP, '') AS LINEGROUP,
        ISNULL(mmol.DISCOUNTTYPE, 0) AS MIXANDMATCHLINEDISCOUNTTYPE,
        ISNULL(mmlg.NUMBEROFITEMSNEEDED, 0) AS NUMBEROFITEMSNEEDED,

        ISNULL(dol.DISCOUNTMETHOD, 0) AS DISCOUNTMETHOD,
        ISNULL(dol.DISCAMOUNT, 0) AS DISCAMOUNT,
        ISNULL(dol.DISCPCT, 0) AS DISCPCT,
        ISNULL(dol.OFFERPRICE, 0) AS OFFERPRICE,

        ISNULL(uom.SYMBOL,'') AS SYMBOL,
		rgl.CATEGORY,
		rgl.PRODUCT,
		rgl.VARIANT
	FROM [ax].[RETAILPERIODICDISCOUNTLINE] pdl
		INNER JOIN [ax].RETAILPERIODICDISCOUNT pd ON pd.OFFERID = pdl.OFFERID AND pd.DATAAREAID = pdl.DATAAREAID
		INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl ON rgl.RECID = pdl.RETAILGROUPMEMBERLINE
		LEFT OUTER JOIN [ax].RETAILDISCOUNTLINEMIXANDMATCH mmol ON mmol.RECID = pdl.RECID AND mmol.DATAAREAID = pdl.DATAAREAID
		LEFT OUTER JOIN [ax].RETAILMIXANDMATCHLINEGROUPS mmlg ON mmlg.MIXANDMATCHID = pdl.OFFERID AND mmlg.MIXANDMATCHLINEGROUP = mmol.LINEGROUP AND mmlg.DATAAREAID = mmol.DATAAREAID
		LEFT OUTER JOIN [ax].RETAILDISCOUNTLINEOFFER dol ON dol.RECID = pdl.RECID AND dol.DATAAREAID = pdl.DATAAREAID
		LEFT OUTER JOIN [ax].UNITOFMEASURE uom ON uom.RECID = pdl.UNITOFMEASURE
	WHERE pd.STATUS = 1
        AND (pd.PERIODICDISCOUNTTYPE != 3) -- Don't fetch promotions
)
GO
PRINT N'Creating [crt].[PRODUCTVARIANTCATEGORYVIEW]...';


GO

CREATE VIEW [crt].[PRODUCTVARIANTCATEGORYVIEW] AS
(
    SELECT
        ERDPV.RECID AS PRODUCT,
        ERPC.RECID AS PRODUCTCATEGORY,
        ERPC.CATEGORY
    FROM [ax].ECORESDISTINCTPRODUCTVARIANT ERDPV
        JOIN [ax].ECORESPRODUCTCATEGORY ERPC ON ERPC.PRODUCT = ERDPV.PRODUCTMASTER
)
GO
PRINT N'Creating [crt].[TERMINALSVIEW]...';


GO

CREATE VIEW [crt].[TERMINALSVIEW] AS
(
    SELECT
        rtt.RECID,
        rtt.STORERECID,
        rtt.NAME,
        rtt.TERMINALID,
        rtt.HARDWAREPROFILE
        FROM [ax].RETAILTERMINALTABLE rtt
)
GO
PRINT N'Creating [crt].[RECEIPTPROFILESVIEW]...';


GO

CREATE VIEW [crt].[RECEIPTPROFILESVIEW] AS
(
    SELECT
        rrpl.[FORMLAYOUTID],
        rrpl.[PROFILEID],
        rrpl.[RECEIPTTYPE]
    FROM [ax].RETAILRECEIPTPROFILELINE rrpl
)
GO
PRINT N'Creating [crt].[ITEMCHANNELTRADEAGREEMENTPRICEVIEW]...';


GO

CREATE VIEW [crt].[ITEMCHANNELTRADEAGREEMENTPRICEVIEW]
AS
(
    SELECT
        [rcpg].RETAILCHANNEL    AS CHANNEL,
        [it].PRODUCT            AS PRODUCT,
        [pdt].AMOUNT            AS PRICE,
        [pdt].FROMDATE          AS FROMDATE, 
        [pdt].TODATE            AS TODATE 
    FROM [ax].RETAILCHANNELPRICEGROUP rcpg 
    INNER JOIN [ax].PRICEDISCGROUP pdg ON [rcpg].PRICEGROUP = [pdg].RECID
    INNER JOIN [ax].PRICEDISCTABLE pdt ON [pdg].GROUPID = [pdt].ACCOUNTRELATION AND [pdg].DATAAREAID = [pdt].DATAAREAID AND [pdt].ITEMCODE = 0 /* Table */ AND [pdt].ACCOUNTCODE = 1 /* Group */ AND [pdt].RELATION = 4 /* Price */
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [rcpg].RETAILCHANNEL AND [rct].CURRENCY = [pdt].CURRENCY
    INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [pdt].ITEMRELATION AND [it].DATAAREAID = [pdt].DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILIMAGESVIEW]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[RETAILIMAGESVIEW] creates a view about retail images.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE VIEW [crt].[RETAILIMAGESVIEW] AS
(
  SELECT
    ri.[RECID],
    ri.[PICTURE],
    ri.[PICTUREID]
  FROM [ax].RETAILIMAGES ri
);
GO
PRINT N'Creating [crt].[CHANNELPROFILEPROPERTYVIEW]...';


GO

CREATE VIEW [crt].[CHANNELPROFILEPROPERTYVIEW] AS
(
    SELECT 
        cpp.[RECID],
        cpp.[CHANNELPROFILE],
        channelExt.[CHANNEL],
        cpp.[KEY],
        cpp.[VALUE]
    FROM [ax].RETAILCHANNELPROFILEPROPERTY AS cpp
    INNER JOIN [ax].RETAILCHANNELTABLEEXT AS channelExt ON channelExt.CHANNELPROFILE = cpp.CHANNELPROFILE 
)
GO
PRINT N'Creating [crt].[RETAILSPECIALCATEGORYVARIANTVIEW]...';


GO

-- Similar to RETAILSPECIALCATEGORYPRODUCT view from AX BUT shows all special
-- categories associated with each variants.
CREATE VIEW [crt].[RETAILSPECIALCATEGORYVARIANTVIEW] AS
(
    SELECT
       T3.RECID AS PRODUCT,
       T1.CATEGORY AS CATEGORY
    FROM [ax].RETAILSPECIALCATEGORYMEMBER AS T1
    INNER JOIN [ax].RETAILGROUPMEMBERLINE AS T2 ON T2.RECID = T1.RETAILGROUPMEMBER
    INNER JOIN [ax].ECORESPRODUCT AS T3 ON T3.RECID = T2.VARIANT
)
GO
PRINT N'Creating [crt].[CATALOGLISTDEFINITIONVIEW]...';


GO

CREATE VIEW [crt].[CATALOGLISTDEFINITIONVIEW] AS
(
    SELECT
	    cd.CHANNELID,
        cd.LISTID,
        cd.ATTRIBUTERECID,
        cd.ATTRIBUTEKEYNAME,
        cd.LISTGROUPID,
        COUNT(*) AS LISTLENGTH
    FROM [crt].CATALOGDEFINITION cd
    INNER JOIN [crt].CATALOGLISTMAPPING cm ON cm.LISTID = cd.LISTID
    GROUP BY cd.CHANNELID, cd.LISTID, cd.ATTRIBUTERECID, cd.ATTRIBUTEKEYNAME, cd.LISTGROUPID
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONADDRESSTRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONADDRESSTRANSVIEW] AS
(
    SELECT
        [rtat].CITY,
        [rtat].COUNTRYREGIONID,
        [rtat].COUNTY,
        [rtat].DELIVERYNAME AS NAME,
        [rtat].EMAIL,
        [rtat].PHONE,
        [rtat].SALESNAME,
        [rtat].STATE,
        [rtat].STREET,
        [rtat].ZIPCODE,
        [rtat].TRANSACTIONID,
        [rtat].SALELINENUM,
        [rtat].STREETNUMBER,
        [rtat].DISTRICTNAME
    FROM [ax].RETAILTRANSACTIONADDRESSTRANS rtat
)
GO
PRINT N'Creating [crt].[LOCALPRODUCTASSORTMENTRULESVIEW]...';


GO
CREATE VIEW [crt].[LOCALPRODUCTASSORTMENTRULESVIEW]
WITH SCHEMABINDING AS
(
    SELECT
        [ralcg].ASSORTMENTID,
        [rct].RECID AS CHANNELID,
        [par].PRODUCTID,
        [par].VARIANTID,
        [par].VALIDFROM,
        [par].VALIDTO
    FROM [crt].PRODUCTASSORTMENTRULES par
    INNER JOIN [ax].RETAILASSORTMENTLOOKUPCHANNELGROUP ralcg ON [ralcg].ASSORTMENTID = [par].ASSORTMENTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].OMOPERATINGUNITID = [ralcg].OMOPERATINGUNITID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID -- Include only Released items
)
GO
PRINT N'Creating [crt].[LOCALPRODUCTASSORTMENTRULESVIEW].[IX_LOCALPRODUCTASSORTMENTRULESVIEW]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_LOCALPRODUCTASSORTMENTRULESVIEW]
    ON [crt].[LOCALPRODUCTASSORTMENTRULESVIEW]([VARIANTID] ASC, [PRODUCTID] ASC, [VALIDFROM] ASC, [VALIDTO] ASC, [CHANNELID] ASC, [ASSORTMENTID] ASC);


GO
PRINT N'Creating [crt].[ONLINECHANNELVIEW]...';


GO

CREATE VIEW [crt].[ONLINECHANNELVIEW] AS
(
    SELECT
        rprct.ORIGINID AS RECID,
        rprct.CHANNELTYPE,
        rprct.CATEGORYHIERARCHY,
		rprct.INVENTLOCATION,
        rocps.PUBLISHSTATUS,
        rocps.PUBLISHSTATUSMESSAGE,
        dpl.NAME AS 'ONLINECHANNELNAME',
        rprct.DEFAULTCUSTACCOUNT
    FROM [ax].RETAILPUBRETAILONLINECHANNELTABLE rproc
    INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rproc.ONLINECHANNELORIGINID = rprct.ORIGINID
    INNER JOIN [ax].RETAILONLINECHANNELPUBLISHSTATUS rocps ON rproc.ONLINECHANNELORIGINID = rocps.ONLINECHANNEL
    INNER JOIN [ax].DIRPARTYTABLE dpl ON rprct.OMOPERATINGUNITID = dpl.RECID
)
GO
PRINT N'Creating [crt].[CHANNELTENDERTYPEVIEW]...';


GO

CREATE VIEW [crt].[CHANNELTENDERTYPEVIEW] AS
(
    SELECT
        rsttt.CHANNEL,
        rsttt.RECID,
        rsttt.TENDERTYPEID,
        rsttt.NAME,
        ro.OPERATIONNAME,
        rsttt.POSOPERATION AS OPERATIONID,
        rsttt.CHANGETENDERID,
        rsttt.[FUNCTION],
        rsttt.OPENDRAWER,
        rsttt.SIGCAPENABLED AS USESIGNATURECAPTUREDEVICE,
        rsttt.SIGCAPMINAMOUNT AS MINIMUMSIGNATURECAPTUREAMOUNT,
        rsttt.ALLOWOVERTENDER,
        rsttt.ALLOWUNDERTENDER,        
        rsttt.MAXIMUMOVERTENDERAMOUNT,
        rsttt.UNDERTENDERAMOUNT AS MAXIMUMUNDERTENDERAMOUNT,
        rsttt.MAXIMUMAMOUNTALLOWED AS MAXIMUMAMOUNTPERTRANSACTION,
        rsttt.MAXIMUMAMOUNTENTERED AS MAXIMUMAMOUNTPERLINE,
        rsttt.MINIMUMAMOUNTALLOWED AS MINIMUMAMOUNTPERTRANSACTION,
        rsttt.MINIMUMAMOUNTENTERED AS MINIMUMAMOUNTPERLINE,
        rsttt.MINIMUMCHANGEAMOUNT AS ABOVEMINIMUMCHANGEAMOUNT,
        rsttt.ABOVEMINIMUMTENDERID AS ABOVEMINIMUMCHANGETENDERTYTPEID,
        rsttt.MAXCOUNTINGDIFFERENCE,
        rsttt.MAXRECOUNT,
        rsttt.ROUNDINGMETHOD,
        rsttt.ROUNDING AS ROUNDOFF,
        rsttt.COUNTINGREQUIRED,
        rsttt.TAKENTOBANK,
        rsttt.TAKENTOSAFE
    FROM [ax].RETAILSTORETENDERTYPETABLE rsttt
    LEFT OUTER JOIN [ax].RETAILOPERATIONS ro ON ro.OPERATIONID = rsttt.POSOPERATION
)
GO
PRINT N'Creating [crt].[RETAILSTOCKCOUNTJOURNALSVIEW]...';


GO

CREATE VIEW [crt].[RETAILSTOCKCOUNTJOURNALSVIEW] AS
(
    SELECT
        scj.[RECID],
        scj.[JOURNALID],
        scj.[DESCRIPTION]
    FROM [crt].RETAILSTOCKCOUNTJOURNALS scj
)
GO
PRINT N'Creating [crt].[NONCATALOGPRODUCTCATEGORYVIEW]...';


GO

-- [Deprecated] [Last used release = CTP-8]

CREATE VIEW [crt].[NONCATALOGPRODUCTCATEGORYVIEW] AS
(
    SELECT
        [rperc].CHANNEL AS CHANNELID,
        [erpc].CATEGORY AS CATEGORYID,
        [erpc].PRODUCT AS PRODUCTID,
        [erpc].CATEGORYHIERARCHY
    FROM [ax].ECORESPRODUCTCATEGORY AS erpc
    INNER JOIN [ax].RETAILPUBECORESCATEGORY AS rperc ON [rperc].ORIGINID = [erpc].CATEGORY 
         
    UNION ALL

    SELECT
        [rperc].CHANNEL AS CHANNELID,
        [erpc].CATEGORY AS CATEGORYID,
        [erdpv].RECID AS PRODUCTID,
        [erpc].CATEGORYHIERARCHY
    FROM [ax].ECORESDISTINCTPRODUCTVARIANT AS erdpv
    INNER JOIN [ax].ECORESPRODUCTCATEGORY AS erpc ON [erpc].PRODUCT = [erdpv].PRODUCTMASTER
    INNER JOIN [ax].RETAILPUBECORESCATEGORY AS rperc ON [rperc].ORIGINID = [erpc].CATEGORY
)
GO
PRINT N'Creating [crt].[PRODUCTDIMENSIONSVIEW]...';


GO
CREATE VIEW [crt].[PRODUCTDIMENSIONSVIEW] AS
(
    SELECT
        COLORPRODUCTMASTER AS PRODUCTID,
        1 AS DIMENSION  -- Color
    FROM [ax].ECORESPRODUCTMASTERCOLOR

    UNION ALL

    SELECT
        CONFIGPRODUCTMASTER AS PRODUCTID,
        2 AS DIMENSION  -- Configuration
    FROM [ax].ECORESPRODUCTMASTERCONFIGURATION

    UNION ALL

    SELECT
        SIZEPRODUCTMASTER AS PRODUCTID,
        3 AS DIMENSION  -- Size
    FROM [ax].ECORESPRODUCTMASTERSIZE

    UNION ALL

    SELECT
        STYLEPRODUCTMASTER AS PRODUCTID,
        4 AS DIMENSION  -- Style
    FROM [ax].ECORESPRODUCTMASTERSTYLE
)
GO
PRINT N'Creating [crt].[RETAILDISCOUNTTHRESHOLDTIERSVIEW]...';


GO

CREATE VIEW [crt].[RETAILDISCOUNTTHRESHOLDTIERSVIEW] AS
(
    SELECT
        tiers.RECID,
        tiers.AMOUNTTHRESHOLD,
        tiers.DISCOUNTMETHOD,
        tiers.DISCOUNTVALUE,
        tiers.OFFERID,
        tiers.DATAAREAID
    FROM [ax].RETAILDISCOUNTTHRESHOLDTIERS tiers
	INNER JOIN [ax].[RETAILPERIODICDISCOUNT] pd ON pd.OFFERID = tiers.OFFERID AND pd.DATAAREAID = tiers.DATAAREAID
	WHERE pd.STATUS = 1
	    AND (pd.PERIODICDISCOUNTTYPE != 3) -- Don't fetch promotions
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONPAYMENTTRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONPAYMENTTRANSVIEW] AS
(
    SELECT
        RPT.[AMOUNTCUR] AS [AMOUNTINTENDEREDCURRENCY]
        ,RPT.[AMOUNTMST] AS [AMOUNTINCOMPANYCURRENCY]
        ,RPT.[AMOUNTTENDERED] AS [AMOUNTINSTORECURRENCY]
        ,RPT.[CARDORACCOUNT]
        ,RPT.[CARDTYPEID]
        ,RPT.[CHANGELINE] AS [ISCHANGELINE]
        ,RPT.[CREDITVOUCHERID] AS [CREDITMEMOID]
        ,RPT.[CURRENCY]
        ,RPT.[EXCHRATE]/100.00 AS [EXCHANGERATE]  --ePOS behaviour
        ,RPT.[EXCHRATEMST]/100.00 AS [COMPANYCURRENCYEXCHANGERATE] --ePOS behaviour
        ,RPT.[GIFTCARDID]
        ,RPT.[ISPREPAYMENT]
        ,RPT.[LINENUM]
        ,RPT.[LOYALTYCARDID]
        ,RPT.[PAYMENTAUTHORIZATION]
        ,RPT.[SIGCAPDATA] AS [SIGNATUREDATA]
        ,RPT.[TENDERTYPE] AS [TENDERTYPEID]
        ,RPT.[TRANSACTIONID]
        ,CASE RPT.[TRANSACTIONSTATUS] WHEN 0 THEN 4 ELSE 3 END AS [STATUS] -- if (TransactionStatus == TransactionStatus.Normal)  Status = TenderLineStatus.Comitted  else  Status = TenderLineStatus.Voided 
        ,RPT.[CREATEDDATETIME]
        ,RPT.[MODIFIEDDATETIME]
        ,RPT.[DATAAREAID]
        ,DATEADD(SECOND, RPT.[TRANSTIME], CAST(RPT.[TRANSDATE] as DATETIME)) AS 'TENDERDATE'
    FROM [ax].[RETAILTRANSACTIONPAYMENTTRANS] RPT
)
GO
PRINT N'Creating [crt].[TRANSACTIONSERVICEPROFILEVIEW]...';


GO

CREATE VIEW [crt].[TRANSACTIONSERVICEPROFILEVIEW] AS
(
    SELECT
        [rct].RECID AS 'CHANNELID',
        [rsp].[STAFFPASSWORDHASH],
        [rsp].[DEVICETOKENALGORITHM],
        [rsp].[DEVICETOKENEXPIRATION],
        [rfp].[TSSTAFF] AS 'TSSTAFFLOGONCONFIGURATION',
        [rtsp].[PROFILEID] AS 'TSPROFILEID',
        [rtsp].[LANGUAGE] AS 'TSLANGUAGEID',
        [rtsp].[SERVERSERVICENAME] AS 'TSSERVICENAME',
        [rtsp].[SECURITYOFF] AS 'TSSECURITYOFF',
        [rtsp].[USERID] AS 'TSUSERID',
        [rtsp].[SERVICEHOSTURL] AS 'TSSERVICEHOSTURL',
        [rtsp].[ISSUERURI] AS 'TSISSUERURI',
        [rtsp].[IDENTITYPROVIDER] AS 'TSIDENTITYPROVIDER',
        [rtsp].[IDENTITYPROVIDERCLAIMTYPE] AS 'TSIDENTITYPROVIDERCLAIMTYPE',
        [rtsp].[AUDIENCEURN] AS 'TSAUDIENCEURN',
        [rtsp].[ISSUEDTOKENTYPE] AS 'TSISSUEDTOKENTYPE'
    FROM [ax].RETAILTRANSACTIONSERVICEPROFILE rtsp 
    LEFT JOIN [ax].RETAILSTORETABLE rst ON rst.RECID = rtsp.RECID
    LEFT JOIN [ax].RETAILFUNCTIONALITYPROFILE rfp ON rfp.PROFILEID = rst.FUNCTIONALITYPROFILE
    LEFT JOIN [ax].RETAILCHANNELTABLE rct ON rct.TRANSACTIONSERVICEPROFILE = rtsp.PROFILEID
    LEFT JOIN [ax].RETAILSHAREDPARAMETERS rsp ON RSP.[KEY] = 0
)
GO
PRINT N'Creating [crt].[EMPLOYEESESSIONSVIEW]...';


GO
CREATE VIEW [crt].[EMPLOYEESESSIONSVIEW] AS
(
    SELECT
		[CHANNELID],
		[TERMINALID],
		[STAFFID],
		[DATAAREAID],
		[CREATEDDATETIME]
    FROM [crt].[RETAILSTAFFLOGINLOG]
)
GO
PRINT N'Creating [crt].[CARTSVIEW]...';


GO

CREATE VIEW [crt].[CARTSVIEW] AS
(
    SELECT
        st.[TRANSACTIONID],
        st.[CHANNELID],
        st.[TERMINALID],
        st.[STAFF],
        st.[CUSTOMERID],
        st.[TYPE],
        st.[NAME],
        st.[ISSUSPENDED],
        st.[TRANSACTIONDATA],
        st.[BYTELENGTH],
        st.[AMOUNT],
        st.[COMMENT],
        st.[CREATEDDATETIME],
        st.[MODIFIEDDATETIME],
        st.[ROWVERSION]
    FROM [crt].SALESTRANSACTION st
    WHERE st.[DELETEDDATETIME] IS NULL
)
GO
PRINT N'Creating [crt].[STAFFCREDENTIALSVIEW]...';


GO
CREATE VIEW [crt].[STAFFCREDENTIALSVIEW] AS
(
    SELECT
		[rsct].STAFFID,
		[rsct].GRANTTYPE,
		[rsct].CREDENTIALID,
		[rsct].HASHEDCREDENTIAL,
		[rsct].SALT,
		[rsct].HASHALGORITHM
    FROM [ax].RETAILSTAFFCREDENTIALTABLE rsct
    WHERE [rsct].[DELETEDDATETIME] = crt.GETMINAXDATETIME()
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSVIEW]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[RETAILTRANSACTIONAFFILIATIONTRANSVIEW] creates a view 
    about reward point lines of retail transactions.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE VIEW [crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSVIEW] AS
(
    SELECT
	  RTLRPT.TRANSACTIONID AS TRANSACTIONID,
      RTLRPT.LINENUM AS LINENUM,
      RTLRPT.AFFILIATION AS AFFILIATION,
      RTLRPT.LOYALTYTIER AS LOYALTYTIER,
      RTLRPT.CARDNUMBER AS CARDNUMBER,
      RTLRPT.CUSTACCOUNT AS CUSTACCOUNT,
      RTLRPT.ENTRYDATE AS ENTRYDATE,
      RTLRPT.ENTRYTIME AS ENTRYTIME,
      RTLRPT.ENTRYTYPE AS ENTRYTYPE,
      RTLRPT.EXPIRATIONDATE AS EXPIRATIONDATE,
      RTLRPT.REWARDPOINT AS REWARDPOINT,
      RTLRPT.REWARDPOINTAMOUNTQTY AS REWARDPOINTAMOUNTQTY,
      RLRP.REWARDPOINTID AS REWARDPOINTID,
      RLRP.REWARDPOINTTYPE AS REWARDPOINTTYPE,
      RLRP.REWARDPOINTCURRENCY AS REWARDPOINTCURRENCY,
      RLRP.REDEEMABLE AS REWARDPOINTREDEEMABLE
    FROM [ax].RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS RTLRPT
		INNER JOIN [ax].RETAILLOYALTYREWARDPOINT RLRP
		ON RLRP.RECID = RTLRPT.REWARDPOINT
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONINFOCODETRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONINFOCODETRANSVIEW] AS
(
    SELECT
      IT.AMOUNT AS 'AMOUNT'
      ,IT.CHANNEL AS 'CHANNEL'
      ,IT.COUNTER AS 'COUNTER'
      ,IT.INFOAMOUNT AS 'INFOAMOUNT'
      ,IT.INFOCODEID AS 'REASONCODEID'
      ,IT.INFORMATION AS 'INFORMATION'
      ,IT.INPUTTYPE AS 'INPUTTYPE'
      ,IT.ITEMTENDER AS 'ITEMTENDER'
      ,IT.LINENUM AS 'LINENUM'
      ,IT.PARENTLINENUM AS 'PARENTLINENUM'
      ,IT.REPLICATED AS 'REPLICATED'
      ,IT.REPLICATIONCOUNTERFROMORIGIN AS 'REPLICATIONCOUNTERFROMORIGIN'
      ,IT.SOURCECODE AS 'SOURCECODE'
      ,IT.SOURCECODE2 AS 'SOURCECODE2'
      ,IT.SOURCECODE3 AS 'SOURCECODE3'
      ,IT.STAFF AS 'STAFF'
      ,IT.STATEMENTCODE AS 'STATEMENTCODE'
      ,IT.STORE AS 'STORE'
      ,IT.SUBINFOCODEID AS 'SUBREASONCODEID'
      ,IT.TERMINAL AS 'TERMINAL'
      ,IT.TRANSACTIONID AS 'TRANSACTIONID'
      ,IT.TRANSDATE AS 'TRANSDATE'
      ,IT.TRANSTIME AS 'TRANSTIME'
      ,IT.TYPE AS 'TYPE'
      ,IT.DATAAREAID AS 'DATAAREAID'
      ,IT.ROWVERSION AS 'ROWVERSION'
    FROM [ax].RETAILTRANSACTIONINFOCODETRANS IT
)
GO
PRINT N'Creating [crt].[TAXINFORMATIONINDIAVIEW]...';


GO

CREATE VIEW [crt].[TAXINFORMATIONINDIAVIEW] AS
(
	SELECT
		tiIndia.[RECID],
		tiIndia.[ECCNUMBER],
		tiIndia.[ISPRIMARY],
		tiIndia.[REGISTRATIONLOCATION],
		tiIndia.[STCREGISTRATIONNUMBERTABLE],
		tiIndia.[TIN]
	FROM [ax].TAXINFORMATION_IN tiIndia
)
GO
PRINT N'Creating [crt].[CATEGORYPRICEADJUSTMENTSVIEW]...';


GO

CREATE VIEW [crt].[CATEGORYPRICEADJUSTMENTSVIEW] AS
(
    SELECT
        catlookup.CATEGORY AS CATEGORYID,
        pd.RECID AS PRICEADJUSTMENTID,
        pd.OFFERID AS OFFERID,
        pd.DATAAREAID
    FROM [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] AS catlookup
    INNER JOIN [ax].[RETAILGROUPMEMBERLINE] AS rgl ON rgl.CATEGORY = catlookup.CONTAINEDCATEGORY AND rgl.PRODUCT = 0 AND rgl.VARIANT = 0
    INNER JOIN [ax].[RETAILPERIODICDISCOUNTLINE] AS pdl ON pdl.RETAILGROUPMEMBERLINE = rgl.RECID
    INNER JOIN [ax].[RETAILPERIODICDISCOUNT] AS pd ON pd.OFFERID = pdl.OFFERID AND pd.DATAAREAID = pdl.DATAAREAID AND pd.PERIODICDISCOUNTTYPE = 3
)
GO
PRINT N'Creating [crt].[INVENTDIMVIEW]...';


GO

CREATE VIEW [crt].[INVENTDIMVIEW] AS
(
    SELECT
        id.RECID,
        id.INVENTDIMID,
        id.CONFIGID,
        id.INVENTCOLORID AS COLORID,
        id.INVENTSIZEID AS SIZEID,
        id.INVENTSTYLEID AS STYLEID,
		id.DATAAREAID
    FROM [ax].INVENTDIM id
)
GO
PRINT N'Creating [crt].[OPERATIONPERMISSIONSVIEW]...';


GO

CREATE VIEW [crt].OPERATIONPERMISSIONSVIEW AS
(
    SELECT
        ops.OPERATIONID,
        ops.CHECKUSERACCESS,
        ops.ALLOWANONYMOUSACCESS,
        ops.ALLOWCUSTOMERACCESS,
        ops.OPERATIONNAME,
        CASE
            WHEN perms1.PERMISSIONNAME IS NOT NULL AND perms2.PERMISSIONNAME IS NOT NULL
                THEN perms1.PERMISSIONNAME + ',' + perms2.PERMISSIONNAME
            ELSE COALESCE(perms1.PERMISSIONNAME, perms2.PERMISSIONNAME, '')
        END AS PERMISSIONNAME
        FROM [ax].RETAILOPERATIONS ops
        LEFT JOIN [ax].RETAILPERMISSIONS perms1 ON perms1.PERMISSIONID = ops.PERMISSIONID
        LEFT JOIN [ax].RETAILPERMISSIONS perms2 ON perms2.PERMISSIONID = ops.PERMISSIONID2
        LEFT JOIN [ax].RETAILPERMISSIONSEX permex ON permex.PERMISSIONID = ops.PERMISSIONIDEX
)
GO
PRINT N'Creating [crt].[ITEMCHANNELBASEPRICEVIEW]...';


GO

CREATE VIEW [crt].[ITEMCHANNELBASEPRICEVIEW]
AS
(
    SELECT
        [rct].RECID         AS CHANNEL,
        [it].PRODUCT        AS PRODUCT,
        [itm].PRICE         AS PRICE
    FROM [ax].INVENTTABLEMODULE itm
    INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [itm].ITEMID AND [it].DATAAREAID = [itm].DATAAREAID AND [itm].MODULETYPE = 2
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].INVENTLOCATIONDATAAREAID = [it].DATAAREAID
)
GO
PRINT N'Creating [crt].[FORMULADESIGNERSINDIANVIEW]...';


GO

CREATE VIEW [crt].[FORMULADESIGNERSINDIANVIEW] AS
(
    SELECT
        fd.[RECID],
		fd.[CALCEXP],
		fd.[CALCEXP1],
		fd.[ID],
		fd.[PRICEINCLTAX],
		fd.[TAXABLEBASIS],
		fd.[TAXCODE],
		fd.[TAXITEMGROUP],
		rct.[RECID] as [CHANNELID]	
    FROM [ax].FORMULADESIGNER_IN fd
	INNER JOIN [ax].RETAILCHANNELTABLE rct on rct.INVENTLOCATIONDATAAREAID = fd.DATAAREAID
)
GO
PRINT N'Creating [crt].[TAXREGISTRATIONNUMBERSINDIAVIEW]...';


GO

CREATE VIEW [crt].[TAXREGISTRATIONNUMBERSINDIAVIEW] AS
(
	SELECT
		trnIndia.[RECID],
		trnIndia.[REGISTRATIONNUMBER]
	FROM [ax].TAXREGISTRATIONNUMBERS_IN trnIndia
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONDISCOUNTTRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONDISCOUNTTRANSVIEW] AS
(
    SELECT
		DT.[AMOUNT],
		DT.[CUSTOMERDISCOUNTTYPE],
		DT.[DISCOUNTCODE],
		DT.[DEALPRICE],
		DT.[DISCOUNTAMOUNT],
		DT.[DISCOUNTORIGINTYPE] AS [DISCOUNTLINETYPE],
		DT.[LINENUM],
		DT.[MANUALDISCOUNTTYPE],
		DT.[PERCENTAGE],
		DT.[PERIODICDISCOUNTOFFERID],                
		RPD.[NAME] AS [OFFERNAME],
		DT.[SALELINENUM],
		DT.[TRANSACTIONID]
    FROM [ax].RETAILTRANSACTIONDISCOUNTTRANS DT
		LEFT JOIN [ax].RETAILPERIODICDISCOUNT RPD ON RPD.OFFERID = DT.PERIODICDISCOUNTOFFERID
)
GO
PRINT N'Creating [crt].[RETAILSERVICECONFIGURATIONSETTINGSVIEW]...';


GO

CREATE VIEW [crt].[RETAILSERVICECONFIGURATIONSETTINGSVIEW] AS
(
    SELECT
        c.[RECID],
        c.[ROWVERSION],
        c.[NAME],
        c.[VALUE]
        FROM [ax].[SYSSERVICECONFIGURATIONSETTING] c
)
GO
PRINT N'Creating [crt].[PERSONNAMEVIEW]...';


GO

CREATE VIEW [crt].[PERSONNAMEVIEW] AS
(

SELECT        RECID, FIRSTNAME, LASTNAME, MIDDLENAME, PERSON, VALIDFROM, VALIDTO
FROM            ax.DIRPERSONNAME AS dpn
WHERE        (GETUTCDATE() BETWEEN VALIDFROM AND VALIDTO)
)
GO
PRINT N'Creating [crt].[OFFLINEDATABASEPARTITIONSVIEW]...';


GO

CREATE VIEW [crt].[OFFLINEDATABASEPARTITIONSVIEW] AS
(
SELECT odp.[RECID], 
       odm.[DATABASETYPE], 
       odm.[VERSION], 
	   odm.[CREATEDDATETIME],
       odp.[NUMBER], 
       odp.[URL], 
       odp.[FILEPATH],
       odm.[CHANNELID],
       odm.[HASH] 
FROM [crt].[OFFLINEDATABASEMETADATA] odm
JOIN [crt].[OFFLINEDATABASEPARTITIONS] odp
     ON odm.[RECID] = odp.[DATABASEVERSIONID]
)
GO
PRINT N'Creating [crt].[CATEGORYPRODUCTATTRIBUTEVIEW]...';


GO

CREATE VIEW [crt].[CATEGORYPRODUCTATTRIBUTEVIEW] AS
(
    SELECT 
		ercal.CATEGORY,
        ercal.ATTRIBUTE,
		eraga.ATTRIBUTEGROUP,
		ercal.ATTRIBUTEGROUPTYPE,
        eraga.DEFAULTVALUE
        FROM ax.ECORESCATEGORYATTRIBUTELOOKUP ercal 
            JOIN ax.ECORESATTRIBUTEGROUPATTRIBUTE eraga
                ON eraga.RECID = ercal.ATTRIBUTEGROUPATTRIBUTE			
)
GO
PRINT N'Creating [crt].[SALESTAXOVERRIDESVIEW]...';


GO

CREATE VIEW [crt].[SALESTAXOVERRIDESVIEW] AS
(
    SELECT
        T.[CODE],
        T.[OVERRIDEBY],
        CASE
            WHEN T.[OVERRIDETYPE] = 0
            THEN T.[SOURCEITEMTAXGROUP]
            ELSE T.[SOURCETAXGROUP]
            END
        AS SOURCETAXGROUP,
        CASE
            WHEN T.[OVERRIDETYPE] = 0
            THEN T.[DESTINATIONITEMTAXGROUP]
            ELSE T.[DESTINATIONTAXGROUP]
            END
        AS [DESTINATIONTAXGROUP],
        T.[STOREORIGINID] AS CHANNELID
    FROM (
        SELECT
            STO.[CODE],
            STO.[DESCRIPTION],
            STO.[SOURCETAXGROUP],
            STO.[DESTINATIONTAXGROUP],
            STO.[SOURCEITEMTAXGROUP],
            STO.[DESTINATIONITEMTAXGROUP],
            STO.[OVERRIDETYPE],
            STO.[OVERRIDEBY],
            RPRST.[STOREORIGINID]
        FROM [ax].RETAILSALESTAXOVERRIDE STO
        INNER JOIN [ax].RETAILSALESTAXOVERRIDEGROUPMEMBER GM ON STO.[CODE] = GM.[RBOSALESTAXOVERRIDECODE]
        INNER JOIN [ax].RETAILSALESTAXOVERRIDEGROUP ROG ON ROG.[CODE] = GM.[RBOSALESTAXOVERRIDEGROUPCODE]
        INNER JOIN [ax].RETAILPUBRETAILSTORETABLE RPRST ON RPRST.[TAXOVERRIDEGROUP] = ROG.[RECID]
    ) T
)
GO
PRINT N'Creating [crt].[CUSTOMERPOSTALELECTRONICADDRESSESVIEW]...';


GO

CREATE VIEW [crt].[CUSTOMERPOSTALELECTRONICADDRESSESVIEW] AS
(
    SELECT
        lea.TYPE AS METHODYTPE,
        lea.RECID AS RECORDID,
		dpl.RECID AS DIRPARTYLOCATIONRECORDID,
        dpt.RECID AS DIRPARTYRECORDID,
        dpt.PARTYNUMBER AS PARTYNUMBER,
		lea.DESCRIPTION AS LOCATIONDESCRIPTION,
        lea.LOCATOR,
        lea.LOCATOREXTENSION,
		ll.LOCATIONID,
        ll.RECID AS LOGISTICSLOCATIONRECORDID,
        ll.PARENTLOCATION,
		lea.ISPRIMARY,
	    lea.ISMOBILEPHONE
    FROM [ax].LOGISTICSELECTRONICADDRESS lea
    INNER JOIN [ax].LOGISTICSLOCATION ll ON lea.LOCATION = ll.RECID and ll.PARENTLOCATION != 0
    INNER JOIN [ax].LOGISTICSPOSTALADDRESS lpa ON ll.PARENTLOCATION = lpa.LOCATION AND GETUTCDATE() BETWEEN VALIDFROM and VALIDTO
    INNER JOIN [ax].DIRPARTYLOCATION dpl ON lpa.LOCATION = dpl.LOCATION
    INNER JOIN [ax].DIRPARTYTABLE dpt ON dpt.RECID = dpl.PARTY 
    WHERE
        (ll.ISPOSTALADDRESS = 0) AND
        (dpl.ISPOSTALADDRESS = 1) AND
        (lea.ISPRIVATE = 0) AND
		-- want to include the phone, email, url (primary) and the cell which is not marked primary but is marked ismobile.
        ((lea.ISPRIMARY = 1) OR (lea.ISMOBILEPHONE = 1))
)
GO
PRINT N'Creating [crt].[STOREADDRESSESVIEW]...';


GO

CREATE VIEW [crt].[STOREADDRESSESVIEW] AS
(
    SELECT DISTINCT
        rprct.ORIGINID AS RECID,
        rprst.STORENUMBER,
        lpa.ADDRESS,
        lpa.STREETNUMBER,
        lpa.STREET,
        lpa.DISTRICTNAME,
        lpa.CITY,
        lpa.COUNTY,
        lpa.ZIPCODE,
        lpa.STATE
    FROM [ax].RETAILPUBRETAILSTORETABLE rprst
    INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rprct.ORIGINID = rprst.STOREORIGINID
    INNER JOIN [ax].DIRPARTYLOCATION dpl ON dpl.PARTY = rprct.OMOPERATINGUNITID AND dpl.ISPOSTALADDRESS = 1
    INNER JOIN [ax].LOGISTICSPOSTALADDRESS lpa ON lpa.LOCATION = dpl.LOCATION
    WHERE GETUTCDATE() BETWEEN lpa.VALIDFROM AND lpa.VALIDTO
)
GO
PRINT N'Creating [crt].[RETAILPRICINGPARAMETERSVIEW]...';


GO

CREATE VIEW [crt].[RETAILPRICINGPARAMETERSVIEW] 
AS
(
    SELECT
    rp.RECID,
	rp.DISCOUNTALGORITHMMODE,
	rp.MAXBESTDEALSTEPCOUNT,
	c.RECID AS CHANNELID
    FROM [ax].RETAILPARAMETERS rp
	INNER JOIN [ax].RETAILCHANNELTABLE c on c.INVENTLOCATIONDATAAREAID = rp.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILSTOCKCOUNTVIEW]...';


GO

CREATE VIEW [crt].[RETAILSTOCKCOUNTVIEW] AS
(
    SELECT
        DISTINCT (rsc.ID),
        rsc.ITEMID,
        rsc.JOURNALID,
        rsc.RECID,
        rsc.TRACKINGGUID,
        rsc.COUNTED,
        rsc.QUANTITY,
        rsc.UNIT,
        rsc.USERID,
        rsc.TERMINALID,
        rsc.COUNTDATE,
        rsc.STATUS,
        rsc.OPERATIONTYPE,
        rsc.ITEMNAME,
        rsc.INVENTSIZEID,
        rsc.INVENTCOLORID,
        rsc.INVENTSTYLEID,
        rsc.CONFIGID
    FROM [crt].RETAILSTOCKCOUNT rsc
    LEFT OUTER JOIN [ax].INVENTTABLE it ON rsc.ITEMID = it.ITEMID
    LEFT OUTER JOIN [ax].ECORESCOLOR ON ECORESCOLOR.NAME = rsc.INVENTCOLORID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCOLOR ON (ECORESPRODUCTMASTERCOLOR.COLOR = ECORESCOLOR.RECID) AND (ECORESPRODUCTMASTERCOLOR.COLORPRODUCTMASTER = it.PRODUCT)
    LEFT OUTER JOIN [ax].ECORESSIZE ON ECORESSIZE.NAME = rsc.INVENTSIZEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSIZE ON (ECORESPRODUCTMASTERSIZE.SIZE = ECORESSIZE.RECID) AND (ECORESPRODUCTMASTERSIZE.SIZEPRODUCTMASTER = it.PRODUCT)
    LEFT OUTER JOIN [ax].ECORESSTYLE ON (ECORESSTYLE.NAME = rsc.INVENTSTYLEID)
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSTYLE ON (ECORESPRODUCTMASTERSTYLE.STYLE = ECORESSTYLE.RECID) AND (ECORESPRODUCTMASTERSTYLE.STYLEPRODUCTMASTER = it.PRODUCT)
    LEFT OUTER JOIN [ax].ECORESCONFIGURATION ON (ECORESCONFIGURATION.NAME = rsc.CONFIGID)
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION ON (ECORESPRODUCTMASTERCONFIGURATION.CONFIGURATION = ECORESCONFIGURATION.RECID) AND (ECORESPRODUCTMASTERCONFIGURATION.CONFIGPRODUCTMASTER = it.PRODUCT)
)
GO
PRINT N'Creating [crt].[CATALOGPRODUCTCATEGORYVIEW]...';


GO

-- [Deprecated] [Last used release = CTP-8]

CREATE VIEW [crt].[CATALOGPRODUCTCATEGORYVIEW] AS
(
    SELECT
        [rpcp].CATALOG,
        [rpcp].PRODUCT,
        [rpcpc].CATEGORY,
        [rpcpc].CATEGORYHIERARCHY,
        [rpcpc].INCLUDEEXCLUDETYPE
    FROM [ax].RETAILPUBCATALOGPRODUCT rpcp
    INNER JOIN [ax].RETAILPUBCATALOGPRODUCTCATEGORY rpcpc ON [rpcp].ORIGIN = [rpcpc].CATALOGPRODUCT
)
GO
PRINT N'Creating [crt].[RETURNORDERREASONCODESVIEW]...';


GO

CREATE VIEW [crt].[RETURNORDERREASONCODESVIEW] AS
(
    SELECT
        rrc.[RECID],
        rrc.[DESCRIPTION],
        rrc.[REASONCODEID],
		rrc.[DATAAREAID]
    FROM
        [ax].[RETURNREASONCODE] rrc
)
GO
PRINT N'Creating [crt].[RETAILSTORETABLEINDIAVIEW]...';


GO

CREATE VIEW [crt].[RETAILSTORETABLEINDIAVIEW] AS
(
	SELECT
		rstIndia.[RECID],
		rstIndia.[RETAILSTORETABLE] AS [CHANNELID],
		rstIndia.[SALESTAXFORMTYPES],
		rstIndia.[TAXDETAILSTYPE],
		rstIndia.[SHOWTAXONTAX]
	FROM [ax].RETAILSTORETABLE_IN rstIndia
)
GO
PRINT N'Creating [crt].[PRODUCTCATALOGRULESVIEW]...';


GO
CREATE VIEW [crt].[PRODUCTCATALOGRULESVIEW]
AS
(
    SELECT
        rprct.ORIGINID AS CHANNELID,
        rpcio.[CATALOG] AS CATALOGID,
        [pcp].PRODUCT AS PRODUCTID,
        [rpc].VALIDFROM,
        [rpc].VALIDTO,
        COUNT_BIG(*) AS ANCESTORCOUNT
    FROM ax.RETAILPUBCATALOGINTERNALORG rpcio
    INNER JOIN ax.RETAILPUBCATALOG rpc ON rpc.ORIGIN = rpcio.[CATALOG]
    INNER JOIN ax.RETAILINTERNALORGANIZATION rio ON rio.RECID = rpcio.INTERNALORGANIZATION
    INNER JOIN ax.OMEXPLODEDORGANIZATIONSECURITYGRAPH omeosg ON omeosg.ANCESTORORGANIZATION = rio.INTERNALORGANIZATION
    INNER JOIN ax.OMHIERARCHYPURPOSE omhp ON omhp.HIERARCHYTYPE = omeosg.OMHIERARCHYTYPE AND omhp.HIERARCHYPURPOSE = 9 /* RetailAssortment */ AND omhp.ISDEFAULT = 1
    INNER JOIN ax.RETAILPUBRETAILCHANNELTABLE rprct ON rprct.OMOPERATINGUNITID = omeosg.ORGANIZATION
    INNER JOIN [ax].RETAILPUBCATALOGPRODUCT pcp ON [pcp].CATALOG = [rpc].ORIGIN
    WHERE rpc.VALIDFROMDATETIME BETWEEN omeosg.VALIDFROM AND omeosg.VALIDTO  -- VALIDFROMDATETIME is in UTC
    GROUP BY rprct.ORIGINID, rpcio.[CATALOG], [pcp].PRODUCT, [rpc].VALIDFROM, [rpc].VALIDTO
)
GO
PRINT N'Creating [crt].[CATALOGPRODUCTRELATIONVIEW]...';


GO

CREATE VIEW [crt].[CATALOGPRODUCTRELATIONVIEW] AS
(
    SELECT
		rpcp.CATALOG,
        rpcp.PRODUCT,
        rpcpr.RELATEDPRODUCT,
        rpcpr.PRODUCTRELATIONTYPE
        FROM ax.RETAILPUBCATALOGPRODUCT rpcp
            JOIN ax.RETAILPUBCATALOGPRODUCTRELATION rpcpr
                ON rpcpr.CATALOGPRODUCT = rpcp.ORIGIN
)
GO
PRINT N'Creating [crt].[RETAILTILLLAYOUTVIEW]...';


GO
-- Combining tables to simplify selection of TillLayout
CREATE VIEW [crt].[RETAILTILLLAYOUTVIEW] AS
(
    SELECT
		rtl.[NAME]
		,rtl.[WIDTH]
		,rtl.[HEIGHT]
		,rtl.[LAYOUTID]
		,rtl.[CUSTOMERLAYOUTID]
		,rtl.[TOTALID]
		,rtl.[RECEIPTID]
		,rtl.[LAYOUTXML]
		,rtl.[LAYOUTXMLPORTRAIT]
		,rtl.[CUSTOMERLAYOUTXML]
		,rtl.[TOTALSLAYOUTXML]
		,rtl.[CASHCHANGERLAYOUTXML]
		,rtl.[RECEIPTPAYMENTLAYOUTXML]
		,rtl.[RECEIPTITEMSLAYOUTXML]
		,rtl.[RECID]
		,rtl.STARTSCREEN
		,rdt.[TYPE] AS DEVICETYPE
		,rdt.[RECID] AS DEVICETYPERECID
    FROM [ax].[RETAILTILLLAYOUT] AS rtl
	LEFT JOIN [ax].[RETAILDEVICETYPES] AS rdt ON rdt.RECID = rtl.DEVICETYPE
)
GO
PRINT N'Creating [crt].[CUSTOMERELECTRONICADDRESSESVIEW]...';


GO

CREATE VIEW [crt].[CUSTOMERELECTRONICADDRESSESVIEW] AS
(
    SELECT
        lea.TYPE AS METHODYTPE,
        lea.RECID AS RECORDID,
		dpl.RECID AS DIRPARTYLOCATIONRECORDID,
        dpt.RECID AS DIRPARTYRECORDID,
        dpt.PARTYNUMBER AS PARTYNUMBER,
		lea.DESCRIPTION AS LOCATIONDESCRIPTION,
        lea.LOCATOR,
        lea.LOCATOREXTENSION,
		ll.LOCATIONID,
        ll.RECID AS LOGISTICSLOCATIONRECORDID,
        ll.PARENTLOCATION,
		lea.ISPRIMARY,
	    lea.ISMOBILEPHONE
    FROM [ax].LOGISTICSELECTRONICADDRESS lea
    INNER JOIN [ax].LOGISTICSLOCATION ll ON lea.LOCATION = ll.RECID
    INNER JOIN [ax].DIRPARTYLOCATION dpl ON ll.RECID = dpl.LOCATION
    INNER JOIN [ax].DIRPARTYTABLE dpt ON dpt.RECID = dpl.PARTY 
    WHERE
        (ll.ISPOSTALADDRESS = 0) AND
        (dpl.ISPOSTALADDRESS = 0) AND
        (lea.ISPRIVATE = 0) AND
        ((lea.ISPRIMARY = 1) OR (lea.ISMOBILEPHONE = 1))
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONINCOMEEXPENSETRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONINCOMEEXPENSETRANSVIEW] AS
(
    SELECT
         IET.TRANSACTIONID AS 'TRANSACTIONID'
		,IET.LINENUM AS 'LINENUM'
        ,IET.INCOMEEXEPENSEACCOUNT AS 'INCOMEEXPENSEACCOUNT'
        ,IET.ACCOUNTTYPE AS 'ACCOUNTTYPE'
        ,IET.STORE AS 'STORE'
        ,IET.TERMINAL AS 'TERMINAL'
        ,IET.TRANSACTIONSTATUS AS 'TRANSACTIONSTATUS'
        ,IET.AMOUNT AS 'AMOUNT'
    FROM [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] IET
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONTAXTRANSINDIAVIEW]...';


GO

CREATE VIEW [crt].RETAILTRANSACTIONTAXTRANSINDIAVIEW AS
(
	SELECT
		rtttIndia.[TAXITEMGROUP],
		rtttIndia.[TAXPERCENTAGE],
		rtttIndia.[TAXCOMPONENT],
		rtttIndia.[TAXBASIS],
		rtttIndia.[TAXISINCLUDEDINPRICE],
		rtttIndia.[TAXFORMULA],
		rtttIndia.[TAXISEXEMPT],
		rtttIndia.[ISTAXONTAX],
		rtttIndia.[TERMINALID],
		rtttIndia.[TRANSACTIONID],
		rtttIndia.[STOREID],
		rtttIndia.[SALELINENUM],
		rtttIndia.[TAXCODE],
		rttt.[AMOUNT] AS [TAXAMOUNT],
		rttt.[CHANNEL] AS [CHANNELID]
	FROM [crt].RETAILTRANSACTIONTAXTRANS_IN rtttIndia
	INNER JOIN [ax].RETAILTRANSACTIONTAXTRANS rttt 
		ON rttt.CHANNEL = rtttIndia.CHANNEL 
			AND rttt.TAXCODE = rtttIndia.TAXCODE
			AND rttt.SALELINENUM = rtttIndia.SALELINENUM
			AND rttt.TRANSACTIONID = rtttIndia.TRANSACTIONID
			AND rttt.STOREID = rtttIndia.STOREID
			AND rttt.TERMINALID = rtttIndia.TERMINALID
)
GO
PRINT N'Creating [crt].[VALIDATIONPERIODVIEW]...';


GO

CREATE VIEW [crt].[VALIDATIONPERIODVIEW] AS
(
    SELECT
        vp.RECID,
        vp.PERIODID,
        vp.NAME,
        vp.VALIDFROM,
        vp.VALIDTO,
        vp.STARTINGTIME,
        vp.ENDINGTIME,
        vp.TIMEWITHINBOUNDS,
        vp.MONDAYSTARTINGTIME,
        vp.MONDAYENDINGTIME,
        vp.MONDAYTIMEWITHINBOUNDS,
        vp.THUESDAYSTARTINGTIME,
        vp.THUESDAYENDINGTIME,
        vp.THUESDAYTIMEWITHINBOUNDS,
        vp.WEDNESDAYSTARTINGTIME,
        vp.WEDNESDAYENDINGTIME,
        vp.WEDNESDAYTIMEWITHINBOUNDS,
        vp.THURSDAYSTARTINGTIME,
        vp.THURSDAYENDINGTIME,
        vp.THURSDAYTIMEWITHINBOUNDS,
        vp.FRIDAYSTARTINGTIME,
        vp.FRIDAYENDINGTIME,
        vp.FRIDAYTIMEWITHINBOUNDS,
        vp.SATURDAYSTARTINGTIME,
        vp.SATURDAYENDINGTIME,
        vp.SATURDAYTIMEWITHINBOUNDS,
        vp.SUNDAYSTARTINGTIME,
        vp.SUNDAYENDINGTIME,
        vp.SUNDAYTIMEWITHINBOUNDS,
        vp.MONDAYENDINGTIMEAFTERMIDNIGHT,
        vp.THUESDAYENDINGTIMEAFTERMIDNIGHT,
        vp.WEDNESDAYENDINGTIMEAFTERMIDNIGHT,
        vp.THURSDAYENDINGTIMEAFTERMIDNIGHT,
        vp.FRIDAYENDINGTIMEAFTERMIDNIGHT,
        vp.SATURDAYENDINGTIMEAFTERMIDNIGHT,
        vp.SUNDAYENDINGTIMEAFTERMIDNIGHT,
        vp.ENDINGTIMEAFTERMIDNIGHT,
		c.RECID AS CHANNELID
    FROM [ax].RETAILDISCOUNTVALIDATIONPERIOD vp
	INNER JOIN [ax].RETAILCHANNELTABLE c on c.INVENTLOCATIONDATAAREAID = vp.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILPERIODICDISCOUNTSFLATTENEDVIEW]...';


GO

CREATE VIEW [crt].[RETAILPERIODICDISCOUNTSFLATTENEDVIEW] AS
(
    SELECT
       pd.[OFFERID]
       ,pd.[NAME]
       ,pd.[PERIODICDISCOUNTTYPE]
       ,pd.[VALIDATIONPERIODID]
       ,pd.[DATEVALIDATIONTYPE]
       ,pd.[VALIDFROM]
       ,pd.[VALIDTO]
       ,pd.[CONCURRENCYMODE]
       ,pd.[CURRENCYCODE]
	   ,pd.[PRICINGPRIORITYNUMBER]
       ,pd.[STATUS]
       ,pd.[ISDISCOUNTCODEREQUIRED]
	   ,pd.[DATAAREAID]
       ,ISNULL(pdmm.MIXANDMATCHDISCOUNTTYPE
       ,ISNULL(pdmb.MULTIBUYDISCOUNTTYPE, pd.PERIODICDISCOUNTTYPE)) AS DISCOUNTTYPE
       ,0 AS DIFFERENTSAMEMANDMLINES
       ,0 AS NOOFLINESTOTRIGGER
       ,0 AS PRIORITY
       ,pd.[DISCOUNTPERCENTVALUE]
       ,ISNULL(pdmm.[DEALPRICEVALUE],0.0) AS DEALPRICEVALUE
       ,ISNULL(pdmm.[DISCOUNTAMOUNTVALUE],0.0) AS DISCOUNTAMOUNTVALUE
       ,ISNULL(pdmm.[NOOFLEASTEXPENSIVELINES],0) AS NOOFLEASTEXPENSIVELINES
       ,ISNULL(pdmm.[NUMBEROFTIMESAPPLICABLE],0) AS NUMBEROFTIMESAPPLICABLE
       ,ISNULL(pdmm.[LEASTEXPENSIVEMODE],0) AS LEASTEXPENSIVEMODE
       ,pdl.[RETAILGROUPMEMBERLINE]
       ,pdl.[RECID] AS DISCOUNTLINEID
       ,pdl.[LINENUM]
       ,pdl.[DISCOUNTPERCENTORVALUE]
       ,pdl.[UNITOFMEASURE]
       ,pdt.[COUNTNONDISCOUNTITEMS]
    FROM [ax].[RETAILPERIODICDISCOUNT] AS pd
    INNER JOIN [ax].[RETAILPERIODICDISCOUNTLINE] AS pdl ON pd.OFFERID = pdl.OFFERID AND pd.DATAAREAID = pdl.DATAAREAID
    LEFT OUTER JOIN [ax].[RETAILDISCOUNTMIXANDMATCH] AS pdmm ON pd.RECID = pdmm.RECID
    LEFT OUTER JOIN [ax].[RETAILDISCOUNTMULTIBUY] AS pdmb ON pd.RECID = pdmb.RECID
    LEFT OUTER JOIN [ax].[RETAILDISCOUNTTHRESHOLD] AS pdt ON pd.RECID = pdt.RECID
)
GO
PRINT N'Creating [crt].[ITEMSMAXRETAILPRICESINDIAVIEW]...';


GO

CREATE VIEW [crt].[ITEMSMAXRETAILPRICESINDIAVIEW] AS
(
    SELECT
        it.[RECID],
        it.[ITEMID],
        it.[DATAAREAID],
        itm.[MAXIMUMRETAILPRICE_IN]
    FROM [ax].INVENTTABLE it
    INNER JOIN [ax].INVENTTABLEMODULE itm ON itm.ITEMID = it.ITEMID AND itm.MODULETYPE = 2 AND itm.DATAAREAID = it.DATAAREAID -- 2 = Sales
)
GO
PRINT N'Creating [crt].[PICKINGLISTLINEVIEW]...';


GO

CREATE VIEW [crt].[PICKINGLISTLINEVIEW] AS
(
    SELECT
        pll.[RECID],
        pll.[ORDERID],
        pll.[ITEMID],
        pll.[ITEMNAME],
        pll.[INVENTDIMID],
        pll.[PURCHASERECEIVEDNOW],
        pll.[INVENTBATCHID],
        pll.[INVENTSITEID],
        pll.[INVENTLOCATIONID],
        pll.[CONFIGID],
        pll.[INVENTSERIALID],
        pll.[INVENTSIZEID],
        pll.[INVENTCOLORID],
        pll.[INVENTSTYLEID],
        pll.[DELIVERYMETHOD]
    FROM [crt].[PICKINGLISTLINE] pll
)
GO
PRINT N'Creating [crt].[LOGISTICSPOSTALADDRESSESVIEW]...';


GO
/********************************************************************************
    LOGISTICSPOSTALADDRESSESVIEW retrieves the logistics postal address.
	The view joins with the tables: LOGISTICSPOSTALADDRESS, LOGISTICSLOCATION, LOGISTICSADDRESSCOUNTRYREGION
********************************************************************************/

CREATE VIEW [crt].[LOGISTICSPOSTALADDRESSESVIEW] AS
(
	SELECT 
			lpa.COUNTY AS COUNTY,
			lpa.DISTRICT AS DISTRICT,
			lpa.POSTBOX AS POSTBOX,
			lpa.ADDRESS AS ADDRESS,
			lpa.BUILDINGCOMPLIMENT AS BUILDINGCOMPLIMENT,
			lpa.CITY AS CITY,
			lpa.COUNTRYREGIONID AS COUNTRYREGIONID,
			lpa.LATITUDE AS LATITUDE,
			lpa.STATE AS STATE,
			lpa.STREET AS STREET,
			lpa.STREETNUMBER AS STREETNUMBER,
			lpa.TIMEZONE AS TIMEZONE,
			lpa.LONGITUDE AS LONGITUDE,
			lpa.ZIPCODE AS ZIPCODE,
			lpa.LOCATION AS LOCATION,
			lpa.VALIDFROM AS VALIDFROM,
			lpa.VALIDTO AS VALIDTO,
			lpa.RECID AS POSTALADDRESSRECID,
			lpa.RECID AS POSTALADDRESS,
			lpa.DISTRICTNAME AS DISTRICTNAME,
			lpa.RECID AS RECID,
			LL.DESCRIPTION AS LOCATIONNAME,
			LACR.CURRENCYCODE AS COUNTRYCURRENCYCODE,LACR.ISOCODE AS ISOCODE
	FROM [ax].[LOGISTICSPOSTALADDRESS] lpa
			CROSS JOIN [ax].[LOGISTICSLOCATION] LL
			CROSS JOIN [ax].[LOGISTICSADDRESSCOUNTRYREGION] LACR
	WHERE (lpa.LOCATION=LL.RECID) AND (lpa.COUNTRYREGIONID=LACR.COUNTRYREGIONID)
)
GO
PRINT N'Creating [crt].[CARDTYPESVIEW]...';


GO
/********************************************************************************
    CardTypesView retrieves the card type information by joining with three tables:
    RETAILTENDERTYPECARDTABLE - Global AX table that are available to all Channels.
    RETAILSTORETENDERTYPECARDTABLE - Store Specific tender type card table.
    RETAILTENDERTYPECARDNUMBERS - Global AX table that stores the tender type card numbers.
********************************************************************************/
CREATE VIEW [crt].[CARDTYPESVIEW] AS
(
    SELECT
        rst.[CHANNEL] AS 'CHANNELID',
        rtcn.[RECID],
        rtc.[CARDTYPEID],
        rtc.[NAME],
        rtc.[CARDTYPES],
        rtc.[CARDISSUER],
        rst.[TENDERTYPEID],
        rst.[CASHBACKLIMIT],
        rst.[ALLOWMANUALINPUT],
        rst.[CHECKMODULUS],
        rtcn.[CARDNUMBERTO],
        rtcn.[CARDNUMBERFROM]
    FROM [ax].RETAILSTORETENDERTYPECARDTABLE rst
    INNER JOIN [ax].RETAILTENDERTYPECARDTABLE rtc ON rtc.CARDTYPEID = rst.CARDTYPEID
    INNER JOIN [ax].RETAILTENDERTYPECARDNUMBERS rtcn ON rtcn.CARDTYPEID = rst.CARDTYPEID
)
GO
PRINT N'Creating [crt].[RETAILTILLLAYOUTZONESVIEW]...';


GO

CREATE VIEW [crt].[RETAILTILLLAYOUTZONESVIEW] AS
(
	SELECT
		rtlzr.LAYOUTID,
		'ButtonGridZone' AS ZONETYPE,
		rtlz.ZONEID,
		rtlz.ZONENAME,
		bgz.BUTTONGRIDID,
		NULL AS PICTUREID,
		NULL AS PICTURE,
		NULL AS REPORT
	FROM
		ax.RETAILTILLLAYOUTZONEREFERENCE AS rtlzr
		INNER JOIN ax.RETAILTILLLAYOUTZONE AS rtlz ON rtlz.RECID = rtlzr.ZONE
		INNER JOIN ax.RETAILTILLLAYOUTBUTTONGRIDZONE AS bgz ON bgz.RECID = rtlzr.RECID

	UNION ALL

	SELECT
		rtlzr.LAYOUTID,
		'ImageZone' AS ZONETYPE,
		rtlz.ZONEID,
		rtlz.ZONENAME,
		NULL AS BUTTONGRIDID,
		iz.PICTUREID,
		ri.PICTURE,
		NULL AS REPORT
	FROM
		ax.RETAILTILLLAYOUTZONEREFERENCE AS rtlzr
		INNER JOIN ax.RETAILTILLLAYOUTZONE AS rtlz ON rtlz.RECID = rtlzr.ZONE
		INNER JOIN ax.RETAILTILLLAYOUTIMAGEZONE AS iz ON iz.RECID = rtlzr.RECID
		INNER JOIN ax.RETAILIMAGES AS ri ON ri.PICTUREID = iz.PICTUREID

	UNION ALL

	SELECT
		rtlzr.LAYOUTID,
		'ReportZone' AS ZONETYPE,
		rtlz.ZONEID,
		rtlz.ZONENAME,
		NULL AS BUTTONGRIDID,
		NULL AS PICTUREID,
		NULL AS PICTURE,
		rz.REPORT
	FROM
		ax.RETAILTILLLAYOUTZONEREFERENCE AS rtlzr
		INNER JOIN ax.RETAILTILLLAYOUTZONE AS rtlz ON rtlz.RECID = rtlzr.ZONE
		INNER JOIN ax.RETAILTILLLAYOUTREPORTZONE AS rz ON rz.RECID = rtlzr.RECID
)
GO
PRINT N'Creating [crt].[RETAILMULTIBUYDISCOUNTLINESVIEW]...';


GO

CREATE VIEW [crt].[RETAILMULTIBUYDISCOUNTLINESVIEW] AS
(
    SELECT
        mbl.RECID,
        mbl.MULTIBUYID,
        mbl.PRICEDISCPCT, 
        mbl.QTYLOWEST,             
        mbl.DATAAREAID
    FROM [ax].RETAILMULTIBUYDISCOUNTLINE mbl
	INNER JOIN [ax].[RETAILPERIODICDISCOUNT] pd ON pd.OFFERID = mbl.MULTIBUYID AND pd.DATAAREAID = mbl.DATAAREAID
	WHERE pd.STATUS = 1
	    AND (pd.PERIODICDISCOUNTTYPE != 3) -- Don't fetch promotions
)
GO
PRINT N'Creating [crt].[MARKUPAUTOCONFIGURATIONVIEW]...';


GO

CREATE VIEW [crt].[MARKUPAUTOCONFIGURATIONVIEW] AS
(
    SELECT
        mat.RECID AS CHARGEID,
        mat.MODULECATEGORY,
        mat.MODULETYPE,
        mat.ACCOUNTCODE,
        mat.ACCOUNTRELATION,
        mat.ITEMCODE,
        mat.ITEMRELATION,
        mat.DLVMODECODE,
        mat.DLVMODERELATION,
        mal.VALUE,
        mal.CURRENCYCODE,
        mal.KEEP,
        mt.MARKUPCODE,
        mal.MARKUPCATEGORY AS MARKUPMETHOD,
        mal.TAXGROUP AS SALESTAXGROUP,
        mt.TAXITEMGROUP AS ITEMTAXGROUP,
        mal.FROMAMOUNT,
        mal.TOAMOUNT,
        mal.RECID,
        mat.DATAAREAID
    FROM [ax].MARKUPAUTOTABLE AS mat
    INNER JOIN [ax].MARKUPAUTOLINE AS mal
        ON mat.RECID = mal.TABLERECID AND mal.DATAAREAID = mat.DATAAREAID
    INNER JOIN [ax].MARKUPTABLE AS mt
        -- join to charge code to get charge code tax group
        ON mal.MARKUPCODE = mt.MARKUPCODE AND mal.MODULETYPE = mt.MODULETYPE AND mal.DATAAREAID = mt.DATAAREAID
    -- only fetch sales and delivery charges
    WHERE (mat.MODULETYPE = 1 OR mat.MODULETYPE = 3)
)
GO
PRINT N'Creating [crt].[ITEMRESERVATIONSUMVIEW]...';


GO

CREATE VIEW [crt].[ITEMRESERVATIONSUMVIEW] WITH SCHEMABINDING AS
(
   SELECT
		[INVENTAVAILABILITY],
		[EXPIREDATETIME],
		SUM([QUANTITY]) AS QUANTITY,
		COUNT_BIG(*) LINENUM
	FROM [crt].ITEMRESERVATION
	WHERE [ISRELEASED] = 0
	GROUP BY [INVENTAVAILABILITY], [EXPIREDATETIME]
)
GO
PRINT N'Creating [crt].[ITEMRESERVATIONSUMVIEW].[IX_ITEMRESERVATIONSUMVIEWINNER_AVAIL]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_ITEMRESERVATIONSUMVIEWINNER_AVAIL]
    ON [crt].[ITEMRESERVATIONSUMVIEW]([INVENTAVAILABILITY] ASC);


GO
PRINT N'Creating [crt].[ITEMRESERVATIONSUMVIEW].[IX_ITEMRESERVATIONSUMVIEWINNER_EXPIR]...';


GO
CREATE NONCLUSTERED INDEX [IX_ITEMRESERVATIONSUMVIEWINNER_EXPIR]
    ON [crt].[ITEMRESERVATIONSUMVIEW]([EXPIREDATETIME] ASC)
    INCLUDE([QUANTITY]);


GO
PRINT N'Creating [crt].[CHARGESVIEW]...';


GO

CREATE VIEW [crt].[CHARGESVIEW] AS
(
    SELECT
		mt.RECID,
        mt.MARKUPCODE,
		mt.MODULETYPE,
        mt.TAXITEMGROUP AS ITEMTAXGROUPID,
		mt.DATAAREAID
    FROM [ax].MARKUPTABLE AS mt
)
GO
PRINT N'Creating [crt].[RETAILDISCOUNTSVIEW]...';


GO
/********************************************************************************
    RetailDiscountsView retrieves the discount header information by joining four tables.
    RETAILPERIODICDISCOUNT - AX table that stores the discount definitions.
    RETAILDISCOUNTMIXANDMATCH - AX table that holds mix and match discount parameters.
    RETAILDISCOUNTMULTIBUY - AX table that holds multibuy (quantity) discount parameters.
	RETAILDISCOUNTTHRESHOLD - AX table that holds threshold (amount) discount parameters.
********************************************************************************/
CREATE VIEW crt.RETAILDISCOUNTSVIEW
AS
(
    SELECT
		pd.DATAAREAID,
		pd.CURRENCYCODE,
        pd.OFFERID,
        pd.NAME,
        pd.PERIODICDISCOUNTTYPE,
        pd.CONCURRENCYMODE,
		pd.PRICINGPRIORITYNUMBER,
        pd.ISDISCOUNTCODEREQUIRED,
        pd.VALIDATIONPERIODID,
        pd.DATEVALIDATIONTYPE,
        pd.VALIDFROM,
        pd.VALIDTO,
        ISNULL(pdmm.MIXANDMATCHDISCOUNTTYPE, ISNULL(pdmb.MULTIBUYDISCOUNTTYPE, pd.PERIODICDISCOUNTTYPE)) AS DISCOUNTTYPE,
        ISNULL(pdmm.[DEALPRICEVALUE],0.0) AS DEALPRICEVALUE,
        pd.DISCOUNTPERCENTVALUE,
		ISNULL(pdmm.[DISCOUNTAMOUNTVALUE],0.0) AS DISCOUNTAMOUNTVALUE,
		ISNULL(pdmm.[NOOFLEASTEXPENSIVELINES],0) AS NOOFLEASTEXPENSIVELINES,
		ISNULL(pdmm.[NUMBEROFTIMESAPPLICABLE],0) AS NUMBEROFTIMESAPPLICABLE,
        ISNULL(pdmm.[LEASTEXPENSIVEMODE],0) AS LEASTEXPENSIVEMODE,
		pdt.COUNTNONDISCOUNTITEMS
	FROM [ax].[RETAILPERIODICDISCOUNT] AS pd
		LEFT OUTER JOIN [ax].[RETAILDISCOUNTMIXANDMATCH] AS pdmm ON pd.RECID = pdmm.RECID AND pd.DATAAREAID = pdmm.DATAAREAID
		LEFT OUTER JOIN [ax].[RETAILDISCOUNTMULTIBUY] AS pdmb ON pd.RECID = pdmb.RECID AND pd.DATAAREAID = pdmb.DATAAREAID
		LEFT OUTER JOIN [ax].[RETAILDISCOUNTTHRESHOLD] AS pdt ON pd.RECID = pdt.RECID AND pd.DATAAREAID = pdt.DATAAREAID
    WHERE pd.STATUS = 1
        AND (pd.PERIODICDISCOUNTTYPE != 3) -- Don't fetch promotions
)
GO
PRINT N'Creating [crt].[CURRENCIESVIEW]...';


GO

CREATE VIEW [crt].[CURRENCIESVIEW] AS
(
    SELECT
        c.[RECID],
        c.[ROUNDOFFPRICE],
        c.[ROUNDOFFSALES],
        c.[CURRENCYCODE],
        c.[ROUNDOFFTYPEPRICE],
        c.[ROUNDOFFTYPESALES],
        c.[SYMBOL]
    FROM [ax].CURRENCY c
)
GO
PRINT N'Creating [crt].[RETAILPRODUCTCATEGORYHIERARCHYVIEW]...';


GO

CREATE VIEW [crt].[RETAILPRODUCTCATEGORYHIERARCHYVIEW] AS
(
    SELECT
        erc.[PARENTCATEGORY],
        erc.[NAME],
        erc.[RECID] AS RECID
    FROM [ax].ECORESCATEGORY erc -- Cannot use RetailPub version since Retail product category is not published
    INNER JOIN [ax].ECORESCATEGORYHIERARCHYROLE erchr ON erchr.CATEGORYHIERARCHY = erc.CATEGORYHIERARCHY
    WHERE erc.ISACTIVE = 1 AND erchr.NAMEDCATEGORYHIERARCHYROLE = 4 -- Retail product category
)
GO
PRINT N'Creating [crt].[TAXINFORMATIONLEGALENTITIESINDIAVIEW]...';


GO

CREATE VIEW [crt].[TAXINFORMATIONLEGALENTITIESINDIAVIEW] AS
(
	SELECT
		tileIndia.[RECID],
		tileIndia.[LEGALENTITY],
		tileIndia.[PANNUMBER] AS [COMPANYPERMANENTACCOUNTNUMBER],
		rct.[RECID] AS [CHANNELID]
	FROM [ax].TAXINFORMATIONLEGALENTITY_IN tileIndia
	INNER JOIN [ax].COMPANYINFO ci ON ci.RECID = tileIndia.LEGALENTITY
	INNER JOIN [ax].RETAILCHANNELTABLE rct ON rct.INVENTLOCATIONDATAAREAID = tileIndia.DATAAREAID
)
GO
PRINT N'Creating [crt].[TEXTVALUETRANSLATIONSVIEW]...';


GO

CREATE VIEW [crt].[TEXTVALUETRANSLATIONSVIEW] AS
(
    SELECT
        ertvt.RECID,
        ertvt.LANGUAGE,
        ertvt.TEXTVALUE,
        ertvt.TEXTVALUETABLE
    FROM [ax].ECORESTEXTVALUETRANSLATION ertvt
)
GO
PRINT N'Creating [crt].[ORGUNITCONTACTSVIEW]...';


GO
/********************************************************************************
    OrgunitContactsView retrieves electronic contact information of a channel.

********************************************************************************/
CREATE VIEW [crt].[ORGUNITCONTACTSVIEW] AS
(
    SELECT
        rct.RECID as 'CHANNELID', 
        lea.RECID as 'ELECTRONICADDRESSLOCATIONRECID', 
        lea.LOCATOR AS 'ELECTRONICADDRESSLOCATOR',
        lea.LOCATOREXTENSION AS 'ELECTRONICADDRESSLOCATOREXTENSION', 
        lea.TYPE AS 'ELECTRONICADDRESSTYPE', 
        lea.ISPRIMARY AS 'ISPRIMARY', 
        lea.ISPRIVATE AS 'ISPRIVATE'
    FROM ax.RETAILCHANNELTABLE rct
    INNER JOIN ax.OMOPERATINGUNIT oou ON oou.RECID = rct.OMOPERATINGUNITID
    INNER JOIN ax.DIRPARTYLOCATION dpl ON dpl.PARTY = oou.RECID
    INNER JOIN ax.LogisticsElectronicAddress lea ON lea.LOCATION = dpl.LOCATION
)
GO
PRINT N'Creating [crt].[OFFLINEDATABASEMETADATAVIEW]...';


GO

CREATE VIEW [crt].[OFFLINEDATABASEMETADATAVIEW] AS
(
    SELECT
        odp.[RECID],
        odp.[DATABASETYPE],
        odp.[VERSION],
		odp.[CREATEDDATETIME], 
		odp.[CHANNELID],
        odp.[HASH]
    FROM [crt].OFFLINEDATABASEMETADATA odp
)
GO
PRINT N'Creating [crt].[TRANSFERORDERLINEVIEW]...';


GO

CREATE VIEW [crt].[TRANSFERORDERLINEVIEW] AS
(
    SELECT
        tol.[RECID],
        tol.[ORDERID],
        tol.[LINERECEIPTNUMBER],
        tol.[ITEMID],
        tol.[ITEMNAME],
        tol.[INVENTDIMID],
        tol.[QUANTITYTRANSFERRED],
        tol.[QUANTITYSHIPPED],
        tol.[QUANTITYRECEIVED],
        tol.[QUANTITYSHIPNOW],
        tol.[QUANTITYRECEIVENOW],
        tol.[QUANTITYREMAINSHIP],
        tol.[QUANTITYREMAINRECEIVE],
        tol.[PURCHASEUNIT],
        tol.[INVENTBATCHID],
        tol.[INVENTSITEID],
        tol.[INVENTLOCATIONID],
        tol.[CONFIGID],
        tol.[INVENTSERIALID],
        tol.[INVENTSIZEID],
        tol.[INVENTCOLORID],
        tol.[INVENTSTYLEID],
        tol.[DELIVERYMETHOD]
    FROM [crt].[TRANSFERORDERLINE] tol
)
GO
PRINT N'Creating [crt].[DEVICECONFIGURATIONSVIEW]...';


GO
CREATE VIEW [crt].[DEVICECONFIGURATIONSVIEW] AS
(
    SELECT
        rfp.AGGREGATEITEMS,
        rfp.AGGREGATEITEMSFORPRINTING,
        rfp.AGGREGATEPAYMENTS,
        rfp.AUDITENABLED,
        rfp.CANCELREASON AS NFCEVOIDED,
        rfp.CONTINGENCYREASON AS NFCECONTINGENCYMNODENABLED,
        rfp.CREATEASYNCCUSTOMERS,
        rfp.CREATEOFFLINECUSTOMERORDERS,
        rfp.DAYSTRANSACTIONSEXISTS,
        rfp.DISCOUNTATTOTAL,
        rfp.DISPLAYSECONDARYTOTALCURRENCY,
        rfp.ENDOFTRANSACTION,
        rfp.ITEMNOTONFILE,
        rfp.LIMITSTAFFLISTTOSTORE,
        rfp.LINEITEMTAXCHANGE,
        rfp.MARKDOWN AS PRODUCTDISCOUNT,
        rfp.MARKUP,
        rfp.MAXIMUMPRICE,
        rfp.MAXIMUMQTY,
        rfp.MINIMUMPASSWORDLENGTH,
        rfp.MUSTKEYINPRICEIFZERO,
        rfp.NAME AS FUNCTIONALITYPROFILEDESCRIPTION,
        rfp.NEGATIVESALESLINE AS RETURNPRODUCT,
        rfp.NOSALE AS OPENDRAWER,
        rfp.OVERRIDEPRICE,
        rfp.PRINTXREPORTONTERMINAL,
        rfp.PROFILEID,
        rfp.REFUNDSALE,
        rfp.SALESPERSON,
        rfp.SEARCHCUSTOMERSINAX,
        rfp.SECONDARYTOTALCURRENCY,
        rfp.SERIALNUMBER,
        rfp.SHOWSTAFFLISTATLOGON,
        rfp.STAFFBARCODELOGON,
        rfp.STAFFBARCODELOGONREQUIRESPASSWORD,
        rfp.STAFFCARDLOGON,
        rfp.STAFFCARDLOGONREQUIRESPASSWORD,
        rfp.STARTOFTRANSACTION,
        rfp.TAENABLEREGISTRATION,
        rfp.TENDERDECLARATION,
        rfp.TRANSACTIONTAXCHANGE,
        rfp.VOIDISPRESSED,
        rfp.VOIDPAYMENT,
        rfp.VOIDTRANSACTION,
        rfp.INCLUDEKITCOMPONENTS,
        rfp.MAXTRANSACTIONSEARCHRESULTS,
        rfp.REQUIREAMOUNTDECLARATION,
        rfp.DECIMALNOTREQUIREDFORMINORCURRENCYUNIT,
        rfp.MANUALCALCULATEDISCOUNTS,
        rst.CULTURENAME,
        rst.HIDETRAININGMODE,
        rst.PHONE,
        COALESCE(rtt.STATEMENTMETHOD, rst.STATEMENTMETHOD) AS STATEMENTMETHOD,
        rst.RECID AS CHANNELID,
        rst.STORENUMBER,
        rst.TAXGROUP,
        rst.TAXIDENTIFICATIONNUMBER,
        rst.TAXOVERRIDEGROUP,
        rst.TENDERDECLARATIONCALCULATION,
        rst.USECUSTOMERBASEDTAX,
        rst.USEDESTINATIONBASEDTAX,
        rtt.AUTOLOGOFFTIMEOUT,
        rtt.CREATERECORDING,
        rtt.CUSTOMERDISPLAYTEXT1,
        rtt.CUSTOMERDISPLAYTEXT2,
        rtt.EFTSTORERECID,
        rtt.EFTTERMINALID,
        rtt.EXITAFTEREACHTRANSACTION,
        rtt.HARDWAREPROFILE,
        rtt.LOCATION,
        rtt.NAME AS TERMINALDESCRIPTION,
        rtt.OPENDRAWERATLILO,
        rtt.PLAYBACKRECORDING,
        rtt.PRINTVATREFUNDCHECKS,
        rtt.SELECTHARDWARESTATIONONTENDERING,
        rtt.STANDALONE,
        rtt.TERMINALID,
        rtt.TERMINALSTATEMENT,
        rtac.COLOR,
        rvp.POSSKINNAME,
        rvp.FONTSCHEME,
        rilb.PICTURE AS LOGONBACKGROUNDPICTURE,
        rilbp.PICTURE AS LOGONBACKGROUNDPICTUREPORTRAIT,
        rib.PICTURE AS BACKGROUNDPICTURE,
        rct.CURRENCY,
        rct.INVENTLOCATION,
        rst.STMTPOSTASBUSINESSDAY AS 'STATEMENTPOSTINGASBUSINESSDAY',
        rst.STMTCALCBATCHENDTIME AS 'STATEMENTCALCULATIONBATCHENDTIMEINSECONDS',
        rop.RECID AS 'OFFLINEPROFILE',
        rop.CHECKNEWDBINTERVAL,
        rop.TRXUPLOADINTERVAL,
        rop.RECONNECTINTERVAL,
        rop.[TIMEOUT] AS 'OFFLINETIMEOUT'
    FROM [ax].RETAILCHANNELTABLE AS rct
    INNER JOIN [ax].RETAILSTORETABLE AS rst ON rct.RECID = rst.RECID
    INNER JOIN [ax].RETAILTERMINALTABLE AS rtt ON rtt.STORERECID = rst.RECID
    INNER JOIN [ax].RETAILFUNCTIONALITYPROFILE AS rfp ON rst.FUNCTIONALITYPROFILE = rfp.PROFILEID
    INNER JOIN [ax].RETAILVISUALPROFILE AS rvp ON rvp.PROFILEID = rtt.VISUALPROFILE
    LEFT JOIN [ax].RETAILTHEMEPALLET AS rtp ON rtp.NAME = rvp.PALLET
    LEFT JOIN [ax].RETAILTHEMEACCENTCOLOR AS rtac ON rtac.PALLET = rtp.RECID
    LEFT JOIN [ax].RETAILIMAGES as rilb ON rilb.PICTUREID = rvp.PICTUREID
    LEFT JOIN [ax].RETAILIMAGES as rilbp ON rilbp.PICTUREID = rvp.PICTUREIDPORTRAIT
    LEFT JOIN [ax].RETAILIMAGES as rib ON rib.PICTUREID = rvp.BACKGROUNDPICTUREID
    LEFT JOIN [ax].RETAILOFFLINEPROFILE as rop on rst.OFFLINEPROFILE = rop.RECID
)
GO
PRINT N'Creating [crt].[PRODUCTDIMENSIONVALUESVIEW]...';


GO

CREATE VIEW [crt].[PRODUCTDIMENSIONVALUESVIEW]
WITH SCHEMABINDING AS
(
    SELECT
        [par].CHANNELID AS CHANNELID,
        [erdpv].PRODUCTMASTER AS MASTERPRODUCTID,
        [erdpv].RECID AS VARIANTPRODUCTID,
        [erc].RECID AS COLORID,
        [dvc].LANGUAGEID AS COLOR_LOCALE,
        COALESCE([dvc].NAME, [id].INVENTCOLORID, '') AS COLOR,
        [ercfg].RECID AS CONFIGID,
        [dvcfg].LANGUAGEID AS CONFIG_LOCALE,
        COALESCE([dvcfg].NAME, [id].CONFIGID, '') AS CONFIG,
        [ers].RECID AS SIZEID,
        [dvsz].LANGUAGEID AS SIZE_LOCALE,
        COALESCE([dvsz].NAME, [id].INVENTSIZEID, '') AS SIZE,
        [erst].RECID STYLEID,
        [dvst].LANGUAGEID AS STYLE_LOCALE,
        COALESCE([dvst].NAME, [id].INVENTSTYLEID, '') AS STYLE,
        [par].VALIDFROM AS VALIDFROM,
        [par].VALIDTO AS VALIDTO
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].PRODUCTMASTER = [par].PRODUCTID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [erdpv].RECID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [idc].ITEMID AND [it].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    -- Color
    LEFT OUTER JOIN [ax].ECORESCOLOR erc ON [erc].NAME = [id].INVENTCOLORID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLOR = [erc].RECID AND [erpmc].COLORPRODUCTMASTER = [it].PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON [dvc].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID
    -- Configuration
    LEFT OUTER JOIN [ax].ECORESCONFIGURATION ercfg ON [ercfg].NAME = [id].CONFIGID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON [erpmcfg].CONFIGURATION = [ercfg].RECID AND [erpmcfg].CONFIGPRODUCTMASTER = [it].PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON [dvcfg].PRODUCTMASTERDIMENSIONVALUE = [erpmcfg].RECID
    -- Size
    LEFT OUTER JOIN [ax].ECORESSIZE ers ON [ers].NAME = [id].INVENTSIZEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZE = [ers].RECID AND [erpms].SIZEPRODUCTMASTER = [it].PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON [dvsz].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID
    -- Style
    LEFT OUTER JOIN [ax].ECORESSTYLE erst ON [erst].NAME = [id].INVENTSTYLEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON [erpmst].STYLE = [erst].RECID AND [erpmst].STYLEPRODUCTMASTER = [it].PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON [dvst].PRODUCTMASTERDIMENSIONVALUE = [erpmst].RECID
)
GO
PRINT N'Creating [crt].[DEFAULTTRANSACTIONSERVICEPROFILEVIEW]...';


GO

CREATE VIEW [crt].[DEFAULTTRANSACTIONSERVICEPROFILEVIEW] AS
(
    SELECT
	    [rsp].[STAFFPASSWORDHASH],
        [rsp].[DEVICETOKENALGORITHM],
        [rsp].[DEVICETOKENEXPIRATION],
        [rtsp].[PROFILEID] AS 'TSPROFILEID',
        [rtsp].[LANGUAGE] AS 'TSLANGUAGEID',
        [rfp].[TSSTAFF] AS 'TSSTAFFLOGINCONFIGURATION',
        [rtsp].[SERVERSERVICENAME] AS 'TSSERVICENAME',
        [rtsp].[SECURITYOFF] AS 'TSSECURITYOFF',
        [rtsp].[USERID] AS 'TSUSERID',
        [rtsp].[SERVICEHOSTURL] AS 'TSSERVICEHOSTURL',
        [rtsp].[ISSUERURI] AS 'TSISSUERURI',
        [rtsp].[IDENTITYPROVIDER] AS 'TSIDENTITYPROVIDER',
        [rtsp].[IDENTITYPROVIDERCLAIMTYPE] AS 'TSIDENTITYPROVIDERCLAIMTYPE',
        [rtsp].[AUDIENCEURN] AS 'TSAUDIENCEURN',
        [rtsp].[ISSUEDTOKENTYPE] AS 'TSISSUEDTOKENTYPE'
    FROM [ax].RETAILTRANSACTIONSERVICEPROFILE rtsp 
    INNER JOIN [ax].RETAILSHAREDPARAMETERS rsp ON rtsp.PROFILEID = rsp.TRANSACTIONSERVICEPROFILE
    LEFT JOIN [ax].RETAILSTORETABLE rst ON rst.STORENUMBER = rsp.LOCALSTOREID
    LEFT JOIN [ax].RETAILFUNCTIONALITYPROFILE rfp ON rfp.PROFILEID = rst.FUNCTIONALITYPROFILE
)
GO
PRINT N'Creating [crt].[EMPLOYEEPERMISSIONSPOSITIONSVIEW]...';


GO

CREATE VIEW [crt].EMPLOYEEPERMISSIONSPOSITIONSVIEW AS
(
    SELECT
        Staff.STAFFID,
        MAX(Staff.CONTINUEONTSERRORS) AS CONTINUEONTSERRORS,
        MAX(PermissionGroup.ALLOWKITDISASSEMBLY) AS ALLOWKITDISASSEMBLY,
        MAX(PermissionGroup.ALLOWBLINDCLOSE) AS ALLOWBLINDCLOSE,
        MAX(PermissionGroup.ALLOWCHANGENOVOID) AS ALLOWCHANGENOVOID,
        MAX(PermissionGroup.ALLOWCREATEORDER) AS ALLOWCREATEORDER,
        MAX(PermissionGroup.ALLOWEDITORDER) AS ALLOWEDITORDER,
        MAX(PermissionGroup.ALLOWFLOATINGTENDERDECLARATION) AS ALLOWFLOATINGTENDERDECLARATION,
        MAX(PermissionGroup.ALLOWMULTIPLELOGINS) AS ALLOWMULTIPLELOGINS,
        MAX(PermissionGroup.ALLOWMULTIPLESHIFTLOGON) AS ALLOWMULTIPLESHIFTLOGON,
        MAX(PermissionGroup.ALLOWOPENDRAWERONLY) AS ALLOWOPENDRAWERONLY,
        SUM(DISTINCT(PermissionGroup.ALLOWPRICEOVERRIDE)) AS ALLOWPRICEOVERRIDE,
        MAX(PermissionGroup.ALLOWRETRIEVEORDER) AS ALLOWRETRIEVEORDER,
        MAX(PermissionGroup.ALLOWSALESTAXCHANGE) AS ALLOWSALESTAXCHANGE,
        MAX(PermissionGroup.ALLOWTENDERDECLARATION) AS ALLOWTENDERDECLARATION,
        MAX(PermissionGroup.ALLOWTRANSACTIONSUSPENSION) AS ALLOWTRANSACTIONSUSPENSION,
        MAX(PermissionGroup.ALLOWTRANSACTIONVOIDING) AS ALLOWTRANSACTIONVOIDING,
        MAX(PermissionGroup.ALLOWXREPORTPRINTING) AS ALLOWXREPORTPRINTING,
        MAX(PermissionGroup.ALLOWZREPORTPRINTING) AS ALLOWZREPORTPRINTING,
        MAX(PermissionGroup.ALLOWCHANGEPERIPHERALSTATION) AS ALLOWCHANGEPERIPHERALSTATION,
        MAX(PermissionGroup.MANAGERPRIVILEGES) AS MANAGERPRIVILEGES,
        MAX(PermissionGroup.ALLOWPASSWORDCHANGE) AS ALLOWPASSWORDCHANGE,
        MAX(PermissionGroup.ALLOWRESETPASSWORD) AS ALLOWRESETPASSWORD,
        MAX(PermissionGroup.MAXIMUMDISCOUNTPCT) AS MAXIMUMDISCOUNTPCT,
        MAX(PermissionGroup.MAXLINEDISCOUNTAMOUNT) AS MAXLINEDISCOUNTAMOUNT,
        MAX(PermissionGroup.MAXLINERETURNAMOUNT) AS MAXLINERETURNAMOUNT,
        MAX(PermissionGroup.MAXTOTALDISCOUNTAMOUNT) AS MAXTOTALDISCOUNTAMOUNT,
        MAX(PermissionGroup.MAXTOTALDISCOUNTPCT) AS MAXTOTALDISCOUNTPCT,
        MAX(PermissionGroup.MAXTOTALRETURNAMOUNT) AS MAXTOTALRETURNAMOUNT,
        MAX(PermissionGroup.USEHANDHELD) AS USEHANDHELD,
        MAX(PermissionGroup.MANAGEDEVICE) AS MANAGEDEVICE,
        MAX(PermissionGroup.VIEWTIMECLOCKENTRIES) AS VIEWTIMECLOCKENTRIES,
        MAX(PermissionGroup.ALLOWUSESHAREDSHIFT) AS ALLOWUSESHAREDSHIFT,
        MAX(PermissionGroup.ALLOWMANAGESHAREDSHIFT) AS ALLOWMANAGESHAREDSHIFT,
        MAX(PermissionGroup.ALLOWTASKGUIDES) AS ALLOWTASKGUIDES
    FROM [ax].HCMWORKER AS Worker
    INNER JOIN [ax].RETAILSTAFFTABLE AS Staff ON Staff.STAFFID = Worker.PERSONNELNUMBER
    INNER JOIN [ax].HCMPOSITIONWORKERASSIGNMENT AS PositionWorkerAssignment ON PositionWorkerAssignment.WORKER = Worker.RECID
    INNER JOIN [ax].HCMPOSITION AS Position ON Position.RECID = PositionWorkerAssignment.POSITION
    INNER JOIN [ax].HCMPOSITIONDETAIL AS PositionDetail ON PositionDetail.POSITION = PositionWorkerAssignment.POSITION
    INNER JOIN [ax].HCMJOB AS Job ON Job.RECID = PositionDetail.JOB
    INNER JOIN [ax].RETAILJOBPOSPERMISSIONGROUP AS JobPermission ON JobPermission.JOB = Job.RECID
    INNER JOIN [ax].RETAILPOSPERMISSIONGROUP AS PermissionGroup ON PermissionGroup.RECID = JobPermission.RETAILPOSPERMISSIONGROUP
    WHERE GETUTCDATE() BETWEEN [PositionWorkerAssignment].VALIDFROM AND [PositionWorkerAssignment].VALIDTO
        AND GETUTCDATE() BETWEEN [PositionDetail].VALIDFROM AND [PositionDetail].VALIDTO
    GROUP BY STAFFID
)
GO
PRINT N'Creating [crt].[STOREVIEW]...';


GO

CREATE VIEW [crt].[STOREVIEW] AS
(
	SELECT 
		rct.RECID,
		rct.RECID AS 'CHANNELID',
		rct.CHANNELTYPE,
		rct.INVENTLOCATIONDATAAREAID AS 'DATAAREAID',
		rprct.CATEGORYHIERARCHY,
		rct.EVENTNOTIFICATIONPROFILEID,
		rst.STORENUMBER,
		dp.NAME AS STORENAME,
		rst.TAXGROUP,
		rst.FUNCTIONALITYPROFILE,
		rst.USECUSTOMERBASEDTAX,
		rst.USEDESTINATIONBASEDTAX,
		rct.DEFAULTCUSTACCOUNT,
		rct.CURRENCY,
		rct.INVENTLOCATION,		
		rst.INVENTLOCATIONIDFORCUSTOMERORDER as SHIPPINGINVENTLOCATION,
		rst.OPENFROM,
		rst.OPENTO,
		lpa.RECID AS 'POSTALADDRESSRECID',
		lpa.ADDRESS AS 'STOREADDRESS',
		lpa.BUILDINGCOMPLIMENT,
		lpa.CITY,
		lpa.CITYRECID,
		lpa.COUNTRYREGIONID, -- Three letters country / region code.
		lacr.ISOCODE, -- Two letters country / region code.
		lpa.COUNTY,
		lac.NAME AS COUNTYNAME,
		lpa.DISTRICT,
		lpa.DISTRICTNAME,
		lpa.ISPRIVATE,
		lpa.LATITUDE,
		lpa.LOCATION,
		lpa.LONGITUDE,
		lpa.POSTBOX,
		lpa.STATE,
		las.NAME AS STATENAME,
		lpa.STREET,
		lpa.STREETNUMBER,
		lpa.ZIPCODE,
		lpa.ZIPCODERECID,
		lpa.MODIFIEDDATETIME,
		il.INVENTSITEID,
		rfp.RETAILRECEIPTPROFILE AS EMAILRECEIPTPROFILEID,
		(CASE WHEN rprct.RECID IS NULL THEN 0 ELSE 1 END) AS 'ISPUBLISHED'
		
	FROM [ax].RETAILCHANNELTABLE rct	
	INNER JOIN [ax].RETAILSTORETABLE rst ON rct.RECID = rst.RECID
	LEFT OUTER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rprct.ORIGINID = rct.RECID
	LEFT OUTER JOIN [ax].DIRPARTYTABLE dp ON dp.RECID = rct.OMOPERATINGUNITID
	LEFT OUTER JOIN [ax].RETAILFUNCTIONALITYPROFILE rfp ON rfp.PROFILEID = rst.FUNCTIONALITYPROFILE
	-- ADDRESS INFORMATION
	LEFT OUTER JOIN [ax].DIRPARTYLOCATION AS dpl ON dpl.PARTY = dp.RECID AND dpl.ISPRIMARY = 1
	LEFT OUTER JOIN [ax].INVENTLOCATION AS il ON rprct.INVENTLOCATION = il.INVENTLOCATIONID and rprct.INVENTLOCATIONDATAAREAID = il.DATAAREAID
	LEFT OUTER JOIN [ax].LOGISTICSPOSTALADDRESS AS lpa ON 
						lpa.LOCATION = dpl.LOCATION 
						AND lpa.ISPRIVATE = 0 
						AND GETUTCDATE() BETWEEN VALIDFROM AND VALIDTO
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION AS lacr ON lpa.COUNTRYREGIONID = lacr.COUNTRYREGIONID
	--state name
	LEFT OUTER JOIN [ax].LOGISTICSADDRESSSTATE las on lpa.COUNTRYREGIONID = las.COUNTRYREGIONID
	            and lpa.STATE = las.STATEID
	--county name
	LEFT OUTER JOIN [ax].LOGISTICSADDRESSCOUNTY lac on lpa.COUNTRYREGIONID = lac.COUNTRYREGIONID
	            and lpa.STATE = lac.STATEID
				and lpa.COUNTY = lac.COUNTYID
)
GO
PRINT N'Creating [crt].[RETAILMIXANDMATCHLINEGROUPSVIEW]...';


GO

CREATE VIEW [crt].[RETAILMIXANDMATCHLINEGROUPSVIEW] AS
(
    SELECT DISTINCT
        lg.MIXANDMATCHID AS OFFERID,
        lg.MIXANDMATCHLINEGROUP AS LINEGROUP,
        lg.NUMBEROFITEMSNEEDED AS NUMBEROFITEMSNEEDED,
        lg.RECID AS RECID,
		c.RECID AS CHANNELID
    FROM [ax].[RETAILMIXANDMATCHLINEGROUPS] AS lg
    INNER JOIN [ax].[RETAILPERIODICDISCOUNTLINE] AS dl ON dl.OFFERID = lg.MIXANDMATCHID AND dl.DATAAREAID = lg.DATAAREAID 
    INNER JOIN [ax].[RETAILDISCOUNTLINEMIXANDMATCH] AS mml ON dl.RECID = mml.RECID AND lg.MIXANDMATCHLINEGROUP = mml.LINEGROUP AND lg.DATAAREAID = mml.DATAAREAID
	INNER JOIN [ax].RETAILCHANNELTABLE c on c.INVENTLOCATIONDATAAREAID = lg.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILTHEMEPALLETCOLORVIEW]...';


GO

-- Combining reference tables to simplify selection of accent color
CREATE VIEW [crt].[RETAILTHEMEPALLETCOLORVIEW] AS
(
	SELECT 
		rtp.RECID
		,rtac.COLOR
		,rtc.ACCENTID
		,rtc.NAME AS ACCENTNAME
	FROM [ax].[RETAILTHEMEPALLET] as rtp
		LEFT JOIN [ax].[RETAILTHEMEACCENTCOLOR] AS rtac ON rtac.PALLET = rtp.RECID
		LEFT JOIN [ax].[RETAILTHEMEACCENT] AS rtc ON rtc.RECID = rtac.ACCENT
)
GO
PRINT N'Creating [crt].[UNITOFMEASUREVIEW]...';


GO

CREATE VIEW [crt].[UNITOFMEASUREVIEW] AS
(
    SELECT
        [uom].SYMBOL,
        [uom].DECIMALPRECISION,
        [uom].RECID,
        [uomt].LANGUAGEID,
        [uomt].DESCRIPTION
    FROM [ax].UNITOFMEASURE uom
    LEFT OUTER JOIN [ax].UNITOFMEASURETRANSLATION uomt
    ON uom.RECID = uomt.UNITOFMEASURE
)
GO
PRINT N'Creating [crt].[PRODUCTVARIANTNAMEVIEW]...';


GO

CREATE VIEW [crt].[PRODUCTVARIANTNAMEVIEW]
AS
    SELECT DISTINCT
        [par].CHANNELID AS CHANNELID,
        [par].PRODUCTID AS MASTERPRODUCTID,
        [par].VARIANTID AS RECORDID,
        [dvc].LANGUAGEID AS LOCALE,
        COALESCE([dvc].NAME, [id].INVENTCOLORID, '') AS COLOR,
        COALESCE([dvcfg].NAME, [id].CONFIGID, '') AS CONFIGURATION,
        COALESCE([dvsz].NAME, [id].INVENTSIZEID, '') AS SIZE,
        COALESCE([dvst].NAME, [id].INVENTSTYLEID, '') AS STYLE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    -- Color
    LEFT OUTER JOIN [ax].ECORESCOLOR erc ON [erc].NAME = [id].INVENTCOLORID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLOR = [erc].RECID AND [erpmc].COLORPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON [dvc].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_color ON [epmdv_color].RECID = [erpmc].RECID
    -- Configuration
    LEFT OUTER JOIN [ax].ECORESCONFIGURATION ercfg ON [ercfg].NAME = [id].CONFIGID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON [erpmcfg].CONFIGURATION = [ercfg].RECID AND [erpmcfg].CONFIGPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON [dvcfg].PRODUCTMASTERDIMENSIONVALUE = [erpmcfg].RECID AND [dvcfg].LANGUAGEID = [dvc].LANGUAGEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_config ON [epmdv_config].RECID = [erpmcfg].RECID
    -- Size
    LEFT OUTER JOIN [ax].ECORESSIZE ers ON [ers].NAME = [id].INVENTSIZEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZE = [ers].RECID AND [erpms].SIZEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON [dvsz].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID AND [dvsz].LANGUAGEID = [dvc].LANGUAGEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_size ON [epmdv_size].RECID = [erpms].RECID
    -- Style
    LEFT OUTER JOIN [ax].ECORESSTYLE erst ON [erst].NAME = [id].INVENTSTYLEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON [erpmst].STYLE = [erst].RECID AND [erpmst].STYLEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON [dvst].PRODUCTMASTERDIMENSIONVALUE = [erpmst].RECID AND [dvst].LANGUAGEID = [dvc].LANGUAGEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_style ON [epmdv_style].RECID = [erpmst].RECID
GO
PRINT N'Creating [crt].[ITEMSPRICEVIEW]...';


GO


CREATE VIEW [crt].[ITEMSPRICEVIEW] AS

(

    SELECT DISTINCT

        it.[RECID],       

        it.[ITEMID],      

        itm.[PRICE],

        itm.[UNITID],

        it.[PRODUCT],
		
        it.[DATAAREAID],

        itm.[MARKUPGROUPID],

        itm.[MARKUP],

        itm.[ALLOCATEMARKUP],

        itm.[PRICEQTY],

        itm.[LINEDISC],

        itm.[MULTILINEDISC],

        itm.[ENDDISC],

        rit.[NODISCOUNTALLOWED],

        itm.[TAXITEMGROUPID] AS 'ITEMTAXGROUPID'     

    FROM [ax].INVENTTABLE it      

    INNER JOIN [ax].INVENTTABLEMODULE itm ON itm.MODULETYPE = 2 AND itm.ITEMID = it.ITEMID AND itm.DATAAREAID = it.DATAAREAID 

    INNER JOIN [ax].RETAILINVENTTABLE rit ON it.ITEMID = rit.ITEMID AND rit.DATAAREAID = it.DATAAREAID   	

)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONORDERINVOICETRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONORDERINVOICETRANSVIEW] AS
(
    SELECT
        IT.STOREID AS 'STORE'
        ,IT.TERMINALID AS 'TERMINALID'
        ,IT.TRANSACTIONID AS 'TRANSACTIONID'
        ,IT.LINENUM AS 'LINENUM'
        ,IT.INVOICEID AS 'INVOICEID'
        ,IT.AMOUNTCUR AS 'INVOICEAMOUNT'
        ,IT.INVOICEID AS 'COMMENT'
        ,IT.TRANSACTIONSTATUS as 'TRANSACTIONSTATUS'
    FROM [ax].RETAILTRANSACTIONORDERINVOICETRANS IT
)
GO
PRINT N'Creating [crt].[SHIFTSVIEW]...';


GO

CREATE VIEW [crt].[SHIFTSVIEW] AS
(
    SELECT
        SHIFT.SHIFTID,
        SHIFT.CASHDRAWER,
        SHIFT.CHANNEL,
        USEDSHIFT.TERMINALID AS [CURRENTTERMINALID],
        NULL AS [CLOSEDATE],
        NULL AS [CLOSEDATETIMEUTC],
		NULL AS [CLOSEDATTERMINAL],
        0 AS [CUSTOMERSCOUNT],
        0.0 AS [DISCOUNTTOTAL],
        0 AS [LOGONSCOUNT],
        0 AS [NOSALECOUNT],
        0.0 AS [PAIDTOACCOUNTTOTAL],
        0.0 AS [RETURNSTOTAL],
        0.0 AS [ROUNDEDAMOUNTTOTAL],
        0 AS [SALESCOUNT],
        0.0 AS [SALESTOTAL],
        SHIFT.STAFFID,
        USEDSHIFT.STAFFID AS [CURRENTSTAFFID],
        SHIFT.STARTDATETIMEUTC,
        SHIFT.[STATUS],
        SHIFT.STATUSDATETIMEUTC,
        STORE.STORENUMBER AS STOREID,
        0.0 AS [TAXTOTAL],
        SHIFT.TERMINALID,
        0 AS [TRANSACTIONSCOUNT],
        0 AS [VOIDSCOUNT],
		SHIFT.ISSHARED,
        SHIFT.[DATAAREAID],
        SHIFT.[ROWVERSION]
    FROM [crt].RETAILSHIFTSTAGINGTABLE SHIFT
    INNER JOIN [ax].RETAILPUBRETAILSTORETABLE STORE ON SHIFT.CHANNEL = STORE.STOREORIGINID
    LEFT JOIN [crt].RETAILSHIFTUSERSSTAGINGTABLE USEDSHIFT
        ON SHIFT.CHANNEL = USEDSHIFT.CHANNEL AND
        SHIFT.SHIFTID = USEDSHIFT.SHIFTID AND
        SHIFT.TERMINALID = USEDSHIFT.ORIGINALTERMINALID

    UNION

    SELECT
        SHIFT.[BATCHID] AS SHIFTID,
        '' AS [CASHDRAWER],
        SHIFT.[CHANNEL],
        '' AS CURRENTTERMINALID,
        SHIFT.[CLOSEDATE],
        SHIFT.[CLOSEDATETIMEUTC],
		SHIFT.[CLOSEDATTERMINAL],
        SHIFT.[CUSTOMERSCOUNT],
        SHIFT.[DISCOUNTTOTAL],
        SHIFT.[LOGONSCOUNT],
        SHIFT.[NOSALECOUNT],
        SHIFT.[PAIDTOACCOUNTTOTAL],
        SHIFT.[RETURNSTOTAL],
        SHIFT.[ROUNDEDAMOUNTTOTAL],
        SHIFT.[SALESCOUNT],
        SHIFT.[SALESTOTAL],
        SHIFT.[STAFFID],
        '' AS [CURRENTSTAFFID],
        SHIFT.[STARTDATETIMEUTC],
        SHIFT.[STATUS],
        NULL AS [STATUSDATETIMEUTC],
        SHIFT.[STOREID],
        SHIFT.[TAXTOTAL],
        SHIFT.[TERMINALID],
        SHIFT.[TRANSACTIONSCOUNT],
        SHIFT.[VOIDSCOUNT],
		0 AS [ISSHARED],
        SHIFT.[DATAAREAID],
        SHIFT.[ROWVERSION]
    FROM [ax].RETAILPOSBATCHTABLE SHIFT
)
GO
PRINT N'Creating [crt].[HARDWAREPROFILECASHDRAWERSVIEW]...';


GO

CREATE VIEW [crt].[HARDWAREPROFILECASHDRAWERSVIEW] AS
(
        SELECT rhp.PROFILEID
                  ,rhp.DRAWER as 'DRAWERTYPE'
                  ,rhp.DRAWERDESCRIPTION as 'DRAWERDESCRIPTIONVALUE'
                  ,rhp.DRAWERDEVICENAME as 'DRAWERDEVICENAMEVALUE'
                  ,rhp.DRAWERMAKE as 'DRAWERMAKEVALUE'
                  ,rhp.DRAWERMODEL as 'DRAWERMODELVALUE'
                  ,rhp.DRAWERUSECASHDRAWERPOOL as 'ISSHAREDSHIFTDRAWERVALUE'
        FROM [ax].[RETAILHARDWAREPROFILE] rhp
        UNION ALL
        SELECT rhp.PROFILEID
                  ,rhp.DRAWER2 as 'DRAWERTYPE'
                  ,rhp.DRAWER2DESCRIPTION as 'DRAWERDESCRIPTIONVALUE'
                  ,rhp.DRAWER2DEVICENAME as 'DRAWERDEVICENAMEVALUE'
                  ,rhp.DRAWER2MAKE as 'DRAWERMAKEVALUE'
                  ,rhp.DRAWER2MODEL as 'DRAWERMODELVALUE'
                  ,rhp.DRAWER2USECASHDRAWERPOOL as 'ISSHAREDSHIFTDRAWERVALUE'
        FROM [ax].[RETAILHARDWAREPROFILE] rhp
)
GO
PRINT N'Creating [crt].[RECEIPTPRINTERSVIEW]...';


GO

CREATE VIEW [crt].[RECEIPTPRINTERSVIEW] AS
(
    SELECT DISTINCT
        rhp.RECID,
        rhp.PRINTER AS PRINTER,
        rhp.PRINTERDEVICENAME AS PRINTERDEVICENAME,
        rfl.PRINTBEHAVIOUR,
        rrpl.FORMLAYOUTID,
        rrpl.RECEIPTTYPE,
		rhp.PROFILEID AS HARDWAREPROFILEID
    FROM ax.RETAILHARDWAREPROFILE rhp
    INNER JOIN ax.RETAILRECEIPTPROFILE rrp ON rrp.PROFILEID = rhp.PRINTERRECEIPTPROFILEID
    INNER JOIN ax.RETAILRECEIPTPROFILELINE rrpl ON rrpl.PROFILEID = rrp.PROFILEID AND rrpl.PROFILEID = rhp.PRINTERRECEIPTPROFILEID
    INNER JOIN ax.RETAILFORMLAYOUT rfl ON rfl.FORMLAYOUTID = rrpl.FORMLAYOUTID
    WHERE rhp.PRINTER <> 0

    UNION ALL

    SELECT DISTINCT
        rhp.RECID,
        rhp.PRINTER2 AS PRINTER,
        rhp.PRINTER2DEVICENAME AS PRINTERDEVICENAME,
        rfl.PRINTBEHAVIOUR,
        rrpl.FORMLAYOUTID,
        rrpl.RECEIPTTYPE,
		rhp.PROFILEID AS HARDWAREPROFILEID
    FROM ax.RETAILHARDWAREPROFILE rhp
    INNER JOIN ax.RETAILRECEIPTPROFILE rrp ON rrp.PROFILEID = rhp.PRINTER2RECEIPTPROFILEID
    INNER JOIN ax.RETAILRECEIPTPROFILELINE rrpl ON rrpl.PROFILEID = rrp.PROFILEID AND rrpl.PROFILEID = rhp.PRINTER2RECEIPTPROFILEID
    INNER JOIN ax.RETAILFORMLAYOUT rfl ON rfl.FORMLAYOUTID = rrpl.FORMLAYOUTID
    WHERE rhp.PRINTER2 <> 0
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSVIEW] AS
(
    SELECT
         CDT.TRANSACTIONID AS 'TRANSACTIONID'
        ,CDT.LINENUM AS 'LINENUM'
        ,CDT.CUSTACCOUNT AS 'CUSTACCOUNT'
        ,CDT.STORE AS 'STORE'
        ,CDT.TERMINAL AS 'TERMINAL'
        ,CDT.TRANSACTIONSTATUS AS 'TRANSACTIONSTATUS'
        ,CDT.AMOUNT AS 'AMOUNT'
        ,CDT.COMMENT AS 'COMMENT'
    FROM [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] CDT
)
GO
PRINT N'Creating [crt].[PROVISIONINGMESSAGESVIEW]...';


GO

CREATE VIEW [crt].[PROVISIONINGMESSAGESVIEW] AS
(
    SELECT [ID]
          ,[USERID]
          ,[PLANID]
          ,[PLANCAPABILITY]
          ,[STATE]	
	  FROM [ax].[PROVISIONINGMESSAGETABLE]
)
GO
PRINT N'Creating [crt].[TAXCOMPONENTTABLEINDIAVIEW]...';


GO

CREATE VIEW [crt].[TAXCOMPONENTTABLEINDIAVIEW] AS
(
	SELECT
		tctIndia.[RECID],
		tctIndia.[COMPONENT],
		tctIndia.[TAXTYPE],
		tctIndia.[DATAAREAID],
		tt.[TAXCODE],
		rct.[RECID] as [CHANNELID]
	FROM [ax].TAXCOMPONENTTABLE_IN tctIndia
	INNER JOIN [ax].TAXTABLE tt ON tt.TAXCOMPONENTTABLE_IN = tctIndia.RECID AND tctIndia.DATAAREAID = tt.DATAAREAID
	INNER JOIN [ax].RETAILCHANNELTABLE rct on rct.INVENTLOCATIONDATAAREAID = tctIndia.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILDISCOUNTPRICEGROUPSVIEW]...';


GO

CREATE VIEW [crt].[RETAILDISCOUNTPRICEGROUPSVIEW] AS
(
    SELECT
        [rdpg].[RECID],
        [rdpg].[PRICEDISCGROUP] AS 'PRICEGROUP',
        [pdg].[GROUPID],
		[pdg].[RETAILPRICINGPRIORITYNUMBER],
        [rdpg].[OFFERID],
		[pdg].[DATAAREAID]
    FROM [ax].PRICEDISCGROUP pdg
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg ON rdpg.PRICEDISCGROUP = pdg.RECID AND rdpg.DATAAREAID = pdg.DATAAREAID
)
GO
PRINT N'Creating [crt].[BUTTONGRIDSVIEW]...';


GO

CREATE VIEW [crt].[BUTTONGRIDSVIEW] AS
(
    SELECT
        bg.[BUTTONGRIDID],
        bg.[DEFAULTCOLOR],
        bg.[NAME],
		bg.[RECID],
        bg.[SPACEBETWEENBUTTONS]
    FROM [ax].[RETAILBUTTONGRID] bg
)
GO
PRINT N'Creating [crt].[BARCODEMASKSVIEW]...';


GO

CREATE VIEW [crt].[BARCODEMASKSVIEW] AS
(
    SELECT
        LEN(rbmt.[PREFIX]) AS LENGTH,
        rbmt.[RECID],
        rbmt.[DESCRIPTION],
        rbmt.[MASK],
        rbmt.[MASKID],
        rbmt.[PREFIX],
        rbmt.[SYMBOLOGY],
        rbmt.[TYPE],
		rbmt.[DATAAREAID]
    FROM [ax].RETAILBARCODEMASKTABLE rbmt
)
GO
PRINT N'Creating [crt].[GETCUSTOMERGROUPSVIEW]...';


GO

CREATE VIEW [crt].[GETCUSTOMERGROUPSVIEW] AS
(
    SELECT
        cg.[RECID],
        cg.[NAME],
        cg.[CUSTGROUP],
		cg.[DATAAREAID]
    FROM [ax].CUSTGROUP cg
)
GO
PRINT N'Creating [crt].[RECEIPTMASKVIEW]...';


GO

CREATE VIEW [crt].[RECEIPTMASKVIEW] AS
(
    SELECT
        rrm.[FUNCPROFILEID],
        rrm.[RECEIPTTRANSTYPE],
        rrm.[MASK],
        rrm.[ISINDEPENDENT]
    FROM [ax].RETAILRECEIPTMASKS rrm
)
GO
PRINT N'Creating [crt].[DROPANDDECLARETENDERSVIEW]...';


GO

CREATE VIEW [crt].[DROPANDDECLARETENDERSVIEW] AS
(
	SELECT 
		rttdt.TRANSACTIONID,
		rttdt.LINENUM,
		rttdt.AMOUNTTENDERED AS AMOUNT,
		rttdt.AMOUNTCUR AS FOREIGNCURRENCYAMOUNT,
		rttdt.CURRENCY,
		NULL AS BANKBAGNUMBER,
		rttdt.EXCHRATEMST,
		rttdt.AMOUNTMST,
		rttdt.TENDERTYPE,
		rttdt.EXCHRATE
	FROM ax.[RETAILTRANSACTIONTENDERDECLARATIONTRANS] rttdt
	UNION
	SELECT 
		rtbtt.TRANSACTIONID,
		rtbtt.LINENUM,
		rtbtt.AMOUNTTENDERED AS AMOUNT,
		rtbtt.AMOUNTCUR AS FOREIGNCURRENCYAMOUNT,
		rtbtt.CURRENCY,
		rtbtt.BANKBAGNO AS BANKBAGNUMBER,
		rtbtt.EXCHRATEMST,
		rtbtt.AMOUNTMST,
		rtbtt.TENDERTYPE,
		rtbtt.EXCHRATE
	FROM ax.[RETAILTRANSACTIONBANKEDTENDERTRANS] rtbtt
	UNION
	SELECT
		rtstt.TRANSACTIONID,
		rtstt.LINENUM,
		rtstt.AMOUNTTENDERED AS AMOUNT,
		rtstt.AMOUNTCUR AS FOREIGNCURRENCYAMOUNT,
		rtstt.CURRENCY,
		NULL AS BANKBAGNUMBER,
		rtstt.EXCHRATEMST,
		rtstt.AMOUNTMST,
		rtstt.TENDERTYPE,
		rtstt.EXCHRATE
	FROM ax.[RETAILTRANSACTIONSAFETENDERTRANS] rtstt
)
GO
PRINT N'Creating [crt].[PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW]...';


GO

CREATE VIEW [crt].[PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW] WITH SCHEMABINDING AS
(
    SELECT
        rprct.ORIGINID AS CHANNEL,
		rpcio.CATALOG,
		COUNT_BIG(*) AS ANCESTORCOUNT
        FROM ax.RETAILPUBCATALOGINTERNALORG rpcio
	        JOIN ax.RETAILPUBINTORGINHERITANCEEXPLODED rpioie
				ON rpioie.ANCESTORINTERNALORG = rpcio.INTERNALORGANIZATION
			JOIN ax.RETAILPUBRETAILCHANNELTABLE rprct
				ON rprct.INTERNALORGANIZATION = rpioie.INTERNALORGANIZATION
            JOIN ax.RETAILPUBCATALOG rpc 
                ON rpc.ORIGIN = rpcio.CATALOG
        WHERE rpc.VALIDFROMDATETIME BETWEEN rpioie.VALIDFROM AND rpioie.VALIDTO -- VALIDFROMDATETIME is in UTC
		GROUP BY rprct.ORIGINID, rpcio.CATALOG
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONSALESTRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONSALESTRANSVIEW] AS
(
    SELECT
        ST.TRANSACTIONID AS 'TRANSACTIONID'
        ,ST.LINENUM AS 'LINENUM'
        ,ST.ITEMID AS 'ITEMID'
        ,ST.BARCODE AS 'BARCODE'
        ,ST.INVENTSERIALID
        ,(ST.QTY * -1.0) AS 'QUANTITY'
        ,ST.PRICE AS 'PRICE'
        ,ST.UNIT AS 'UNITOFMEASURESYMBOL'
        ,(ST.NETAMOUNT * -1.0) AS 'NETAMOUNT'
        ,(ST.NETAMOUNTINCLTAX * -1.0) AS 'NETAMOUNTINCLTAX'
        ,ST.TAXITEMGROUP AS 'ITEMTAXGROUPID'
        ,ST.TAXGROUP AS 'SALESTAXGROUPID'
        ,(ST.TAXAMOUNT * -1.0) AS 'TAXAMOUNT'
        ,ST.DLVMODE AS 'DELIVERYMODE'
        ,IDC.INVENTDIMID AS 'INVENTORYDIMENSIONID'
        ,ST.INVENTLOCATIONID AS 'INVENTLOCATIONID'
        ,ST.LOGISTICSPOSTALADDRESS AS 'LOGISTICSPOSTALADDRESS'
        ,ST.FULFILLMENTSTOREID AS 'FULFILLMENTSTOREID'
        ,(ST.RETURNQTY * -1.0) AS 'RETURNQTY'
        ,ST.RETURNNOSALE AS 'RETURNNOSALE'
        ,ST.RETURNTRANSACTIONID AS 'RETURNTRANSACTIONID'
        ,ST.RETURNLINENUM AS 'RETURNLINENUM'
        ,ST.RETURNSTORE AS 'RETURNSTORE'
        ,ST.RETURNTERMINALID AS 'RETURNTERMINALID'
        ,ST.DISCAMOUNT AS 'DISCOUNTAMOUNT'
        ,ST.TOTALDISCAMOUNT AS 'TOTALDISCOUNTAMOUNT'
        ,ST.TOTALDISCPCT AS 'TOTALDISCOUNTPERCENTAGE'
        ,ST.LINEDSCAMOUNT AS 'LINEDISCOUNTAMOUNT'
        ,ST.GIFTCARD AS 'GIFTCARD'
        ,ST.COMMENT AS 'COMMENT'
        ,ST.ORIGINALPRICE AS 'ORIGINALPRICE'
        ,ST.PERIODICDISCAMOUNT AS 'PERIODICDISCOUNTAMOUNT'
        ,ST.PERIODICPERCENTAGEDISCOUNT 
        ,ST.LINEMANUALDISCOUNTAMOUNT
        ,ST.LINEMANUALDISCOUNTPERCENTAGE
        ,ST.RECEIPTDATEREQUESTED AS 'REQUESTEDDELIVERYDATE'           
        ,ST.ELECTRONICDELIVERYEMAIL
        ,COALESCE(CAST(NULLIF(ST.LISTINGID, '') AS BIGINT), IDC.DISTINCTPRODUCTVARIANT, IT.PRODUCT, 0)  AS 'LISTINGID'
        ,ST.TRANSACTIONSTATUS as 'TRANSACTIONSTATUS'
        ,DATEADD(ss, ST.TRANSTIME, CAST(ST.TRANSDATE as DATETIME)) as 'SALESDATETIME'
    FROM [ax].RETAILTRANSACTIONSALESTRANS ST
    LEFT OUTER JOIN [ax].INVENTTABLE IT ON ST.LISTINGID = '' AND IT.DATAAREAID = ST.DATAAREAID AND ST.VARIANTID = '' AND IT.ITEMID = ST.ITEMID
    LEFT OUTER JOIN [ax].INVENTDIMCOMBINATION IDC ON ST.ITEMID = IDC.ITEMID AND ST.VARIANTID <> '' AND ST.VARIANTID = IDC.RETAILVARIANTID AND ST.DATAAREAID = IDC.DATAAREAID
)
GO
PRINT N'Creating [crt].[PRODUCTRULESVIEW]...';


GO

CREATE VIEW [crt].[PRODUCTRULESVIEW] AS
(
    SELECT
        it.PRODUCT AS 'PRODUCTID',
        rit.BLOCKEDONPOS,
        rit.DATEBLOCKED,
        rit.DATETOACTIVATEITEM,
        rit.DATETOBEBLOCKED,
        rit.KEYINGINPRICE,
        rit.KEYINGINQTY,
        rit.MUSTKEYINCOMMENT,
        rit.QTYBECOMESNEGATIVE,
        rit.SCALEITEM,
        rit.ZEROPRICEVALID,
        CASE
            WHEN siv.PRODUCTID IS NULL THEN 0
            ELSE 1
        END AS ISSERIALIZED,
        COALESCE(siv.ISSALESPROCESSACTIVATED, 0) AS ISACTIVEINSALESPROCESS,
        itm.UNITID AS 'DEFAULTUNITOFMEASURE',
        rit.DATAAREAID
    FROM [ax].[RETAILINVENTTABLE] rit
    INNER JOIN [ax].INVENTTABLE it ON it.ITEMID = rit.ITEMID AND it.DATAAREAID = rit.DATAAREAID
    LEFT OUTER JOIN [ax].[INVENTTABLEMODULE] itm ON itm.ITEMID = rit.ITEMID AND itm.MODULETYPE = 2 AND itm.DATAAREAID = rit.DATAAREAID -- 2 = Sales
    LEFT OUTER JOIN [crt].SERIALIZEDITEMSVIEW siv ON siv.ITEMID = rit.ITEMID AND siv.ITEMDATAAREAID = rit.DATAAREAID
)
GO
PRINT N'Creating [crt].[CHANNELCATEGORYHIERARCHYVIEW]...';


GO

CREATE VIEW [crt].[CHANNELCATEGORYHIERARCHYVIEW]
WITH SCHEMABINDING AS
(
    SELECT
        rpec.[PARENTCATEGORY],
        rpec.[NAME],
        rpec.[ORIGINID] AS RECID,
        rpct.[ORIGINID] AS CHANNELID
    FROM [ax].RETAILPUBRETAILCHANNELTABLE rpct
    INNER JOIN [ax].RETAILPUBECORESCATEGORY rpec ON rpct.[CATEGORYHIERARCHY] = rpec.[CATEGORYHIERARCHY] AND rpct.[ORIGINID] = rpec.[CHANNEL]
)
GO
PRINT N'Creating [crt].[PUBCATALOGCHANNELVIEW]...';


GO

-- [Deprecated] This view is not used since AX 7 RTW.

CREATE VIEW [crt].[PUBCATALOGCHANNELVIEW] WITH SCHEMABINDING AS
(
    SELECT
        rprct.ORIGINID AS CHANNEL,
        rpcio.CATALOG,
        COUNT_BIG(*) AS ANCESTORCOUNT
    FROM ax.RETAILPUBCATALOGINTERNALORG rpcio
    JOIN ax.RETAILPUBCATALOG rpc ON rpc.ORIGIN = rpcio.CATALOG
    JOIN ax.RETAILINTERNALORGANIZATION rio ON rio.RECID = rpcio.INTERNALORGANIZATION
    JOIN ax.OMEXPLODEDORGANIZATIONSECURITYGRAPH omeosg ON omeosg.ANCESTORORGANIZATION = rio.INTERNALORGANIZATION
    JOIN ax.OMHIERARCHYPURPOSE omhp ON omhp.HIERARCHYTYPE = omeosg.OMHIERARCHYTYPE AND omhp.HIERARCHYPURPOSE = 9 /* RetailAssortment */ AND omhp.ISDEFAULT = 1
    JOIN ax.RETAILPUBRETAILCHANNELTABLE rprct ON rprct.OMOPERATINGUNITID = omeosg.ORGANIZATION
    WHERE rpc.VALIDFROMDATETIME BETWEEN omeosg.VALIDFROM AND omeosg.VALIDTO -- VALIDFROMDATETIME is in UTC
    GROUP BY rprct.ORIGINID, rpcio.CATALOG
)
GO
PRINT N'Creating [crt].[INVENTITEMBARCODESVIEW]...';


GO

CREATE VIEW [crt].[INVENTITEMBARCODESVIEW] AS
(
    SELECT
        IIB.[RECID],
        IIB.[BARCODESETUPID],
        CAST(IIB.[BLOCKED] AS BIT) AS BLOCKED,
        IIB.[DESCRIPTION],
        CASE
            WHEN IIB.[RETAILVARIANTID] = '' THEN NULL -- This is needed to replace 'AllBlank' values with NULL
            ELSE IIB.[INVENTDIMID]
        END AS INVENTDIMID,
        IIB.[ITEMBARCODE],
        IIB.[ITEMID],
        IIB.[QTY],
        IIB.[RETAILSHOWFORITEM],
        IIB.[RETAILVARIANTID],
        IIB.[UNITID],
        IIB.[USEFORINPUT],
        IIB.[USEFORPRINTING],
        IIB.[DATAAREAID]
    FROM [ax].INVENTITEMBARCODE IIB
)
GO
PRINT N'Creating [crt].[CHANNELLANGUAGESVIEW]...';


GO

CREATE VIEW [crt].[CHANNELLANGUAGESVIEW] AS
(
    -- Select for online channel store configurations only.
    -- Online channels support multiple languages.
    SELECT
        rprcl.ISDEFAULT,
        rprcl.ONLINECHANNEL AS CHANNEL,
        rprcl.LANGUAGEID,
        0 AS [PRIORITY]
    FROM [ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES] rprcl

    UNION
    
    SELECT
        1 AS ISDEFAULT, /* Store's language always default, if defined, of course. */ 
        rst.RECID AS CHANNEL,
        rst.CULTURENAME AS LANGUAGEID,
        1 AS [PRIORITY]
    FROM [ax].[RETAILSTORETABLE] rst 
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON rct.RECID = rst.RECID 
    INNER JOIN [ax].COMPANYINFO ci ON ci.DATAAREA = rct.INVENTLOCATIONDATAAREAID 
    LEFT OUTER JOIN [ax].DIRPARTYTABLE dp ON dp.RECID = ci.RECID
    WHERE ISNULL(rst.CULTURENAME, '') != '' 
    
    UNION
    
    SELECT        
        CASE WHEN ISNULL(rst.CULTURENAME, '') = ''
            THEN 1
            ELSE 0
        END AS ISDEFAULT, /* Language set on the store's legal entity is not a default language, but still needed for non-online stores' default product attributes display. */ 
        rst.RECID AS CHANNEL, 
        CASE WHEN ISNULL(dp.LANGUAGEID, '') != '' 
            THEN dp.LANGUAGEID 
            ELSE 'en-us' /* return 'en-us' just in case if legal entity's locale is not set */
        END AS LANGUAGEID,
        CASE WHEN ISNULL(dp.LANGUAGEID, '') != '' 
            THEN 2
            ELSE 3
        END AS [PRIORITY]
    FROM [ax].[RETAILSTORETABLE] rst 
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON rct.RECID = rst.RECID 
    INNER JOIN [ax].COMPANYINFO ci ON ci.DATAAREA = rct.INVENTLOCATIONDATAAREAID 
    LEFT OUTER JOIN [ax].DIRPARTYTABLE dp ON dp.RECID = ci.RECID
    WHERE LANGUAGEID != ISNULL(rst.CULTURENAME, '')
)
GO
PRINT N'Creating [crt].[EMPLOYEESVIEW]...';


GO

CREATE VIEW [crt].EMPLOYEESVIEW AS
(
    SELECT
        rst.STAFFID,
        rst.NAMEONRECEIPT,
        rst.PASSWORDLASTCHANGEDDATETIME,
        dpt.NAME,
        rmr.RESOURCEURL AS IMAGE,
        rst.CULTURENAME,
        'data:image/jpeg;base64,' + CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)') AS [DEFAULTIMAGE]
    FROM  [ax].RETAILSTAFFTABLE rst
    INNER JOIN [ax].HCMWORKER worker ON [rst].STAFFID = [worker].PERSONNELNUMBER
    INNER JOIN [ax].DIRPARTYTABLE dpt ON [worker].PERSON = [dpt].RECID
    LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer ON [worker].RECID = [rmamer].MASTERENTITYRECID AND [rmamer].ISDEFAULT = 1 AND [rmamer].MASTERENTITYTYPE = 15  -- MasterEntityType = Employee.
    LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON [rmr].RESOURCEID = [rmamer].MEDIARESOURCEID
)
GO
PRINT N'Creating [crt].[CHANNELCATEGORYHIERARCHYIMAGEVIEW]...';


GO

CREATE VIEW [crt].[CHANNELCATEGORYHIERARCHYIMAGEVIEW]
WITH SCHEMABINDING AS
(
    SELECT
        rpec.[PARENTCATEGORY],
        rpec.[NAME],
        rpec.[ORIGINID] AS RECID,
        rpct.[ORIGINID] AS CHANNELID,
		CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)') AS [OFFLINEIMAGE]
    FROM [ax].RETAILPUBRETAILCHANNELTABLE rpct
    INNER JOIN [ax].RETAILPUBECORESCATEGORY rpec ON rpct.[CATEGORYHIERARCHY] = rpec.[CATEGORYHIERARCHY] AND rpct.[ORIGINID] = rpec.[CHANNEL]
	LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer on rpec.[ORIGINID] = rmamer.[MASTERENTITYRECID] AND rmamer.[ISDEFAULT] = 1
	LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr on rmamer.[MEDIARESOURCEID] = rmr.[RESOURCEID]
)
GO
PRINT N'Creating [crt].[CUSTOMERSVIEW]...';


GO

CREATE VIEW [crt].[CUSTOMERSVIEW] AS
(
    SELECT
        ct.ACCOUNTNUM AS ACCOUNTNUMBER,
        ct.RECID,
        ct.CREATEDDATETIME,
        dpt.RECID AS PARTY,
        dpt.NAME,
        dpn.RECID AS PERSONNAMEID,
        dpn.FIRSTNAME,
        dpn.MIDDLENAME,
        dpn.LASTNAME,
        dpt.PARTYNUMBER,
        CASE
            WHEN dpn.RECID IS NULL THEN 2 -- Organization
            ELSE 1 -- Customer
        END AS CUSTOMERTYPE,
        ceap.LOCATOR PHONE,
        ceap.LOCATOREXTENSION PHONEEXT,
        ceap.RECORDID PHONERECORDID,
        ceae.LOCATOR EMAIL,
        ceae.RECORDID EMAILRECORDID,
        ceau.LOCATOR URL,
        ceau.RECORDID URLRECORDID,
        ceacp.LOCATOR CELLPHONE,
        ceacp.RECORDID CELLPHONERECORDID,
        rct.RECEIPTEMAIL RECEIPTEMAIL,
        dpt.LANGUAGEID AS LANGUAGE,
        ct.DATAAREAID,
        rct.RECEIPTOPTION as RECEIPTSETTINGS,
        ct.CURRENCY,
        ct.INVOICEACCOUNT,
        ct.CREDITMAX,
        ct.MARKUPGROUP,
        ct.PRICEGROUP,
        ct.CUSTGROUP,
        ct.BLOCKED,
        ct.ORGID,
        ct.MULTILINEDISC,
        ct.USEPURCHREQUEST,
        ct.LINEDISC,
        ct.INCLTAX,
        ct.ENDDISC,
        ct.TAXGROUP,
        ct.CREDITRATING,
        ct.TAXLICENSENUM,
        ct.VATNUM,         
        CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)') AS OFFLINEIMAGE,
        ct.IDENTIFICATIONNUMBER,
        rmr.RESOURCEURL AS IMAGE,
        0 AS ISASYNCCUSTOMER
/* BEGIN SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this)
              , isnull(rcp.EMAILOPTIN, 0) as EMAILOPTIN
END SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this) */
    FROM [ax].CUSTTABLE ct
    JOIN [ax].DIRPARTYTABLE dpt ON ct.PARTY = dpt.RECID
    LEFT OUTER JOIN ax.RETAILCUSTTABLE rct ON ct.ACCOUNTNUM = rct.ACCOUNTNUM AND ct.DATAAREAID = rct.DATAAREAID
    LEFT OUTER JOIN ax.DIRPERSONNAME dpn ON dpt.RECID = dpn.PERSON AND (GETUTCDATE() BETWEEN dpn.VALIDFROM AND dpn.VALIDTO)
    -- phone
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceap ON dpt.RECID = ceap.DIRPARTYRECORDID
                AND ceap.METHODYTPE = 1 AND ceap.ISPRIMARY = 1 AND ceap.PARENTLOCATION = 0
    -- email
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceae ON dpt.RECID = ceae.DIRPARTYRECORDID
                AND ceae.METHODYTPE = 2 AND ceae.ISPRIMARY = 1 AND ceae.PARENTLOCATION = 0
    -- url
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceau ON dpt.RECID = ceau.DIRPARTYRECORDID
                AND ceau.METHODYTPE = 3 AND ceau.ISPRIMARY = 1 AND ceau.PARENTLOCATION = 0
    -- cellphone
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceacp ON dpt.RECID = ceacp.DIRPARTYRECORDID
                AND ceacp.METHODYTPE = 1
                AND ceacp.ISPRIMARY = 0
                AND ceacp.ISMOBILEPHONE = 1
    LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer ON ct.RECID = rmamer.MASTERENTITYRECID 
               AND rmamer.ISDEFAULT = 1 AND rmamer.MASTERENTITYTYPE = 16  -- MasterEntityType = Customer.
    LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON rmamer.MEDIARESOURCEID = rmr.RESOURCEID
/* BEGIN SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this)
    LEFT OUTER JOIN [ax].RETAILCUSTPREFERENCE rcp ON ct.ACCOUNTNUM = rcp.ACCOUNTNUM
                   AND ct.DATAAREAID = rcp.DATAAREAID
END SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this) */

   UNION ALL

   SELECT
        rac.CUSTACCOUNTASYNC AS ACCOUNTNUMBER,
        0 AS RECID,
        0 AS CREATEDDATETIME,
        0 AS  PARTY,
        rac.CUSTNAME AS NAME,
        0 AS PERSONNAMEID,
        rac.FIRSTNAME,
        rac.MIDDLENAME,
        rac.LASTNAME,
        '' AS PARTYNUMBER,
        rac.RELATIONSHIPTYPE AS CUSTOMERTYPE,
        rac.PHONE,
        rac.PHONEEXTENSION AS PHONEEXT,
        '' AS PHONERECORDID,
        rac.EMAIL,
        null AS EMAILRECORDID,
        rac.URL,
        '' AS URLRECORDID,
        rac.CELLULARPHONE AS CELLPHONE,
        '' AS CELLPHONERECORDID,
        rac.RECEIPTEMAIL AS  RECEIPTEMAIL,
        rac.LANGUAGEID AS LANGUAGE,
        rac.DATAAREAID,
        rac.RECEIPTOPTION AS RECEIPTSETTINGS,
        rac.CURRENCY,
        rac.INVOICEACCOUNT,
        rac.CREDITMAX,
        '' AS MARKUPGROUP,
        rac.PRICEGROUP,
        rac.CUSTGROUP,
        rac.BLOCKED,
        rac.ORGANIZATIONID AS ORGID,
        rac.MULTILINEDISC AS MULTILINEDISC,
        rac.USEPURCHREQUEST,
        rac.LINEDISC,
        0 AS INCLTAX,
        rac.ENDDISC,
        rac.TAXGROUP,
        '' AS CREDITRATING,
        '' AS TAXLICENSENUM,
        rac.VATNUM,         
        null AS OFFLINEIMAGE,
        rac.IDENTIFICATIONNUMBER,
        null AS IMAGE,
        1 AS ISASYNCCUSTOMER
/* BEGIN SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this)
              , 0 as EMAILOPTIN
END SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this) */
   FROM [ax].RETAILASYNCCUSTOMER rac
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONSALESTRANSQTYSUMVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONSALESTRANSQTYSUMVIEW] AS
(
    SELECT
        rtst.ITEMID,
        idc.INVENTDIMID AS VARIANTINVENTDIMID,
        rtst.INVENTLOCATIONID,
        SUM(rtst.QTY) AS QUANTITY,
        rtst.DATAAREAID
    FROM [ax].RETAILTRANSACTIONSALESTRANS rtst
    INNER JOIN [ax].RETAILINVENTAVAILABILITYPARAMETERS riap ON riap.[KEY] = 0
    LEFT JOIN [ax].INVENTDIMCOMBINATION idc ON idc.RETAILVARIANTID = rtst.VARIANTID AND idc.DATAAREAID = rtst.DATAAREAID
    LEFT JOIN [ax].RETAILTRANSACTIONORDERSTATUS rtos
        ON rtos.STORE = rtst.STORE
        AND rtos.TERMINAL = rtst.TERMINALID
        AND rtos.TRANSACTIONID = rtst.TRANSACTIONID
    WHERE
        rtst.TRANSACTIONSTATUS != 1         -- exclude voided lines
        AND (
            -- Sales order creation not yet confirmed from AX
            rtos.LASTINVENTTRANS IS NULL

            -- Sales order creation confirmed but AX availability calculated before sales order creation
            OR riap.LASTINVENTTRANS < rtos.LASTINVENTTRANS
        )
        AND rtst.TRANSACTIONID NOT IN (
            -- When an online order is picked up in POS, a new customer order transaction is created with pick up quantity. 
            -- The orginal transaction has already accounted for the quantity so we need to exclude
            -- customer order pick up transaction ids for transactions that originated in online channel
            -- Join logic: The online order entry in RETAILTRANSACTIONTABLE has TRANSACTIONID (t1), SALESID is empty
            -- The customer order entry in RETAILTRANSACTIONTABLE has SALESID (s1) and TRANSACTION is is different because it is a new transaction
            -- RETAILTRANSACTIONORDERSTATUS links t1 and s1. The left join with RETAILTRANSACTIONORDERSTATUS gets all online orders 
            -- and the inner join links the correnponding customer orders to it.
            SELECT rtt2.TRANSACTIONID
            FROM [ax].RETAILTRANSACTIONTABLE rtt1	
            LEFT JOIN [ax].RETAILTRANSACTIONORDERSTATUS rtos  
                ON rtos.TRANSACTIONID = rtt1.TRANSACTIONID
            INNER JOIN [ax].RETAILTRANSACTIONTABLE rtt2
                ON (rtos.TRANSACTIONID = rtt1.TRANSACTIONID AND rtos.SALESID = rtt2.SALESORDERID)
        )
    GROUP BY rtst.DATAAREAID, rtst.ITEMID, idc.INVENTDIMID, rtst.INVENTLOCATIONID
)
GO
PRINT N'Creating [crt].[STORAGELOOKUPVIEW]...';


GO

CREATE VIEW [crt].[STORAGELOOKUPVIEW] AS
(
    SELECT
        dp.[NAME],
        rctx.[CHANNEL] AS 'CHANNELID',
        om.[OMOPERATINGUNITNUMBER] AS 'OPERATINGUNITNUMBER',
        CASE
            WHEN ([rpct].RECID IS NULL) THEN 0
            ELSE 1
        END AS 'ISPUBLISHED',
        CASE
            WHEN (db.[DATABASE] = (SELECT DB_NAME())) THEN 1
            ELSE 0
        END AS 'ISLOCAL',
        db.NAME AS [STORAGEID]
    FROM ax.RETAILCHANNELTABLEEXT rctx
    INNER JOIN [ax].[RETAILCONNDATABASEPROFILE] db ON db.RECID = rctx.LIVECHANNELDATABASE
    LEFT OUTER JOIN [ax].[RETAILCHANNELTABLE] rct ON rct.RECID = rctx.CHANNEL -- Left join is required for channels published to other DB.
    LEFT OUTER JOIN [ax].[OMOPERATINGUNIT] om ON om.RECID = rct.OMOPERATINGUNITID
    LEFT OUTER JOIN [ax].[DIRPARTYTABLE] dp ON dp.RECID = om.RECID
    LEFT OUTER JOIN [ax].[RETAILPUBRETAILCHANNELTABLE] rpct ON rpct.ORIGINID = rctx.CHANNEL
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONSALESAMOUNTSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONSALESAMOUNTSVIEW] AS
(
    SELECT
        (CASE WHEN L.QTY < 0.00 THEN L.NETAMOUNT ELSE 0 END) AS SALESAMOUNT,
        (CASE WHEN L.QTY > 0.00 THEN L.NETAMOUNT ELSE 0 END) AS RETURNAMOUNT,
		(CASE WHEN L.QTY < 0.00 THEN L.TAXAMOUNT ELSE 0 END) AS SALESTAXAMOUNT,
		(CASE WHEN L.QTY > 0.00 THEN L.TAXAMOUNT ELSE 0 END) AS RETURNTAXAMOUNT,
        L.TAXAMOUNT,
        L.DISCAMOUNT,
        H.CHANNEL,
        H.BATCHID,
        H.BATCHTERMINALID,
        H.ENTRYSTATUS,
		L.TRANSACTIONSTATUS,
        H.TYPE,
        H.TRANSACTIONID
    FROM [ax].[RETAILTRANSACTIONSALESTRANS] AS L 
    INNER JOIN [ax].[RETAILTRANSACTIONTABLE] AS H 
        ON H.TRANSACTIONID = L.TRANSACTIONID 
        AND H.CHANNEL = L.CHANNEL
        AND H.STORE = L.STORE 
        AND H.TERMINAL = L.TERMINALID
        AND H.DATAAREAID = L.DATAAREAID 
)
GO
PRINT N'Creating [crt].[EMPLOYEEPASSWORDSVIEW]...';


GO

CREATE VIEW [crt].EMPLOYEEPASSWORDSVIEW AS
(
    SELECT DISTINCT -- If an employee has multiple associated addresses, we return duplicate rows.
        StaffTable.STAFFID,
        StaffTable.PASSWORDSALT,
        StaffTable.PASSWORDHASHALGORITHM,
        StoreTable.RECID AS CHANNELID
    FROM [ax].RETAILSTAFFTABLE AS StaffTable
    INNER JOIN [ax].HCMWORKER AS HcmWorker ON HcmWorker.PERSONNELNUMBER = StaffTable.STAFFID
    INNER JOIN [ax].DIRADDRESSBOOKPARTY AS DirAddressBookParty ON DirAddressBookParty.PARTY = HcmWorker.PERSON
    INNER JOIN [ax].RETAILSTOREADDRESSBOOK AS AddressBook ON addressbook.ADDRESSBOOK = DirAddressBookParty.ADDRESSBOOK AND AddressBook.ADDRESSBOOKTYPE = 1  -- Fetch only employee addressBook type
    INNER JOIN [ax].RETAILSTORETABLE AS StoreTable ON AddressBook.STORERECID = StoreTable.RECID
)
GO
PRINT N'Creating [crt].[OFFLINELATESTDATABASEPARTITIONSVIEW]...';


GO

CREATE VIEW [crt].[OFFLINELATESTDATABASEPARTITIONSVIEW] AS
(
SELECT odp.[RECID], 
       odm.[DATABASETYPE], 
       odm.[VERSION],
	   odm.[CREATEDDATETIME], 
       odm.[CHANNELID], 
       odp.[NUMBER], 
       odp.[URL], 
       odp.[FILEPATH],
       odm.[HASH]   
FROM [crt].[OFFLINEDATABASEMETADATA] odm
JOIN (SELECT [DATABASETYPE], [CHANNELID], MAX([VERSION]) [VERSION] 
    FROM [crt].[OFFLINEDATABASEMETADATA] 
    GROUP BY [DATABASETYPE], [CHANNELID]) odmaxver 
ON [odm].[DATABASETYPE] = [odmaxver].[DATABASETYPE] AND
   [odm].[VERSION] = [odmaxver].[VERSION] AND 
   [odm].[CHANNELID] = [odmaxver].[CHANNELID]
LEFT JOIN [crt].[OFFLINEDATABASEPARTITIONS] odp
ON odm.RECID = odp.[DATABASEVERSIONID]
)
GO
PRINT N'Creating [crt].[CATEGORYNAMETRANSLATIONSVIEW]...';


GO

CREATE VIEW [crt].[CATEGORYNAMETRANSLATIONSVIEW] AS
(
    SELECT
        rpect.[CHANNEL],
        rpect.[CATEGORY],
        rpect.[FRIENDLYNAME],
        rpect.[LANGUAGEID]
    FROM [ax].RETAILPUBECORESCATEGORYTRANSLATION rpect
)
GO
PRINT N'Creating [crt].[INFOCODEVIEW]...';


GO

CREATE VIEW [crt].[INFOCODEVIEW] AS
(
	SELECT
        rict.[INFOCODEID] AS REASONCODEID,
        rict.[RECID],
        rict.[ONCEPERTRANSACTION],
        rict.[PRINTPROMPTONRECEIPT],
        rict.[PRINTINPUTONRECEIPT],
        rict.[PRINTINPUTNAMEONRECEIPT],
        rict.[INPUTTYPE],
        rict.[MINIMUMVALUE],
        rict.[MAXIMUMVALUE],
        rict.[MINIMUMLENGTH],
        rict.[MAXIMUMLENGTH],
        rict.[INPUTREQUIRED],
        rict.[LINKEDINFOCODEID] AS LINKEDREASONCODEID,
        rict.[RANDOMFACTOR],
        rict.[RETAILUSEINFOCODE] AS RETAILUSEREASONCODE,
		rc.[GROUPID],
		rc.[PRIORITY],
		rc.[DATAAREAID]
	FROM
	(
		SELECT
			rict.INFOCODEID,
			rict.INFOCODEID AS 'GROUPID',
			rict.DATAAREAID,
			0  AS 'PRIORITY'
		FROM [ax].RETAILINFOCODETABLE ric
		INNER JOIN [ax].[RETAILINFOCODETABLE] rict
			ON rict.[INFOCODEID] = ric.[INFOCODEID] AND rict.[DATAAREAID] = ric.[DATAAREAID]

		UNION

		SELECT
			rict.[INFOCODEID],
			ricgs.[GROUPID] as 'GROUPID',
			ricgs.[DATAAREAID],
			ricgs.[PRIORITY] as 'PRIORITY'
		FROM [ax].[RETAILINFOCODE] ric
		INNER JOIN [ax].[RETAILINFOCODEGROUP] rig
			ON ric.[INFOCODEID] = rig.[GROUPID] AND ric.[DATAAREAID] = rig.[DATAAREAID]
		INNER JOIN [ax].[RETAILINFOCODEGROUPSPECIFIC] ricgs
			ON ricgs.[GROUPID] = rig.[GROUPID] AND ricgs.[DATAAREAID] = rig.[DATAAREAID]
		LEFT JOIN [ax].[RETAILINFOCODETABLE] rict
			ON rict.[INFOCODEID] = ricgs.[INFOCODEID] AND rict.[DATAAREAID] = ricgs.[DATAAREAID]
	) rc

	LEFT JOIN [ax].[RETAILINFOCODETABLE] rict 
		ON rc.[INFOCODEID] = rict.[INFOCODEID] AND rc.[DATAAREAID] = rict.[DATAAREAID]
)
GO
PRINT N'Creating [crt].[BARCODEMASKSEGMENTSVIEW]...';


GO

CREATE VIEW [crt].[BARCODEMASKSEGMENTSVIEW] AS
(
    SELECT
        rbms.[RECID],
        rbms.[DECIMALS],
        rbms.[LENGTH],
        rbms.[MASKID],
        rbms.[SEGMENTNUM],
        rbms.[TYPE],
		rbms.[DATAAREAID]
    FROM [ax].RETAILBARCODEMASKSEGMENT rbms
)
GO
PRINT N'Creating [crt].[SALESTAXGROUPSVIEW]...';


GO

CREATE VIEW [crt].[SALESTAXGROUPSVIEW] AS
(
    SELECT RECID,
		   TAXGROUP, 
		   TAXGROUPNAME ,
		   DATAAREAID
		   FROM [ax].TAXGROUPHEADING 
)
GO
PRINT N'Creating [crt].[CHANNELPRICEGROUPSVIEW]...';


GO

CREATE VIEW [crt].[CHANNELPRICEGROUPSVIEW] AS
(
    SELECT
        [rcpg].[RECID],
        [rcpg].[PRICEGROUP],
        [pdg].[GROUPID],
		[pdg].[RETAILPRICINGPRIORITYNUMBER],
        [rcpg].[RETAILCHANNEL] AS CHANNELID
    FROM [ax].PRICEDISCGROUP pdg
    INNER JOIN [ax].RETAILCHANNELPRICEGROUP rcpg ON rcpg.PRICEGROUP = pdg.RECID
)
GO
PRINT N'Creating [crt].[SALESPARAMETERSVIEW]...';


GO

CREATE VIEW [crt].[SALESPARAMETERSVIEW] AS
(
    SELECT
        sp.RECID,
        sp.MARKUPHEADING,
        sp.MARKUPLINE,
        sp.DISC,
        sp.DATAAREAID
    FROM [ax].SALESPARAMETERS sp
    WHERE sp.[KEY] = 0 -- This ensures that filtering by DATAAREAID is the PK
)
GO
PRINT N'Creating [crt].[REMOTEPRODUCTASSORTMENTRULESVIEW]...';


GO
CREATE VIEW [crt].[REMOTEPRODUCTASSORTMENTRULESVIEW]
AS
(
    -- Retrieve temporarily assorted products that have been downloaded by way of virtual catalog.
    SELECT
        tap.CHANNELID As CHANNELID,
        tap.PRODUCTID AS 'PRODUCTID',
        0 AS 'VARIANTID',
        1 AS 'ISREMOTE',
        tap.VALIDFROM,
        tap.VALIDTO
    FROM [crt].TMPASSORTEDPRODUCTS tap

    UNION ALL

    -- Retrieve all the variants of temporarily assorted products that have been downloaded by way of virtual catalog.
    SELECT
        tap.CHANNELID AS CHANNELID,
        tap.PRODUCTID AS 'PRODUCTID',
        pv.RECID AS 'VARIANTID',
        1 AS 'ISREMOTE',
        tap.VALIDFROM,
        tap.VALIDTO
    FROM [crt].TMPASSORTEDPRODUCTS tap  
    INNER  JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON pv.PRODUCTMASTER = tap.PRODUCTID
)
GO
PRINT N'Creating [crt].[DROPANDDECLARETRANSACTIONSVIEW]...';


GO

CREATE VIEW [crt].[DROPANDDECLARETRANSACTIONSVIEW] AS
(
    SELECT 
        rtt.TYPE,
        rtt.TRANSACTIONID,
        rtt.OPENDRAWER,
        rtt.STORE,
        rtt.TERMINAL,
        rtt.STAFF,
        rtt.BATCHID,
        rtt.BATCHTERMINALID,
        rtt.DESCRIPTION,
        rtt.CREATEDDATETIME,
        CAST(rtt.CREATEDOFFLINE AS BIT) AS CREATEDOFFLINE
    FROM ax.[RETAILTRANSACTIONTABLE] rtt
    WHERE (rtt.TYPE = 16 OR rtt.TYPE = 17 OR rtt.TYPE = 7) -- SELECT ONLY SAFE DROP, BANK DROP AND DECLARE TENDER TRANSACTIONS
)
GO
PRINT N'Creating [crt].[RETAILTILLLAYOUTREPORTZONEVIEW]...';


GO
-- Combining reference tables to simplify selection of report zones
CREATE VIEW [crt].[RETAILTILLLAYOUTREPORTZONEVIEW] AS
(
	SELECT 
		rz.[REPORT]
		,rz.[RECID]
		,rtlzr.[LAYOUTID]
		,rtlz.[ZONEID]
		,rtlz.[ZONENAME]
		,rtlz.[ZONETYPE]
	FROM [ax].[RETAILTILLLAYOUTREPORTZONE] AS rz
	LEFT JOIN [ax].[RETAILTILLLAYOUTZONEREFERENCE] AS rtlzr on rtlzr.RECID = rz.RECID
	LEFT JOIN [ax].[RETAILTILLLAYOUTZONE] AS rtlz ON rtlz.RECID = rtlzr.ZONE
)
GO
PRINT N'Creating [crt].[LOCALIZEDSTRINGSVIEW]...';


GO

CREATE VIEW [crt].[LOCALIZEDSTRINGSVIEW] AS
(
    SELECT
        rlt.[RECID],
        rlt.[LANGUAGEID],
        rlt.[TEXTID],
        rlt.[TEXT],
		rlt.[DATAAREAID]
    FROM [ax].RETAILLANGUAGETEXT rlt
)
GO
PRINT N'Creating [crt].[DELIVERYMODESEXPLODEDVIEW]...';


GO

CREATE VIEW [crt].[DELIVERYMODESEXPLODEDVIEW] AS
(
    SELECT DISTINCT
        DM.[RECID],
        RCT.[RECID] as CHANNELID,
        DM.[CODE],
        DM.[TXT],
        DM.[MARKUPGROUP],
        DMProduct.[ITEMID],
        DMProduct.[INVENTDIM],
        DMAddress.[COUNTRYREGION],
        DMAddress.[STATE]
    FROM [ax].DLVMODE DM
    INNER JOIN [ax].RETAILDLVMODECHANNELEXPLODED DMChannel ON DM.RECID = DMChannel.DLVMODE
    INNER JOIN [ax].RETAILCHANNELTABLE RCT ON RCT.OMOPERATINGUNITID = DMChannel.OMOPERATINGUNIT
    LEFT OUTER JOIN [ax].RETAILDLVMODEPRODUCTEXPLODED DMProduct ON DM.RECID = DMProduct.DLVMODE AND RCT.INVENTLOCATIONDATAAREAID = DMProduct.DATAAREAID
    LEFT OUTER JOIN [ax].RETAILDLVMODEADDRESSEXPLODED DMAddress ON DM.RECID = DMAddress.DLVMODE AND DMProduct.DATAAREAID = DMAddress.DATAAREAID
)
GO
PRINT N'Creating [crt].[TIMEZONEVIEW]...';


GO

CREATE VIEW [crt].[TIMEZONEVIEW] AS
(
	SELECT 
		tz.STARTDATE, 
		tz.ENDDATE, 
		tz.TIMEBIAS AS TIMESPANINMINUTES,
		tz.TIMEZONEID
	FROM [ax].TIMEZONEINFO tz
)
GO
PRINT N'Creating [crt].[DEVICESVIEW]...';


GO

CREATE VIEW [crt].[DEVICESVIEW] AS
(
    SELECT
        RD.ACTIVATIONSTATUS,
        RD.DEVICEID,
        RD.MODIFIEDDATETIME,
        RD.RECID,
        RD.DESCRIPTION,
        RD.DEVICETOKENISSUETIME,
        RD.DEVICETOKENDATA,
        RD.DEVICETOKENSALT,
        RD.DEVICETOKENALGORITHM,
        RD.TYPE AS DEVICETYPERECORDID,
        RDT.TYPE,    -- The Type value from ax.RetailDeviceTypes table
        RTT.RECID AS TERMINALRECID,
        RD.TERMINAL as TERMINALID,
        RPRCT.ORIGINID AS CHANNELID,
        DPT.NAME AS CHANNELNAME,
        CAST(RD.USEINMEMORYDEVICEDATASTORAGE as bit) as USEINMEMORYDEVICEDATASTORAGE
    FROM [ax].RETAILDEVICE RD
    LEFT JOIN [ax].RETAILDEVICETYPES RDT ON RD.TYPE = RDT.RECID
    LEFT JOIN [ax].RETAILTERMINALTABLE RTT ON RD.TERMINAL = RTT.TERMINALID
    LEFT JOIN [ax].RETAILPUBRETAILCHANNELTABLE RPRCT ON RTT.STORERECID = RPRCT.ORIGINID
    LEFT JOIN [ax].DIRPARTYTABLE DPT ON DPT.RECID = RPRCT.OMOPERATINGUNITID
)
GO
PRINT N'Creating [crt].[BUTTONGRIDBUTTONSVIEW]...';


GO

CREATE VIEW [crt].[BUTTONGRIDBUTTONSVIEW] AS
(
    SELECT
        bgb.[ACTION],
        bgb.[ACTIONPROPERTY],
		bgb.[BUTTONGRIDID],
        bgb.[BACKCOLOR],
        bgb.[BORDERCOLOR],
		bgb.[COL],
		bgb.[COLSPAN],
		bgb.[DISPLAYTEXT],
		bgb.[FONTCOLOR],
		bgb.[ID],
		bgb.[ROWNUM],
		bgb.[ROWSPAN],
		bgb.[USECUSTOMLOOKANDFEEL],
		rim.[PICTURE]
    FROM [ax].[RETAILBUTTONGRIDBUTTONS] bgb
	LEFT JOIN [ax].[RETAILIMAGES] rim on bgb.[PICTUREID] = rim.[PICTUREID]
)
GO
PRINT N'Creating [crt].[RETAILTILLLAYOUTIMAGEZONEVIEW]...';


GO
-- Combining reference tables to simplify selection of image zones
CREATE VIEW [crt].[RETAILTILLLAYOUTIMAGEZONEVIEW] AS
(
	SELECT 
		iz.[PICTUREID]
		,iz.[RECID]
		,rtlzr.[LAYOUTID]
		,rtlz.[ZONEID]
		,rtlz.[ZONENAME]
		,rtlz.[ZONETYPE]
	FROM [ax].[RETAILTILLLAYOUTIMAGEZONE] AS iz
	LEFT JOIN [ax].[RETAILTILLLAYOUTZONEREFERENCE] AS rtlzr on rtlzr.RECID = iz.RECID
	LEFT JOIN [ax].[RETAILTILLLAYOUTZONE] AS rtlz ON rtlz.RECID = rtlzr.ZONE
)
GO
PRINT N'Creating [crt].[CHANNELPROPERTIESVIEW]...';


GO

CREATE VIEW [crt].[CHANNELPROPERTIESVIEW] AS
(
    SELECT
        rcp.RECID,
        rcp.CHANNEL,
        rcp.NAME,
        rcp.VALUE
    FROM [crt].RETAILCHANNELPROPERTIES AS rcp
)
GO
PRINT N'Creating [crt].[EMPLOYEELOGONVIEW]...';


GO

CREATE VIEW [crt].EMPLOYEELOGONVIEW AS
(
    SELECT DISTINCT -- If an employee has multiple associated addresses, we return duplicate rows.
        StaffTable.STAFFID,
        CAST(StaffTable.BLOCKED AS bit) AS BLOCKED,
        StaffTable.PASSWORDDATA,
        StaffTable.NAMEONRECEIPT,
        StaffTable.CULTURENAME,
        MediaResource.RESOURCEURL AS IMAGE,
        StaffTable.CHANGEPASSWORD,
		StaffTable.PASSWORDLASTCHANGEDDATETIME,
        Party.NAME,
        StoreTable.RECID AS CHANNELID, 
        HcmWorker.PERSONNELNUMBER, 
        ExtendedLogon.LOGONDATA, 
        ExtendedLogon.EXTRADATA, 
        ExtendedLogon.LOGONTYPE
    FROM [ax].RETAILSTAFFTABLE AS StaffTable
    INNER JOIN [ax].HCMWORKER AS HcmWorker ON HcmWorker.PERSONNELNUMBER = StaffTable.STAFFID
    INNER JOIN [ax].DIRPARTYTABLE AS Party ON HcmWorker.PERSON = Party.RECID
    INNER JOIN [ax].DIRADDRESSBOOKPARTY AS DirAddressBookParty ON DirAddressBookParty.PARTY = HcmWorker.PERSON
    INNER JOIN [ax].RETAILSTOREADDRESSBOOK AS AddressBook ON addressbook.ADDRESSBOOK = DirAddressBookParty.ADDRESSBOOK AND AddressBook.ADDRESSBOOKTYPE = 1  -- Fetch only employee addressBook type
    INNER JOIN [ax].RETAILSTORETABLE AS StoreTable ON AddressBook.STORERECID = StoreTable.RECID
    LEFT OUTER JOIN  [ax].RETAILSTAFFEXTENDEDLOGON AS ExtendedLogon ON StaffTable.RECID = ExtendedLogon.STAFF
    LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION AS MediaRelation ON MediaRelation.MASTERENTITYRECID = HcmWorker.RECID AND MediaRelation.ISDEFAULT = 1 AND MediaRelation.MASTERENTITYTYPE = 15  -- MasterEntityType = Employee.
    LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE AS MediaResource ON MediaRelation.MEDIARESOURCEID = MediaResource.RESOURCEID
)
GO
PRINT N'Creating [crt].[AFFILIATIONPRICEGROUPSVIEW]...';


GO

CREATE VIEW [crt].[AFFILIATIONPRICEGROUPSVIEW] AS
(
    SELECT
        [rapg].[RECID],
        [rapg].[PRICEDISCGROUP],
        [pdg].[GROUPID],
		[pdg].[RETAILPRICINGPRIORITYNUMBER],
        [rapg].[RETAILAFFILIATION] AS AFFILIATIONID,
        [c].[RECID] AS CHANNELID

    FROM [ax].PRICEDISCGROUP pdg
    INNER JOIN [ax].RETAILAFFILIATIONPRICEGROUP rapg ON rapg.PRICEDISCGROUP = pdg.RECID
    INNER JOIN [ax].RETAILCHANNELTABLE c on c.INVENTLOCATIONDATAAREAID = pdg.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONATTRIBUTETRANSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONATTRIBUTETRANSVIEW] AS
(
    SELECT
        AT.TRANSACTIONID
        ,AT.NAME
        ,AT.TEXTVALUE
    FROM [ax].[RETAILTRANSACTIONATTRIBUTETRANS] AT
)
GO
PRINT N'Creating [crt].[PAYMENTCONNECTORVIEW]...';


GO

CREATE VIEW [crt].[PAYMENTCONNECTORVIEW] AS
(
    SELECT
       rcpcl.[RECID],
       rcpcl.[PAYMENTCONNECTORNAME] AS NAME,
       rcpcl.[PAYMENTCONNECTORPROPERTIES] AS PROPERTIES,
       rcpcl.[ONLINECHANNEL],
       rcpcl.[ISTESTMODE]
    FROM [ax].RETAILCHANNELPAYMENTCONNECTORLINE rcpcl
)
GO
PRINT N'Creating [crt].[ORGUNITADDRESSVIEW]...';


GO
/********************************************************************************
    [OrgUnitAddressView] retrieves postal address information of a channel.

********************************************************************************/
CREATE VIEW [crt].[ORGUNITADDRESSVIEW] AS
(
    SELECT 
        rct.RECID AS 'CHANNELID',
        rst.TAXGROUP,
        lpa.RECID AS 'RECID', -- POSTALADDRESSRECID, the RecId of Address class
        lpa.BUILDINGCOMPLIMENT,
        lpa.CITY,
        lpa.COUNTRYREGIONID, -- Three letters country / region code.
        lacr.ISOCODE, -- Two letters country / region code.
        lpa.COUNTY,
        lac.NAME AS 'COUNTYNAME',
        lpa.DISTRICTNAME,
        1 AS 'ISPRIMARY', -- only select primary address
        lpa.ISPRIVATE,
        lpa.POSTBOX,
        lpa.STATE,
        las.NAME AS 'STATENAME',
        lpa.STREET,
        lpa.STREETNUMBER,
        lpa.ZIPCODE,
        lpa.ADDRESS, --Address.FullAddresss
        dp.RECID AS 'DIRPARTYTABLERECID',
        dpl.RECID AS 'DIRPARTYLOCATIONRECID',
        dpl.ATTENTIONTOADDRESSLINE,
        dp.PARTYNUMBER
    FROM [ax].RETAILCHANNELTABLE rct    
    INNER JOIN [ax].RETAILSTORETABLE rst ON rct.RECID = rst.RECID
    LEFT OUTER JOIN [ax].DIRPARTYTABLE dp ON dp.RECID = rct.OMOPERATINGUNITID
    -- ADDRESS INFORMATION
    LEFT OUTER JOIN [ax].DIRPARTYLOCATION AS dpl ON dpl.PARTY = dp.RECID AND dpl.ISPRIMARY = 1
    LEFT OUTER JOIN [ax].LOGISTICSPOSTALADDRESS AS lpa ON 
                        lpa.LOCATION = dpl.LOCATION 
                        AND lpa.ISPRIVATE = 0 
                        AND GETUTCDATE() BETWEEN VALIDFROM AND VALIDTO
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION AS lacr ON lpa.COUNTRYREGIONID = lacr.COUNTRYREGIONID
    --state name
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSSTATE las ON lpa.COUNTRYREGIONID = las.COUNTRYREGIONID
                and lpa.STATE = las.STATEID
    --county name
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSCOUNTY lac ON lpa.COUNTRYREGIONID = lac.COUNTRYREGIONID
                and lpa.STATE = lac.STATEID
                and lpa.COUNTY = lac.COUNTYID
)
GO
PRINT N'Creating [crt].[HARDWAREPROFILEPRINTERSVIEW]...';


GO

CREATE VIEW [crt].[HARDWAREPROFILEPRINTERSVIEW] AS
(
        SELECT rhp.PROFILEID
          ,rhp.PRINTER as 'PRINTERTYPE'
          ,rhp.PRINTERMAKE as 'PRINTERMAKEVALUE'
          ,rhp.PRINTERMODEL as 'PRINTERMODELVALUE'
          ,rhp.PRINTERDESCRIPTION as 'PRINTERDESCRIPTIONVALUE'
          ,rhp.PRINTERDEVICENAME as 'PRINTERDEVICENAMEVALUE'
          ,rhp.PRINTERCHARACTERSET as 'PRINTERCHARACTERSETVALUE'
          ,rhp.PRINTERRECEIPTPROFILEID as 'PRINTERRECEIPTPROFILEIDVALUE'
          ,rhp.PRINTBINARYCONVERSION as 'PRINTERBINARYCONVERSIONVALUE'
          ,rhp.DOCINSERTREMOVALTIMEOUT as 'PRINTERDOCINSERTREMOVALTIMEOUTVALUE'
          ,rhp.LOGO as 'PRINTERLOGOVALUE'
          ,rhp.LOGOALIGNMENT as 'PRINTERLOGOALIGNMENTVALUE'
        FROM [ax].[RETAILHARDWAREPROFILE] rhp
        UNION ALL
        SELECT rhp.PROFILEID
          ,rhp.PRINTER2 as 'PRINTERTYPE'
          ,rhp.PRINTER2MAKE as 'PRINTERMAKEVALUE'
          ,rhp.PRINTER2MODEL as 'PRINTERMODELVALUE'
          ,rhp.PRINTER2DESCRIPTION as 'PRINTERDESCRIPTIONVALUE'
          ,rhp.PRINTER2DEVICENAME as 'PRINTERDEVICENAMEVALUE'
          ,rhp.PRINTER2CHARACTERSET as 'PRINTERCHARACTERSETVALUE'
          ,rhp.PRINTER2RECEIPTPROFILEID as 'PRINTERRECEIPTPROFILEIDVALUE'
          ,rhp.PRINTER2BINARYCONVERSION as 'PRINTERBINARYCONVERSIONVALUE'
          ,rhp.PRINTER2DOCINSERTREMOVALTIMEOUT as 'PRINTERDOCINSERTREMOVALTIMEOUTVALUE'
          ,rhp.PRINTER2LOGO as 'PRINTERLOGOVALUE'
          ,rhp.PRINTER2LOGOALIGNMENT as 'PRINTERLOGOALIGNMENTVALUE'
        FROM [ax].[RETAILHARDWAREPROFILE] rhp
)
GO
PRINT N'Creating [crt].[LOYALTYTIERSVIEW]...';


GO

CREATE VIEW [crt].[LOYALTYTIERSVIEW] AS
(
    select
		rlt.RECID,
		rlt.AFFILIATION as LoyaltyGroupRecordId,
		rlt.TIERID,
		rlt.TIERLEVEL
	from [ax].[RETAILLOYALTYTIER] rlt
)
GO
PRINT N'Creating [crt].[PRODUCTIDSTOUNITSOFMEASUREVIEW]...';


GO
CREATE VIEW [crt].PRODUCTIDSTOUNITSOFMEASUREVIEW
AS
(
    -- Retrieve default unit of measure.
    SELECT
        [it].PRODUCT,
        [it].DATAAREAID,
        [uom].RECID,
        [uom].SYMBOL,
        [uom].DECIMALPRECISION,
        [uom].LANGUAGEID,
        [uom].[DESCRIPTION]
    FROM [ax].INVENTTABLEMODULE itm
        INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [itm].ITEMID AND [it].DATAAREAID = [itm].DATAAREAID
        INNER JOIN [crt].UNITOFMEASUREVIEW uom ON [uom].SYMBOL = [itm].UNITID
        WHERE [itm].MODULETYPE = 2  -- Sale

    UNION ALL

    -- Retrieve all unit of measures to which a conversion is possible.
    SELECT
        [it].PRODUCT,
        [it].DATAAREAID,
        [uom_to].RECID,
        [uom_to].SYMBOL,
        [uom_to].DECIMALPRECISION,
        [uom_to].LANGUAGEID,
        [uom_to].[DESCRIPTION]
    FROM [ax].INVENTTABLEMODULE itm
        INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [itm].ITEMID AND [it].DATAAREAID = [itm].DATAAREAID
        INNER JOIN [ax].UNITOFMEASURE uom_from ON [uom_from].SYMBOL = [itm].UNITID
            INNER JOIN [ax].UNITOFMEASURECONVERSION uomc ON [uomc].FROMUNITOFMEASURE = [uom_from].RECID AND ([uomc].PRODUCT = [it].PRODUCT OR [uomc].PRODUCT = 0)
                INNER JOIN [crt].UNITOFMEASUREVIEW uom_to ON [uom_to].RECID = [uomc].TOUNITOFMEASURE
        WHERE [itm].MODULETYPE = 2  -- Sale
)
GO
PRINT N'Creating [crt].[SHIFTTENDERPAYMENTTRANSVIEW]...';


GO

CREATE VIEW [crt].[SHIFTTENDERPAYMENTTRANSVIEW] AS
(

			SELECT		PAYMENT.[TENDERTYPE] AS [TENDERTYPEID], 
						TENDER.[NAME] AS [TENDERTYPENAME],
						PAYMENT.[CURRENCY], 
						TENDER.[COUNTINGREQUIRED], 
						PAYMENT.[AMOUNTTENDERED] AS [TENDEREDAMOUNT], 
						PAYMENT.[AMOUNTCUR] AS [TENDEREDAMOUNTCUR],
						TRANS.[TYPE] AS [TRANSACTIONTYPE],
						TRANS.[CHANNEL],
						TRANS.[DATAAREAID],
						TRANS.[BATCHTERMINALID],
						TRANS.[BATCHID],
						PAYMENT.[CARDTYPEID],
						TRANS.[CREATEDDATETIME]

			FROM		[ax].[RETAILTRANSACTIONPAYMENTTRANS] PAYMENT

			INNER JOIN	[ax].[RETAILTRANSACTIONTABLE] AS TRANS
						ON TRANS.TRANSACTIONID = PAYMENT.TRANSACTIONID 
						AND TRANS.CHANNEL = PAYMENT.CHANNEL
						AND TRANS.TERMINAL = PAYMENT.TERMINAL 
						AND TRANS.DATAAREAID = PAYMENT.DATAAREAID 

			INNER JOIN	[ax].[RETAILSTORETENDERTYPETABLE] AS TENDER 
						ON TENDER.TENDERTYPEID = PAYMENT.TENDERTYPE 
						AND TENDER.DATAAREAID = PAYMENT.DATAAREAID
						AND TENDER.CHANNEL = PAYMENT.CHANNEL

			INNER JOIN	[ax].[RETAILSTORETABLE] AS ST 
						ON ST.RECID = TENDER.CHANNEL 
						AND ST.RECID = PAYMENT.CHANNEL

			WHERE		PAYMENT.TRANSACTIONSTATUS = 0	-- Transaction status is normal
						AND (TENDER.COUNTINGREQUIRED = 1 OR TENDER.TAKENTOBANK = 1 OR TENDER.TAKENTOSAFE = 1)

)
GO
PRINT N'Creating [crt].[RETAILINVENTAVAILABILITYSALESORDERSUMVIEW]...';


GO

CREATE VIEW [crt].[RETAILINVENTAVAILABILITYSALESORDERSUMVIEW] AS
(
    SELECT
        ria.RECID AS INVENTAVAILABILITY,
        SUM(rtstqsv.QUANTITY) AS QUANTITY
    FROM [crt].RETAILTRANSACTIONSALESTRANSQTYSUMVIEW rtstqsv
    INNER JOIN [ax].INVENTTABLE it ON it.ITEMID = rtstqsv.ITEMID AND it.DATAAREAID = rtstqsv.DATAAREAID
    LEFT JOIN [ax].INVENTDIM vid ON vid.INVENTDIMID = rtstqsv.VARIANTINVENTDIMID AND vid.DATAAREAID = rtstqsv.DATAAREAID
    INNER JOIN [ax].INVENTDIM id ON 
        id.INVENTLOCATIONID = rtstqsv.INVENTLOCATIONID 
        AND ((rtstqsv.VARIANTINVENTDIMID IS NULL 
            AND id.CONFIGID = '' 
            AND id.INVENTCOLORID = '' 
            AND id.INVENTSIZEID = '' 
            AND id.INVENTSTYLEID = ''
        ) OR (
            rtstqsv.VARIANTINVENTDIMID IS NOT NULL
            AND id.CONFIGID = vid.CONFIGID
            AND id.INVENTCOLORID = vid.INVENTCOLORID 
            AND id.INVENTSIZEID = vid.INVENTSIZEID 
            AND id.INVENTSTYLEID = vid.INVENTSTYLEID)) 
        AND id.DATAAREAID = rtstqsv.DATAAREAID
    INNER JOIN [ax].RETAILINVENTAVAILABILITY ria ON ria.ITEMRECID = it.RECID AND ria.INVENTDIMRECID = id.RECID
    GROUP BY ria.RECID
)
GO
PRINT N'Creating [crt].[HARDWAREPROFILESVIEW]...';


GO

CREATE VIEW [crt].[HARDWAREPROFILESVIEW] AS
(
SELECT rhp.DELAYFORLINKEDITEMS
      ,rhp.DISPLAYBALANCETEXT
      ,rhp.DISPLAYBINCONVERSION
      ,rhp.DISPLAYCHARACTERSET
      ,rhp.DISPLAYCLOSEDLINE1
      ,rhp.DISPLAYCLOSEDLINE2
      ,rhp.DISPLAYDESCRIPTION
      ,rhp.DISPLAYDEVICE
      ,rhp.DISPLAYDEVICENAME
      ,rhp.DISPLAYLINKEDITEM
      ,rhp.DISPLAYTERMINALCLOSED
      ,rhp.DISPLAYTOTALTEXT
      ,rhp.DUALDISPLAY
      ,rhp.DUALDISPLAYBROWSERURL
      ,rhp.DUALDISPLAYIMAGEINTERVAL
      ,rhp.DUALDISPLAYIMAGEPATH
      ,rhp.DUALDISPLAYRECEIPTPERCENTAGE
      ,rhp.DUALDISPLAYTYPE
      ,rhp.EFT
      ,rhp.EFTCOMPANYID
      ,rhp.EFTCONFIGURATION
      ,rhp.EFTCONNECTORNAME
      ,rhp.EFTDATA
      ,rhp.EFTDESCRIPTION
      ,rhp.EFTMERCHANTID
      ,rhp.EFTPASSWORD
      ,rhp.EFTSERVERNAME
      ,rhp.EFTSERVERPORT
      ,rhp.EFTUSERID
      ,rhp.ENDTRACK1
      ,rhp.ENDTRACK2
      ,rhp.KEYBOARDMAPPINGID
      ,rhp.KEYLOCK
      ,rhp.KEYLOCKDESCRIPTION
      ,rhp.KEYLOCKDEVICENAME
      ,rhp.MANUALINPUTALLOWED
      ,rhp.MSR
      ,rhp.MSRDESCRIPTION
      ,rhp.MSRDEVICENAME
      ,rhp.MSRMAKE
      ,rhp.MSRMODEL
      ,rhp.NAME
      ,rhp.PINPAD
      ,rhp.PINPADDESCRIPTION
      ,rhp.PINPADDEVICENAME
      ,rhp.PINPADMAKE
      ,rhp.PINPADMODEL
      ,rhp.PROFILEID
      ,rhp.RFIDDESCRIPTION
      ,rhp.RFIDDEVICENAME
      ,rhp.RFIDSCANNERTYPE
      ,rhp.SCALE
      ,rhp.SCALEDESCRIPTION
      ,rhp.SCALEDEVICENAME
      ,rhp.SEPARATOR1
      ,rhp.SIGCAP
      ,rhp.SIGCAPDESCRIPTION
      ,rhp.SIGCAPDEVICENAME
      ,rhp.SIGCAPFORMNAME
      ,rhp.SIGCAPMAKE
      ,rhp.SIGCAPMODEL
      ,rhp.STARTTRACK1
      ,rhp.TIMEOUTINSEC
      ,CAST(rhp.EFTTESTMODE as bit) as EFTTESTMODE
      ,rhp.[RECID]
  FROM [ax].[RETAILHARDWAREPROFILE] AS rhp
)
GO
PRINT N'Creating [crt].[INFOCODETABLESPECIFICVIEW]...';


GO

CREATE VIEW [crt].[INFOCODETABLESPECIFICVIEW] AS
(
    SELECT ricts.[INFOCODEID] AS REASONCODEID
      ,ricts.[INPUTREQUIRED]
      ,ricts.[REFRELATION]
      ,ricts.[REFRELATION2]
      ,ricts.[REFRELATION3]
      ,ricts.[REFTABLEID]
      ,ricts.[SEQUENCE]
      ,ricts.[WHENREQUIRED]
    FROM [ax].[RETAILINFOCODETABLESPECIFIC] ricts
)
GO
PRINT N'Creating [crt].[RETAILTILLLAYOUTBYCRITERIAVIEW]...';


GO

CREATE VIEW [crt].[RETAILTILLLAYOUTBYCRITERIAVIEW] AS
(
	SELECT
		rts.STAFFID AS REF_STAFFID,
		NULL AS REF_TERMINALID,
		NULL AS REF_CHANNELID,
		rtl.DEVICETYPE AS REF_DEVICETYPEID,
		1 AS REF_PRIORITY,
		rtl.NAME,
		rtl.WIDTH,
		rtl.HEIGHT,
		rtl.LAYOUTID,
		rtl.CUSTOMERLAYOUTID,
		rtl.TOTALID,
		rtl.RECEIPTID,
		rtl.LAYOUTXML,
		rtl.LAYOUTXMLPORTRAIT,
		rtl.CUSTOMERLAYOUTXML,
		rtl.TOTALSLAYOUTXML,
		rtl.CASHCHANGERLAYOUTXML,
		rtl.RECEIPTPAYMENTLAYOUTXML,
		rtl.RECEIPTITEMSLAYOUTXML,
		rtl.RECID,
		rtl.STARTSCREEN
	FROM
		ax.RETAILSTAFFTABLE AS rts
		INNER JOIN ax.RETAILTILLLAYOUTSTAFF AS rtls ON rtls.STAFF = rts.RECID
		INNER JOIN ax.RETAILTILLLAYOUT AS rtl ON rtl.LAYOUTID = rtls.LAYOUTID
		LEFT JOIN ax.RETAILDEVICETYPES AS rdt ON rdt.RECID = rtl.DEVICETYPE

	UNION ALL

	SELECT
		NULL AS REF_STAFFID,
		rtt.RECID AS REF_TERMINALID,
		NULL AS REF_CHANNELID,
		rtl.DEVICETYPE  AS REF_DEVICETYPEID,
		2 AS REF_PRIORITY,
		rtl.NAME,
		rtl.WIDTH,
		rtl.HEIGHT,
		rtl.LAYOUTID,
		rtl.CUSTOMERLAYOUTID,
		rtl.TOTALID,
		rtl.RECEIPTID,
		rtl.LAYOUTXML,
		rtl.LAYOUTXMLPORTRAIT,
		rtl.CUSTOMERLAYOUTXML,
		rtl.TOTALSLAYOUTXML,
		rtl.CASHCHANGERLAYOUTXML,
		rtl.RECEIPTPAYMENTLAYOUTXML,
		rtl.RECEIPTITEMSLAYOUTXML,
		rtl.RECID,
		rtl.STARTSCREEN
	FROM
		ax.RETAILTERMINALTABLE AS rtt
		INNER JOIN ax.RETAILTILLLAYOUT AS rtl ON rtl.LAYOUTID = rtt.LAYOUTID
		LEFT JOIN ax.RETAILDEVICETYPES AS rdt ON rdt.RECID = rtl.DEVICETYPE

	UNION ALL

	SELECT
		NULL AS REF_STAFFID,
		NULL AS REF_TERMINALID,
		rct.RECID AS REF_CHANNELID,
		rtl.DEVICETYPE  AS REF_DEVICETYPEID,
		3 AS REF_PRIORITY,
		rtl.NAME,
		rtl.WIDTH,
		rtl.HEIGHT,
		rtl.LAYOUTID,
		rtl.CUSTOMERLAYOUTID,
		rtl.TOTALID,
		rtl.RECEIPTID,
		rtl.LAYOUTXML,
		rtl.LAYOUTXMLPORTRAIT,
		rtl.CUSTOMERLAYOUTXML,
		rtl.TOTALSLAYOUTXML,
		rtl.CASHCHANGERLAYOUTXML,
		rtl.RECEIPTPAYMENTLAYOUTXML,
		rtl.RECEIPTITEMSLAYOUTXML,
		rtl.RECID,
		rtl.STARTSCREEN
	FROM
		ax.RETAILCHANNELTABLE AS rct
		INNER JOIN ax.RETAILTILLLAYOUTSTORE AS rtls ON rtls.STORE = rct.RECID
		INNER JOIN ax.RETAILTILLLAYOUT AS rtl ON rtl.LAYOUTID = rtls.LAYOUTID
		LEFT JOIN ax.RETAILDEVICETYPES AS rdt ON rdt.RECID = rtl.DEVICETYPE
)
GO
PRINT N'Creating [crt].[TAXCODESVIEW]...';


GO

CREATE VIEW [crt].[TAXCODESVIEW] AS
(
    SELECT
        [tt].TAXCODE,
        [tt].TAXROUNDOFF,
        [tt].TAXROUNDOFFTYPE,
		[tt].DATAAREAID
    FROM [ax].TAXTABLE tt
)
GO
PRINT N'Creating [crt].[EMPLOYEEPERMISSIONOVERRIDESVIEW]...';


GO

CREATE VIEW [crt].EMPLOYEEPERMISSIONOVERRIDESVIEW AS
(
    SELECT
        MAX(PositionPermission.ALLOWKITDISASSEMBLY) AS ALLOWKITDISASSEMBLY,
        MAX(PositionPermission.ALLOWBLINDCLOSE) AS ALLOWBLINDCLOSE,
        MAX(PositionPermission.ALLOWCHANGENOVOID) AS ALLOWCHANGENOVOID,
        MAX(PositionPermission.ALLOWCREATEORDER) AS ALLOWCREATEORDER,
        MAX(PositionPermission.ALLOWEDITORDER) AS ALLOWEDITORDER,
        MAX(PositionPermission.ALLOWFLOATINGTENDERDECLARATION) AS ALLOWFLOATINGTENDERDECLARATION,
        MAX(PositionPermission.ALLOWMULTIPLELOGINS) AS ALLOWMULTIPLELOGINS,
        MAX(PositionPermission.ALLOWMULTIPLESHIFTLOGON) AS ALLOWMULTIPLESHIFTLOGON,
        MAX(PositionPermission.ALLOWOPENDRAWERONLY) AS ALLOWOPENDRAWERONLY,
        SUM(DISTINCT(PositionPermission.ALLOWPRICEOVERRIDE)) AS ALLOWPRICEOVERRIDE,
        MAX(PositionPermission.ALLOWSALESTAXCHANGE) AS ALLOWSALESTAXCHANGE,
        MAX(PositionPermission.ALLOWTENDERDECLARATION) AS ALLOWTENDERDECLARATION,
        MAX(PositionPermission.ALLOWRETRIEVEORDER) AS ALLOWRETRIEVEORDER,
        MAX(PositionPermission.ALLOWTRANSACTIONSUSPENSION) AS ALLOWTRANSACTIONSUSPENSION,
        MAX(PositionPermission.ALLOWTRANSACTIONVOIDING) AS ALLOWTRANSACTIONVOIDING,
        MAX(PositionPermission.ALLOWXREPORTPRINTING) AS ALLOWXREPORTPRINTING,
        MAX(PositionPermission.ALLOWZREPORTPRINTING) AS ALLOWZREPORTPRINTING,
        MAX(PositionPermission.ALLOWCHANGEPERIPHERALSTATION) AS ALLOWCHANGEPERIPHERALSTATION,
        MAX(PositionPermission.MANAGERPRIVILEGES) AS MANAGERPRIVILEGES,
        MAX(PositionPermission.ALLOWPASSWORDCHANGE) AS ALLOWPASSWORDCHANGE,
        MAX(PositionPermission.ALLOWRESETPASSWORD) AS ALLOWRESETPASSWORD,
        MAX(PositionPermission.MAXIMUMDISCOUNTPCT) AS MAXIMUMDISCOUNTPCT,
        MAX(PositionPermission.MAXLINEDISCOUNTAMOUNT) AS MAXLINEDISCOUNTAMOUNT,
        MAX(PositionPermission.MAXLINERETURNAMOUNT) AS MAXLINERETURNAMOUNT,
        MAX(PositionPermission.MAXTOTALDISCOUNTAMOUNT) AS MAXTOTALDISCOUNTAMOUNT,
        MAX(PositionPermission.MAXTOTALDISCOUNTPCT) AS MAXTOTALDISCOUNTPCT,
        MAX(PositionPermission.MAXTOTALRETURNAMOUNT) AS MAXTOTALRETURNAMOUNT,
        MAX(PositionPermission.USEHANDHELD) AS USEHANDHELD,
        MAX(PositionPermission.MANAGEDEVICE) AS MANAGEDEVICE,
        MAX(PositionPermission.VIEWTIMECLOCKENTRIES) AS VIEWTIMECLOCKENTRIES,
        MAX(PositionPermission.ALLOWUSESHAREDSHIFT) AS ALLOWUSESHAREDSHIFT,
        MAX(PositionPermission.ALLOWMANAGESHAREDSHIFT) AS ALLOWMANAGESHAREDSHIFT,
        MAX(Staff.CONTINUEONTSERRORS) AS CONTINUEONTSERRORS,
        MAX(PositionPermission.ALLOWTASKGUIDES) AS ALLOWTASKGUIDES,
        Staff.STAFFID
    FROM [ax].HCMWORKER AS Worker
    INNER JOIN [ax].RETAILSTAFFTABLE AS Staff ON Staff.STAFFID = Worker.PERSONNELNUMBER
    INNER JOIN [ax].HCMPOSITIONWORKERASSIGNMENT AS Assignment ON Assignment.WORKER = Worker.RECID
    INNER JOIN [ax].HCMPOSITION AS Position ON Position.RECID = Assignment.POSITION
    INNER JOIN [ax].RETAILPOSITIONPOSPERMISSION AS PositionPermission ON PositionPermission.POSITION = Position.RECID
    WHERE GETUTCDATE() BETWEEN [Assignment].VALIDFROM AND [Assignment].VALIDTO
    GROUP BY Staff.STAFFID
)
GO
PRINT N'Creating [crt].[CHANNELATTRIBUTEVIEW]...';


GO

CREATE VIEW [crt].[CHANNELATTRIBUTEVIEW] AS
(
    SELECT
        rpca.RECID,
        rpca.CHANNEL,
        rpca.ATTRIBUTEVALUE AS ATTRIBUTEVALUERECID,
        era.NAME,
        erat.DATATYPE,
        erbv.BOOLEANVALUE,
        erdtv.DATETIMEVALUE,
        erfv.FLOATVALUE,
        fuom.SYMBOL AS FLOATUNITSYMBOL,
        eriv.INTVALUE,
        iuom.SYMBOL AS INTUNITSYMBOL,
        ertv.TEXTVALUE,
        ercv.CURRENCYCODE,
        ercv.CURRENCYVALUE
    FROM [ax].RETAILPUBCHANNELATTRIBUTE rpca
    INNER JOIN [ax].ECORESATTRIBUTE era ON era.RECID = rpca.ATTRIBUTE
    INNER JOIN [ax].ECORESATTRIBUTETYPE erat ON era.ATTRIBUTETYPE = erat.RECID
    LEFT OUTER JOIN [ax].ECORESBOOLEANVALUE erbv ON rpca.ATTRIBUTEVALUE = erbv.RECID
    LEFT OUTER JOIN [ax].ECORESDATETIMEVALUE erdtv ON rpca.ATTRIBUTEVALUE = erdtv.RECID
    LEFT OUTER JOIN [ax].ECORESFLOATVALUE erfv ON rpca.ATTRIBUTEVALUE = erfv.RECID
    LEFT OUTER JOIN [ax].UNITOFMEASURE AS fuom ON erfv.FLOATUNITOFMEASURE = fuom.RECID
    LEFT OUTER JOIN [ax].ECORESINTVALUE eriv ON rpca.ATTRIBUTEVALUE = eriv.RECID
    LEFT OUTER JOIN [ax].UNITOFMEASURE AS iuom ON eriv.INTUNITOFMEASURE = iuom.RECID
    LEFT OUTER JOIN [ax].ECORESTEXTVALUE ertv ON rpca.ATTRIBUTEVALUE = ertv.RECID
    LEFT OUTER JOIN [ax].ECORESCURRENCYVALUE ercv ON rpca.ATTRIBUTEVALUE = ercv.RECID
)
GO
PRINT N'Creating [crt].[RETAILINVENTAVAILABILITYVIEW]...';


GO

CREATE VIEW [crt].[RETAILINVENTAVAILABILITYVIEW] AS
(
    SELECT
        ria.RECID,
        it.ITEMID,
		it.DATAAREAID,
        id.INVENTDIMID,
        ria.AVAILPHYSICAL - ISNULL(irv.QUANTITY, 0) + ISNULL(riasosv.QUANTITY, 0) AS AVAILPHYSICAL
    FROM [ax].RETAILINVENTAVAILABILITY ria
    INNER JOIN [ax].INVENTTABLE it ON it.RECID = ria.ITEMRECID
    INNER JOIN [ax].INVENTDIM id on  id.RECID = ria.INVENTDIMRECID AND id.DATAAREAID = it.DATAAREAID
    LEFT JOIN [crt].ITEMRESERVATIONSUMVIEW irv ON irv.INVENTAVAILABILITY = ria.RECID
    LEFT JOIN [crt].RETAILINVENTAVAILABILITYSALESORDERSUMVIEW riasosv ON riasosv.INVENTAVAILABILITY = ria.RECID
)
GO
PRINT N'Creating [crt].[SHIFTACCOUNTSVIEW]...';


GO

CREATE VIEW [crt].[SHIFTACCOUNTSVIEW] AS
(
    SELECT
        ACCOUNTLINE.ACCOUNTNUM AS INCOMEEXEPENSEACCOUNT,
        ACCOUNTLINE.ACCOUNTTYPE,
        ACCOUNTLINE.AMOUNT,
        ACCOUNTLINE.CHANNEL,
        ACCOUNTLINE.BATCHID AS SHIFTID,
        ACCOUNTLINE.TERMINALID,
        ACCOUNTLINE.STOREID
    FROM [ax].[RETAILPOSBATCHACCOUNTTRANS] ACCOUNTLINE
)
GO
PRINT N'Creating [crt].[SHIFTTENDERSAFEDROPTRANSVIEW]...';


GO

CREATE VIEW [crt].[SHIFTTENDERSAFEDROPTRANSVIEW] AS
(

			SELECT		PAYMENT.[TENDERTYPE] AS [TENDERTYPEID], 
						TENDER.[NAME] AS [TENDERTYPENAME],
						PAYMENT.[CURRENCY], 
						TENDER.[COUNTINGREQUIRED], 
						PAYMENT.[AMOUNTTENDERED] AS [TENDEREDAMOUNT], 
						PAYMENT.[AMOUNTCUR] AS [TENDEREDAMOUNTCUR],
						TRANS.[TYPE] AS [TRANSACTIONTYPE],
						TRANS.[CHANNEL],
						TRANS.[DATAAREAID],
						TRANS.[BATCHTERMINALID],
						TRANS.[BATCHID],
						PAYMENT.[CARDTYPEID],
						TRANS.[CREATEDDATETIME]

			FROM		[ax].[RETAILTRANSACTIONSAFETENDERTRANS] PAYMENT

			INNER JOIN	[ax].[RETAILTRANSACTIONTABLE] AS TRANS
						ON TRANS.TRANSACTIONID = PAYMENT.TRANSACTIONID 
						AND TRANS.CHANNEL = PAYMENT.CHANNEL
						AND TRANS.TERMINAL = PAYMENT.TERMINAL 
						AND TRANS.DATAAREAID = PAYMENT.DATAAREAID 

			INNER JOIN	[ax].[RETAILSTORETENDERTYPETABLE] AS TENDER 
						ON TENDER.TENDERTYPEID = PAYMENT.TENDERTYPE 
						AND TENDER.DATAAREAID = PAYMENT.DATAAREAID 
						AND TENDER.CHANNEL = PAYMENT.CHANNEL

			INNER JOIN	[ax].[RETAILSTORETABLE] AS ST
						ON ST.RECID = TENDER.CHANNEL 
						AND ST.RECID = PAYMENT.CHANNEL

			WHERE		TRANSACTIONSTATUS = 0 -- 0 indicates Transaction status is normal
						AND (COUNTINGREQUIRED = 1 OR TAKENTOBANK = 1 OR TAKENTOSAFE = 1)

)
GO
PRINT N'Creating [crt].[GETSUPPORTEDLANGUAGEIDSVIEW]...';


GO

CREATE VIEW [crt].[GETSUPPORTEDLANGUAGEIDSVIEW] AS
(
    SELECT
        lt.[LANGUAGEID],
        lt.[RECID]
    FROM [ax].[LANGUAGETABLE] lt
)
GO
PRINT N'Creating [crt].[CUSTOMERSEARCHABLEFIELDSVIEW]...';


GO
/********************************************************************************
    CUSTOMERSEARCHABLEFIELDSVIEW retrieves the all the customer search related
        fields defined in the [crt].[CUSTOMERSEARCH] stored procedure to
        facilitate the offline (sqlite) customer search.
********************************************************************************/


CREATE VIEW [crt].[CUSTOMERSEARCHABLEFIELDSVIEW] AS
(
    SELECT
        rlc.PARTY AS PARTY,
        rlc.CARDNUMBER AS FIELD
    FROM [ax].RETAILLOYALTYCARD rlc
    WHERE PARTY != 0

    UNION ALL

    SELECT
        ct.PARTY AS PARTY,
        ct.ACCOUNTNUM AS FIELD
    FROM [ax].CUSTTABLE ct

    UNION ALL

    SELECT
        dpt.RECID AS PARTY,
        dpt.NAME AS FIELD
    FROM [ax].DIRPARTYTABLE dpt

    UNION ALL

    SELECT
        dpt.RECID AS PARTY,
        lea.LOCATOR AS FIELD
    FROM [ax].LOGISTICSELECTRONICADDRESS lea
        INNER JOIN [ax].DIRPARTYLOCATION dpl ON lea.LOCATION = dpl.LOCATION
        INNER JOIN [ax].DIRPARTYTABLE dpt ON dpl.PARTY = dpt.RECID
    WHERE
        lea.ISPRIMARY = 1 AND lea.ISPRIVATE = 0
        AND (lea.TYPE = 1 OR lea.TYPE = 2 OR lea.TYPE = 3)  /* 1:Phone, 2:Email, 3:URL */

    UNION ALL

    SELECT
        dpt.RECID AS PARTY,
        lpa.ADDRESS AS FIELD
    FROM [ax].LOGISTICSPOSTALADDRESS lpa
        INNER JOIN [ax].DIRPARTYLOCATION dpl ON lpa.LOCATION = dpl.LOCATION
        INNER JOIN [ax].DIRPARTYTABLE dpt ON dpl.PARTY = dpt.RECID
    WHERE GETUTCDATE() BETWEEN lpa.VALIDFROM AND lpa.VALIDTO
)
GO
PRINT N'Creating [crt].[STORECASHDECLARATIONVIEW]...';


GO

CREATE VIEW [crt].[STORECASHDECLARATIONVIEW] AS
(
    SELECT
        rpst.[STOREORIGINID] AS CHANNELID,
        rscdt.[RECID],
        rscdt.[TYPE],
        rscdt.[CURRENCY],
        rscdt.[AMOUNT]
    FROM [ax].RETAILSTORECASHDECLARATIONTABLE rscdt
	INNER JOIN [ax].RETAILPUBRETAILSTORETABLE rpst
	ON rscdt.STOREID = rpst.STORENUMBER
)
GO
PRINT N'Creating [crt].[RETAILAFFILIATIONSVIEW]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[RETAILAFFILIATIONSVIEW] creates a view about retail affiliation.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE VIEW [crt].[RETAILAFFILIATIONSVIEW] AS
(
  SELECT
    [RECID],
    [AFFILIATIONTYPE],
    [NAME]
  FROM [ax].RETAILAFFILIATION
);
GO
PRINT N'Creating [crt].[LISTINGPUBLISHSTATUSVIEW]...';


GO

CREATE VIEW [crt].[LISTINGPUBLISHSTATUSVIEW] AS
    WITH [LISTING_STATUS] AS
    (
        SELECT
            [ACTIONSTATUS],
            [APPLIEDACTION],
            [CHANNEL],
            [CHANNELBATCHID],
            [CHANNELLISTINGID],
            [CHANNELSTATE],
            [LISTINGMODIFIEDDATETIME],
            [LISTINGMODIFIEDDATETIMETZID],
            [PROCESSED],
            [PRODUCT],
            [STATUSDATETIME],
            [STATUSDATETIMETZID],
            [STATUSMESSAGE],
            RANK() OVER
            (
                PARTITION BY PRODUCT
                ORDER BY STATUSDATETIME DESC, REPLICATIONCOUNTERFROMORIGIN DESC
            ) AS [RANK]
        FROM [ax].RETAILLISTINGSTATUSLOG
    )
    SELECT
        [ACTIONSTATUS],
        [APPLIEDACTION],
        [CHANNEL],
        [CHANNELBATCHID],
        [CHANNELLISTINGID],
        [CHANNELSTATE],
        [LISTINGMODIFIEDDATETIME],
        [LISTINGMODIFIEDDATETIMETZID],
        [PROCESSED],
        [PRODUCT],
        [STATUSDATETIME],
        [STATUSDATETIMETZID],
        [STATUSMESSAGE]
    FROM [LISTING_STATUS]
    WHERE RANK = 1
GO
PRINT N'Creating [crt].[CATALOGPRICEGROUPSVIEW]...';


GO

CREATE VIEW [crt].[CATALOGPRICEGROUPSVIEW] AS
(
    SELECT
        [rcpg].[RECID],
        [rcpg].[PRICEDISCGROUP] AS 'PRICEGROUP',
        [pdg].[GROUPID],
		[pdg].[RETAILPRICINGPRIORITYNUMBER],
        [rcpg].[CATALOG] AS CATALOGID,
		[c].[RECID] AS CHANNELID
    FROM [ax].PRICEDISCGROUP pdg
    INNER JOIN [ax].RETAILPUBRETAILCATALOGPRICEGROUP rcpg ON rcpg.PRICEDISCGROUP = pdg.RECID
    INNER JOIN [ax].RETAILCHANNELTABLE c on c.INVENTLOCATIONDATAAREAID = pdg.DATAAREAID
)
GO
PRINT N'Creating [crt].[SALESTAXOVERRIDEDETAILSVIEW]...';


GO

CREATE VIEW [crt].[SALESTAXOVERRIDEDETAILSVIEW] AS
(
	SELECT     [RECID]
		  ,[ADDITIONALDESCRIPTION]
		  ,[CODE]
		  ,[DESCRIPTION]
		  ,[DESTINATIONITEMTAXGROUP]
		  ,[DESTINATIONTAXGROUP]
		  ,[OVERRIDEBY]
		  ,[OVERRIDEFROM]
		  ,[OVERRIDETO]
		  ,[OVERRIDETYPE]
		  ,[SOURCEITEMTAXGROUP]
		  ,[SOURCETAXGROUP]
		  ,[STATUS]
		  ,[DATAAREAID]
	  FROM [ax].[RETAILSALESTAXOVERRIDE]
)
GO
PRINT N'Creating [crt].[ATTRIBUTEMAPVIEW]...';


GO

CREATE VIEW [crt].[ATTRIBUTEMAPVIEW] AS
(
    -- non-ref attribute case
    SELECT
        ERA.RECID AS ACTUALATTRIBUTE,
        ERA.RECID AS ATTRIBUTE
    FROM [ax].ECORESATTRIBUTE ERA
    INNER JOIN [ax].ECORESATTRIBUTETYPE ERAT ON ERAT.RECID = ERA.ATTRIBUTETYPE
    WHERE ERAT.DATATYPE != 20 --  20 = REFEFENCE ATTRIBUTE TYPE


    UNION ALL

    -- ref. Attribute case
    SELECT
        ERRV.REFRECID AS REFERENCEDATTRIBUTE,
        ERA.RECID AS ATTRIBUTEID
    FROM [ax].ECORESATTRIBUTE ERA
    INNER JOIN [ax].ECORESATTRIBUTETYPE ERAT ON ERAT.RECID = ERA.ATTRIBUTETYPE
    INNER JOIN [ax].ECORESATTRIBUTEDEFAULTVALUE ERADV ON ERA.RECID = ERADV.ATTRIBUTE
    INNER JOIN [ax].ECORESREFERENCEVALUE ERRV ON ERRV.RECID = ERADV.VALUE
    WHERE ERAT.DATATYPE = 20 --  20 = REFEFENCE ATTRIBUTE TYPE
)
GO
PRINT N'Creating [crt].[GETEMPLOYEEBREAKCATEGORIESVIEW]...';


GO

/****************************************************************************************
	GETEMPLOYEEBREAKCATEGORIESVIEW will retrieve the activities with job IDs for category 'Break'
*****************************************************************************************/
CREATE VIEW [crt].[GETEMPLOYEEBREAKCATEGORIESVIEW] AS
(
	SELECT	jmga.RECID, 
			jmga.ACTIVITY AS BREAKCATEGORY, 
			jmga.JOBID
	FROM [ax].[JMGIPCACTIVITY] jmga
	WHERE CATEGORY = 'BREAK' AND jmga.BREAKDROP = 0 AND jmga.SIGNIN = 1
)
GO
PRINT N'Creating [crt].[GETEMPLOYEESBYSTOREVIEW]...';


GO

CREATE VIEW [crt].GETEMPLOYEESBYSTOREVIEW AS
(
    SELECT
        staff.STAFFID AS STAFFID,
        party.NAME AS NAME,
        storeAddress.STORERECID AS STOREID,
        rmr.RESOURCEURL AS IMAGE,
        staff.PASSWORDLASTCHANGEDDATETIME AS PASSWORDLASTCHANGEDDATETIME
    FROM [ax].RETAILSTAFFTABLE staff
    INNER JOIN [ax].HCMWORKER worker ON staff.STAFFID = worker.PERSONNELNUMBER
    INNER JOIN [ax].DIRPARTYTABLE party ON worker.PERSON = party.RECID
    INNER JOIN [ax].DIRADDRESSBOOKPARTY addressBookParty ON party.RECID = addressBookParty.PARTY
    INNER JOIN [ax].RETAILSTOREADDRESSBOOK storeAddress ON addressBookParty.ADDRESSBOOK = storeAddress.ADDRESSBOOK
    LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer ON [worker].RECID = [rmamer].MASTERENTITYRECID AND [rmamer].ISDEFAULT = 1 AND [rmamer].MASTERENTITYTYPE = 15 -- MasterEntityType = Employee.
    LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON [rmr].RESOURCEID = [rmamer].MEDIARESOURCEID 
    GROUP BY storeAddress.STORERECID, staff.STAFFID, party.NAME, rmr.RESOURCEURL, staff.PASSWORDLASTCHANGEDDATETIME
)
GO
PRINT N'Creating [crt].[MEDIAATTRIBUTESVIEW]...';


GO

CREATE VIEW [crt].[MEDIAATTRIBUTESVIEW]
WITH SCHEMABINDING AS
(
    SELECT
        era.RECID AS 'ATTRIBUTE',
        era.ATTRIBUTETYPE AS 'ATTRIBUTETYPE',
        era.NAME AS 'NAME',
		CASE erat.RECID
			WHEN rsp.IMAGESATTRIBUTETYPE THEN 41  -- Image data type
			WHEN rsp.VIDEOSATTRIBUTETYPE THEN 40  -- Video data type
		END AS DATATYPE
    FROM [ax].ECORESATTRIBUTE era
    INNER JOIN [ax].ECORESATTRIBUTETYPE erat ON erat.RECID = era.ATTRIBUTETYPE
    INNER JOIN [ax].RETAILSHAREDPARAMETERS rsp ON rsp.IMAGESATTRIBUTETYPE = erat.RECID OR rsp.VIDEOSATTRIBUTETYPE = erat.RECID
    WHERE erat.ISHIDDEN = 0
)
GO
PRINT N'Creating [crt].[PURCHASEORDERLINEVIEW]...';


GO

CREATE VIEW [crt].[PURCHASEORDERLINEVIEW] AS
(
    SELECT
        pol.[RECID],
        pol.[ORDERID],
        pol.[LINERECEIPTNUMBER],
        pol.[ITEMID],
        pol.[ITEMNAME],
        pol.[UNIQUEIDENTIFIER],
        pol.[INVENTDIMID],
        pol.[QUANTITYORDERED],
        pol.[PURCHASEQUANTITY],
        pol.[PURCHASEUNIT],
        pol.[PURCHASERECEIVED],
        pol.[PURCHASERECEIVEDNOW],
        pol.[INVENTBATCHID],
        pol.[INVENTSITEID],
        pol.[INVENTLOCATIONID],
        pol.[CONFIGID],
        pol.[INVENTSERIALID],
        pol.[INVENTSIZEID],
        pol.[INVENTCOLORID],
        pol.[INVENTSTYLEID],
        pol.[RECEIPTDATE],
        pol.[DELIVERYMETHOD]
    FROM [crt].[PURCHASEORDERLINE] pol
)
GO
PRINT N'Creating [crt].[EXCHANGERATEVIEW]...';


GO

CREATE VIEW [crt].[EXCHANGERATEVIEW] AS
(
    SELECT
        er.EXCHANGERATE,
        cp.FROMCURRENCYCODE,
        cp.TOCURRENCYCODE,
        er.VALIDFROM,
        er.VALIDTO,
        er.RECID
    FROM [ax].EXCHANGERATE er
    INNER JOIN [ax].EXCHANGERATECURRENCYPAIR cp ON cp.RECID = er.EXCHANGERATECURRENCYPAIR
    INNER JOIN [ax].RETAILSHAREDPARAMETERS rsp ON rsp.EXCHANGERATETYPE = cp.EXCHANGERATETYPE
)
GO
PRINT N'Creating [crt].[PRICEPARAMETERSVIEW]...';


GO

CREATE VIEW [crt].[PRICEPARAMETERSVIEW] AS
(
    SELECT
        pp.RECID,
        pp.SALESPRICEACCOUNTITEM,
        pp.SALESPRICEGROUPITEM,
        pp.SALESPRICEALLITEM,
        pp.SALESLINEACCOUNTITEM,
        pp.SALESLINEACCOUNTGROUP,
        pp.SALESLINEACCOUNTALL,
        pp.SALESLINEGROUPITEM,
        pp.SALESLINEGROUPGROUP,
        pp.SALESLINEGROUPALL,
        pp.SALESLINEALLITEM,
        pp.SALESLINEALLGROUP,
        pp.SALESLINEALLALL,
        pp.SALESMULTILNACCOUNTGROUP,
        pp.SALESMULTILNACCOUNTALL,
        pp.SALESMULTILNGROUPGROUP,
        pp.SALESMULTILNGROUPALL,
        pp.SALESMULTILNALLGROUP,
        pp.SALESMULTILNALLALL,
        pp.SALESENDACCOUNTALL,
        pp.SALESENDGROUPALL,
        pp.SALESENDALLALL,
		c.RECID AS CHANNELID
    FROM [ax].PRICEPARAMETERS pp
	INNER JOIN [ax].RETAILCHANNELTABLE c on c.INVENTLOCATIONDATAAREAID = pp.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILCHANNELREPORTVIEW]...';


GO
/************************************************************************************************************************************
    RetailChannelReportView: This view contains reports data for the channels.
    RETAILCHANNELREPORT - AX table that stores channel reports.
*************************************************************************************************************************************/
CREATE VIEW [crt].[RETAILCHANNELREPORTVIEW] AS
(
    SELECT
        RCP.[REPORTID],
        RCP.[REPORTDEFINITIONXML],
        RCP.[RECID],
        RPPG.[RECID] AS POSPERMISSIONGROUPRECID,
        RPPG.[POSPERMISSIONGROUPID]
    FROM [ax].RETAILCHANNELREPORT RCP INNER JOIN [ax].RETAILREPORTPERMISSIONGROUP RRPG ON RCP.RECID = RRPG.RETAILCHANNELREPORTRECID
    INNER JOIN [ax].RETAILPOSPERMISSIONGROUP RPPG ON RRPG.RETAILPOSPERMISSIONGROUPRECID = RPPG.RECID
)
GO
PRINT N'Creating [crt].[RETAILOFFLINEPENDINGTRANSACTIONCOUNTVIEW]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[RETAILOFFLINEPENDINGTRANSACTIONCOUNTVIEW] creates a view 
    about offline pending transaction count.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE VIEW [crt].[RETAILOFFLINEPENDINGTRANSACTIONCOUNTVIEW] AS
(
   SELECT COUNT(TRANSACTIONID) AS PENDINGTRANSACTIONCOUNT
   FROM ax.RETAILTRANSACTIONTABLE
)
GO
PRINT N'Creating [crt].[ORDERHISTORYVIEW]...';


GO
CREATE VIEW [crt].[ORDERHISTORYVIEW] AS
(
    SELECT RT.CHANNEL AS 'CHANNELID'
    ,RT.TRANSACTIONID AS 'TRANSACTIONID'
    ,CASE 
        WHEN (RT.SALESORDERID <> '')
            THEN RT.SALESORDERID
        ELSE ''
        END AS 'SALESID'
    ,RT.CREATEDDATETIME AS 'CREATEDDATETIME'
    ,(RT.GROSSAMOUNT * - 1.0) AS 'GROSSAMOUNT'
    ,(RT.GROSSAMOUNT * - 1.0) AS 'TOTALAMOUNT'
    ,RT.PAYMENTAMOUNT AS 'AMOUNTPAID'
    ,RT.SALESPAYMENTDIFFERENCE AS 'SALESPAYMENTDIFFERENCE'
    ,RT.TERMINAL AS 'TERMINAL'
    ,RT.STORE AS 'STORE'
    ,RT.STAFF AS 'STAFF'
    ,RT.CUSTACCOUNT AS 'CUSTOMERID'
    ,RT.RECEIPTEMAIL AS 'RECEIPTEMAIL'
    ,RT.TYPE
    ,RT.DISCAMOUNT AS 'DISCOUNTAMOUNT'
    ,ISNULL(AT.DELIVERYNAME,DPT.NAME) AS 'NAME'
    ,COALESCE((
        SELECT SUM(TAXAMOUNT * -1.0)
        FROM [ax].RETAILTRANSACTIONSALESTRANS RTST
        WHERE RTST.TRANSACTIONID = RT.TRANSACTIONID
            AND RTST.TERMINALID = RT.TERMINAL
            AND RTST.STORE = RT.STORE
            AND RTST.CHANNEL = RT.CHANNEL
            AND RTST.TRANSACTIONSTATUS <> 1	), 0) AS 'TAXAMOUNT' -- Excludes the voided line
    ,COALESCE((
        SELECT TOP 1 ISINCLUDEDINPRICE
        FROM [ax].RETAILTRANSACTIONTAXTRANS TT
        WHERE TT.TRANSACTIONID = RT.TRANSACTIONID
            AND TT.TERMINALID = RT.TERMINAL
            AND TT.STOREID = RT.STORE
            AND TT.CHANNEL = RT.CHANNEL ), 0) AS 'ISTAXINCLUDEDINPRICE'
    ,COALESCE((
        SELECT SUM(CALCULATEDAMOUNT)
        FROM [ax].RETAILTRANSACTIONMARKUPTRANS MT
        WHERE MT.TRANSACTIONID = RT.TRANSACTIONID
            AND MT.TERMINALID = RT.TERMINAL
            AND MT.STORE = RT.STORE
            AND MT.CHANNEL = RT.CHANNEL), 0) AS 'CHARGEAMOUNT'
    ,RT.CHANNELREFERENCEID AS 'CHANNELREFERENCEID'
    ,RT.INVENTLOCATIONID AS 'INVENTLOCATIONID'
    ,RT.INVENTSITEID AS 'INVENTSITEID'
    ,RT.DLVMODE AS 'DELIVERYMODE'
    ,RT.SHIPPINGDATEREQUESTED AS 'REQUESTEDDELIVERYDATE'
    ,RT.LOGISTICSPOSTALADDRESS AS 'LOGISTICSPOSTALADDRESS'
    ,RT.RECEIPTID AS 'RECEIPTID'
    ,RT.LOYALTYCARDID AS 'LOYALTYCARDID'
    ,RT.ENTRYSTATUS AS 'ENTRYSTATUS'
    ,CASE 
        WHEN (
                AT.EMAIL IS NOT NULL
                AND AT.EMAIL <> ''
                )
            THEN AT.EMAIL
        WHEN (
                RT.RECEIPTEMAIL IS NOT NULL
                AND RT.RECEIPTEMAIL <> ''
                )
            THEN RT.RECEIPTEMAIL
        ELSE CEV.EMAIL
        END AS 'EMAIL'
    ,ISNULL(AT.PHONE, '') AS 'PHONE'
    ,0 AS 'STATUS'
    ,DATEADD(second, RT.TRANSTIME, CAST(RT.TRANSDATE AS DATETIME)) AS 'BEGINDATETIME'
    ,RT.BUSINESSDATE
    ,RT.STATEMENTCODE
    ,RT.CURRENCY AS 'CURRENCY'
    ,RT.EXCHRATE / 100.00 AS 'EXCHRATE' --ePOS behaviour
    ,RT.COMMENT AS 'COMMENT'
    ,RT.INVOICECOMMENT AS 'INVOICECOMMENT'
    ,CAST(RT.CREATEDOFFLINE AS BIT) AS 'ISCREATEDOFFLINE'
    ,NULL AS 'CANCELLATIONCHARGE'
    ,NULL AS 'DEPOSITOVERRIDE'
    ,NULL AS 'REQUIREDDEPOSIT'
    ,NULL AS 'CALCULATEDDEPOSIT'
    ,NULL AS 'PREPAYMENTPAID'
    ,NULL AS 'PREPAYMENTINVOICED'
    ,NULL AS 'EXPIRYDATE'
    ,NULL AS 'CUSTOMERORDERTYPE'
    ,ISNULL((
            SELECT TOP 1 1 AS 'HASREDEEMLINE'
            FROM [ax].RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS RPT
            WHERE RPT.DATAAREAID = RT.DATAAREAID
                AND RPT.TRANSACTIONID = RT.TRANSACTIONID
                AND RPT.TERMINALID = RT.TERMINAL
                AND RPT.STOREID = RT.STORE
                AND RPT.CHANNEL = RT.CHANNEL
                AND RPT.ENTRYTYPE = 2
            ), 0) AS 'HASLOYALTYPAYMENT' -- EntryType 2 is Redeem. HASLOYALTYPAYMENT = 1 if true, 0 if false.
    FROM [ax].RETAILTRANSACTIONTABLE RT
    LEFT JOIN [ax].RETAILTRANSACTIONADDRESSTRANS AT ON AT.TRANSACTIONID = RT.TRANSACTIONID
        AND AT.TERMINAL = RT.TERMINAL
        AND AT.STORE = RT.STORE
        AND AT.CHANNEL = RT.CHANNEL
        AND AT.SALELINENUM = 0 -- SaleLineNum 0 = Header level address
    LEFT JOIN (
        SELECT DISTINCT ACCOUNTNUMBER
            ,PARTY
            ,DATAAREAID
        FROM [crt].[CUSTOMERSVIEW]
        ) CA ON CA.ACCOUNTNUMBER = RT.CUSTACCOUNT
        AND CA.DATAAREAID = RT.DATAAREAID
    LEFT JOIN (
        SELECT TOP 1 ACCOUNTNUMBER
            ,PARTY
            ,DATAAREAID
            ,EMAIL
        FROM [crt].[CUSTOMERSVIEW]
        ) CEV ON CA.ACCOUNTNUMBER = CEV.ACCOUNTNUMBER
        AND CA.DATAAREAID = CEV.DATAAREAID
        AND CA.PARTY = CEV.PARTY
    LEFT JOIN [ax].DIRPARTYTABLE DPT ON CA.PARTY = DPT.RECID
	WHERE (RT.TYPE = 2 -- Cash & Carry
	       OR RT.TYPE = 27 -- Pending sales order
		   OR RT.TYPE = 31 -- Async customer order
		   OR RT.TYPE = 33 -- Async customer quote
		) AND RT.ENTRYSTATUS = 0 -- Normal

UNION

    SELECT RT.CHANNEL AS 'CHANNELID'
    ,RT.TRANSACTIONID AS 'TRANSACTIONID'
    ,CASE 
        WHEN (RT.SALESORDERID <> '')
            THEN RT.SALESORDERID
        ELSE COALESCE(OS.SALESID, '')
        END AS 'SALESID'
    ,RT.CREATEDDATETIME AS 'CREATEDDATETIME'
    ,(RT.GROSSAMOUNT * - 1.0) AS 'GROSSAMOUNT'
    ,(RT.GROSSAMOUNT * - 1.0) AS 'TOTALAMOUNT'
    ,RT.PAYMENTAMOUNT AS 'AMOUNTPAID'
    ,RT.SALESPAYMENTDIFFERENCE AS 'SALESPAYMENTDIFFERENCE'
    ,RT.TERMINAL AS 'TERMINAL'
    ,RT.STORE AS 'STORE'
    ,RT.STAFF AS 'STAFF'
    ,RT.CUSTACCOUNT AS 'CUSTOMERID'
    ,RT.RECEIPTEMAIL AS 'RECEIPTEMAIL'
    ,RT.TYPE
    ,RT.DISCAMOUNT AS 'DISCOUNTAMOUNT'
    ,ISNULL(AT.DELIVERYNAME,DPT.NAME) AS 'NAME'
    ,COALESCE((
        SELECT SUM(TAXAMOUNT * -1.0)
        FROM [ax].RETAILTRANSACTIONSALESTRANS RTST
        WHERE RTST.TRANSACTIONID = RT.TRANSACTIONID
            AND RTST.TERMINALID = RT.TERMINAL
            AND RTST.STORE = RT.STORE
            AND RTST.CHANNEL = RT.CHANNEL
            AND RTST.TRANSACTIONSTATUS <> 1	), 0) AS 'TAXAMOUNT' -- Excludes the voided line
    ,COALESCE((
        SELECT TOP 1 ISINCLUDEDINPRICE
        FROM [ax].RETAILTRANSACTIONTAXTRANS TT
        WHERE TT.TRANSACTIONID = RT.TRANSACTIONID
            AND TT.TERMINALID = RT.TERMINAL
            AND TT.STOREID = RT.STORE
            AND TT.CHANNEL = RT.CHANNEL ), 0) AS 'ISTAXINCLUDEDINPRICE'
    ,COALESCE((
        SELECT SUM(CALCULATEDAMOUNT)
        FROM [ax].RETAILTRANSACTIONMARKUPTRANS MT
        WHERE MT.TRANSACTIONID = RT.TRANSACTIONID
            AND MT.TERMINALID = RT.TERMINAL
            AND MT.STORE = RT.STORE
            AND MT.CHANNEL = RT.CHANNEL), 0) AS 'CHARGEAMOUNT'
    ,RT.CHANNELREFERENCEID AS 'CHANNELREFERENCEID'
    ,RT.INVENTLOCATIONID AS 'INVENTLOCATIONID'
    ,RT.INVENTSITEID AS 'INVENTSITEID'
    ,RT.DLVMODE AS 'DELIVERYMODE'
    ,RT.SHIPPINGDATEREQUESTED AS 'REQUESTEDDELIVERYDATE'
    ,RT.LOGISTICSPOSTALADDRESS AS 'LOGISTICSPOSTALADDRESS'
    ,RT.RECEIPTID AS 'RECEIPTID'
    ,RT.LOYALTYCARDID AS 'LOYALTYCARDID'
    ,RT.ENTRYSTATUS AS 'ENTRYSTATUS'
    ,CASE 
        WHEN (
                AT.EMAIL IS NOT NULL
                AND AT.EMAIL <> ''
                )
            THEN AT.EMAIL
        WHEN (
                RT.RECEIPTEMAIL IS NOT NULL
                AND RT.RECEIPTEMAIL <> ''
                )
            THEN RT.RECEIPTEMAIL
        ELSE CEV.EMAIL
        END AS 'EMAIL'
    ,ISNULL(AT.PHONE, '') AS 'PHONE'
    ,ISNULL(OS.STATUS, 0) AS 'STATUS'
    ,DATEADD(second, RT.TRANSTIME, CAST(RT.TRANSDATE AS DATETIME)) AS 'BEGINDATETIME'
    ,RT.BUSINESSDATE
    ,RT.STATEMENTCODE
    ,RT.CURRENCY AS 'CURRENCY'
    ,RT.EXCHRATE / 100.00 AS 'EXCHRATE' --ePOS behaviour
    ,RT.COMMENT AS 'COMMENT'
    ,RT.INVOICECOMMENT AS 'INVOICECOMMENT'
    ,CAST(RT.CREATEDOFFLINE AS BIT) AS 'ISCREATEDOFFLINE'
    ,CO.CANCELLATIONCHARGE AS 'CANCELLATIONCHARGE'
    ,CO.DEPOSITOVERRIDE AS 'DEPOSITOVERRIDE'
    ,CO.REQUIREDDEPOSIT AS 'REQUIREDDEPOSIT'
    ,CO.CALCULATEDDEPOSIT AS 'CALCULATEDDEPOSIT'
    ,CO.PREPAYMENTPAID AS 'PREPAYMENTPAID'
    ,CO.PREPAYMENTINVOICED AS 'PREPAYMENTINVOICED'
    ,CO.QUOTEEXPIRATIONDATE AS 'EXPIRYDATE'
    ,CO.CUSTOMERORDERTYPE AS 'CUSTOMERORDERTYPE'
    ,ISNULL((
            SELECT TOP 1 1 AS 'HASREDEEMLINE'
            FROM [ax].RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS RPT
            WHERE RPT.DATAAREAID = RT.DATAAREAID
                AND RPT.TRANSACTIONID = RT.TRANSACTIONID
                AND RPT.TERMINALID = RT.TERMINAL
                AND RPT.STOREID = RT.STORE
                AND RPT.CHANNEL = RT.CHANNEL
                AND RPT.ENTRYTYPE = 2
            ), 0) AS 'HASLOYALTYPAYMENT' -- EntryType 2 is Redeem. HASLOYALTYPAYMENT = 1 if true, 0 if false.
	FROM [ax].RETAILTRANSACTIONTABLE RT
	INNER JOIN ( 
		SELECT MIN(TRANSACTIONID) AS TRANSACTIONID
		FROM [ax].RETAILTRANSACTIONTABLE 
		WHERE TYPE = 19 -- Customer Order
		GROUP BY SALESORDERID) FCO ON FCO.TRANSACTIONID = RT.TRANSACTIONID
	LEFT JOIN [ax].RETAILTRANSACTIONORDERSTATUS OS ON OS.TRANSACTIONID = RT.TRANSACTIONID
		AND OS.TERMINAL = RT.TERMINAL
		AND OS.STORE = RT.STORE
		AND OS.CHANNEL = RT.CHANNEL
	LEFT JOIN [ax].RETAILTRANSACTIONADDRESSTRANS AT ON AT.TRANSACTIONID = RT.TRANSACTIONID
		AND AT.TERMINAL = RT.TERMINAL
		AND AT.STORE = RT.STORE
		AND AT.CHANNEL = RT.CHANNEL
		AND AT.SALELINENUM = 0 -- SaleLineNum 0 = Header level address
	LEFT JOIN [crt].[CUSTOMERORDERTRANSACTION] CO ON CO.CHANNEL = RT.CHANNEL
		AND CO.STORE = RT.STORE
		AND CO.TERMINAL = RT.TERMINAL
		AND CO.TRANSACTIONID = RT.TRANSACTIONID
		AND CO.DATAAREAID = RT.DATAAREAID
	LEFT JOIN (
		SELECT DISTINCT ACCOUNTNUMBER
			,PARTY
			,DATAAREAID
		FROM [crt].[CUSTOMERSVIEW]
		) CA ON CA.ACCOUNTNUMBER = RT.CUSTACCOUNT
		AND CA.DATAAREAID = RT.DATAAREAID
	LEFT JOIN (
		SELECT TOP 1 ACCOUNTNUMBER
			,PARTY
			,DATAAREAID
			,EMAIL
		FROM [crt].[CUSTOMERSVIEW]
		) CEV ON CA.ACCOUNTNUMBER = CEV.ACCOUNTNUMBER
		AND CA.DATAAREAID = CEV.DATAAREAID
		AND CA.PARTY = CEV.PARTY
	LEFT JOIN [ax].DIRPARTYTABLE DPT ON CA.PARTY = DPT.RECID
)
GO
PRINT N'Creating [crt].[INFOCODESPECIFICVIEW]...';


GO

CREATE VIEW [crt].[INFOCODESPECIFICVIEW] AS
(
	SELECT 
		ic.[RECID],
		ic.[REASONCODEID],
		ic.[DATAAREAID],
		ic.[PRIORITY],
		ic.[ONCEPERTRANSACTION],
		ic.[PRINTPROMPTONRECEIPT],
		ic.[PRINTINPUTONRECEIPT],
		ic.[PRINTINPUTNAMEONRECEIPT],
		ic.[INPUTTYPE],
		ic.[MINIMUMVALUE],
		ic.[MAXIMUMVALUE],
		ic.[MINIMUMLENGTH],
		ic.[MAXIMUMLENGTH],
		ic.[INPUTREQUIRED],
		ic.[LINKEDREASONCODEID],
		ic.[RANDOMFACTOR],
		ic.[INPUTREQUIREDSPECIFIC],
		ic.[WHENREQUIRED],
		ic.[SEQUENCE],
		ic.[REFRELATION],
		ic.[REFRELATION2],
		ic.[REFRELATION3],
		ic.[REFTABLEID]
	 FROM 
	 (
		SELECT 
			icw.[GROUPID],
			icw.[RECID],
			icw.[REASONCODEID],
			icw.[DATAAREAID],
			icw.[PRIORITY],
			icw.[ONCEPERTRANSACTION],
			icw.[PRINTPROMPTONRECEIPT],
			icw.[PRINTINPUTONRECEIPT],
			icw.[PRINTINPUTNAMEONRECEIPT],
			icw.[INPUTTYPE],
			icw.[MINIMUMVALUE],
			icw.[MAXIMUMVALUE],
			icw.[MINIMUMLENGTH],
			icw.[MAXIMUMLENGTH],
			icw.[INPUTREQUIRED],
			icw.[LINKEDREASONCODEID],
			icw.[RANDOMFACTOR],
			icts.[INPUTREQUIRED] AS 'INPUTREQUIREDSPECIFIC',
			icts.[WHENREQUIRED],
			icts.[SEQUENCE],
			icts.[REFRELATION],
			icts.[REFRELATION2],
			icts.[REFRELATION3],
			icts.[REFTABLEID],
			row_number() OVER (PARTITION BY icw.[DATAAREAID], icts.[REFRELATION], icts.[REFRELATION2], icts.[REFRELATION3], icw.[REASONCODEID] ORDER BY icts.[SEQUENCE]) AS 'ROLLINGNUMBER'
		FROM [crt].[INFOCODETABLESPECIFICVIEW] icts
		INNER JOIN [crt].[INFOCODEVIEW] icw
			ON icts.[REASONCODEID] = icw.[GROUPID]
	) ic 
	-- select only first entry of specific info code
	WHERE ic.[ROLLINGNUMBER] = 1
)
GO
PRINT N'Creating [crt].[REFERENCEATTRIBUTEVIEW]...';


GO

CREATE VIEW [crt].[REFERENCEATTRIBUTEVIEW] WITH SCHEMABINDING AS
(
    SELECT
        era.RECID AS ATTRIBUTE,
        errv.REFRECID AS REFERENCEDATTRIBUTE
    FROM [ax].ECORESATTRIBUTE era
    JOIN [ax].ECORESATTRIBUTETYPE erat ON erat.RECID = era.ATTRIBUTETYPE
    JOIN [ax].ECORESATTRIBUTEDEFAULTVALUE eradv ON era.RECID = eradv.ATTRIBUTE
    JOIN [ax].ECORESREFERENCEVALUE errv ON errv.RECID = eradv.VALUE
    WHERE erat.DATATYPE = 20    -- Reference attribute type
)
GO
PRINT N'Creating [crt].[REFERENCEATTRIBUTEVIEW].[IX_REFERENCEATTRIBUTEVIEW_ATTRIBUTE]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_REFERENCEATTRIBUTEVIEW_ATTRIBUTE]
    ON [crt].[REFERENCEATTRIBUTEVIEW]([ATTRIBUTE] ASC);


GO
PRINT N'Creating [crt].[REFERENCEATTRIBUTEVIEW].[IX_REFERENCEATTRIBUTEVIEW_REFERENCEDATTRIBUTE]...';


GO
CREATE NONCLUSTERED INDEX [IX_REFERENCEATTRIBUTEVIEW_REFERENCEDATTRIBUTE]
    ON [crt].[REFERENCEATTRIBUTEVIEW]([REFERENCEDATTRIBUTE] ASC)
    INCLUDE([ATTRIBUTE]);


GO
PRINT N'Creating [crt].[ASSORTEDPRODUCTSVIEW]...';


GO
/**
 *  Return products assorted to the channel for a date range.
 *  This view will return multiple records for a channel-product within a date range, thus one should only use this view as filter.
 *  Recommended join is with columns: CHANNELID, PRODUCTID, VALIDFROM, VALIDTO.
 *  ISREMOTE equality against 0 or 1 will reduce the query plan complexity by only processing the assortment required.
 */
CREATE VIEW [crt].[ASSORTEDPRODUCTSVIEW] AS
(    
    SELECT
        [rct].RECID AS CHANNELID,
        [par].PRODUCTID,
        [par].VALIDFROM,
        [par].VALIDTO,
        CAST(0 AS BIT)   AS ISREMOTE
    FROM [crt].PRODUCTASSORTMENTRULES_V2 par
        INNER JOIN [ax].RETAILASSORTMENTLOOKUPCHANNELGROUP ralcg ON [ralcg].ASSORTMENTID = [par].ASSORTMENTID
            INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].OMOPERATINGUNITID = [ralcg].OMOPERATINGUNITID
    
    UNION ALL

    -- temporary assorted variants
    SELECT
        CHANNELID,
        variantMap.RECID            AS PRODUCTID,

        -- explicitly cast to DATA to avoid casting [crt].PRODUCTASSORTMENTRULES_V2 dates to date time 
        CAST(tempAssortment.VALIDFROM AS DATE)     AS VALIDFROM,
        CAST(tempAssortment.VALIDTO AS DATE)       AS VALIDTO,
        CAST(1 AS BIT)              AS ISREMOTE
    FROM [crt].TMPASSORTEDPRODUCTS tempAssortment
        INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT variantMap ON variantMap.PRODUCTMASTER = tempAssortment.PRODUCTID

    UNION ALL

    -- temporary assorted masters and standalones
    SELECT
        tempAssortment.CHANNELID,
        tempAssortment.PRODUCTID        AS PRODUCTID,
        CAST(tempAssortment.VALIDFROM AS DATE)     AS VALIDFROM,
        CAST(tempAssortment.VALIDTO AS DATE)       AS VALIDTO,
        CAST(1 AS BIT)              AS ISREMOTE
    FROM [crt].TMPASSORTEDPRODUCTS tempAssortment
)
GO
PRINT N'Creating [crt].[RETAILREPORTLOCALIZEDSTRINGVIEW]...';


GO
/************************************************************************************************************************************
    RetailReportLocalizedStringView: This view contains localized strings for reports.
    RETAILREPORTLOCALIZEDSTRING - AX table that stores localized strings for reports.
*************************************************************************************************************************************/
CREATE VIEW [crt].[RETAILREPORTLOCALIZEDSTRINGVIEW] AS
(
    SELECT
        RRLS.[STRINGID],
        RRLS.[STRINGVALUE],
        RRLS.[LOCALECODE],
        RRLS.[RECID]
    FROM [ax].[RETAILREPORTLOCALIZEDSTRING] AS RRLS
)
GO
PRINT N'Creating [crt].[NONSALESTRANSACTIONSVIEW]...';


GO

CREATE VIEW [crt].[NONSALESTRANSACTIONSVIEW] AS
(
    SELECT 
        CASE
            WHEN RT.TYPE = 4 THEN (-1) * ISNULL(RPT.AMOUNTTENDERED, 0) -- For tender removal, amount is always negative in the balance, so we negate it
            ELSE ISNULL(RPT.AMOUNTTENDERED, 0)                         -- For float entry and starting amount, amount is positive in the balance
        END AS AMOUNT,                                                 -- amount in store currency
        CASE
            WHEN RT.TYPE = 4 THEN (-1) * ISNULL(RPT.AMOUNTCUR, 0)
            ELSE ISNULL(RPT.AMOUNTCUR, 0)
        END AS AMOUNTCUR,                                              -- amount in transaction currency
        RT.TRANSACTIONID AS TRANSACTIONID,
        RT.CURRENCY,                                                   -- store currency code
        RPT.CURRENCY AS TENDERCUR,                                     -- transaction currency code
        RT.BATCHID AS SHIFTID,
        RT.TYPE,
        RT.BATCHID,
        RT.BATCHTERMINALID,
        RT.STAFF,
        RT.TERMINAL,
        RT.CHANNEL,
        RT.DESCRIPTION,
        RPT.TENDERTYPE,
        RT.CREATEDDATETIME,
        RT.STORE
    FROM [ax].RETAILTRANSACTIONTABLE RT 
    INNER JOIN [ax].RETAILTRANSACTIONPAYMENTTRANS RPT 
    ON RT.TRANSACTIONID = RPT.TRANSACTIONID AND 
    (RT.TYPE = 20 OR RT.TYPE = 5 OR RT.TYPE = 4)                       -- Select only StartDeclaration(20), FloatEntry(5) TenderRemoval(4)
)
GO
PRINT N'Creating [crt].[CHANNELPROFILEVIEW]...';


GO

CREATE VIEW [crt].[CHANNELPROFILEVIEW] AS
(
	SELECT 
        cp.[RECID],
        cp.[CHANNELPROFILETYPE],
        cp.[NAME],
        channelExt.[CHANNEL]
    FROM [ax].RETAILCHANNELPROFILE AS cp
    INNER JOIN [ax].RETAILCHANNELTABLEEXT AS channelExt ON channelExt.CHANNELPROFILE = cp.RECID
)
GO
PRINT N'Creating [crt].[WAREHOUSEADDRESSVIEW]...';


GO

CREATE VIEW [crt].[WAREHOUSEADDRESSVIEW] AS
(
    SELECT
       il.[DATAAREAID],
       il.[INVENTLOCATIONID],
       lpa.[COUNTRYREGIONID],
       lpa.[ZIPCODE],
       lpa.[STATE],
       lpa.[COUNTY],
       lpa.[CITY],
       lpa.[STREET],
       lpa.[STREETNUMBER],
       lpa.[DISTRICTNAME],
       lpa.[RECID],
       ISNULL(lacr.ISOCODE, '') AS ISOCODE,
       lpa.[VALIDFROM],
       lpa.[VALIDTO]
    FROM [ax].INVENTLOCATION il
    INNER JOIN [ax].INVENTLOCATIONLOGISTICSLOCATION illl ON il.RECID = illl.INVENTLOCATION
    INNER JOIN [ax].LOGISTICSLOCATION ll ON ll.RECID = illl.LOCATION
    INNER JOIN [ax].LOGISTICSPOSTALADDRESS lpa ON lpa.LOCATION = ll.RECID
    LEFT JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION lacr ON lacr.COUNTRYREGIONID = lpa.COUNTRYREGIONID
    WHERE
        lpa.ISPRIVATE = 0
        AND illl.ISPRIMARY = 1
        AND illl.ISPOSTALADDRESS = 1
)
GO
PRINT N'Creating [crt].[HARDWAREPROFILESCANNERSVIEW]...';


GO

CREATE VIEW [crt].[HARDWAREPROFILESCANNERSVIEW] AS
(
  SELECT 
    PROFILEID AS 'PROFILEID',
    SCANNER AS 'SCANNERTYPE',
    SCANNERDESCRIPTION AS 'SCANNERDESCRIPTIONVALUE',
    SCANNERDEVICENAME AS 'SCANNERDEVICENAMEVALUE'
    FROM
  [ax].[RETAILHARDWAREPROFILE] rhp
  
  UNION ALL

  SELECT
    PROFILEID AS 'PROFILEID',
    SCANNER2 AS 'SCANNERTYPE',
    SCANNER2DESCRIPTION AS 'SCANNERDESCRIPTIONVALUE',
    SCANNER2DEVICENAME AS 'SCANNERDEVICENAMEVALUE'
  FROM
  [ax].[RETAILHARDWAREPROFILE] rhp
)
GO
PRINT N'Creating [crt].[CATEGORYITEMSVIEW]...';


GO

CREATE VIEW [crt].[CATEGORYITEMSVIEW] AS
(
    -- get items assigned to a retail category
    SELECT
        catlookup.CATEGORY AS CATEGORYID,
        item.ITEMID AS ITEMID,
        NULL AS INVENTDIMID,
        item.DATAAREAID
    FROM [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] AS catlookup
    INNER JOIN [ax].[ECORESPRODUCTCATEGORY] AS prodcat ON prodcat.CATEGORY = catlookup.CONTAINEDCATEGORY
    INNER JOIN [ax].[INVENTTABLE] AS item ON item.PRODUCT = prodcat.PRODUCT

    UNION ALL

    -- get variants assigned to a supplemental category
    SELECT
        catlookup.CATEGORY as CATEGORYID,
        dim.ITEMID as ITEMID,
        dim.INVENTDIMID as INVENTDIMID,
        dim.DATAAREAID
    FROM [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] AS catlookup
    INNER JOIN [ax].[RETAILSPECIALCATEGORYMEMBER] AS spmem ON spmem.CATEGORY = catlookup.CONTAINEDCATEGORY
    INNER JOIN [ax].[RETAILGROUPMEMBERLINE] AS srgl ON srgl.RECID = spmem.RETAILGROUPMEMBER
    INNER JOIN [ax].[INVENTDIMCOMBINATION] AS dim ON dim.DISTINCTPRODUCTVARIANT = srgl.VARIANT
)
GO
PRINT N'Creating [crt].[RETAILOFFLINESYNCSTATSVIEW]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[RETAILOFFLINESYNCSTATSVIEW] creates a view 
    about offline synchronization statistics.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE VIEW [crt].[RETAILOFFLINESYNCSTATSVIEW] AS
(
    SELECT t1.JOBDESCRIPTION,
        (CASE 
	       WHEN t1.STATUS = 0 THEN 'STARTED'
		   WHEN t1.STATUS = 1 THEN 'AVAILABLE'
		   WHEN t1.STATUS = 2 THEN 'REQUESTED'
		   WHEN t1.STATUS = 3 THEN 'DOWNLOADED'
           WHEN t1.STATUS = 4 THEN 'OK'
		   WHEN t1.STATUS = 5 THEN 'CANCELED'
		   WHEN t1.STATUS = 6 THEN 'CREATEFAILED'
		   WHEN t1.STATUS = 7 THEN 'DOWNLOADFAILED'
		   WHEN t1.STATUS = 8 THEN 'APPLYFAILED'
		   ELSE 'INVALIDSTATUS'
		   END) AS STATUS,
        (CASE 
           WHEN t1.DATEAPPLIED != NULL THEN t1.DATEAPPLIED
           ELSE t1.DATEREQUESTED
           END) AS LASTSYNCDATETIME,
		(CASE 
		   WHEN t1.FILESIZE/1000000 < 1 THEN '< 1MB'
		   ELSE CONVERT(VARCHAR(20), t1.FILESIZE/1000000) + 'MB'
		   END) AS FILESIZE,
        0 AS ISUPLOADJOB
		   
    FROM
    (
        SELECT (ISNULL(JOBID, '') + ' - ' + ISNULL(JOBDESCRIPTION,'')) AS JOBDESCRIPTION,
               STATUS,
               DATEREQUESTED,
               DATEAPPLIED,
               FILESIZE
        FROM [crt].[DOWNLOADSESSION]
    ) AS t1
    UNION 
    SELECT t2.JOBDESCRIPTION,
        (CASE 
	      WHEN t2.STATUS = 1 THEN 'CREATED'
          WHEN t2.STATUS = 2 THEN 'OK'
		  WHEN t2.STATUS = 3 THEN 'APPLYFAILED'
		  ELSE 'INVALIDSTATUS'
		  END) AS STATUS,
        (CASE 
          WHEN t2.DATEUPLOADED != NULL THEN t2.DATEUPLOADED
          ELSE t2.DATECREATED
          END) AS LASTSYNCDATETIME,
         (CASE 
		   WHEN t2.FILESIZE/1000000 < 1 THEN '< 1MB'
		   ELSE CONVERT(VARCHAR(20), t2.FILESIZE/1000000) + 'MB'
		   END) AS FILESIZE,
        1 AS ISUPLOADJOB
    FROM
    (
       SELECT (ISNULL(JOBID, '') + ' - ' + ISNULL(JOBDESCRIPTION,'')) AS JOBDESCRIPTION,
              STATUS,
			  DATECREATED,
              DATEUPLOADED,
              FILESIZE
       FROM [crt].[UPLOADSESSION]
    ) AS t2
)
GO
PRINT N'Creating [crt].[GETNEARBYSTORESFUNCTION]...';


GO

CREATE FUNCTION [crt].[GETNEARBYSTORESFUNCTION]
(
    @bi_ChannelId       BIGINT,
    @f_Latitude         FLOAT,
    @f_Longitude        FLOAT,
    @f_SearchDistance   FLOAT,
    @f_UnitConversion   FLOAT
)
RETURNS @GETNEARBYSTORESRESULT TABLE
(
    [DISTANCE] [FLOAT] NULL,
    [STORENUMBER] [nvarchar](10) NOT NULL,
    [NAME] [nvarchar](100) NOT NULL,
    [CHANNELID] [bigint] NOT NULL,
    [INVENTLOCATION] [nvarchar](10) NOT NULL,
    [ADDRESS] [nvarchar](250) NULL,
    [COUNTRYREGIONID] [nvarchar](10) NULL,
    [ZIPCODE] [nvarchar](10) NULL,
    [STATE] [nvarchar](10) NULL,
    [STATENAME] [nvarchar](60) NULL,
    [COUNTY] [nvarchar](10) NULL,
    [COUNTYNAME] [nvarchar](60) NULL,
    [CITY] [nvarchar](60) NULL,
    [STREET] [nvarchar](250) NULL,
    [LATITUDE] [numeric](32, 16) NULL,
    [LONGITUDE] [numeric](32, 16) NULL,
    [STREETNUMBER] [nvarchar](20) NULL,
    [BUILDINGCOMPLIMENT] [nvarchar](60) NULL,
    [POSTBOX] [nvarchar](20) NULL,
    [DISTRICTNAME] [nvarchar](60) NULL,
    [MODIFIEDDATETIME] [datetime] NULL,
    [RECID] [bigint] NOT NULL,
    [POSTALADDRESSRECID] [bigint] NULL,
    [OPENFROM] [int] DEFAULT(0),
    [OPENTO] [int] DEFAULT(0)
)
AS
BEGIN
    DECLARE @geo_CenterGeolocation geography;
    DECLARE @geo_ChannelGeolocation geography;
    DECLARE @nvc_DataAreaId NVARCHAR(4);

    SELECT @nvc_DataAreaId = rct.INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId

    DECLARE @STORES TABLE(CHANNELID bigint NOT NULL PRIMARY KEY);

    INSERT INTO @STORES(CHANNELID)
    SELECT DISTINCT STORE
    FROM [ax].RETAILSTORELOCATORGROUPMEMBER rslgm
    INNER JOIN [ax].RETAILSTORELOCATORGROUP rslg ON rslg.RECID = rslgm.LOCATORGROUP
    INNER JOIN [ax].RETAILSTORELOCATORGROUPOWNER rslgo ON rslgo.LOCATORGROUP = rslg.RECID
    WHERE rslgo.CHANNEL = @bi_ChannelId

    -- 4326 maps to the WGS 84 spatial reference system. Use link to see more info.
    -- http://msdn.microsoft.com/en-us/library/bb964707.aspx
    SET @geo_CenterGeolocation = geography::STGeomFromText('POINT(' + CONVERT(VARCHAR(100), @f_Longitude) + ' ' +  CONVERT(VARCHAR(100), @f_Latitude) + ')', 4326)
    SELECT @geo_ChannelGeolocation = geography::STGeomFromText('POINT(' + CONVERT(VARCHAR(100), sv.LONGITUDE) + ' ' +  CONVERT(VARCHAR(100), sv.LATITUDE) + ')', 4326) FROM [crt].STOREVIEW sv WHERE sv.CHANNELID = @bi_ChannelId
    -- if the channel doesn't have a geo location then calculate a distance from a center point
    IF @geo_ChannelGeolocation IS NULL SET @geo_ChannelGeolocation = @geo_CenterGeolocation

    INSERT @GETNEARBYSTORESRESULT
    SELECT
        (ss.[GEOLOCATION].STDistance(@geo_ChannelGeolocation)) / @f_UnitConversion AS DISTANCE
        ,ss.[STORENUMBER]
        ,ss.[STORENAME]
        ,ss.[CHANNELID]
        ,ss.[INVENTLOCATION]
        ,ss.[STOREADDRESS]
        ,ss.[COUNTRYREGIONID]
        ,ss.[ZIPCODE]
        ,ss.[STATE]
        ,ss.[STATENAME]
        ,ss.[COUNTY]
        ,ss.[COUNTYNAME]
        ,ss.[CITY]
        ,ss.[STREET]
        ,ss.[LATITUDE]
        ,ss.[LONGITUDE]
        ,ss.[STREETNUMBER]
        ,ss.[BUILDINGCOMPLIMENT]
        ,ss.[POSTBOX]
        ,ss.[DISTRICTNAME]
        ,ss.[MODIFIEDDATETIME]
        ,ss.[RECID]
        ,ss.[POSTALADDRESSRECID]
        ,ss.[OPENFROM]
        ,ss.[OPENTO]
    FROM (
        SELECT
            sv.[STORENUMBER],
            sv.[STORENAME],
            sv.[CHANNELID],
            sv.[INVENTLOCATION],
            sv.[STOREADDRESS],
            sv.[COUNTRYREGIONID],
            sv.[ZIPCODE],
            sv.[STATE],
            sv.[STATENAME],
            sv.[COUNTY],
            sv.[COUNTYNAME],
            sv.[CITY],
            sv.[STREET],
            sv.[LATITUDE],
            sv.[LONGITUDE],
            sv.[STREETNUMBER],
            sv.[BUILDINGCOMPLIMENT],
            sv.[POSTBOX],
            sv.[DISTRICTNAME],
            sv.[MODIFIEDDATETIME],
            sv.[RECID],
            sv.[POSTALADDRESSRECID],
            sv.[OPENFROM],
            sv.[OPENTO],
            sv.[DATAAREAID],
            geography::STGeomFromText('POINT(' + CONVERT(VARCHAR(100), sv.LONGITUDE) + ' ' +  CONVERT(VARCHAR(100), sv.LATITUDE) + ')', 4326) AS 'GEOLOCATION'
        FROM crt.STOREVIEW sv
        INNER JOIN @STORES strs ON strs.CHANNELID = sv.CHANNELID
    ) ss
    WHERE
        (@f_SearchDistance = 0 -- if distance is 0 geolocation is not taken into account
            OR ss.GEOLOCATION.STDistance(@geo_CenterGeolocation) <= (@f_SearchDistance * @f_UnitConversion))
        AND ss.DATAAREAID = @nvc_DataAreaId
    ORDER BY DISTANCE

    RETURN
END;
GO
PRINT N'Creating [crt].[GETCHILDCATEGORYIDSRECURSIVELY]...';


GO

-- Get the descendant categories using SQL CTE
CREATE FUNCTION [crt].[GETCHILDCATEGORYIDSRECURSIVELY]
(
    @ParentCategoryID BIGINT
)
RETURNS @CategoryIdResult TABLE
(
    [RECID] BIGINT NOT NULL
)
AS
BEGIN
    WITH c AS (
        SELECT DISTINCT
            cchv.RECID as Cid,
            cchv.PARENTCATEGORY as Pid
        FROM [crt].CHANNELCATEGORYHIERARCHYVIEW cchv
        WHERE cchv.PARENTCATEGORY  = @ParentCategoryID

        UNION ALL

        SELECT
            cchv.RECID as Cid,
            c.Pid
        FROM [crt].CHANNELCATEGORYHIERARCHYVIEW cchv
        INNER JOIN c ON cchv.PARENTCATEGORY = c.Cid
    )

    INSERT @CategoryIdResult
    SELECT DISTINCT Cid
    FROM c
    WHERE Pid = @ParentCategoryID
    RETURN;

END
GO
PRINT N'Creating [crt].[GETRETAILINVENTAVAILABILITY]...';


GO

CREATE FUNCTION [crt].[GETRETAILINVENTAVAILABILITY]
(
	@tvp_ids crt.ITEMQUANTITYTABLETYPE READONLY
)
RETURNS @result TABLE
(
	RECID BIGINT, 
	ITEMID NVARCHAR(20),
	DATAAREAID NVARCHAR(4),
	INVENTDIMID NVARCHAR(20),
	AVAILPHYSICAL NUMERIC(32, 16)
)
AS
BEGIN


-- This TVP will store unique set of ITEMIDs passed
DECLARE @tvp_DistinctItemIds AS TABLE
(
	ITEMID NVARCHAR(20) NOT NULL PRIMARY KEY
)

-- Building unique list of ITEMIDs to be used in the main query which is needed to avoid unnecessary duplicates in case original TVP
-- contains several rows with the same ITEMID (by different variant IDs).
INSERT INTO @tvp_DistinctItemIds
SELECT DISTINCT ITEMID
FROM @tvp_ids

INSERT INTO @result

SELECT
	ria.RECID,
	it.ITEMID,
	it.DATAAREAID,
	id.INVENTDIMID,
	ria.AVAILPHYSICAL - ISNULL(ir.QUANTITY, 0) + ISNULL(riasosv.QUANTITY, 0) AS AVAILPHYSICAL
FROM @tvp_DistinctItemIds ids
INNER JOIN [ax].INVENTTABLE it ON it.ITEMID = ids.ITEMID
INNER JOIN [ax].RETAILINVENTAVAILABILITY ria ON it.RECID = ria.ITEMRECID
INNER JOIN [ax].INVENTDIM id on  id.RECID = ria.INVENTDIMRECID AND id.DATAAREAID = it.DATAAREAID

LEFT JOIN [crt].[ITEMRESERVATIONSUMVIEW] ir WITH (NOEXPAND) ON ir.INVENTAVAILABILITY = ria.RECID AND ir.[EXPIREDATETIME] >= GETUTCDATE()
LEFT JOIN [crt].GETRETAILINVENTAVAILABILITYSALESORDERSUM(@tvp_ids) riasosv ON riasosv.INVENTAVAILABILITY = ria.RECID

OPTION (FORCE ORDER)

RETURN
END
GO
PRINT N'Creating [crt].[GETRETAILINFOCODESTRANSLATED]...';


GO

CREATE FUNCTION [crt].[GETRETAILINFOCODESTRANSLATED](
    @languageId nvarchar(32),
    @defaultlanguageId nvarchar(32),
    @DataAreaId nvarchar(4),
    @tvp_groupIds [crt].[STRINGIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    SELECT
        icv.[REASONCODEID],
        icv.[RECID],
        icv.[ONCEPERTRANSACTION],
        icv.[PRINTPROMPTONRECEIPT],
        icv.[PRINTINPUTONRECEIPT],
        icv.[PRINTINPUTNAMEONRECEIPT],
        icv.[INPUTTYPE],
        icv.[MINIMUMVALUE],
        icv.[MAXIMUMVALUE],
        icv.[MINIMUMLENGTH],
        icv.[MAXIMUMLENGTH],
        icv.[INPUTREQUIRED],
        icv.[LINKEDREASONCODEID],
        icv.[RANDOMFACTOR],
        icv.[RETAILUSEREASONCODE],
        icv.[PRIORITY],
        ISNULL(rict.[DESCRIPTION], ISNULL(rictd.[DESCRIPTION], icv.[REASONCODEID])) 'DESCRIPTION',
        ISNULL(rict.[PROMPT], ISNULL(rictd.[PROMPT], icv.[REASONCODEID])) 'PROMPT',
        ISNULL(rict.[LANGUAGEID], rictd.[LANGUAGEID]) 'LANGUAGEID'
    FROM [crt].[INFOCODEVIEW] icv
    LEFT JOIN [ax].[RETAILINFOCODETRANSLATION] rict
        ON icv.[RECID]              = rict.[INFOCODE]
            AND icv.[DATAAREAID]    = rict.[DATAAREAID]
            AND rict.[LANGUAGEID]   = @languageId
    LEFT JOIN [ax].[RETAILINFOCODETRANSLATION] rictd
        ON icv.[RECID]              = rictd.[INFOCODE]
            AND icv.[DATAAREAID]    = rictd.[DATAAREAID]
            AND rictd.[LANGUAGEID]  = @defaultlanguageId
    WHERE icv.[DATAAREAID] = @DataAreaId
        AND ((SELECT COUNT(STRINGID) FROM @tvp_groupIds) = 0 OR icv.[GROUPID] IN (SELECT STRINGID FROM @tvp_groupIds))
GO
PRINT N'Creating [crt].[GETCATALOGSPUBLISHEDTOACTIVECHANNEL]...';


GO

-- Returns catalogs published to the specified channel.
CREATE FUNCTION [crt].[GETCATALOGSPUBLISHEDTOACTIVECHANNEL]
(
    @bi_ChannelId               BIGINT,
    @b_LoadMediaServerImage     BIT
)
RETURNS TABLE
RETURN
    SELECT
        pccv.[CATALOG],
        rpct.[FRIENDLYNAME] AS [NAME],
        rpct.[DESCRIPTION],
        rpct.[LANGUAGE],
        rmr.RESOURCEURL AS IMAGE,
        rpc.[ENABLESNAPSHOT],
        rpc.[PUBLISHEDVALIDFROM] AS [VALIDFROM],
        rpc.[PUBLISHEDVALIDTO] AS [VALIDTO],
        rpc.[CREATEDDATETIME],
        rpc.[MODIFIEDDATETIME],
        rpc.[PUBLISHEDDATETIME],
        CASE @b_LoadMediaServerImage
            WHEN 1 THEN NULL
            ELSE (SELECT CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)')
                    FROM ax.RETAILMEDIAANDMASTERENTITYRELATION rmamer 
                    INNER JOIN ax.RETAILMEDIARESOURCE rmr ON rmr.[RESOURCEID] = rmamer.[MEDIARESOURCEID]
                    WHERE rmamer.[MASTERENTITYRECID] = pccv.[CATALOG] AND pccv.[CHANNEL] = @bi_ChannelId AND [rmamer].MASTERENTITYTYPE = 11) -- MasterEntityType = Catalog.
        END AS [DEFAULTIMAGE]
    FROM crt.PUBCATALOGCHANNELVIEW pccv
        INNER JOIN ax.RETAILPUBCATALOG rpc ON rpc.[ORIGIN] = pccv.[CATALOG]
        INNER JOIN ax.RETAILPUBCATALOGTRANSLATION rpct ON rpct.[CATALOG] = pccv.[CATALOG]
        LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmer ON pccv.CATALOG = [rmer].MASTERENTITYRECID AND [rmer].ISDEFAULT = 1 AND [rmer].MASTERENTITYTYPE = 11 -- MasterEntityType = Catalog.
        LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON [rmr].RESOURCEID = [rmer].MEDIARESOURCEID 

    WHERE pccv.[CHANNEL] = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETVARIANTSWITHCOMPONENTVALUES]...';


GO

CREATE FUNCTION [crt].[GETVARIANTSWITHCOMPONENTVALUES]
(
    @bi_ChannelId                    BIGINT,
    @dt_ChannelDate                  DATE,
    @tvp_SlotToComponentRelationship [crt].[RECORDIDSTABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    SELECT
        [rkvc].KITVARIANT AS PRODUCTID,
        0 AS ISREMOTE
    FROM @tvp_SlotToComponentRelationship stcr
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].COMPONENT = [stcr].RECID AND [rkvc].COMPONENTRECID = [stcr].PARENTRECID
    WHERE EXISTS (SELECT 1 FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) WHERE [par].VARIANTID = [rkvc].KITVARIANT
    AND [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO)
    GROUP BY [rkvc].KITVARIANT
    HAVING COUNT(*) = (SELECT COUNT(*) FROM @tvp_SlotToComponentRelationship)

    UNION ALL
    
    SELECT
        [rkvc].KITVARIANT AS PRODUCTID,
        1 AS ISREMOTE
    FROM @tvp_SlotToComponentRelationship stcr
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].COMPONENT = [stcr].RECID AND [rkvc].COMPONENTRECID = [stcr].PARENTRECID
    WHERE EXISTS (SELECT 1 FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par WHERE [par].VARIANTID = [rkvc].KITVARIANT
    AND [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO)
    GROUP BY [rkvc].KITVARIANT
    HAVING COUNT(*) = (SELECT COUNT(*) FROM @tvp_SlotToComponentRelationship)
GO
PRINT N'Creating [crt].[GETPRODUCTIDSBYSEARCHTEXT]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSBYSEARCHTEXT]
(
    @bi_ChannelId               BIGINT,
    @bi_CatalogId               BIGINT,
    @dt_ChannelDate             DATE,
    @i_MaxTop                   INT,  -- This parameter is not respected by default and has been provided for consumers to consciously trade-off accurate results over performance.
    @nvc_Locale                 NVARCHAR(7),
    @nvc_SearchText             NVARCHAR(1000)  -- 1000 because the size of the biggest column being looked up is [ax].ECORESPRODUCTTRANSLATION.DESCRIPTION of type NVARCHAR(1000)
)
RETURNS TABLE
RETURN
SELECT PRODUCTID, SUM(RANKING) AS RANKING
FROM
(
    SELECT [it].PRODUCT AS PRODUCTID, [results_itemId].[RANK] AS RANKING
    FROM CONTAINSTABLE([ax].INVENTTABLE, [ITEMID], @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_itemId
    INNER JOIN [ax].INVENTTABLE it ON [it].RECID = [results_itemId].[KEY]

    UNION ALL
        
    SELECT [erpt].PRODUCT AS PRODUCTID, [results_name].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESPRODUCTTRANSLATION, [NAME], @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_name
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].RECID = [results_name].[KEY]
    WHERE NOT EXISTS (SELECT * FROM [ax].ECORESDISTINCTPRODUCTVARIANT pv WHERE pv.RECID = [erpt].PRODUCT)

    UNION ALL

    SELECT [erpt].PRODUCT AS PRODUCTID, [results_partialName].[RANK] AS RANKING
    FROM CONTAINSTABLE([ax].ECORESPRODUCTTRANSLATION, [NAME], @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_partialName
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].RECID = [results_partialName].[KEY]
    WHERE NOT EXISTS (SELECT * FROM [ax].ECORESDISTINCTPRODUCTVARIANT pv WHERE pv.RECID = [erpt].PRODUCT)

    UNION ALL
    
    SELECT [erpt].PRODUCT AS PRODUCTID, [results_description].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESPRODUCTTRANSLATION, [DESCRIPTION], @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_description
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].RECID = [results_description].[KEY]
    WHERE NOT EXISTS (SELECT * FROM [ax].ECORESDISTINCTPRODUCTVARIANT pv WHERE pv.RECID = [erpt].PRODUCT)

    UNION ALL

    SELECT [erpmc].COLORPRODUCTMASTER AS PRODUCTID, [results_translatedColor].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_translatedColor
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [results_translatedColor].[KEY] = [erpmdvt].RECID
    INNER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].RECID = [erpmdvt].PRODUCTMASTERDIMENSIONVALUE

    UNION ALL

    SELECT [erpmc].CONFIGPRODUCTMASTER AS PRODUCTID, [results_translatedConfiguration].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_translatedConfiguration
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [results_translatedConfiguration].[KEY] = [erpmdvt].RECID
    INNER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmc ON [erpmc].RECID = [erpmdvt].PRODUCTMASTERDIMENSIONVALUE

    UNION ALL

    SELECT [erpms].SIZEPRODUCTMASTER AS PRODUCTID, [results_translatedSize].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_translatedSize
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [results_translatedSize].[KEY] = [erpmdvt].RECID
    INNER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].RECID = [erpmdvt].PRODUCTMASTERDIMENSIONVALUE

    UNION ALL

    SELECT [erpms].STYLEPRODUCTMASTER AS PRODUCTID, [results_translatedStyle].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_translatedStyle
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [results_translatedStyle].[KEY] = [erpmdvt].RECID
    INNER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpms ON [erpms].RECID = [erpmdvt].PRODUCTMASTERDIMENSIONVALUE

    UNION ALL

    SELECT [erpmc].COLORPRODUCTMASTER AS PRODUCTID, [results_color].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESCOLOR, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_color
    INNER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [results_color].[KEY] = [erpmc].COLOR

    UNION ALL

    SELECT [erpmc].CONFIGPRODUCTMASTER AS PRODUCTID, [results_configuration].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESCONFIGURATION, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_configuration
    INNER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmc ON [results_configuration].[KEY] = [erpmc].CONFIGURATION

    UNION ALL

    SELECT [erpms].SIZEPRODUCTMASTER AS PRODUCTID, [results_size].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESSIZE, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_size
    INNER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [results_size].[KEY] = [erpms].SIZE

    UNION ALL

    SELECT [erpms].STYLEPRODUCTMASTER AS PRODUCTID, [results_style].[RANK] AS RANKING
    FROM FREETEXTTABLE([ax].ECORESSTYLE, NAME, @nvc_SearchText /*, @i_MaxTop - Use this parameter to retrieve results faster. Warning: Using it may result in fewer results. */) results_style
    INNER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpms ON [results_style].[KEY] = [erpms].STYLE
) results
WHERE EXISTS
        (
            SELECT 1 FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
            WHERE [par].VARIANTID = 0 AND [par].PRODUCTID = results.PRODUCTID AND [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO --AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
        )
        AND
        (
            @bi_CatalogId = 0 OR EXISTS
            (
                SELECT 1 FROM [crt].[PRODUCTCATALOGRULESVIEW] pcrv
                WHERE pcrv.CHANNELID = @bi_ChannelId AND pcrv.CATALOGID = @bi_CatalogId AND pcrv.PRODUCTID = results.PRODUCTID
            )
        )
GROUP BY [results].PRODUCTID
GO
PRINT N'Creating [crt].[GETSALESORDER]...';


GO
CREATE FUNCTION [crt].[GETSALESORDER]
(
@nvc_CustomerName NVARCHAR(400)
)
RETURNS TABLE

RETURN

SELECT RT.CHANNEL AS 'CHANNELID'
    ,RT.TRANSACTIONID AS 'TRANSACTIONID'
    ,CASE 
        WHEN (RT.SALESORDERID <> '')
            THEN RT.SALESORDERID
        ELSE COALESCE(OS.SALESID, '')
        END AS 'SALESID'
    ,RT.CREATEDDATETIME AS 'CREATEDDATETIME'
    ,(RT.GROSSAMOUNT * - 1.0) AS 'GROSSAMOUNT'
    ,CASE 
        WHEN RT.TYPE = 7
            THEN -- TYPE = 7: TenderDeclaration
                (
                    SELECT SUM(TD.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONTENDERDECLARATIONTRANS TD
                    WHERE TD.TRANSACTIONID = RT.TRANSACTIONID
                        AND TD.TERMINAL = RT.TERMINAL
                        AND TD.DATAAREAID = RT.DATAAREAID
                        AND TD.TRANSACTIONSTATUS = 0 -- 0: Normal status transaction
                        AND TD.CHANNEL = RT.CHANNEL
                    )
        WHEN RT.TYPE = 16
            THEN -- TYPE = 16: BankDrop
                (
                    SELECT SUM(B.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONBANKEDTENDERTRANS B
                    WHERE B.TRANSACTIONID = RT.TRANSACTIONID
                        AND B.TERMINAL = RT.TERMINAL
                        AND B.DATAAREAID = RT.DATAAREAID
                        AND B.TRANSACTIONSTATUS = 0 -- 0: Normal status transaction
                        AND B.CHANNEL = RT.CHANNEL
                    )
        WHEN RT.TYPE = 17
            THEN -- TYPE = 17: SafeDrop
                (
                    SELECT SUM(S.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONSAFETENDERTRANS S
                    WHERE S.TRANSACTIONID = RT.TRANSACTIONID
                        AND S.TERMINAL = RT.TERMINAL
                        AND S.DATAAREAID = RT.DATAAREAID
                        AND S.TRANSACTIONSTATUS = 0 -- 0: Normal status transaction
                        AND S.CHANNEL = RT.CHANNEL
                    )
        WHEN RT.TYPE = 3
            THEN -- TYPE = 3: Payment
                (
                    SELECT SUM(P.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONPAYMENTTRANS P
                    WHERE P.TRANSACTIONID = RT.TRANSACTIONID
                        AND P.TERMINAL = RT.TERMINAL
                        AND P.DATAAREAID = RT.DATAAREAID
                        AND P.TRANSACTIONSTATUS = 0 -- 0: Normal status transaction
                        AND P.CHANNEL = RT.CHANNEL
                    )
        ELSE (RT.GROSSAMOUNT * - 1.0)
        END AS 'TOTALAMOUNT'
    ,RT.PAYMENTAMOUNT AS 'AMOUNTPAID'
    ,RT.SALESPAYMENTDIFFERENCE AS 'SALESPAYMENTDIFFERENCE'
    ,RT.TERMINAL AS 'TERMINAL'
    ,RT.BATCHID  AS 'BATCHID'
    ,RT.BATCHTERMINALID AS 'BATCHTERMINALID'
    ,RT.STORE AS 'STORE'
    ,RT.STAFF AS 'STAFF'
    ,RT.CUSTACCOUNT AS 'CUSTOMERID'
    ,RT.RECEIPTEMAIL AS 'RECEIPTEMAIL'
    ,RT.TYPE
    ,RT.DISCAMOUNT AS 'DISCOUNTAMOUNT'
    ,ISNULL(AT.DELIVERYNAME,DPT.NAME) AS 'NAME'
    ,COALESCE((
        SELECT SUM(TAXAMOUNT * -1.0)
        FROM [ax].RETAILTRANSACTIONSALESTRANS RTST
        WHERE RTST.TRANSACTIONID = RT.TRANSACTIONID
            AND RTST.TERMINALID = RT.TERMINAL
            AND RTST.STORE = RT.STORE
            AND RTST.CHANNEL = RT.CHANNEL
            AND RTST.TRANSACTIONSTATUS <> 1	), 0) AS 'TAXAMOUNT' -- Excludes the voided line
    ,COALESCE((
        SELECT TOP 1 ISINCLUDEDINPRICE
        FROM [ax].RETAILTRANSACTIONTAXTRANS TT
        WHERE TT.TRANSACTIONID = RT.TRANSACTIONID
            AND TT.TERMINALID = RT.TERMINAL
            AND TT.STOREID = RT.STORE
            AND TT.CHANNEL = RT.CHANNEL ), 0) AS 'ISTAXINCLUDEDINPRICE'
    ,COALESCE((
        SELECT SUM(CALCULATEDAMOUNT)
        FROM [ax].RETAILTRANSACTIONMARKUPTRANS MT
        WHERE MT.TRANSACTIONID = RT.TRANSACTIONID
            AND MT.TERMINALID = RT.TERMINAL
            AND MT.STORE = RT.STORE
            AND MT.CHANNEL = RT.CHANNEL), 0) AS 'CHARGEAMOUNT'
    ,RT.CHANNELREFERENCEID AS 'CHANNELREFERENCEID'
    ,RT.INVENTLOCATIONID AS 'INVENTLOCATIONID'
    ,RT.DLVMODE AS 'DELIVERYMODE'
    ,RT.SHIPPINGDATEREQUESTED AS 'REQUESTEDDELIVERYDATE'
    ,RT.LOGISTICSPOSTALADDRESS AS 'LOGISTICSPOSTALADDRESS'
    ,RT.RECEIPTID AS 'RECEIPTID'
    ,RT.LOYALTYCARDID AS 'LOYALTYCARDID'
    ,RT.ENTRYSTATUS AS 'ENTRYSTATUS'
    ,CASE 
        WHEN (
                AT.EMAIL IS NOT NULL
                AND AT.EMAIL <> ''
                )
            THEN AT.EMAIL
        WHEN (
                RT.RECEIPTEMAIL IS NOT NULL
                AND RT.RECEIPTEMAIL <> ''
                )
            THEN RT.RECEIPTEMAIL
        ELSE CEV.EMAIL
        END AS 'EMAIL'
    ,ISNULL(AT.PHONE, '') AS 'PHONE'
    ,ISNULL(OS.STATUS, 0) AS 'STATUS'
    ,DATEADD(second, RT.TRANSTIME, CAST(RT.TRANSDATE AS DATETIME)) AS 'BEGINDATETIME'
    ,RT.BUSINESSDATE
    ,RT.STATEMENTCODE
    ,RT.EXCHRATE / 100.00 AS 'EXCHRATE' --ePOS behaviour
    ,RT.COMMENT AS 'COMMENT'
    ,RT.INVOICECOMMENT AS 'INVOICECOMMENT'
    ,CAST(RT.CREATEDOFFLINE AS BIT) AS 'ISCREATEDOFFLINE'
    ,CO.CANCELLATIONCHARGE AS 'CANCELLATIONCHARGE'
    ,CO.DEPOSITOVERRIDE AS 'DEPOSITOVERRIDE'
    ,CO.REQUIREDDEPOSIT AS 'REQUIREDDEPOSIT'
    ,CO.CALCULATEDDEPOSIT AS 'CALCULATEDDEPOSIT'
    ,CO.PREPAYMENTPAID AS 'PREPAYMENTPAID'
    ,CO.PREPAYMENTINVOICED AS 'PREPAYMENTINVOICED'
    ,CO.QUOTEEXPIRATIONDATE AS 'EXPIRYDATE'
    ,CO.CUSTOMERORDERTYPE AS 'CUSTOMERORDERTYPE'
    ,ISNULL((
            SELECT TOP 1 1 AS 'HASREDEEMLINE'
            FROM [ax].RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS RPT
            WHERE RPT.DATAAREAID = RT.DATAAREAID
                AND RPT.TRANSACTIONID = RT.TRANSACTIONID
                AND RPT.TERMINALID = RT.TERMINAL
                AND RPT.STOREID = RT.STORE
                AND RPT.CHANNEL = RT.CHANNEL
                AND RPT.ENTRYTYPE = 2
            ), 0) AS 'HASLOYALTYPAYMENT' -- EntryType 2 is Redeem. HASLOYALTYPAYMENT = 1 if true, 0 if false.
FROM [ax].RETAILTRANSACTIONTABLE RT
LEFT JOIN [ax].RETAILTRANSACTIONORDERSTATUS OS ON OS.TRANSACTIONID = RT.TRANSACTIONID
    AND OS.TERMINAL = RT.TERMINAL
    AND OS.STORE = RT.STORE
    AND OS.CHANNEL = RT.CHANNEL
LEFT JOIN [ax].RETAILTRANSACTIONADDRESSTRANS AT ON AT.TRANSACTIONID = RT.TRANSACTIONID
    AND AT.TERMINAL = RT.TERMINAL
    AND AT.STORE = RT.STORE
    AND AT.CHANNEL = RT.CHANNEL
    AND AT.SALELINENUM = 0 -- SaleLineNum 0 = Header level address
LEFT JOIN [crt].[CUSTOMERORDERTRANSACTION] CO ON CO.CHANNEL = RT.CHANNEL
    AND CO.STORE = RT.STORE
    AND CO.TERMINAL = RT.TERMINAL
    AND CO.TRANSACTIONID = RT.TRANSACTIONID
    AND CO.DATAAREAID = RT.DATAAREAID
LEFT JOIN (
    SELECT DISTINCT ACCOUNTNUMBER
        ,PARTY
        ,DATAAREAID
    FROM [crt].[CUSTOMERSVIEW]
    ) CA ON CA.ACCOUNTNUMBER = RT.CUSTACCOUNT
    AND CA.DATAAREAID = RT.DATAAREAID
LEFT JOIN (
    SELECT TOP 1 ACCOUNTNUMBER
        ,PARTY
        ,DATAAREAID
        ,EMAIL
    FROM [crt].[CUSTOMERSVIEW]
    ) CEV ON CA.ACCOUNTNUMBER = CEV.ACCOUNTNUMBER
    AND CA.DATAAREAID = CEV.DATAAREAID
    AND CA.PARTY = CEV.PARTY
LEFT JOIN [ax].DIRPARTYTABLE DPT ON CA.PARTY = DPT.RECID
WHERE @nvc_CustomerName = '""'
    OR CONTAINS (
        AT.DELIVERYNAME
        ,@nvc_CustomerName
        )
    OR CONTAINS (
        DPT.NAME
        ,@nvc_CustomerName
        )
GO
PRINT N'Creating [crt].[GETLINKEDPRODUCTRELATIONS]...';


GO
CREATE FUNCTION [crt].[GETLINKEDPRODUCTRELATIONS]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    -- Retrieve variant id = 0 product ids.
    SELECT
        0 AS ISREMOTE,
        [l_it].PRODUCT AS LINKEDPRODUCTID,
        [ids].RECID AS PRODUCTID,
        [rili].QTY AS QUANTITY,
        [rili].UNIT AS UNITOFMEASURE
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].PRODUCTID = [ids].RECID AND [par].VARIANTID = 0
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].RETAILINVENTLINKEDITEM rili ON [rili].ITEMID = [it].ITEMID AND [rili].DATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].INVENTTABLE l_it ON [l_it].ITEMID = [rili].LINKEDITEMID AND [l_it].DATAAREAID = [rili].DATAAREAID
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW l_par WITH (NOEXPAND) ON [l_par].CHANNELID = [rct].RECID AND ([l_par].PRODUCTID = [l_it].PRODUCT OR [l_par].VARIANTID = [l_it].PRODUCT)
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
        AND [l_par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [l_par].VALIDFROM AND [l_par].VALIDTO

    UNION ALL
    
    -- Retrieve variant id != 0 product ids.
    SELECT
        0 AS ISREMOTE,
        [l_it].PRODUCT AS LINKEDPRODUCTID,
        [ids].RECID AS PRODUCTID,
        [rili].QTY AS QUANTITY,
        [rili].UNIT AS UNITOFMEASURE
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].VARIANTID = [ids].RECID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].RETAILINVENTLINKEDITEM rili ON [rili].ITEMID = [it].ITEMID AND [rili].DATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].INVENTTABLE l_it ON [l_it].ITEMID = [rili].LINKEDITEMID AND [l_it].DATAAREAID = [rili].DATAAREAID
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW l_par WITH (NOEXPAND) ON [l_par].CHANNELID = [rct].RECID AND ([l_par].PRODUCTID = [l_it].PRODUCT OR [l_par].VARIANTID = [l_it].PRODUCT)
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
        AND [l_par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [l_par].VALIDFROM AND [l_par].VALIDTO

    UNION ALL
    
    -- Retrieve variant id = 0 product ids from temporarily assorted remote products.
    SELECT
        1 AS ISREMOTE,
        [l_it].PRODUCT AS LINKEDPRODUCTID,
        [ids].RECID AS PRODUCTID,
        [rili].QTY AS QUANTITY,
        [rili].UNIT AS UNITOFMEASURE
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].PRODUCTID = [ids].RECID AND [par].VARIANTID = 0
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].RETAILINVENTLINKEDITEM rili ON [rili].ITEMID = [it].ITEMID AND [rili].DATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].INVENTTABLE l_it ON [l_it].ITEMID = [rili].LINKEDITEMID AND [l_it].DATAAREAID = [rili].DATAAREAID
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW l_par ON [l_par].CHANNELID = [rct].RECID AND ([l_par].PRODUCTID = [l_it].PRODUCT OR [l_par].VARIANTID = [l_it].PRODUCT)
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
        AND [l_par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [l_par].VALIDFROM AND [l_par].VALIDTO

    UNION ALL
    
    -- Retrieve variant id != 0 product ids from temporarily assorted remote products.
    SELECT
        1 AS ISREMOTE,
        [l_it].PRODUCT AS LINKEDPRODUCTID,
        [ids].RECID AS PRODUCTID,
        [rili].QTY AS QUANTITY,
        [rili].UNIT AS UNITOFMEASURE
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].VARIANTID = [ids].RECID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].RETAILINVENTLINKEDITEM rili ON [rili].ITEMID = [it].ITEMID AND [rili].DATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].INVENTTABLE l_it ON [l_it].ITEMID = [rili].LINKEDITEMID AND [l_it].DATAAREAID = [rili].DATAAREAID
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW l_par ON [l_par].CHANNELID = [rct].RECID AND ([l_par].PRODUCTID = [l_it].PRODUCT OR [l_par].VARIANTID = [l_it].PRODUCT)
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
        AND [l_par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [l_par].VALIDFROM AND [l_par].VALIDTO
GO
PRINT N'Creating [crt].[GETPRODUCTSBYIDS]...';


GO
CREATE FUNCTION [crt].[GETPRODUCTSBYIDS]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @nvc_Locale              NVARCHAR(7),
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    -- Retrieve variant id = 0 products.
    SELECT DISTINCT
        [itm].UNITID AS DEFAULTUNITOFMEASURE,
        ISNULL([erpt].[DESCRIPTION], [erpt_default].[DESCRIPTION]) AS [DESCRIPTION],
        0 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        NULL AS INVENTDIMID,
        COALESCE([erpt].NAME, [erpt_default].NAME, [erp].DISPLAYPRODUCTNUMBER) AS NAME,
        CASE
            WHEN [pv].RECID IS NOT NULL THEN [par].VARIANTID
            ELSE [par].PRODUCTID
        END AS RECID,
        CASE 
            WHEN [par].VARIANTID = 0 AND [rk].RECID IS NOT NULL THEN 1  -- Kit Master
            WHEN [rk].RECID IS NOT NULL AND [pv].RECID IS NOT NULL THEN 2  -- Kit Variant
            WHEN [pv].RECID IS NULL AND [pv2].RECID IS NOT NULL THEN 3  -- Master
            WHEN [pv].RECID IS NOT NULL THEN 5  -- Variant
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        NULL AS VARIANTID
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].PRODUCTID = [ids].RECID AND [par].VARIANTID = 0
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [par].PRODUCTID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID
    INNER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = @bi_ChannelId AND [clv].ISDEFAULT = 1
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default ON [erpt_default].LANGUAGEID = [clv].LANGUAGEID AND [erpt_default].PRODUCT = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [par].VARIANTID AND [pv].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [par].PRODUCTID AND [par].VARIANTID = 0
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID AND [par].VARIANTID = 0
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Retrieve variant id != 0 products.
    SELECT DISTINCT
        [itm].UNITID AS DEFAULTUNITOFMEASURE,
        COALESCE(NULLIF([erpt_variant].[DESCRIPTION], ''), NULLIF([erpt].[DESCRIPTION], ''), NULLIF([erpt_variant_default].[DESCRIPTION], ''), NULLIF([erpt_default].[DESCRIPTION], '')) AS [DESCRIPTION],
        0 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [idc].INVENTDIMID AS INVENTDIMID,
        COALESCE(NULLIF([erpt_variant].NAME, ''), NULLIF([erpt].NAME, ''), NULLIF([erpt_variant_default].NAME, ''), NULLIF([erpt_default].NAME, ''), [erp].DISPLAYPRODUCTNUMBER) AS NAME,
        CASE
            WHEN [pv].RECID IS NOT NULL THEN [par].VARIANTID
            ELSE [par].PRODUCTID
        END AS RECID,
        CASE 
            WHEN [par].VARIANTID = 0 AND [rk].RECID IS NOT NULL THEN 1  -- Kit Master
            WHEN [rk].RECID IS NOT NULL AND [pv].RECID IS NOT NULL THEN 2  -- Kit Variant
            WHEN [pv].RECID IS NULL AND [pv2].RECID IS NOT NULL THEN 3  -- Master
            WHEN [pv].RECID IS NOT NULL THEN 5  -- Variant
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        [idc].RETAILVARIANTID AS VARIANTID
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].VARIANTID = [ids].RECID
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [par].PRODUCTID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = @bi_ChannelId AND [clv].ISDEFAULT = 1
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_variant_default ON [erpt_variant_default].LANGUAGEID = [clv].LANGUAGEID AND [erpt_variant_default].PRODUCT = [par].VARIANTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_variant ON [erpt_variant].PRODUCT = [par].VARIANTID AND [erpt_variant].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default ON [erpt_default].LANGUAGEID = [clv].LANGUAGEID AND [erpt_default].PRODUCT = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [par].VARIANTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Retrieve variant id = 0 temporarily assorted remote products.
    SELECT DISTINCT
        [itm].UNITID AS DEFAULTUNITOFMEASURE,
        ISNULL([erpt].[DESCRIPTION], [erpt_default].[DESCRIPTION]) AS [DESCRIPTION],
        1 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        NULL AS INVENTDIMID,
        COALESCE([erpt].NAME, [erpt_default].NAME, [erp].DISPLAYPRODUCTNUMBER) AS NAME,
        CASE
            WHEN [pv].RECID IS NOT NULL THEN [par].VARIANTID
            ELSE [par].PRODUCTID
        END AS RECID,
        CASE 
            WHEN [par].VARIANTID = 0 AND [rk].RECID IS NOT NULL THEN 1  -- Kit Master
            WHEN [rk].RECID IS NOT NULL AND [pv].RECID IS NOT NULL THEN 2  -- Kit Variant
            WHEN [pv].RECID IS NULL AND [pv2].RECID IS NOT NULL THEN 3  -- Master
            WHEN [pv].RECID IS NOT NULL THEN 5  -- Variant
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        NULL AS VARIANTID
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].PRODUCTID = [ids].RECID AND [par].VARIANTID = 0
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [par].PRODUCTID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID
    INNER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = @bi_ChannelId AND [clv].ISDEFAULT = 1
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default ON [erpt_default].LANGUAGEID = [clv].LANGUAGEID AND [erpt_default].PRODUCT = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [par].VARIANTID AND [pv].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [par].PRODUCTID AND [par].VARIANTID = 0
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID AND [par].VARIANTID = 0
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Retrieve variant id != 0 temporarily assorted remote products.
    SELECT DISTINCT
        [itm].UNITID AS DEFAULTUNITOFMEASURE,
        COALESCE(NULLIF([erpt_variant].[DESCRIPTION], ''), NULLIF([erpt].[DESCRIPTION], ''), NULLIF([erpt_variant_default].[DESCRIPTION], ''), NULLIF([erpt_default].[DESCRIPTION], '')) AS [DESCRIPTION],
        1 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [idc].INVENTDIMID AS INVENTDIMID,
        COALESCE(NULLIF([erpt_variant].NAME, ''), NULLIF([erpt].NAME, ''), NULLIF([erpt_variant_default].NAME, ''), NULLIF([erpt_default].NAME, ''), [erp].DISPLAYPRODUCTNUMBER) AS NAME,
        CASE
            WHEN [pv].RECID IS NOT NULL THEN [par].VARIANTID
            ELSE [par].PRODUCTID
        END AS RECID,
        CASE 
            WHEN [par].VARIANTID = 0 AND [rk].RECID IS NOT NULL THEN 1  -- Kit Master
            WHEN [rk].RECID IS NOT NULL AND [pv].RECID IS NOT NULL THEN 2  -- Kit Variant
            WHEN [pv].RECID IS NULL AND [pv2].RECID IS NOT NULL THEN 3  -- Master
            WHEN [pv].RECID IS NOT NULL THEN 5  -- Variant
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        [idc].RETAILVARIANTID AS VARIANTID
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].VARIANTID = [ids].RECID
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [par].PRODUCTID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = @bi_ChannelId AND [clv].ISDEFAULT = 1
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_variant_default ON [erpt_variant_default].LANGUAGEID = [clv].LANGUAGEID AND [erpt_variant_default].PRODUCT = [par].VARIANTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_variant ON [erpt_variant].PRODUCT = [par].VARIANTID AND [erpt_variant].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default ON [erpt_default].LANGUAGEID = [clv].LANGUAGEID AND [erpt_default].PRODUCT = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [par].VARIANTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
GO
PRINT N'Creating [crt].[SEARCHPRODUCTS]...';


GO

-- Dead code (deprecated): This code is not used as of AX 7 RTW.

CREATE FUNCTION [crt].[SEARCHPRODUCTS]
(
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @nvc_Locale                 NVARCHAR(7),
    @nvc_SearchText             NVARCHAR(1000)  -- 1000 because the size of the biggest column being looked up is [ax].ECORESPRODUCTTRANSLATION.DESCRIPTION of type NVARCHAR(1000)
)
RETURNS TABLE
RETURN
SELECT RECORDID, SUM(RANKING) AS RANKING
FROM
(
    SELECT [par].PRODUCTID AS RECORDID, [results_itemId].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID
    INNER JOIN CONTAINSTABLE([ax].INVENTTABLE, [ITEMID], @nvc_SearchText) results_itemId ON [it].RECID = [results_itemId].[KEY]
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
        
    SELECT [par].PRODUCTID AS RECORDID, [results_name].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    INNER JOIN FREETEXTTABLE([ax].ECORESPRODUCTTRANSLATION, [NAME], @nvc_SearchText) results_name ON [erpt].RECID = [results_name].[KEY]
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_partialName].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    INNER JOIN CONTAINSTABLE([ax].ECORESPRODUCTTRANSLATION, [NAME], @nvc_SearchText) results_partialName ON [erpt].RECID = [results_partialName].[KEY]
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    SELECT [par].PRODUCTID AS RECORDID, [results_description].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    INNER JOIN FREETEXTTABLE([ax].ECORESPRODUCTTRANSLATION, [DESCRIPTION], @nvc_SearchText) results_description ON [erpt].RECID = [results_description].[KEY]
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_translatedColor].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLORPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [erpmdvt].LANGUAGEID = @nvc_Locale AND [erpmdvt].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID
    INNER JOIN FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText) results_translatedColor ON [results_translatedColor].[KEY] = [erpmdvt].RECID
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_translatedConfiguration].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmc ON [erpmc].CONFIGPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [erpmdvt].LANGUAGEID = @nvc_Locale AND [erpmdvt].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID
    INNER JOIN FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText) results_translatedConfiguration ON [results_translatedConfiguration].[KEY] = [erpmdvt].RECID
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_translatedSize].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZEPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [erpmdvt].LANGUAGEID = @nvc_Locale AND [erpmdvt].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID
    INNER JOIN FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText) results_translatedSize ON [results_translatedSize].[KEY] = [erpmdvt].RECID
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_translatedStyle].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpms ON [erpms].STYLEPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt ON [erpmdvt].LANGUAGEID = @nvc_Locale AND [erpmdvt].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID
    INNER JOIN FREETEXTTABLE([ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION, NAME, @nvc_SearchText) results_translatedStyle ON [results_translatedStyle].[KEY] = [erpmdvt].RECID
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_color].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLORPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN FREETEXTTABLE([ax].ECORESCOLOR, NAME, @nvc_SearchText) results_color ON [results_color].[KEY] = [erpmc].COLOR
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_configuration].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmc ON [erpmc].CONFIGPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN FREETEXTTABLE([ax].ECORESCONFIGURATION, NAME, @nvc_SearchText) results_configuration ON [results_configuration].[KEY] = [erpmc].CONFIGURATION
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_size].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZEPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN FREETEXTTABLE([ax].ECORESSIZE, NAME, @nvc_SearchText) results_size ON [results_size].[KEY] = [erpms].SIZE
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT [par].PRODUCTID AS RECORDID, [results_style].[RANK] AS RANKING
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpms ON [erpms].STYLEPRODUCTMASTER = [par].PRODUCTID
    INNER JOIN FREETEXTTABLE([ax].ECORESSTYLE, NAME, @nvc_SearchText) results_style ON [results_style].[KEY] = [erpms].STYLE
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
) results
GROUP BY [results].RECORDID
GO
PRINT N'Creating [crt].[GETPRODUCTIDSBYCATEGORYID]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTIDSBYCATEGORYID]
(
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @bi_CategoryId           BIGINT
)
RETURNS TABLE
RETURN
    -- Retrieving products associated to a category and sub-categories, when catalog is not specified.
    SELECT
        [erpc].PRODUCT AS PRODUCTID
    FROM [ax].RETAILPUBECORESCATEGORY parent
        INNER JOIN [ax].RETAILPUBECORESCATEGORY child ON [child].CHANNEL = [parent].CHANNEL AND [child].NESTEDSETLEFT BETWEEN [parent].NESTEDSETLEFT AND [parent].NESTEDSETRIGHT
            INNER JOIN [ax].ECORESPRODUCTCATEGORY erpc ON [child].ORIGINID = [erpc].CATEGORY
    WHERE [parent].ORIGINID = @bi_CategoryId AND [parent].CHANNEL = @bi_ChannelId AND @bi_CatalogId = 0
    AND EXISTS
        (
            SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
            WHERE [apv].PRODUCTID = [erpc].PRODUCT AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
        )

    UNION ALL

    (
        -- Retrieving non-variant products in the context of a catalog from the default channel navigation hierarchy.
        SELECT
            [rpcp_nonvariants].PRODUCT AS PRODUCTID
        FROM [ax].RETAILPUBECORESCATEGORY parent
            INNER JOIN [ax].RETAILPUBECORESCATEGORY child ON [child].CHANNEL = [parent].CHANNEL AND [child].NESTEDSETLEFT BETWEEN [parent].NESTEDSETLEFT AND [parent].NESTEDSETRIGHT
                INNER JOIN [ax].ECORESPRODUCTCATEGORY erpc ON [erpc].CATEGORY = [child].ORIGINID
                    INNER JOIN [ax].RETAILPUBCATALOGPRODUCT rpcp_nonvariants ON [rpcp_nonvariants].PRODUCT = [erpc].PRODUCT
        WHERE [parent].ORIGINID = @bi_CategoryId AND [parent].CHANNEL = @bi_ChannelId AND @bi_CatalogId != 0 AND [rpcp_nonvariants].[CATALOG] = @bi_CatalogId AND [rpcp_nonvariants].USEHIERARCHY = 1
        AND EXISTS
            (
                SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
                WHERE [apv].PRODUCTID = [rpcp_nonvariants].PRODUCT AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
            )
        AND EXISTS(
                SELECT 1
                FROM [ax].RETAILPUBCATALOG
                WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0  -- Snapshotted catalogs should not inherit category association from default channel navigation hierarchy.
            )

        UNION ALL

        -- Retrieving variant products in the context of a catalog from the default channel navigation hierarchy.
        SELECT
            [rpcp_variantmasters].PRODUCT AS PRODUCTID
        FROM [ax].RETAILPUBECORESCATEGORY parent
            INNER JOIN [ax].RETAILPUBECORESCATEGORY child ON [child].CHANNEL = [parent].CHANNEL AND [child].NESTEDSETLEFT BETWEEN [parent].NESTEDSETLEFT AND [parent].NESTEDSETRIGHT
                INNER JOIN [ax].ECORESPRODUCTCATEGORY erpc ON [erpc].CATEGORY = [child].ORIGINID
                    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].PRODUCTMASTER = [erpc].PRODUCT
                        INNER JOIN [ax].RETAILPUBCATALOGPRODUCT rpcp_variantmasters ON [rpcp_variantmasters].PRODUCT = [erdpv].RECID
        WHERE [parent].ORIGINID = @bi_CategoryId AND [parent].CHANNEL = @bi_ChannelId AND @bi_CatalogId != 0 AND [rpcp_variantmasters].[CATALOG] = @bi_CatalogId AND [rpcp_variantmasters].USEHIERARCHY = 1
        AND EXISTS
            (
                SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
                WHERE [apv].PRODUCTID = [rpcp_variantmasters].PRODUCT AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
            )
        AND EXISTS(
                SELECT 1
                FROM [ax].RETAILPUBCATALOG
                WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0  -- Snapshotted catalogs should not inherit category association from default channel navigation hierarchy.
            )
    )

    UNION  -- Performing UNION here (not UNION ALL) because if product(s) have been retrieved by implicit association, they should not retrieved by re-categorization.

    -- Retrieving products re-categorized (or have been added from a category) in the context of a catalog.
    SELECT
        [rpcp].PRODUCT AS PRODUCTID
    FROM [ax].RETAILPUBECORESCATEGORY parent
        INNER JOIN [ax].RETAILPUBECORESCATEGORY child ON [child].CHANNEL = [parent].CHANNEL AND [child].NESTEDSETLEFT BETWEEN [parent].NESTEDSETLEFT AND [parent].NESTEDSETRIGHT
             INNER JOIN [ax].RETAILPUBCATALOGPRODUCTCATEGORY rpcpc ON [rpcpc].CATEGORY = [child].ORIGINID
                INNER JOIN [ax].RETAILPUBCATALOGPRODUCT rpcp ON [rpcp].ORIGIN = [rpcpc].CATALOGPRODUCT
    WHERE [parent].ORIGINID = @bi_CategoryId AND [parent].CHANNEL = @bi_ChannelId AND [rpcp].[CATALOG] = @bi_CatalogId AND @bi_CatalogId != 0 AND [rpcpc].INCLUDEEXCLUDETYPE = 1  -- Include
    AND EXISTS
        (
            SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
            WHERE [apv].PRODUCTID = [rpcp].PRODUCT AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
        )
GO
PRINT N'Creating [crt].[GETPRODUCTBEHAVIORBYPRODUCTIDS_V2]...';


GO
CREATE FUNCTION [crt].[GETPRODUCTBEHAVIORBYPRODUCTIDS_V2]
(
    @nvc_DataAreaId          NVARCHAR(10),
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY    
)
RETURNS TABLE
RETURN
    SELECT
        CASE
            WHEN [siv].PRODUCTID IS NULL THEN 0
            ELSE 1
        END AS HASSERIALNUMBER,
        [rit].PROHIBITRETURN_RU ^ 1 AS ISRETURNALLOWED,
        [rit].BLOCKEDONPOS ^ 1 AS ISSALEATPHYSICALSTORESALLOWED,
        [rit].QTYBECOMESNEGATIVE AS ISNEGATIVEQUANTITYALLOWED,
        [rit].NODISCOUNTALLOWED ^ 1 AS ISDISCOUNTALLOWED,
        [rk].DISASSEMBLYATREGISTERALLOWED AS ISKITDISASSEMBLYALLOWED,
        [rit].ZEROPRICEVALID AS ISZEROSALEPRICEALLOWED,
        [rit].KEYINGINPRICE AS KEYINPRICE,
        [rit].KEYINGINQTY AS KEYINQUANTITY,
        [rit].MUSTKEYINCOMMENT AS MUSTKEYINCOMMENT,
        [rit].PRINTVARIANTSSHELFLABELS AS MUSTPRINTINDIVIDUALSHELFLABELSFORVARIANTS,
        [siv].ISSALESPROCESSACTIVATED AS MUSTPROMPTFORSERIALNUMBERONLYATSALE,
        [rit].SCALEITEM AS MUSTWEIGHPRODUCTATSALE,
        [ids].RECID AS PRODUCTID,
        [rit].DATETOACTIVATEITEM AS VALIDFROMDATEFORSALEATPHYSICALSTORES,
        CASE [rit].DATETOBEBLOCKED
            WHEN [crt].GETMINAXDATE() THEN [crt].GETMAXAXDATE()
            ELSE [rit].DATETOBEBLOCKED
        END AS VALIDTODATEFORSALEATPHYSICALSTORES
    FROM @tvp_ProductIds ids
        LEFT JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [ids].RECID -- if the product is a variant, then we will get PRODUCTMASTER (the recid of its master)
        INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = COALESCE([pv].PRODUCTMASTER, [ids].RECID) AND [it].DATAAREAID = @nvc_DataAreaId -- COALESCE([pv].PRODUCTMASTER, [ids].RECID) means "master/standalone recid"
        INNER JOIN [ax].RETAILINVENTTABLE rit ON [rit].ITEMID = [it].ITEMID AND [rit].DATAAREAID = @nvc_DataAreaId
        LEFT OUTER JOIN [crt].SERIALIZEDITEMSVIEW siv ON [siv].PRODUCTID = COALESCE([pv].PRODUCTMASTER, [ids].RECID) AND [siv].ITEMDATAAREAID = @nvc_DataAreaId
        LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = COALESCE([pv].PRODUCTMASTER, [ids].RECID)
GO
PRINT N'Creating [crt].[GETPRODUCTMASTERDIMVALUETRANSLATION]...';


GO

-- Gets product master's dimension value translations
CREATE FUNCTION [crt].[GETPRODUCTMASTERDIMVALUETRANSLATION]
(
    @bi_ChannelId       BIGINT
)
RETURNS TABLE
RETURN
    SELECT
		erpmdvt.PRODUCTMASTERDIMENSIONVALUE,
		erpmdvt.LANGUAGEID,
		erpmdvt.NAME
        FROM ax.ECORESPRODUCTMASTERDIMVALUETRANSLATION erpmdvt
		JOIN crt.CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = @bi_ChannelId AND clv.LANGUAGEID = erpmdvt.LANGUAGEID
GO
PRINT N'Creating [crt].[GETITEMAVAILABILITY]...';


GO

-- This function is a parameterized versions of the ItemAvailabilityView to improve performance.
CREATE FUNCTION [crt].[GETITEMAVAILABILITY]
(
    @tvp_Ids crt.ITEMQUANTITYTABLETYPE READONLY
)

RETURNS TABLE
RETURN

SELECT
	RIAV.RECID
	,RIAV.ITEMID
	,CASE
	WHEN VID.CONFIGID = ''
	AND VID.INVENTSIZEID = ''
	AND VID.INVENTCOLORID = ''
	AND VID.INVENTSTYLEID = ''
	AND VID.INVENTBATCHID = ''
	AND VID.WMSLOCATIONID = ''
	AND VID.WMSPALLETID = ''
	AND VID.INVENTSERIALID = ''
	THEN ''
	ELSE ISNULL(VID.INVENTDIMID, '')
	END AS VARIANTINVENTDIMID
	,WID.INVENTDIMID AS WAREHOUSEINVENTDIMID
	,WID.INVENTSITEID
	,WID.INVENTLOCATIONID
	,RIAV.AVAILPHYSICAL
	,ITM.UNITID
	,RIAV.DATAAREAID
FROM [crt].GETRETAILINVENTAVAILABILITY(@tvp_Ids) RIAV
JOIN [ax].INVENTTABLEMODULE ITM ON ITM.ITEMID = RIAV.ITEMID AND ITM.DATAAREAID = RIAV.DATAAREAID AND ITM.MODULETYPE = 0 -- Invent.
JOIN [ax].INVENTDIM WID ON WID.INVENTDIMID = RIAV.INVENTDIMID AND WID.DATAAREAID = RIAV.DATAAREAID
LEFT JOIN [ax].INVENTDIM VID ON VID.CONFIGID = WID.CONFIGID
	AND VID.INVENTSIZEID = WID.INVENTSIZEID
	AND VID.INVENTCOLORID = WID.INVENTCOLORID
	AND VID.INVENTSTYLEID = WID.INVENTSTYLEID
	AND VID.INVENTBATCHID = WID.INVENTBATCHID
	AND VID.WMSLOCATIONID = WID.WMSLOCATIONID
	AND VID.WMSPALLETID = WID.WMSPALLETID
	AND VID.INVENTSERIALID = WID.INVENTSERIALID
	AND VID.INVENTLOCATIONID = ''
	AND VID.INVENTSITEID = ''
	AND VID.DATAAREAID = WID.DATAAREAID
GO
PRINT N'Creating [crt].[GETVARIANTSWITHDIMENSIONVALUES]...';


GO

CREATE FUNCTION [crt].[GETVARIANTSWITHDIMENSIONVALUES]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @nvc_Locale              NVARCHAR(7),
    @bi_MasterProductId      BIGINT
)
RETURNS TABLE
RETURN
    SELECT
        [par].VARIANTID AS RECORDID,
        0 AS ISREMOTE,
        [erc].RECID AS COLORRECID,
        COALESCE([dvc].NAME, [id].INVENTCOLORID, '') AS COLOR,
        [id].INVENTCOLORID AS COLORID,
        [epmdv_color].RETAILDISPLAYORDER AS COLORDISPLAYORDER,
        [ercfg].RECID AS CONFIGURATIONRECID,
        COALESCE([dvcfg].NAME, [id].CONFIGID, '') AS CONFIGURATION,
        [id].CONFIGID AS CONFIGURATIONID,
        [epmdv_config].RETAILDISPLAYORDER AS CONFIGURATIONDISPLAYORDER,
        [ers].RECID AS SIZERECID,
        COALESCE([dvsz].NAME, [id].INVENTSIZEID, '') AS SIZE,
        [id].INVENTSIZEID AS SIZEID,
        [epmdv_size].RETAILDISPLAYORDER AS SIZEDISPLAYORDER,
        [erst].RECID AS STYLERECID,
        COALESCE([dvst].NAME, [id].INVENTSTYLEID, '') AS STYLE,
        [id].INVENTSTYLEID AS STYLEID,
        [epmdv_style].RETAILDISPLAYORDER AS STYLEDISPLAYORDER
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    -- Color
    LEFT OUTER JOIN [ax].ECORESCOLOR erc ON [erc].NAME = [id].INVENTCOLORID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLOR = [erc].RECID AND [erpmc].COLORPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON [dvc].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID AND [dvc].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_color ON [epmdv_color].RECID = [erpmc].RECID
    -- Configuration
    LEFT OUTER JOIN [ax].ECORESCONFIGURATION ercfg ON [ercfg].NAME = [id].CONFIGID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON [erpmcfg].CONFIGURATION = [ercfg].RECID AND [erpmcfg].CONFIGPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON [dvcfg].PRODUCTMASTERDIMENSIONVALUE = [erpmcfg].RECID AND [dvcfg].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_config ON [epmdv_config].RECID = [erpmcfg].RECID
    -- Size
    LEFT OUTER JOIN [ax].ECORESSIZE ers ON [ers].NAME = [id].INVENTSIZEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZE = [ers].RECID AND [erpms].SIZEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON [dvsz].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID AND [dvsz].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_size ON [epmdv_size].RECID = [erpms].RECID
    -- Style
    LEFT OUTER JOIN [ax].ECORESSTYLE erst ON [erst].NAME = [id].INVENTSTYLEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON [erpmst].STYLE = [erst].RECID AND [erpmst].STYLEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON [dvst].PRODUCTMASTERDIMENSIONVALUE = [erpmst].RECID AND [dvst].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_style ON [epmdv_style].RECID = [erpmst].RECID
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].PRODUCTID = @bi_MasterProductId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    SELECT
        [par].VARIANTID AS RECORDID,
        1 AS ISREMOTE,
        [erc].RECID AS COLORRECID,
        COALESCE([dvc].NAME, [id].INVENTCOLORID, '') AS COLOR,
        [id].INVENTCOLORID AS COLORID,
        [epmdv_color].RETAILDISPLAYORDER AS COLORDISPLAYORDER,
        [ercfg].RECID AS CONFIGURATIONRECID,
        COALESCE([dvcfg].NAME, [id].CONFIGID, '') AS CONFIGURATION,
        [id].CONFIGID AS CONFIGURATIONID,
        [epmdv_config].RETAILDISPLAYORDER AS CONFIGURATIONDISPLAYORDER,
        [ers].RECID AS SIZERECID,
        COALESCE([dvsz].NAME, [id].INVENTSIZEID, '') AS SIZE,
        [id].INVENTSIZEID AS SIZEID,
        [epmdv_size].RETAILDISPLAYORDER AS SIZEDISPLAYORDER,
        [erst].RECID AS STYLERECID,
        COALESCE([dvst].NAME, [id].INVENTSTYLEID, '') AS STYLE,
        [id].INVENTSTYLEID AS STYLEID,
        [epmdv_style].RETAILDISPLAYORDER AS STYLEDISPLAYORDER
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    -- Color
    LEFT OUTER JOIN [ax].ECORESCOLOR erc ON [erc].NAME = [id].INVENTCOLORID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLOR = [erc].RECID AND [erpmc].COLORPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON [dvc].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID AND [dvc].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_color ON [epmdv_color].RECID = [erpmc].RECID
    -- Configuration
    LEFT OUTER JOIN [ax].ECORESCONFIGURATION ercfg ON [ercfg].NAME = [id].CONFIGID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON [erpmcfg].CONFIGURATION = [ercfg].RECID AND [erpmcfg].CONFIGPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON [dvcfg].PRODUCTMASTERDIMENSIONVALUE = [erpmcfg].RECID AND [dvcfg].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_config ON [epmdv_config].RECID = [erpmcfg].RECID
    -- Size
    LEFT OUTER JOIN [ax].ECORESSIZE ers ON [ers].NAME = [id].INVENTSIZEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZE = [ers].RECID AND [erpms].SIZEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON [dvsz].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID AND [dvsz].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_size ON [epmdv_size].RECID = [erpms].RECID
    -- Style
    LEFT OUTER JOIN [ax].ECORESSTYLE erst ON [erst].NAME = [id].INVENTSTYLEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON [erpmst].STYLE = [erst].RECID AND [erpmst].STYLEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON [dvst].PRODUCTMASTERDIMENSIONVALUE = [erpmst].RECID AND [dvst].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMENSIONVALUE epmdv_style ON [epmdv_style].RECID = [erpmst].RECID
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].PRODUCTID = @bi_MasterProductId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
GO
PRINT N'Creating [crt].[GETPUBCATALOGCURRENT]...';


GO

CREATE FUNCTION [crt].[GETPUBCATALOGCURRENT]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE
)
RETURNS TABLE
RETURN
    SELECT
        rpc.ORIGIN AS 'CATALOG',
        pccv.CHANNEL,
        rpc.ENABLESNAPSHOT,
        rpc.PUBLISHEDVALIDFROM AS 'VALIDFROM',
        rpc.PUBLISHEDVALIDTO AS 'VALIDTO',
        rpc.CREATEDDATETIME,
        rpc.MODIFIEDDATETIME,
        rpc.PUBLISHEDDATETIME
    FROM [ax].RETAILPUBCATALOG rpc
    INNER JOIN [crt].PUBCATALOGCHANNELVIEW pccv ON pccv.[CATALOG] = rpc.[ORIGIN]
    WHERE rpc.STATE = 5 -- Published
        AND pccv.CHANNEL = @bi_ChannelId
        AND @dt_ChannelDate BETWEEN rpc.PUBLISHEDVALIDFROM AND rpc.PUBLISHEDVALIDTO
GO
PRINT N'Creating [crt].[GETPUBCATALOGATTRIBUTEINHERITED]...';


GO

CREATE FUNCTION [crt].[GETPUBCATALOGATTRIBUTEINHERITED]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_IsForwardLooking BIT
)
RETURNS TABLE
RETURN
    SELECT
        rpc.ORIGIN AS [CATALOG]
    FROM [ax].RETAILPUBCATALOG rpc
    INNER JOIN [crt].PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW pccaiv ON pccaiv.[CATALOG] = rpc.ORIGIN AND pccaiv.CHANNEL = @bi_ChannelId
    WHERE (@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN rpc.PUBLISHEDVALIDFROM AND rpc.PUBLISHEDVALIDTO) OR
        (@b_IsForwardLooking = 1 AND @dt_ChannelDate <= rpc.PUBLISHEDVALIDTO)
GO
PRINT N'Creating [crt].[GETCATALOGCHANNELPRODUCTRELATIONEXCLUSION]...';


GO

-- Gets catalog channel product's hieararchy
CREATE FUNCTION [crt].[GETCATALOGCHANNELPRODUCTRELATIONEXCLUSION]
(
    @bi_ChannelId   BIGINT,
    @dt_ChannelDate DATE
)
RETURNS TABLE
RETURN
    SELECT
        pcc.CHANNEL,
        cprev.CATALOG,
        cprev.PRODUCT,
        cprev.PRODUCTRELATION
    FROM [crt].CATALOGPRODUCTRELATIONEXCLUSIONVIEW cprev
    INNER JOIN [crt].GETPUBCATALOGCURRENT(@bi_ChannelId, @dt_ChannelDate) pcc ON pcc.CATALOG = cprev.CATALOG
GO
PRINT N'Creating [crt].[GETCATALOGIDSASSOCIATEDTOPRODUCTS]...';


GO

CREATE FUNCTION [crt].[GETCATALOGIDSASSOCIATEDTOPRODUCTS]
(
	@bi_ChannelId   BIGINT,
	@dt_ChannelDate DATE,
	@tvp_ProductIds [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
	-- Retrieve VariantId = 0 and CatalogId != 0 products.
	SELECT
		[pcr].CATALOGID AS CATALOG,
        [pcr].PRODUCTID AS PRODUCT,
		0 AS ISREMOTE,
		[pcr].VALIDFROM,
		[pcr].VALIDTO
    FROM [crt].PRODUCTCATALOGRULESVIEW pcr
	INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].CHANNELID = [pcr].CHANNELID AND [par].PRODUCTID = [pcr].PRODUCTID AND [par].VARIANTID = 0
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].PRODUCTID
	WHERE [pcr].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [pcr].VALIDFROM AND [pcr].VALIDTO

	UNION ALL
	
	-- Retrieve VariantId != 0 and CatalogId != 0 products.
	SELECT
		[pcr].CATALOGID AS CATALOG,
        [pcr].PRODUCTID AS PRODUCT,
		0 AS ISREMOTE,
		[pcr].VALIDFROM,
		[pcr].VALIDTO
    FROM [crt].PRODUCTCATALOGRULESVIEW pcr
	INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].CHANNELID = [pcr].CHANNELID AND [par].VARIANTID = [pcr].PRODUCTID
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
	WHERE [pcr].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [pcr].VALIDFROM AND [pcr].VALIDTO

	UNION ALL

	-- Using Assortment date ranges for validity because Catalog = 0 does not have validity date ranges.
	-- Retrieve VariantId = 0 and CatalogId = 0 products.
	SELECT
        0 AS CATALOG,
        [par].PRODUCTID AS PRODUCT,
		0 AS ISREMOTE,
        [par].VALIDFROM,
        [par].VALIDTO
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].PRODUCTID AND [par].VARIANTID = 0
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

	UNION ALL
	
	-- Retrieve VariantId != 0 and CatalogId = 0 products.
	SELECT
        0 AS CATALOG,
        [par].VARIANTID AS PRODUCT,
		0 AS ISREMOTE,
        [par].VALIDFROM,
        [par].VALIDTO
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

	UNION ALL

	-- Retrieve VariantId = 0 and CatalogId != 0 products that have been added temporarily as part of virtual catalog.
	SELECT
		[pcr].CATALOGID AS CATALOG,
        [pcr].PRODUCTID AS PRODUCT,
		1 AS ISREMOTE,
		[pcr].VALIDFROM,
		[pcr].VALIDTO
    FROM [crt].PRODUCTCATALOGRULESVIEW pcr
	INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].CHANNELID = [pcr].CHANNELID AND [par].PRODUCTID = [pcr].PRODUCTID AND [par].VARIANTID = 0
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].PRODUCTID
	WHERE [pcr].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [pcr].VALIDFROM AND [pcr].VALIDTO

	UNION ALL
	
	-- Retrieve VariantId != 0 and CatalogId != 0 products that have been added temporarily as part of virtual catalog.
	SELECT
		[pcr].CATALOGID AS CATALOG,
        [pcr].PRODUCTID AS PRODUCT,
		1 AS ISREMOTE,
		[pcr].VALIDFROM,
		[pcr].VALIDTO
    FROM [crt].PRODUCTCATALOGRULESVIEW pcr
	INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].CHANNELID = [pcr].CHANNELID AND [par].VARIANTID = [pcr].PRODUCTID
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
	WHERE [pcr].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [pcr].VALIDFROM AND [pcr].VALIDTO

	UNION ALL

	-- Using Assortment date ranges for validity because Catalog = 0 does not have validity date ranges.
	-- Retrieve VariantId = 0 and CatalogId = 0 products that have been added temporarily as part of virtual catalog.
	SELECT
        0 AS CATALOG,
        [par].PRODUCTID AS PRODUCT,
		1 AS ISREMOTE,
        [par].VALIDFROM,
        [par].VALIDTO
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].PRODUCTID AND [par].VARIANTID = 0
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

	UNION ALL
	
	-- Retrieve VariantId != 0 and CatalogId = 0 products that have been added temporarily as part of virtual catalog.
	SELECT
        0 AS CATALOG,
        [par].VARIANTID AS PRODUCT,
		1 AS ISREMOTE,
        [par].VALIDFROM,
        [par].VALIDTO
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
	INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
GO
PRINT N'Creating [crt].[GETLINKEDPRODUCTRELATIONS_V2]...';


GO
CREATE FUNCTION [crt].[GETLINKEDPRODUCTRELATIONS_V2]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY,
    @nvc_DataAreaId          NVARCHAR(10)
)
RETURNS TABLE
RETURN    
    -- Get the ITEMID for the values inside @tvp_ProductIds
    WITH INPUTITEMIDS AS
    (
        -- master and standalones
        SELECT
            [ids].RECID AS PRODUCTID,
            [it].ITEMID
        FROM @tvp_ProductIds ids
            INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [ids].RECID  AND [it].DATAAREAID = @nvc_DataAreaId           

        UNION ALL
        
        -- variants
        SELECT
            [ids].RECID AS PRODUCTID,
            [idc].ITEMID
        FROM @tvp_ProductIds ids
            INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [ids].RECID  AND [idc].DATAAREAID = @nvc_DataAreaId
    ),

    -- Join INPUTITEMIDS and RETAILINVENTLINKEDITEM to get the linked products for the input requested
    LINKEDPRODUCTS AS
    (
        SELECT
            [i].PRODUCTID,
            [l_it].PRODUCT AS LINKEDPRODUCTID,  -- productid of the linked product
            [rili].QTY AS QUANTITY,
            [rili].UNIT AS UNITOFMEASURE
        FROM INPUTITEMIDS [i]
            INNER JOIN [ax].RETAILINVENTLINKEDITEM [rili] ON [rili].ITEMID = [i].ITEMID AND [rili].DATAAREAID = @nvc_DataAreaId
                INNER JOIN [ax].INVENTTABLE l_it ON [l_it].ITEMID = [rili].LINKEDITEMID AND [l_it].DATAAREAID = [rili].DATAAREAID
    )

    -- filter LINKEDPRODUCTS by remote and local assortments
    SELECT
        0 AS ISREMOTE,
        [lp].LINKEDPRODUCTID,
        [lp].PRODUCTID,
        [lp].QUANTITY,
        [lp].UNITOFMEASURE
    FROM LINKEDPRODUCTS lp
    WHERE
        EXISTS
        (
            SELECT * FROM [crt].ASSORTEDPRODUCTSVIEW ap
            WHERE
                [ap].ISREMOTE = 0
                AND [ap].PRODUCTID = [lp].PRODUCTID
                AND [ap].CHANNELID = @bi_ChannelId
                AND @dt_ChannelDate BETWEEN [ap].VALIDFROM AND [ap].VALIDTO
        )

    UNION ALL

    SELECT
        1 AS ISREMOTE,
        [lp].LINKEDPRODUCTID,
        [lp].PRODUCTID,
        [lp].QUANTITY,
        [lp].UNITOFMEASURE
    FROM LINKEDPRODUCTS lp
    WHERE
        EXISTS
        (
            SELECT * FROM [crt].ASSORTEDPRODUCTSVIEW ap
            WHERE
                [ap].ISREMOTE = 1
                AND [ap].PRODUCTID = [lp].PRODUCTID
                AND [ap].CHANNELID = @bi_ChannelId
                AND @dt_ChannelDate BETWEEN [ap].VALIDFROM AND [ap].VALIDTO
        )
GO
PRINT N'Creating [crt].[GETPRODUCTDIMENSIONVALUESBYVARIANTPRODUCTIDS]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTDIMENSIONVALUESBYVARIANTPRODUCTIDS]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @nvc_Locale              NVARCHAR(7),
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    SELECT
        0 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        1 AS DIMENSION,  -- Color
        [id].INVENTCOLORID AS DIMENSIONID,
        COALESCE([dvc].NAME, [id].INVENTCOLORID, '') AS VALUE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESCOLOR erc ON [erc].NAME = [id].INVENTCOLORID
    INNER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLOR = [erc].RECID AND [erpmc].COLORPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON [dvc].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID AND [dvc].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    SELECT
        0 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        2 AS DIMENSION,  -- Configuration
        [id].CONFIGID AS DIMENSIONID,
        COALESCE([dvcfg].NAME, [id].CONFIGID, '') AS VALUE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESCONFIGURATION ercfg ON [ercfg].NAME = [id].CONFIGID
    INNER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON [erpmcfg].CONFIGURATION = [ercfg].RECID AND [erpmcfg].CONFIGPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON [dvcfg].PRODUCTMASTERDIMENSIONVALUE = [erpmcfg].RECID AND [dvcfg].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    SELECT
        0 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        3 AS DIMENSION,  -- Size
        [id].INVENTSIZEID AS DIMENSIONID,
        COALESCE([dvsz].NAME, [id].INVENTSIZEID, '') AS VALUE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESSIZE ers ON [ers].NAME = [id].INVENTSIZEID
    INNER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZE = [ers].RECID AND [erpms].SIZEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON [dvsz].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID AND [dvsz].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    SELECT
        0 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        4 AS DIMENSION,  -- Style
        [id].INVENTSTYLEID AS DIMENSIONID,
        COALESCE([dvst].NAME, [id].INVENTSTYLEID, '') AS VALUE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESSTYLE erst ON [erst].NAME = [id].INVENTSTYLEID
    INNER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON [erpmst].STYLE = [erst].RECID AND [erpmst].STYLEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON [dvst].PRODUCTMASTERDIMENSIONVALUE = [erpmst].RECID AND [dvst].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    -- Retrieve dimension values for remote products
    SELECT
        1 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        1 AS DIMENSION,  -- Color
        [id].INVENTCOLORID AS DIMENSIONID,
        COALESCE([dvc].NAME, [id].INVENTCOLORID, '') AS VALUE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESCOLOR erc ON [erc].NAME = [id].INVENTCOLORID
    INNER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON [erpmc].COLOR = [erc].RECID AND [erpmc].COLORPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON [dvc].PRODUCTMASTERDIMENSIONVALUE = [erpmc].RECID AND [dvc].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    SELECT
        1 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        2 AS DIMENSION,  -- Configuration
        [id].CONFIGID AS DIMENSIONID,
        COALESCE([dvcfg].NAME, [id].CONFIGID, '') AS VALUE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESCONFIGURATION ercfg ON [ercfg].NAME = [id].CONFIGID
    INNER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON [erpmcfg].CONFIGURATION = [ercfg].RECID AND [erpmcfg].CONFIGPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON [dvcfg].PRODUCTMASTERDIMENSIONVALUE = [erpmcfg].RECID AND [dvcfg].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    SELECT
        1 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        3 AS DIMENSION,  -- Size
        [id].INVENTSIZEID AS DIMENSIONID,
        COALESCE([dvsz].NAME, [id].INVENTSIZEID, '') AS VALUE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESSIZE ers ON [ers].NAME = [id].INVENTSIZEID
    INNER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON [erpms].SIZE = [ers].RECID AND [erpms].SIZEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON [dvsz].PRODUCTMASTERDIMENSIONVALUE = [erpms].RECID AND [dvsz].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    SELECT
        1 AS ISREMOTE,
        [par].VARIANTID AS PRODUCTID,
        4 AS DIMENSION,  -- Style
        [id].INVENTSTYLEID AS DIMENSIONID,
        COALESCE([dvst].NAME, [id].INVENTSTYLEID, '') AS VALUE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN @tvp_ProductIds ids ON [ids].RECID = [par].VARIANTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [par].VARIANTID AND [idc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTDIM id ON [id].INVENTDIMID = [idc].INVENTDIMID AND [id].DATAAREAID = [idc].DATAAREAID
    INNER JOIN [ax].ECORESSTYLE erst ON [erst].NAME = [id].INVENTSTYLEID
    INNER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON [erpmst].STYLE = [erst].RECID AND [erpmst].STYLEPRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON [dvst].PRODUCTMASTERDIMENSIONVALUE = [erpmst].RECID AND [dvst].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
GO
PRINT N'Creating [crt].[GETVARIANTS]...';


GO

-- Gets the list of variants for the specified list of distinct product variant identifiers.
CREATE FUNCTION [crt].[GETVARIANTS]
(
    @bi_ChannelId                   BIGINT,
    @dt_ChannelDate                 DATE,
    @tvp_DistinctProductVariantIds  [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    SELECT
        idc.RECID AS 'RECID',
        it.ITEMID,
        idc.RETAILVARIANTID AS 'VARIANTID',
        id.INVENTDIMID AS 'INVENTDIMID',
        idc.DISTINCTPRODUCTVARIANT,
        id.INVENTSIZEID AS 'SIZEID',
        id.INVENTCOLORID AS 'COLORID',
        id.INVENTSTYLEID AS 'STYLEID',
        id.CONFIGID AS 'CONFIGID',
        ISNULL(dvc.NAME, '') AS 'COLOR',
        ISNULL(dvsz.NAME, '') AS 'SIZE',
        ISNULL(dvst.NAME, '') AS 'STYLE',
        ISNULL(dvcfg.NAME, '') AS 'CONFIG'
    FROM @tvp_DistinctProductVariantIds ids
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON rct.RECID = @bi_ChannelId
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = rct.RECID AND clv.ISDEFAULT = 1 -- Use default channel language
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON idc.DISTINCTPRODUCTVARIANT = ids.RECID AND idc.DATAAREAID = rct.INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].INVENTTABLE it ON it.ITEMID = idc.ITEMID AND it.DATAAREAID = idc.DATAAREAID
    INNER JOIN [ax].INVENTDIM id ON id.INVENTDIMID = idc.INVENTDIMID AND id.DATAAREAID = idc.DATAAREAID
    -- Color
    LEFT OUTER JOIN [ax].ECORESCOLOR erc ON erc.NAME = id.INVENTCOLORID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCOLOR erpmc ON erpmc.COLOR = erc.RECID AND erpmc.COLORPRODUCTMASTER = it.PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvc ON DVC.PRODUCTMASTERDIMENSIONVALUE = erpmc.RECID AND dvc.LANGUAGEID = clv.LANGUAGEID
    -- Size
    LEFT OUTER JOIN [ax].ECORESSIZE ers ON ers.NAME = id.INVENTSIZEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSIZE erpms ON erpms.SIZE = ers.RECID AND erpms.SIZEPRODUCTMASTER = it.PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvsz ON dvsz.PRODUCTMASTERDIMENSIONVALUE = erpms.RECID AND dvsz.LANGUAGEID = clv.LANGUAGEID
    -- Style
    LEFT OUTER JOIN [ax].ECORESSTYLE erst ON erst .NAME = id.INVENTSTYLEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERSTYLE erpmst ON erpmst.STYLE = erst .RECID AND erpmst.STYLEPRODUCTMASTER = it.PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvst ON dvst.PRODUCTMASTERDIMENSIONVALUE = erpmst.RECID AND dvst.LANGUAGEID = clv.LANGUAGEID
    -- Configuration
    LEFT OUTER JOIN [ax].ECORESCONFIGURATION ercfg ON ercfg.NAME = id.CONFIGID
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERCONFIGURATION erpmcfg ON erpmcfg.CONFIGURATION = ercfg.RECID AND erpmcfg.CONFIGPRODUCTMASTER = it.PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION dvcfg ON dvcfg.PRODUCTMASTERDIMENSIONVALUE = erpmcfg.RECID AND dvcfg.LANGUAGEID = clv.LANGUAGEID
GO
PRINT N'Creating [crt].[GETPRODUCTSBYIDS_V2]...';


GO
CREATE FUNCTION [crt].[GETPRODUCTSBYIDS_V2]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_Locale              NVARCHAR(7),
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY,
    @nvc_DefaultLocale       NVARCHAR(7),
    @nvc_DataAreaId          NVARCHAR(10)
)
RETURNS TABLE
RETURN
    -- basic filtering on assortment
    WITH ASSORTEDPRODUCTIDS AS
    (
        SELECT
            PRODUCTID,
            ISREMOTE
        FROM [crt].ASSORTEDPRODUCTSVIEW ap
        WHERE
            ap.CHANNELID = @bi_ChannelId
            AND @dt_ChannelDate BETWEEN ap.VALIDFROM AND ap.VALIDTO
    ),

    -- filter input records for locally and remotely assorted products
    ASSORTEDINPUT AS
    (
        SELECT
            input.RECID,
            CAST(0 AS BIT) AS ISREMOTE
        FROM @tvp_ProductIds input
        WHERE
            input.RECID IN (SELECT PRODUCTID FROM ASSORTEDPRODUCTIDS WHERE ISREMOTE = 0) -- filter is prefered over join as ASSORTEDPRODUCTIDS may have more than a record for each product/channel combination

        UNION ALL

        SELECT
            input.RECID,
            CAST(1 AS BIT) AS ISREMOTE
        FROM @tvp_ProductIds input
        WHERE
            input.RECID IN (SELECT PRODUCTID FROM ASSORTEDPRODUCTIDS WHERE ISREMOTE = 1)
    ),

    MASTERSTANDALONEDETAILS AS
    (
        SELECT
            erp.RECID,
            NULL                                                                                            AS MASTERPRODUCTID,
            it.ITEMID,
            itm.UNITID,
            COALESCE(NULLIF(erpt.DESCRIPTION, ''), erpt_default.DESCRIPTION, '')                            AS [DESCRIPTION],
            COALESCE(NULLIF(erpt.NAME, ''), NULLIF(erpt_default.NAME, ''), erp.DISPLAYPRODUCTNUMBER)        AS NAME,
                        
            CASE
                WHEN EXISTS (SELECT * FROM [ax].RETAILKIT rk WHERE [rk].PRODUCTMASTER = erp.RECID) THEN 1                       -- Kit Master                
                WHEN EXISTS (SELECT * FROM [ax].ECORESDISTINCTPRODUCTVARIANT dpv WHERE [dpv].PRODUCTMASTER = erp.RECID) THEN 3  -- Master
                ELSE 4                                                                                                          -- Standalone
            END                                                                                             AS PRODUCTTYPE

        FROM [ax].ECORESPRODUCT erp WITH (FORCESEEK)
            INNER JOIN [ax].INVENTTABLE it WITH (FORCESEEK) ON it.PRODUCT = erp.RECID    -- because we inner join with this table, this guarantees that all records in this select will be non-variants
            INNER JOIN [ax].INVENTTABLEMODULE itm WITH (FORCESEEK) ON itm.ITEMID = it.ITEMID
            LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default WITH (FORCESEEK) ON erpt_default.PRODUCT = erp.RECID AND erpt_default.LANGUAGEID = @nvc_DefaultLocale
            LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt WITH (FORCESEEK) ON erpt.PRODUCT = erp.RECID AND erpt.LANGUAGEID = @nvc_Locale
        WHERE
            it.DATAAREAID = @nvc_DataAreaId
            AND itm.DATAAREAID = @nvc_DataAreaId
            AND itm.MODULETYPE = 2  -- Sales        
    ),

    VARIANTDETAILS AS
    (
        SELECT
            [idc].DISTINCTPRODUCTVARIANT                                                                                        AS RECID,
            [masterDetails].RECID                                                                                               AS MASTERPRODUCTID,
            masterDetails.ITEMID,
            idc.INVENTDIMID,
            idc.RETAILVARIANTID,
            masterDetails.UNITID,
            COALESCE(NULLIF(erpt.DESCRIPTION, ''), NULLIF(erpt_default.DESCRIPTION, ''), masterDetails.DESCRIPTION)             AS [DESCRIPTION],
            COALESCE(NULLIF(erpt.NAME, ''), NULLIF(erpt_default.NAME, ''), masterDetails.NAME)                                  AS NAME,
            CASE masterDetails.PRODUCTTYPE
                WHEN 1 THEN 2 -- Kit Variant
                ELSE 5        -- Non-kit Variant
            END                                                                                                                 AS PRODUCTTYPE
        FROM [ax].INVENTDIMCOMBINATION idc -- because we inner join with this table, this guarantees that all records in this select will be variants
            INNER JOIN MASTERSTANDALONEDETAILS masterDetails ON masterDetails.ITEMID = idc.ITEMID   -- this will retrieve the details for the master associated to this variant
            
            -- variants can have different name and description from its master
            LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt         WITH (FORCESEEK) ON [erpt].PRODUCT = [idc].DISTINCTPRODUCTVARIANT AND [erpt].LANGUAGEID = @nvc_Locale
            LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default WITH (FORCESEEK) ON [erpt_default].PRODUCT = [idc].DISTINCTPRODUCTVARIANT AND [erpt_default].LANGUAGEID = @nvc_DefaultLocale
        WHERE
            idc.DATAAREAID = @nvc_DataAreaId
    )

    SELECT
        details.UNITID                                                          AS DEFAULTUNITOFMEASURE,
        details.DESCRIPTION                                                     AS [DESCRIPTION],        
        details.NAME                                                            AS NAME,
        details.RECID                                                           AS RECID,
        details.MASTERPRODUCTID                                                 AS MASTERPRODUCTID,
        details.PRODUCTTYPE                                                     AS PRODUCTTYPE,
        assortedInput.ISREMOTE                                                  AS ISREMOTE,
        details.ITEMID                                                          AS ITEMID,
        NULL                                                                    AS INVENTDIMID,
        NULL                                                                    AS VARIANTID
    FROM MASTERSTANDALONEDETAILS details
        INNER JOIN ASSORTEDINPUT assortedInput ON assortedInput.RECID = details.RECID

    UNION ALL

    SELECT
        details.UNITID                                                          AS DEFAULTUNITOFMEASURE,
        details.DESCRIPTION                                                     AS [DESCRIPTION],        
        details.NAME                                                            AS NAME,
        details.RECID                                                           AS RECID,
        details.MASTERPRODUCTID                                                 AS MASTERPRODUCTID,
        details.PRODUCTTYPE                                                     AS PRODUCTTYPE,
        assortedInput.ISREMOTE                                                  AS ISREMOTE,
        details.ITEMID                                                          AS ITEMID,
        details.INVENTDIMID                                                     AS INVENTDIMID,
        details.RETAILVARIANTID                                                 AS VARIANTID
    FROM VARIANTDETAILS details
        INNER JOIN ASSORTEDINPUT assortedInput ON assortedInput.RECID = details.RECID
;
GO
PRINT N'Creating [crt].[GETPUBCATALOG]...';


GO

CREATE FUNCTION [crt].[GETPUBCATALOG]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_IsForwardLooking BIT
)
RETURNS TABLE
RETURN
    SELECT
        rpc.ORIGIN AS [CATALOG]
    FROM [ax].RETAILPUBCATALOG rpc
    JOIN [crt].PUBCATALOGCHANNELVIEW pccv ON pccv.[CATALOG] = rpc.ORIGIN AND pccv.CHANNEL = @bi_ChannelId
    WHERE (@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN rpc.PUBLISHEDVALIDFROM AND rpc.PUBLISHEDVALIDTO) 
        OR (@b_IsForwardLooking = 1 AND @dt_ChannelDate <= rpc.PUBLISHEDVALIDTO)
GO
PRINT N'Creating [crt].[GETTEXTVALUETRANSLATION]...';


GO

-- Gets channel's text value translations
CREATE FUNCTION [crt].[GETTEXTVALUETRANSLATION]
(
    @bi_ChannelId       BIGINT
)
RETURNS TABLE
RETURN
    SELECT
		ertvt.TEXTVALUETABLE AS VALUE,
		ertvt.[LANGUAGE],
		ertvt.TEXTVALUE AS TRANSLATION
        FROM ax.ECORESTEXTVALUETRANSLATION ertvt
            JOIN crt.CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = @bi_ChannelId AND clv.LANGUAGEID = ertvt.[LANGUAGE]
GO
PRINT N'Creating [crt].[GETSTANDARDPRODUCTATTRIBUTEVALUE]...';


GO

-- Gets standard product attributes' values.
CREATE FUNCTION [crt].[GETSTANDARDPRODUCTATTRIBUTEVALUE]
(
	@bi_ChannelId           BIGINT,	
	@b_ProductIdsPassed     BIT,
	@tvp_ProductIds         [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN

    SELECT
        EP.RECID AS PRODUCT,
        RSA.ATTRIBUTE,
        NULL AS DISPLAYORDER,
        EP.DISPLAYPRODUCTNUMBER AS TEXTVALUE,
        '' AS LANGUAGEID,
        '' AS TRANSLATION
    FROM [ax].ECORESPRODUCT EP
    JOIN @tvp_ProductIds AS ids ON @b_ProductIdsPassed = 0 OR EP.RECID = ids.RECID
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 1  -- ProductNumber
    
    UNION ALL

    SELECT
        EPT.PRODUCT,
        RSA.ATTRIBUTE,
        NULL AS DISPLAYORDER,
        '' AS TEXTVALUE,
        EPT.LANGUAGEID,
        EPT.NAME AS TRANSLATION
    FROM [ax].ECORESPRODUCTTRANSLATION EPT
    JOIN [crt].CHANNELLANGUAGESVIEW CLV ON CLV.CHANNEL = @bi_ChannelId AND CLV.LANGUAGEID = EPT.LANGUAGEID
    JOIN @tvp_ProductIds AS ids ON @b_ProductIdsPassed = 0 OR EPT.PRODUCT = ids.RECID
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 2  -- ProductName
    
    UNION ALL

    SELECT
        EP.RECID AS PRODUCT,
        RSA.ATTRIBUTE,
        NULL AS DISPLAYORDER,
        EP.SEARCHNAME AS TEXTVALUE,
        '' AS LANGUAGEID,
        '' AS TRANSLATION
    FROM [ax].ECORESPRODUCT EP
    JOIN @tvp_ProductIds AS ids ON @b_ProductIdsPassed = 0 OR EP.RECID = ids.RECID
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 3  -- SearchName
    
    UNION ALL

    SELECT
        EPT.PRODUCT,
        RSA.ATTRIBUTE,
        NULL AS DISPLAYORDER,
        '' AS TEXTVALUE,
        EPT.LANGUAGEID,
        EPT.DESCRIPTION AS TRANSLATION
    FROM [ax].ECORESPRODUCTTRANSLATION EPT
    JOIN [crt].CHANNELLANGUAGESVIEW CLV ON CLV.CHANNEL = @bi_ChannelId AND CLV.LANGUAGEID = EPT.LANGUAGEID
    JOIN @tvp_ProductIds AS ids ON @b_ProductIdsPassed = 0 OR EPT.PRODUCT = ids.RECID
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 4  -- Description

	UNION ALL

    SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        rsa.ATTRIBUTE,
        EPMDV.RETAILDISPLAYORDER AS DISPLAYORDER,
        EC.NAME AS TEXTVALUE,
        ISNULL(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        ISNULL(PMDVT.NAME, '') AS TRANSLATION
	FROM crt.GETPRODUCTVARIANTDIMENSIONVALUES(@b_ProductIdsPassed, @tvp_ProductIds) EPVDV
	JOIN ax.ECORESPRODUCTVARIANTCOLOR EPVC ON EPVDV.RECID = EPVC.RECID
    JOIN ax.ECORESCOLOR EC ON EC.RECID = EPVC.COLOR
    JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    JOIN ax.ECORESPRODUCTMASTERCOLOR EPMC ON (EPMC.COLORPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMC.COLOR = EC.RECID)
    LEFT OUTER JOIN crt.GETPRODUCTMASTERDIMVALUETRANSLATION(@bi_ChannelId) AS PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMC.RECID
	LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMENSIONVALUE EPMDV ON EPMDV.RECID = EPMC.RECID
    JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 5  -- Color

	UNION ALL

	SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        rsa.ATTRIBUTE,
        EPMDV.RETAILDISPLAYORDER AS DISPLAYORDER,
        EC.NAME AS TEXTVALUE,
        ISNULL(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        ISNULL(PMDVT.NAME, '') AS TRANSLATION
	FROM crt.GETPRODUCTVARIANTDIMENSIONVALUES(@b_ProductIdsPassed, @tvp_ProductIds) EPVDV
	JOIN ax.ECORESPRODUCTVARIANTSTYLE EPVS ON EPVDV.RECID = EPVS.RECID
    JOIN ax.ECORESSTYLE EC ON EC.RECID = EPVS.STYLE
    JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    JOIN ax.ECORESPRODUCTMASTERSTYLE EPMS ON (EPMS.STYLEPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMS.STYLE = EC.RECID)
    LEFT OUTER JOIN crt.GETPRODUCTMASTERDIMVALUETRANSLATION(@bi_ChannelId) AS PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMS.RECID
    LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMENSIONVALUE EPMDV ON EPMDV.RECID = EPMS.RECID
	JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 6  -- Style

	UNION ALL
	
	SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        RSA.ATTRIBUTE,
        EPMDV.RETAILDISPLAYORDER AS DISPLAYORDER,
        EC.NAME AS TEXTVALUE,
        ISNULL(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        ISNULL(PMDVT.NAME, '') AS TRANSLATION
	FROM crt.GETPRODUCTVARIANTDIMENSIONVALUES(@b_ProductIdsPassed, @tvp_ProductIds) EPVDV
	JOIN ax.ECORESPRODUCTVARIANTSIZE EPVS ON EPVDV.RECID = EPVS.RECID
    JOIN ax.ECORESSIZE EC ON EC.RECID = EPVS.SIZE
    JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    JOIN ax.ECORESPRODUCTMASTERSIZE EPMS ON (EPMS.SIZEPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMS.SIZE = EC.RECID)
    LEFT OUTER JOIN crt.GETPRODUCTMASTERDIMVALUETRANSLATION(@bi_ChannelId) AS PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMS.RECID
    LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMENSIONVALUE EPMDV ON EPMDV.RECID = EPMS.RECID
	JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 7  -- Size

	UNION ALL

	SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        rsa.ATTRIBUTE,
        EPMDV.RETAILDISPLAYORDER AS DISPLAYORDER,
        EC.NAME AS TEXTVALUE,
        ISNULL(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        ISNULL(PMDVT.NAME, '') AS TRANSLATION
	FROM crt.GETPRODUCTVARIANTDIMENSIONVALUES(@b_ProductIdsPassed, @tvp_ProductIds) EPVDV
	JOIN ax.ECORESPRODUCTVARIANTCONFIGURATION EPVC ON EPVDV.RECID = EPVC.RECID
    JOIN ax.ECORESCONFIGURATION EC ON EC.RECID = EPVC.CONFIGURATION
    JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    JOIN ax.ECORESPRODUCTMASTERCONFIGURATION EPMC ON (EPMC.CONFIGPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMC.CONFIGURATION = EC.RECID)
    LEFT OUTER JOIN crt.GETPRODUCTMASTERDIMVALUETRANSLATION(@bi_ChannelId) AS PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMC.RECID
    LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMENSIONVALUE EPMDV ON EPMDV.RECID = EPMC.RECID
	JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 8  -- Configuration
GO
PRINT N'Creating [crt].[GETRETAILTRANSACTIONCATEGORIES]...';


GO

-- Gets the retail transaction information for items and retail categories. Used by GetTop10ProductsReport.
CREATE FUNCTION [crt].[GETRETAILTRANSACTIONCATEGORIES]
(
    @bi_ChannelId   BIGINT,
    @nvc_DataAreaId NVARCHAR(4)
)
RETURNS TABLE
RETURN
    WITH RETAILTRANSACTIONSALESTRANSBATCH AS
    (
        SELECT DISTINCT
            ROW_NUMBER() OVER (PARTITION BY rta.SALESORDERID,it.ITEMID, rta.TYPE ORDER BY rta.TRANSACTIONID DESC) AS ROWNO
            ,rta.[SALESORDERID]
            ,rta.[TYPE]
            ,rtt.[NETAMOUNT]
            ,rtt.[TAXAMOUNT]
            ,rta.[PAYMENTAMOUNT]
            ,it.[ITEMID]
            ,erpt.[NAME] AS PRODUCTNAME
            ,it.[PRODUCT]
            ,rta.[TRANSDATE]
            ,rta.[STORE]
            ,rtt.[QTY]
            ,rta.[CHANNEL]
            ,rta.[TRANSACTIONID]
        FROM [ax].RETAILTRANSACTIONTABLE rta WITH (NOLOCK)
        INNER JOIN [ax].RETAILTRANSACTIONSALESTRANS rtt WITH (NOLOCK) ON rtt.TERMINALID = rta.TERMINAL AND rtt.TRANSACTIONID = rta.TRANSACTIONID AND rtt.CHANNEL = rta.CHANNEL
        INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = @bi_ChannelId AND clv.ISDEFAULT = 1 -- Use default channel language
        INNER JOIN [ax].INVENTTABLE it WITH (NOLOCK) ON it.ITEMID = rtt.ITEMID AND it.DATAAREAID = @nvc_DataAreaId
        INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON erpt.PRODUCT = it.PRODUCT AND erpt.LANGUAGEID = clv.LANGUAGEID
        WHERE 
			rta.CHANNEL = @bi_ChannelId 
			AND (rta.TYPE = 2 OR rta.TYPE = 19 OR rta.TYPE = 14) -- TYPE 2 SALES TRANSACTION TYPE 19 CUSTOMER ORDER TYPE 14 SALES ORDER
			AND rta.ENTRYSTATUS <> 1
			AND rtt.TRANSACTIONSTATUS <> 1
    )
    SELECT
         TYPE,
         NETAMOUNT,
         TAXAMOUNT,
         PAYMENTAMOUNT,
         ITEMID,
         PRODUCTNAME,
         PRODUCT,
         TRANSDATE,
         STORE,
         QTY,
         CHANNEL,
         TRANSACTIONID
    FROM RETAILTRANSACTIONSALESTRANSBATCH
    WHERE
        (ROWNO = 1 OR SALESORDERID IS NULL OR LEN(LTRIM(RTRIM(SALESORDERID))) = 0)
        -- TO EXCLUDE VOIDED TRANSACTION BUT INCLUDE RECALLED ORDER
        AND ((PAYMENTAMOUNT <> 0.00) OR (PAYMENTAMOUNT = 0.00 AND LEN(LTRIM(RTRIM(SALESORDERID))) > 0))
        -- TO EXCLUDE CANCELLED ORDER TRANSACTION
        AND (NOT(PAYMENTAMOUNT < 0.00 AND QTY < 0.00))
GO
PRINT N'Creating [crt].[GETPRODUCTBEHAVIORBYPRODUCTIDS]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTBEHAVIORBYPRODUCTIDS]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @tvp_ProductIds          [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    -- Retrieve behvaviors for variant id = 0 products.
    SELECT DISTINCT
        CASE
            WHEN [siv].PRODUCTID IS NULL THEN 0
            ELSE 1
        END AS HASSERIALNUMBER,
        0 AS ISREMOTE,
        [rit].PROHIBITRETURN_RU ^ 1 AS ISRETURNALLOWED,
        [rit].BLOCKEDONPOS ^ 1 AS ISSALEATPHYSICALSTORESALLOWED,
        [rit].QTYBECOMESNEGATIVE AS ISNEGATIVEQUANTITYALLOWED,
        [rit].NODISCOUNTALLOWED ^ 1 AS ISDISCOUNTALLOWED,
        [rk].DISASSEMBLYATREGISTERALLOWED AS ISKITDISASSEMBLYALLOWED,
        [rit].ZEROPRICEVALID AS ISZEROSALEPRICEALLOWED,
        [rit].KEYINGINPRICE AS KEYINPRICE,
        [rit].KEYINGINQTY AS KEYINQUANTITY,
        [rit].MUSTKEYINCOMMENT AS MUSTKEYINCOMMENT,
        [rit].PRINTVARIANTSSHELFLABELS AS MUSTPRINTINDIVIDUALSHELFLABELSFORVARIANTS,
        [siv].ISSALESPROCESSACTIVATED AS MUSTPROMPTFORSERIALNUMBERONLYATSALE,
        [rit].SCALEITEM AS MUSTWEIGHPRODUCTATSALE,
        CASE
            WHEN [par].VARIANTID != 0 AND [par].VARIANTID = [erdpv].RECID THEN [par].VARIANTID
            WHEN [par].VARIANTID = 0 AND [par].PRODUCTID = [erdpv].PRODUCTMASTER THEN [par].PRODUCTID
            ELSE [par].PRODUCTID
        END AS PRODUCTID,
        [rit].DATETOACTIVATEITEM AS VALIDFROMDATEFORSALEATPHYSICALSTORES,
        CASE [rit].DATETOBEBLOCKED
            WHEN [crt].GETMINAXDATE() THEN [crt].GETMAXAXDATE()
            ELSE [rit].DATETOBEBLOCKED
        END AS VALIDTODATEFORSALEATPHYSICALSTORES
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].CHANNELID = @bi_ChannelId AND [par].PRODUCTID = [ids].RECID AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [rct].INVENTLOCATIONDATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].RETAILINVENTTABLE rit ON [rit].ITEMID = [it].ITEMID AND [rit].DATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [crt].SERIALIZEDITEMSVIEW siv ON [siv].PRODUCTID = [par].PRODUCTID AND [siv].ITEMDATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].RECID = [par].VARIANTID

    UNION ALL
    
    -- Retrieve behvaviors for variant id != 0 products.
    SELECT DISTINCT
        CASE
            WHEN [siv].PRODUCTID IS NULL THEN 0
            ELSE 1
        END AS HASSERIALNUMBER,
        0 AS ISREMOTE,
        [rit].PROHIBITRETURN_RU ^ 1 AS ISRETURNALLOWED,
        [rit].BLOCKEDONPOS ^ 1 AS ISSALEATPHYSICALSTORESALLOWED,
        [rit].QTYBECOMESNEGATIVE AS ISNEGATIVEQUANTITYALLOWED,
        [rit].NODISCOUNTALLOWED ^ 1 AS ISDISCOUNTALLOWED,
        [rk].DISASSEMBLYATREGISTERALLOWED AS ISKITDISASSEMBLYALLOWED,
        [rit].ZEROPRICEVALID AS ISZEROSALEPRICEALLOWED,
        [rit].KEYINGINPRICE AS KEYINPRICE,
        [rit].KEYINGINQTY AS KEYINQUANTITY,
        [rit].MUSTKEYINCOMMENT AS MUSTKEYINCOMMENT,
        [rit].PRINTVARIANTSSHELFLABELS AS MUSTPRINTINDIVIDUALSHELFLABELSFORVARIANTS,
        [siv].ISSALESPROCESSACTIVATED AS MUSTPROMPTFORSERIALNUMBERONLYATSALE,
        [rit].SCALEITEM AS MUSTWEIGHPRODUCTATSALE,
        CASE
            WHEN [par].VARIANTID != 0 AND [par].VARIANTID = [erdpv].RECID THEN [par].VARIANTID
            WHEN [par].VARIANTID = 0 AND [par].PRODUCTID = [erdpv].PRODUCTMASTER THEN [par].PRODUCTID
            ELSE [par].PRODUCTID
        END AS PRODUCTID,
        [rit].DATETOACTIVATEITEM AS VALIDFROMDATEFORSALEATPHYSICALSTORES,
        CASE [rit].DATETOBEBLOCKED
            WHEN [crt].GETMINAXDATE() THEN [crt].GETMAXAXDATE()
            ELSE [rit].DATETOBEBLOCKED
        END AS VALIDTODATEFORSALEATPHYSICALSTORES
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = [ids].RECID AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [rct].INVENTLOCATIONDATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].RETAILINVENTTABLE rit ON [rit].ITEMID = [it].ITEMID AND [rit].DATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [crt].SERIALIZEDITEMSVIEW siv ON [siv].PRODUCTID = [par].PRODUCTID AND [siv].ITEMDATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].RECID = [par].VARIANTID
    
    UNION ALL
    
    -- Retrieve behvaviors for variant id = 0 products.
    SELECT DISTINCT
        CASE
            WHEN [siv].PRODUCTID IS NULL THEN 0
            ELSE 1
        END AS HASSERIALNUMBER,
        1 AS ISREMOTE,
        [rit].PROHIBITRETURN_RU ^ 1 AS ISRETURNALLOWED,
        [rit].BLOCKEDONPOS ^ 1 AS ISSALEATPHYSICALSTORESALLOWED,
        [rit].QTYBECOMESNEGATIVE AS ISNEGATIVEQUANTITYALLOWED,
        [rit].NODISCOUNTALLOWED ^ 1 AS ISDISCOUNTALLOWED,
        [rk].DISASSEMBLYATREGISTERALLOWED AS ISKITDISASSEMBLYALLOWED,
        [rit].ZEROPRICEVALID AS ISZEROSALEPRICEALLOWED,
        [rit].KEYINGINPRICE AS KEYINPRICE,
        [rit].KEYINGINQTY AS KEYINQUANTITY,
        [rit].MUSTKEYINCOMMENT AS MUSTKEYINCOMMENT,
        [rit].PRINTVARIANTSSHELFLABELS AS MUSTPRINTINDIVIDUALSHELFLABELSFORVARIANTS,
        [siv].ISSALESPROCESSACTIVATED AS MUSTPROMPTFORSERIALNUMBERONLYATSALE,
        [rit].SCALEITEM AS MUSTWEIGHPRODUCTATSALE,
        CASE
            WHEN [par].VARIANTID != 0 AND [par].VARIANTID = [erdpv].RECID THEN [par].VARIANTID
            WHEN [par].VARIANTID = 0 AND [par].PRODUCTID = [erdpv].PRODUCTMASTER THEN [par].PRODUCTID
            ELSE [par].PRODUCTID
        END AS PRODUCTID,
        [rit].DATETOACTIVATEITEM AS VALIDFROMDATEFORSALEATPHYSICALSTORES,
        CASE [rit].DATETOBEBLOCKED
            WHEN [crt].GETMINAXDATE() THEN [crt].GETMAXAXDATE()
            ELSE [rit].DATETOBEBLOCKED
        END AS VALIDTODATEFORSALEATPHYSICALSTORES
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].CHANNELID = @bi_ChannelId AND [par].PRODUCTID = [ids].RECID AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [rct].INVENTLOCATIONDATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].RETAILINVENTTABLE rit ON [rit].ITEMID = [it].ITEMID AND [rit].DATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [crt].SERIALIZEDITEMSVIEW siv ON [siv].PRODUCTID = [par].PRODUCTID AND [siv].ITEMDATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].RECID = [par].VARIANTID

    UNION ALL
    
    -- Retrieve behvaviors for variant id != 0 products.
    SELECT DISTINCT
        CASE
            WHEN [siv].PRODUCTID IS NULL THEN 0
            ELSE 1
        END AS HASSERIALNUMBER,
        1 AS ISREMOTE,
        [rit].PROHIBITRETURN_RU ^ 1 AS ISRETURNALLOWED,
        [rit].BLOCKEDONPOS ^ 1 AS ISSALEATPHYSICALSTORESALLOWED,
        [rit].QTYBECOMESNEGATIVE AS ISNEGATIVEQUANTITYALLOWED,
        [rit].NODISCOUNTALLOWED ^ 1 AS ISDISCOUNTALLOWED,
        [rk].DISASSEMBLYATREGISTERALLOWED AS ISKITDISASSEMBLYALLOWED,
        [rit].ZEROPRICEVALID AS ISZEROSALEPRICEALLOWED,
        [rit].KEYINGINPRICE AS KEYINPRICE,
        [rit].KEYINGINQTY AS KEYINQUANTITY,
        [rit].MUSTKEYINCOMMENT AS MUSTKEYINCOMMENT,
        [rit].PRINTVARIANTSSHELFLABELS AS MUSTPRINTINDIVIDUALSHELFLABELSFORVARIANTS,
        [siv].ISSALESPROCESSACTIVATED AS MUSTPROMPTFORSERIALNUMBERONLYATSALE,
        [rit].SCALEITEM AS MUSTWEIGHPRODUCTATSALE,
        CASE
            WHEN [par].VARIANTID != 0 AND [par].VARIANTID = [erdpv].RECID THEN [par].VARIANTID
            WHEN [par].VARIANTID = 0 AND [par].PRODUCTID = [erdpv].PRODUCTMASTER THEN [par].PRODUCTID
            ELSE [par].PRODUCTID
        END AS PRODUCTID,
        [rit].DATETOACTIVATEITEM AS VALIDFROMDATEFORSALEATPHYSICALSTORES,
        CASE [rit].DATETOBEBLOCKED
            WHEN [crt].GETMINAXDATE() THEN [crt].GETMAXAXDATE()
            ELSE [rit].DATETOBEBLOCKED
        END AS VALIDTODATEFORSALEATPHYSICALSTORES
    FROM @tvp_ProductIds ids
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = [ids].RECID AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [rct].INVENTLOCATIONDATAAREAID = [it].DATAAREAID
    INNER JOIN [ax].RETAILINVENTTABLE rit ON [rit].ITEMID = [it].ITEMID AND [rit].DATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [crt].SERIALIZEDITEMSVIEW siv ON [siv].PRODUCTID = [par].PRODUCTID AND [siv].ITEMDATAAREAID = [it].DATAAREAID
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].RECID = [par].VARIANTID
GO
PRINT N'Creating [crt].[GETNEXTBATCHLISTINGPUBLISHSTATUSES]...';


GO

-- Get next batch of listing publish statuses
CREATE FUNCTION [crt].[GETNEXTBATCHLISTINGPUBLISHSTATUSES]
(
    @i_ActionStatus            INT,
    @nvc_LastChannelBatchId     NVARCHAR(100)
)
RETURNS TABLE
RETURN
    WITH NEXT_BATCH AS
    (
        SELECT
            MIN(CHANNELBATCHID) AS CHANNELBATCHID
            FROM [crt].[LISTINGPUBLISHSTATUSVIEW]
            WHERE ACTIONSTATUS = @i_ActionStatus AND CHANNELBATCHID > @nvc_LastChannelBatchId
    )
    SELECT
        LPSV.ACTIONSTATUS,
        LPSV.APPLIEDACTION,
        LPSV.CHANNEL,
        LPSV.CHANNELBATCHID,
        LPSV.CHANNELLISTINGID,
        LPSV.CHANNELSTATE,
        LPSV.LISTINGMODIFIEDDATETIME,
        LPSV.LISTINGMODIFIEDDATETIMETZID,
        LPSV.PROCESSED,
        LPSV.PRODUCT,
        LPSV.STATUSDATETIME,
        LPSV.STATUSDATETIMETZID,
        LPSV.STATUSMESSAGE
    FROM [crt].[LISTINGPUBLISHSTATUSVIEW] LPSV
    INNER JOIN NEXT_BATCH NB ON NB.CHANNELBATCHID = LPSV.CHANNELBATCHID
    WHERE LPSV.ACTIONSTATUS = @i_ActionStatus
GO
PRINT N'Creating [crt].[GETRETAILINFOSUBCODESTRANSLATED]...';


GO

CREATE FUNCTION [crt].[GETRETAILINFOSUBCODESTRANSLATED](@languageId nvarchar(32), @defaultlanguageId nvarchar(32), @DataAreaId nvarchar(4))
RETURNS TABLE
RETURN
    SELECT
        iscv.[REASONCODEID],
        iscv.[SUBCODEID],
        iscv.[RECID],
        iscv.[TRIGGERFUNCTION],
        iscv.[TRIGGERCODE],
        iscv.[NEWSALESLINE],
        iscv.[PRICETYPE],
        iscv.[AMOUNTPERCENT],
        ISNULL(risct.[DESCRIPTION], ISNULL(risctd.[DESCRIPTION], iscv.[SUBCODEID])) 'DESCRIPTION',
        ISNULL(risct.[LANGUAGEID], risctd.[LANGUAGEID]) 'LANGUAGEID'
    FROM [crt].[INFOSUBCODEVIEW] iscv
    LEFT JOIN [ax].[RETAILINFORMATIONSUBCODETRANSLATION] risct
        ON    iscv.[RECID]            = risct.[INFOSUBCODE] 
            AND risct.[LANGUAGEID]    = @languageId
            AND risct.[DATAAREAID]  = @DataAreaId
    LEFT JOIN [ax].[RETAILINFORMATIONSUBCODETRANSLATION] risctd
        ON    iscv.[RECID]            = risctd.[INFOSUBCODE] 
            AND risctd.[LANGUAGEID]    = @defaultlanguageId
            AND risctd.[DATAAREAID]  = @DataAreaId
    WHERE iscv.[DATAAREAID] = @DataAreaId
GO
PRINT N'Creating [crt].[GETREFINERPRICES]...';


GO

CREATE FUNCTION [crt].[GETREFINERPRICES]
(
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @tvp_ProductIds             [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    SELECT
        ictap.PRODUCT,
        ictap.PRICE
    FROM @tvp_ProductIds products
    LEFT OUTER JOIN [crt].[ITEMCHANNELTRADEAGREEMENTPRICEVIEW] ictap ON [ictap].PRODUCT = [products].RECID
    WHERE @dt_ChannelDate BETWEEN [ictap].FROMDATE AND [ictap].TODATE AND [ictap].CHANNEL = @bi_ChannelId

    UNION ALL
    
    SELECT
        icbp.PRODUCT,
        icbp.PRICE
    FROM @tvp_ProductIds products
    LEFT OUTER JOIN [crt].[ITEMCHANNELBASEPRICEVIEW] icbp ON [icbp].PRODUCT = [products].RECID
    WHERE [icbp].CHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETPRODUCTSEARCHRESULTSBYTEXT]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTSEARCHRESULTSBYTEXT]
(
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @dt_ChannelDate          DATE,
    @i_MaxTop                INT,
    @nvc_Locale              NVARCHAR(7),
    @nvc_SearchText          NVARCHAR(1000)  -- 1000 because the size of the biggest column being looked up is [ax].ECORESPRODUCTTRANSLATION.DESCRIPTION of type NVARCHAR(1000)
)
RETURNS TABLE
RETURN
    SELECT
        [prods].PRODUCTID AS RECID,
        [it].ITEMID AS ITEMID,
        COALESCE([erpt_locale].NAME, [erpt_default].NAME) AS NAME,
        [itm].PRICE,
        [gpml].URI AS PRIMARYIMAGE,
        [prods].RANKING
    FROM [crt].GETPRODUCTIDSBYSEARCHTEXT(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @i_MaxTop, @nvc_Locale, @nvc_SearchText) prods
        LEFT OUTER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [prods].PRODUCTID
        LEFT OUTER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
            LEFT OUTER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [prods].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
                LEFT OUTER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
        LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_locale ON [erpt_locale].PRODUCT = [prods].PRODUCTID AND [erpt_locale].LANGUAGEID = @nvc_Locale
        LEFT OUTER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = @bi_ChannelId AND [clv].ISDEFAULT = 1
            LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default ON [erpt_default].PRODUCT = [prods].PRODUCTID AND [erpt_default].LANGUAGEID = [clv].LANGUAGEID
        OUTER APPLY (SELECT TOP 1 REPLACE(REPLACE(URI, '{LANGUAGEID}', @nvc_Locale), '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS([erp].DISPLAYPRODUCTNUMBER))) AS URI FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, [prods].PRODUCTID, @nvc_Locale) ORDER BY PRIORITY, ISDEFAULT, URI) gpml
GO
PRINT N'Creating [crt].[GETPRODUCTCOMPONENTS]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTCOMPONENTS]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_Locale              NVARCHAR(7)
)
RETURNS TABLE
RETURN
    -- Get default components that are standalone
    -- If result contains ProductType = 3, then there is a bug because default components cannot be master products
    SELECT
        0.0 AS ADDITIONALCHARGEFORCOMPONENT,  -- no additional charge for default component
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        1 AS ISDEFAULTCOMPONENT,
        0 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].PRODUCTID AS PRODUCTCOMPONENTID,
        CASE
            WHEN [pv].PRODUCTMASTER IS NOT NULL THEN 3  -- Master
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [par].PRODUCTID = [rkc].COMPONENT AND [par].VARIANTID = 0
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par_master WITH (NOEXPAND) ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkc].RECID AND [rkvc].COMPONENT = [rkc].COMPONENT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].PRODUCTMASTER = [par].PRODUCTID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Get default variant components
    SELECT
        0.0 AS ADDITIONALCHARGEFORCOMPONENT,  -- no additional charge for default component
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        1 AS ISDEFAULTCOMPONENT,
        0 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].VARIANTID AS PRODUCTCOMPONENTID,
        5 AS PRODUCTTYPE,  -- Variant
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [par].VARIANTID = [rkc].COMPONENT
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par_master WITH (NOEXPAND) ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkc].RECID AND [rkvc].COMPONENT = [rkc].COMPONENT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    -- Get substitute components that are standalone
    -- If result contains ProductType = 3, then there is a bug because substitute components cannot be master products
    SELECT
        COALESCE([rkrsc].SUBSTITUTECHARGE, 0.0) AS ADDITIONALCHARGEFORCOMPONENT,
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        0 AS ISDEFAULTCOMPONENT,
        0 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].PRODUCTID AS PRODUCTCOMPONENTID,
        CASE
            WHEN [pv].PRODUCTMASTER IS NOT NULL THEN 3  -- Master
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].RETAILKITCOMPONENTSUBSTITUTE rkcs ON [par].PRODUCTID = [rkcs].SUBSTITUTEPRODUCT AND [par].VARIANTID = 0
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [rkc].RECID = [rkcs].KITCOMPONENT
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par_master WITH (NOEXPAND) ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkcs].KITCOMPONENT AND [rkvc].COMPONENT = [rkcs].SUBSTITUTEPRODUCT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].RETAILKITRELEASEDSUBSTITUTECHARGE rkrsc ON [rkrsc].KITCOMPONENTSUBSTITUTE = [rkcs].RECID AND [rkrsc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Get substitute components that are variants
    SELECT
        COALESCE([rkrsc].SUBSTITUTECHARGE, 0.0) AS ADDITIONALCHARGEFORCOMPONENT,
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        0 AS ISDEFAULTCOMPONENT,
        0 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].VARIANTID AS PRODUCTCOMPONENTID,
        5 AS PRODUCTTYPE,  -- Variant
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].RETAILKITCOMPONENTSUBSTITUTE rkcs ON [par].VARIANTID = [rkcs].SUBSTITUTEPRODUCT
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [rkc].RECID = [rkcs].KITCOMPONENT
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par_master WITH (NOEXPAND) ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkcs].KITCOMPONENT AND [rkvc].COMPONENT = [rkcs].SUBSTITUTEPRODUCT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].RETAILKITRELEASEDSUBSTITUTECHARGE rkrsc ON [rkrsc].KITCOMPONENTSUBSTITUTE = [rkcs].RECID AND [rkrsc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Get default components that are standalone for temporarily assorted remote products
    -- If result contains ProductType = 3, then there is a bug because default components cannot be master products
    SELECT
        0.0 AS ADDITIONALCHARGEFORCOMPONENT,  -- no additional charge for default component
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        1 AS ISDEFAULTCOMPONENT,
        1 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].PRODUCTID AS PRODUCTCOMPONENTID,
        CASE
            WHEN [pv].PRODUCTMASTER IS NOT NULL THEN 3  -- Master
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [par].PRODUCTID = [rkc].COMPONENT AND [par].VARIANTID = 0
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par_master ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkc].RECID AND [rkvc].COMPONENT = [rkc].COMPONENT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].PRODUCTMASTER = [par].PRODUCTID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Get default variant components for temporarily assorted remote products
    SELECT
        0.0 AS ADDITIONALCHARGEFORCOMPONENT,  -- no additional charge for default component
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        1 AS ISDEFAULTCOMPONENT,
        1 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].VARIANTID AS PRODUCTCOMPONENTID,
        5 AS PRODUCTTYPE,  -- Variant
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [par].VARIANTID = [rkc].COMPONENT
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par_master ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkc].RECID AND [rkvc].COMPONENT = [rkc].COMPONENT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL

    -- Get substitute components that are standalone for temporarily assorted remote products
    -- If result contains ProductType = 3, then there is a bug because substitute components cannot be master products
    SELECT
        COALESCE([rkrsc].SUBSTITUTECHARGE, 0.0) AS ADDITIONALCHARGEFORCOMPONENT,
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        0 AS ISDEFAULTCOMPONENT,
        1 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].PRODUCTID AS PRODUCTCOMPONENTID,
        CASE
            WHEN [pv].PRODUCTMASTER IS NOT NULL THEN 3  -- Master
            ELSE 4  -- Standalone
        END AS PRODUCTTYPE,
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN [ax].RETAILKITCOMPONENTSUBSTITUTE rkcs ON [par].PRODUCTID = [rkcs].SUBSTITUTEPRODUCT AND [par].VARIANTID = 0
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [rkc].RECID = [rkcs].KITCOMPONENT
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par_master ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkcs].KITCOMPONENT AND [rkvc].COMPONENT = [rkcs].SUBSTITUTEPRODUCT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].PRODUCTMASTER = [par].PRODUCTID
    LEFT OUTER JOIN [ax].RETAILKITRELEASEDSUBSTITUTECHARGE rkrsc ON [rkrsc].KITCOMPONENTSUBSTITUTE = [rkcs].RECID AND [rkrsc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Get substitute components that are variants for temporarily assorted remote products
    SELECT
        COALESCE([rkrsc].SUBSTITUTECHARGE, 0.0) AS ADDITIONALCHARGEFORCOMPONENT,
        [erpt].[DESCRIPTION] AS [DESCRIPTION],
        0 AS ISDEFAULTCOMPONENT,
        1 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        [erpt].NAME AS NAME,
        [rk].PRODUCTMASTER AS MASTERPRODUCTID,
        [rkvc].KITVARIANT AS VARIANTPRODUCTID,
        [par].VARIANTID AS PRODUCTCOMPONENTID,
        5 AS PRODUCTTYPE,  -- Variant
        [rkc].QUANTITY AS QUANTITY,
        [rkc].RECID AS SLOTID,
        [uom].SYMBOL AS UNITOFMEASURE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN [ax].RETAILKITCOMPONENTSUBSTITUTE rkcs ON [par].VARIANTID = [rkcs].SUBSTITUTEPRODUCT
    INNER JOIN [ax].RETAILKITCOMPONENT rkc ON [rkc].RECID = [rkcs].KITCOMPONENT
    INNER JOIN [ax].RETAILKIT rk ON [rk].RECID = [rkc].KIT
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par_master ON [par_master].PRODUCTID = [rk].PRODUCTMASTER AND [par_master].CHANNELID = [par].CHANNELID
    INNER JOIN [ax].RETAILKITVARIANTCOMPONENT rkvc ON [rkvc].KITVARIANT = [par_master].VARIANTID AND [rkvc].COMPONENTRECID = [rkcs].KITCOMPONENT AND [rkvc].COMPONENT = [rkcs].SUBSTITUTEPRODUCT
    INNER JOIN [ax].UNITOFMEASURE uom ON [uom].RECID = [rkc].UNITOFMEASURE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = [par].CHANNELID
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [par].PRODUCTID AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].RETAILKITRELEASEDSUBSTITUTECHARGE rkrsc ON [rkrsc].KITCOMPONENTSUBSTITUTE = [rkcs].RECID AND [rkrsc].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
GO
PRINT N'Creating [crt].[GETCATALOGCHANNELPRODUCTCATEGORY]...';


GO

-- Gets catalog channel product's hieararchy
CREATE FUNCTION [crt].[GETCATALOGCHANNELPRODUCTCATEGORY]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_IsForwardLooking BIT,
    @b_ProductIdsPassed BIT, -- 1 when @tvp_ProductIds parameter is passed, 0 otherwise.
    @tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    SELECT
        cpc.CATALOG,
        cpc.PRODUCT,
        cpc.CATEGORY,
        cpc.INCLUDEEXCLUDETYPE
    FROM [crt].GETCATALOGPRODUCTCATEGORY(@bi_ChannelId, @b_ProductIdsPassed, @tvp_ProductIds) cpc
        JOIN [crt].GETPUBCATALOGATTRIBUTEINHERITED(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking) rpc ON rpc.[CATALOG] = cpc.[CATALOG]
        JOIN [crt].PUBCATALOGCHANNELVIEW pccv ON pccv.[CATALOG] = rpc.[CATALOG]
        JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rprct.ORIGINID = pccv.[CHANNEL]
    WHERE rprct.ORIGINID = @bi_ChannelId AND rprct.CATEGORYHIERARCHY = cpc.CATEGORYHIERARCHY
GO
PRINT N'Creating [crt].[GETVALUEEXPANDED]...';


GO

-- Gets expanded values
CREATE FUNCTION [crt].[GETVALUEEXPANDED]
(
    @bi_ChannelId       BIGINT
)
RETURNS TABLE
RETURN
    SELECT
        erv.RECID,
        erbv.BOOLEANVALUE,
        ercv.CURRENCYVALUE,
        ercv.CURRENCYCODE,
        erdtv.DATETIMEVALUE,
        erdtv.DATETIMEVALUETZID,
        erfv.FLOATVALUE,
        uom_float.SYMBOL AS FLOATUNITSYMBOL,
        eriv.INTVALUE,
        uom_int.SYMBOL AS INTUNITSYMBOL,
        ertv.TEXTVALUE,
        tvt.LANGUAGE,
        tvt.TRANSLATION
    FROM [ax].ECORESVALUE erv
    LEFT JOIN [ax].ECORESBOOLEANVALUE erbv ON erbv.RECID = erv.RECID
    LEFT JOIN [ax].ECORESCURRENCYVALUE ercv ON ercv.RECID = erv.RECID
    LEFT JOIN [ax].ECORESDATETIMEVALUE erdtv ON erdtv.RECID = erv.RECID
    LEFT JOIN [ax].ECORESFLOATVALUE erfv ON erfv.RECID = erv.RECID
    LEFT JOIN [ax].UNITOFMEASURE uom_float ON uom_float.RECID = erfv.FLOATUNITOFMEASURE
    LEFT JOIN [ax].ECORESINTVALUE eriv ON eriv.RECID = erv.RECID
    LEFT JOIN [ax].UNITOFMEASURE uom_int ON uom_int.RECID = eriv.INTUNITOFMEASURE
    LEFT JOIN [ax].ECORESTEXTVALUE ertv ON ertv.RECID = erv.RECID
    LEFT JOIN [crt].GETTEXTVALUETRANSLATION(@bi_ChannelId) tvt ON tvt.VALUE = ertv.RECID
GO
PRINT N'Creating [crt].[CUSTOMERPOSTALADDRESSESVIEW]...';


GO

CREATE VIEW [crt].[CUSTOMERPOSTALADDRESSESVIEW] AS
(
    SELECT
        ll.DESCRIPTION AS NAME,
        dpl.ATTENTIONTOADDRESSLINE,
        lpa.ADDRESS,
        lpa.COUNTRYREGIONID,
        lpa.ZIPCODE,
        lpa.STATE,
        las.NAME AS STATENAME,
        lpa.COUNTY,
        lac.NAME AS COUNTYNAME,
        lpa.CITY,
        lpa.STREET,
        lpa.STREETNUMBER,
        lpa.BUILDINGCOMPLIMENT,
        lpa.POSTBOX,
        lpa.DISTRICTNAME,
        lpa.RECID,
        dpl.ISPRIMARY,
        isnull(lle.TAXGROUP, '') TAXGROUP,
        ll.RECID AS LOGISTICSLOCATIONRECID,
        dpt.RECID AS DIRPARTYTABLERECID,
        dpt.PARTYNUMBER PARTYNUMBER,
        ISNULL(llr.TYPE, 0) AS ADDRESSTYPE,
        dpl.RECID AS DIRPARTYLOCATIONRECID,
        isnull(ceap.LOCATOR, '') PHONE,
        isnull(ceap.LOCATOREXTENSION, '') PHONEEXT,
        isnull(ceap.RECORDID, 0) PHONERECORDID,
        isnull(ceae.LOCATOR, '') EMAIL,
        isnull(ceae.RECORDID, 0) EMAILRECORDID,
        isnull(ceau.LOCATOR, '') URL,
        isnull(ceau.RECORDID, 0) URLRECORDID,
        0 AS ISASYNCADDRESS
    FROM [ax].DIRPARTYTABLE dpt
    INNER JOIN [ax].DIRPARTYLOCATION dpl ON dpt.RECID = dpl.PARTY
    INNER JOIN [ax].LOGISTICSLOCATION ll ON dpl.LOCATION = ll.RECID
    INNER JOIN [ax].LOGISTICSPOSTALADDRESS lpa ON ll.RECID = lpa.LOCATION
    --state name
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSSTATE las on lpa.COUNTRYREGIONID = las.COUNTRYREGIONID
                and lpa.STATE = las.STATEID
    --county name
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSCOUNTY lac on lpa.COUNTRYREGIONID = lac.COUNTRYREGIONID
                and lpa.STATE = lac.STATEID
                and lpa.COUNTY = lac.COUNTYID
    -- tax group
    LEFT OUTER JOIN ax.LOGISTICSLOCATIONEXT lle on ll.RECID = lle.LOCATION 

    -- phone
    LEFT OUTER JOIN [crt].CUSTOMERPOSTALELECTRONICADDRESSESVIEW ceap on ll.RECID = ceap.PARENTLOCATION 
                and ceap.METHODYTPE = 1 and ceap.ISPRIMARY = 1
    -- email
    LEFT OUTER JOIN [crt].CUSTOMERPOSTALELECTRONICADDRESSESVIEW ceae on ll.RECID = ceae.PARENTLOCATION 
                and ceae.METHODYTPE = 2 and ceae.ISPRIMARY = 1
    -- url
    LEFT OUTER JOIN [crt].CUSTOMERPOSTALELECTRONICADDRESSESVIEW ceau on ll.RECID = ceau.PARENTLOCATION 
                and ceau.METHODYTPE = 3 and ceau.ISPRIMARY = 1
    LEFT OUTER JOIN 
            (SELECT min(LOCATIONROLE) as PARTYLOCATIONROLE, PARTYLOCATION
                FROM ax.DIRPARTYLOCATIONROLE
                group by PARTYLOCATION
             ) dplr ON dplr.PARTYLOCATION = dpl.RECID
    LEFT OUTER JOIN [ax].LOGISTICSLOCATIONROLE llr ON dplr.PARTYLOCATIONROLE = llr.RECID
    WHERE
        (ll.ISPOSTALADDRESS = 1) AND
        (dpl.ISPOSTALADDRESS = 1) AND
        (lpa.VALIDTO >= GETUTCDATE()) AND
        (lpa.VALIDFROM <= GETUTCDATE()) AND
        (lpa.ISPRIVATE = 0)

    UNION ALL
    
    SELECT 
        raca.CUSTNAME as NAME,
        '' as ATTENTIONTOADDRESSLINE,
        CONCAT(raca.STREET, ' ', raca.CITY, ', ', raca.[STATE], ' ', raca.ZIP, '  ', raca.COUNTRY) as ADDRESS,
        raca.COUNTRY as COUNTRYREGIONID,
        raca.ZIP as ZIPCODE,
        raca.[STATE] as [STATE],
        raca.[STATE] as STATENAME,
        raca.COUNTY as COUNTY,
        raca.COUNTY as COUNTYNAME,
        raca.CITY as CITY,
        raca.STREET AS STREET,
        raca.STREETNUMBER as STREETNUMBER,
        raca.BUILDINGCOMPLIMENT as BUILDINGCOMPLIMENT,
        '' as POSTBOX,
        raca.DISTRICTNAME as DISTRICTNAME,
        raca.REPLICATIONCOUNTERFROMORIGIN AS RECID,
        raca.MAKEPOSTALADDRESSPRIMARY as  ISPRIMARY,
        raca.TAXGROUP as TAXGROUP,
        0 as LOGISTICSLOCATIONRECID,
        0 as DIRPARTYTABLERECID,
        raca.CUSTACCOUNTASYNC as PARTYNUMBER, -- Overload CustomerAccountAsync to identify the party (instead of DIRPARTYTABLERECID)
        raca.ROLE as ADDRESSTYPE,
        0 as DIRPARTYLOCATIONRECID,
        raca.PHONE as PHONE,
        '' as PHONEEXT,
        0 as PHONERECORDID,
        raca.EMAIL as EMAIL,
        0 as EMAILRECORDID,
        raca.URL as URL,
        0 as URLRECORDID,
        1 AS ISASYNCADDRESS
    FROM [ax].RETAILASYNCADDRESS raca
)
GO
PRINT N'Creating [crt].[POSTALADDRESSESVIEW]...';


GO
/********************************************************************************
    POSTALADDRESSESVIEW retrieves the postal address and location of the Stores.
	The view joins with the tables: DIRPARTYLOCATION, LOGISTICSPOSTALADDRESSVIEW, DIRPARTYLOCATIONROLE, LOGISTICSLOCATIONROLE
********************************************************************************/

CREATE VIEW [crt].[POSTALADDRESSESVIEW] AS
(
    SELECT
        dpl.PARTY AS PARTY,
        dpl.RECID AS PARTYLOCATION,
        dpl.ISPRIMARY AS ISPRIMARY,
        dpl.ISPRIVATE AS ISPRIVATE,
        dpl.ISLOCATIONOWNER AS ISLOCATIONOWNER,
        dpl.RECID AS RECID,
        LPA.LOCATIONNAME AS LOCATIONNAME,
        LPA.ADDRESS AS ADDRESS,
        LPA.STREETNUMBER AS STREETNUMBER,
        LPA.STREET AS STREET,
        LPA.CITY AS CITY,
        LPA.ZIPCODE AS ZIPCODE,
        LPA.STATE AS STATE,
        LPA.COUNTY AS COUNTY,
        LPA.COUNTRYREGIONID AS COUNTRYREGIONID,
        LPA.DISTRICT AS DISTRICT,
        LPA.POSTBOX AS POSTBOX,
        LPA.BUILDINGCOMPLIMENT AS BUILDINGCOMPLIMENT,
        LPA.TIMEZONE AS TIMEZONE,
        LPA.LONGITUDE AS LONGITUDE,
        LPA.LATITUDE AS LATITUDE,
        LPA.LOCATION AS LOCATION,
        LPA.VALIDFROM AS VALIDFROM,
        LPA.VALIDTO AS VALIDTO,
        LPA.COUNTRYCURRENCYCODE AS COUNTRYCURRENCYCODE,
        LPA.DISTRICTNAME AS DISTRICTNAME,
        LPA.POSTALADDRESS AS POSTALADDRESS,
        LPA.ISOCODE AS ISOCODE
    FROM  [ax].[DIRPARTYLOCATION] dpl
    LEFT OUTER JOIN [crt].[LOGISTICSPOSTALADDRESSESVIEW] LPA ON (dpl.LOCATION = LPA.LOCATION)
    WHERE (dpl.ISPOSTALADDRESS = 1)
        AND NOT EXISTS (
            SELECT 1 FROM [ax].[DIRPARTYLOCATIONROLE] dplR
            WHERE (dplR.PARTYLOCATION = dpl.RECID)
        AND EXISTS (
            SELECT 1 FROM [ax].[LOGISTICSLOCATIONROLE] LLR
            WHERE ((LLR.TYPE=16) AND (dplR.LOCATIONROLE=LLR.RECID))))
)
GO
PRINT N'Creating [crt].[TERMINALCASHDRAWERSVIEW]...';


GO

CREATE VIEW [crt].[TERMINALCASHDRAWERSVIEW] AS
(
    SELECT 
        tv.TERMINALID,
        tv.HARDWAREPROFILE,
        hcv.DRAWERDEVICENAMEVALUE,
        hcv.DRAWERDESCRIPTIONVALUE,
        hcv.DRAWERTYPE,
        hcv.DRAWERMAKEVALUE,
        hcv.DRAWERMODELVALUE,
        hcv.ISSHAREDSHIFTDRAWERVALUE
    FROM [crt].TERMINALSVIEW tv
    INNER JOIN [crt].HARDWAREPROFILECASHDRAWERSVIEW hcv ON tv.HARDWAREPROFILE = hcv.PROFILEID
)
GO
PRINT N'Creating [crt].[ITEMAVAILABILITYVIEW]...';


GO

CREATE VIEW [crt].[ITEMAVAILABILITYVIEW] AS
(
    SELECT
        RIAV.RECID
        ,RIAV.ITEMID
        ,CASE
            WHEN VID.CONFIGID = ''
                    AND VID.INVENTSIZEID = ''
                    AND VID.INVENTCOLORID = ''
                    AND VID.INVENTSTYLEID = ''
                    AND VID.INVENTBATCHID = ''
                    AND VID.WMSLOCATIONID = ''
                    AND VID.WMSPALLETID = ''
                    AND VID.INVENTSERIALID = ''
                THEN ''
            ELSE ISNULL(VID.INVENTDIMID, '')
        END AS VARIANTINVENTDIMID
        ,WID.INVENTDIMID AS WAREHOUSEINVENTDIMID
        ,WID.INVENTSITEID
        ,WID.INVENTLOCATIONID
        ,RIAV.AVAILPHYSICAL
        ,ITM.UNITID
        ,RIAV.DATAAREAID
    FROM [crt].RETAILINVENTAVAILABILITYVIEW RIAV
    JOIN [ax].INVENTTABLEMODULE ITM ON ITM.ITEMID = RIAV.ITEMID AND ITM.DATAAREAID = RIAV.DATAAREAID AND ITM.MODULETYPE = 0
    JOIN [ax].INVENTDIM WID ON WID.INVENTDIMID = RIAV.INVENTDIMID AND WID.DATAAREAID = RIAV.DATAAREAID
    LEFT JOIN [ax].INVENTDIM VID
        ON VID.CONFIGID = WID.CONFIGID
            AND VID.INVENTSIZEID = WID.INVENTSIZEID
            AND VID.INVENTCOLORID = WID.INVENTCOLORID
            AND VID.INVENTSTYLEID = WID.INVENTSTYLEID
            AND VID.INVENTBATCHID = WID.INVENTBATCHID
            AND VID.WMSLOCATIONID = WID.WMSLOCATIONID
            AND VID.WMSPALLETID = WID.WMSPALLETID
            AND VID.INVENTSERIALID = WID.INVENTSERIALID
            AND VID.INVENTLOCATIONID = ''
            AND VID.INVENTSITEID = ''
            AND VID.DATAAREAID = WID.DATAAREAID
)
GO
PRINT N'Creating [crt].[RETAILGROUPMEMBERITEMSVIEW]...';


GO

CREATE VIEW [crt].[RETAILGROUPMEMBERITEMSVIEW] AS
(
    -- get items assigned to member line
    SELECT
        rgl.RECID AS RETAILGROUPMEMBERLINE,
        item.ITEMID AS ITEMID,
        NULL AS INVENTDIMID,
        item.DATAAREAID
    FROM [ax].[RETAILGROUPMEMBERLINE] AS rgl
    INNER JOIN [ax].[INVENTTABLE] AS item ON item.PRODUCT = rgl.PRODUCT
    WHERE rgl.PRODUCT <> 0 AND rgl.VARIANT = 0

    UNION ALL

    -- get variants assigned to member line
    SELECT
        rgl.RECID AS RETAILGROUPMEMBERLINE,
        dim.ITEMID AS ITEMID,
        dim.INVENTDIMID AS INVENTDIMID,
        dim.DATAAREAID
    FROM [ax].[RETAILGROUPMEMBERLINE] AS rgl
    INNER JOIN [ax].[INVENTDIMCOMBINATION] AS dim ON dim.DISTINCTPRODUCTVARIANT = rgl.VARIANT
    WHERE rgl.VARIANT <> 0

    UNION ALL

    -- items and variants assigned to category member line
    SELECT
        rgl.RECID AS RETAILGROUPMEMBERLINE,
        cti.ITEMID AS ITEMID,
        cti.INVENTDIMID AS INVENTDIMID,
        cti.DATAAREAID
    FROM [ax].[RETAILGROUPMEMBERLINE] AS rgl
    INNER JOIN [crt].[CATEGORYITEMSVIEW] AS cti ON cti.CATEGORYID = rgl.CATEGORY
    WHERE rgl.PRODUCT = 0 AND rgl.VARIANT = 0
)
GO
PRINT N'Creating [crt].[RETAILPRODUCTORVARIANTCATEGORYVIEW]...';


GO

-- Shows products in retail category hierarchy and all special category hierarchies
CREATE VIEW [crt].[RETAILPRODUCTORVARIANTCATEGORYVIEW] AS
(
    SELECT
       T1.CATEGORY AS CATEGORY,
       T1.PRODUCT AS PRODUCT
    FROM [ax].[ECORESPRODUCTCATEGORY] T1

    UNION

	SELECT
		T1.CATEGORY AS CATEGORY,
		T2.RECID AS PRODUCT
    FROM [ax].[ECORESPRODUCTCATEGORY] T1
    INNER JOIN [ax].[ECORESDISTINCTPRODUCTVARIANT] T2
    ON T2.PRODUCTMASTER = T1.PRODUCT

    UNION

    SELECT
       T1.CATEGORY,
       T1.PRODUCT
    FROM [crt].[RETAILSPECIALCATEGORYVARIANTVIEW] T1
)
GO
PRINT N'Creating [crt].[CHANNELCATEGORYATTRIBUTEVIEW]...';


GO

CREATE VIEW [crt].[CHANNELCATEGORYATTRIBUTEVIEW] AS
(
    SELECT
        RPRCCA.HOSTCHANNEL
        ,RPRCCA.CATEGORY
        ,RPRCCA.KEYNAME
        ,RPRCCA.ATTRIBUTEVALUE AS ATTRIBUTEVALUERECID
		,ERC.NAME AS CATEGORYNAME
        ,ERCH.NAME AS CATEGORYHIERARCHYNAME
        ,[crt].GETCATEGORYPATH(RPRCCA.HOSTCHANNEL, RPRCCA.CATEGORY) AS CATEGORYPATH
        ,ERA.NAME
		,CASE ERAT.RECID
		    WHEN RSP.IMAGESATTRIBUTETYPE  
			    THEN 41 -- 41 = IMAGE MEDIA ATTRIBUTE
			WHEN RSP.VIDEOSATTRIBUTETYPE
			    THEN 40 -- 40 = VIDEO MEDIA ATTRIBUTE
			ELSE
				ERAT.DATATYPE 
		END AS [DATATYPE] 
        ,ERBV.BOOLEANVALUE
        ,ERDTV.DATETIMEVALUE
        ,ERFV.FLOATVALUE
        ,FUOM.SYMBOL AS FLOATUNITSYMBOL
        ,ERV.INTVALUE
        ,IUOM.SYMBOL AS INTUNITSYMBOL
        ,ERTV.TEXTVALUE
        ,ERCV.CURRENCYCODE
        ,ERCV.CURRENCYVALUE
    FROM [ax].RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE RPRCCA
    INNER JOIN [ax].ECORESCATEGORY ERC on ERC.RECID = RPRCCA.CATEGORY
	INNER JOIN [ax].RETAILPUBECORESCATEGORY RPERC ON RPERC.CHANNEL = RPRCCA.HOSTCHANNEL AND RPERC.ORIGINID = ERC.RECID
    INNER JOIN ax.ECORESCATEGORYHIERARCHY ERCH on ERCH.RECID = ERC.CATEGORYHIERARCHY
    INNER JOIN [crt].ATTRIBUTEMAPVIEW AS AMV ON AMV.ATTRIBUTE = RPRCCA.ATTRIBUTE
    INNER JOIN [ax].ECORESATTRIBUTE ERA ON AMV.ACTUALATTRIBUTE = ERA.RECID
    INNER JOIN [ax].ECORESATTRIBUTETYPE ERAT ON ERA.ATTRIBUTETYPE =ERAT.RECID
    INNER JOIN [ax].RETAILSHAREDPARAMETERS RSP ON RSP.[KEY] = 0 -- KEY = 0 to make sure it is unique
    LEFT OUTER JOIN [ax].ECORESBOOLEANVALUE ERBV ON RPRCCA.ATTRIBUTEVALUE = ERBV.RECID
    LEFT OUTER JOIN [ax].ECORESDATETIMEVALUE ERDTV ON RPRCCA.ATTRIBUTEVALUE = ERDTV.RECID
    LEFT OUTER JOIN [ax].ECORESFLOATVALUE ERFV ON RPRCCA.ATTRIBUTEVALUE = ERFV.RECID
    LEFT OUTER JOIN [ax].UNITOFMEASURE FUOM ON erfv.FLOATUNITOFMEASURE = FUOM.RECID
    LEFT OUTER JOIN [ax].ECORESINTVALUE ERV ON RPRCCA.ATTRIBUTEVALUE = ERV.RECID
    LEFT OUTER JOIN [ax].UNITOFMEASURE IUOM ON ERV.INTUNITOFMEASURE = IUOM.RECID
    LEFT OUTER JOIN [ax].ECORESTEXTVALUE ERTV ON RPRCCA.ATTRIBUTEVALUE = ERTV.RECID
    LEFT OUTER JOIN [ax].ECORESCURRENCYVALUE ERCV ON RPRCCA.ATTRIBUTEVALUE = ERCV.RECID
)
GO
PRINT N'Creating [crt].[CHANNELCONFIGURATIONVIEW_V2]...';


GO

CREATE VIEW [crt].[CHANNELCONFIGURATIONVIEW_V2] AS
(
    SELECT
        [rct].[RECID],
        [rct].[CHANNELTYPE],
        [rct].[INVENTLOCATION],
        [rct].[INVENTLOCATIONDATAAREAID],
        [rct].[CURRENCY],
        [rct].[PRICEINCLUDESSALESTAX],
        [rct].[DISPLAYTAXPERTAXCOMPONENT],
        [l].ACCOUNTINGCURRENCY AS 'COMPANYCURRENCY',
        [lpa].[COUNTRYREGIONID],
        [lacr].[ISOCODE] AS 'COUNTRYREGIONISOCODE',
        [rsp].[EXCHANGERATETYPE],
        [rsp].[EARNLOYALTYOFFLINE],
        [rfp].[DAYSCUSTOMERHISTORY] AS 'DAYSCUSTOMERHISTORY',
        [dpt].LANGUAGEID AS 'COMPANYLANGUAGEID',
        [rp].PICKUPDELIVERYMODECODE,
        [rp].ELECTRONICDELIVERYMODECODE,
        [rp].GIFTCARDITEM,
        [rp].CANCELLATIONCHARGE,
        [rp].CANCELLATIONCHARGECODE,
        [rp].EXPIRATIONDATE AS 'QUOTEEXPIRATIONDAYS',
        [rp].MINIMUMDEPOSITFORSALESORDER,
        [rp].SHIPPINGCHARGECODE,
        [rp].PASSWORDEXPIRYINTERVAL AS 'PASSWORDEXPIRYINTERVAL',
        [rp].PASSWORDEXPIRYNOTIFICATIONTHRESHOLD AS 'PASSWORDEXPIRYNOTIFICATIONTHRESHOLD',
        [rct].CHANNELTIMEZONE AS 'TIMEZONECODE',
        [rct].CHANNELTIMEZONEINFOID AS 'TIMEZONEINFOID',
        [clv].LANGUAGEID AS 'DEFAULTLANGUAGEID',
        [rsbp].[APIKEY] AS 'BINGAPIKEY',
        [lpa].VALIDFROM,
        [lpa].VALIDTO,
        [crt].GETCATALOGIMAGEATTRIBUTEDEFAULTVALUE() AS CATALOGDEFAULTIMAGETEMPLATE,
        [crt].GETEMPLOYEEIMAGEATTRIBUTEDEFAULTVALUE() AS EMPLOYEEDEFAULTIMAGETEMPLATE,
        [crt].GETCUSTOMERIMAGEATTRIBUTEDEFAULTVALUE() AS CUSTOMERDEFAULTIMAGETEMPLATE,
        [crt].GETCATEGORYIMAGEATTRIBUTEDEFAULTVALUE() AS CATEGORYDEFAULTIMAGETEMPLATE,
        [crt].GETPRODUCTIMAGEATTRIBUTEDEFAULTVALUE() AS PRODUCTDEFAULTIMAGETEMPLATE
    FROM [ax].RETAILCHANNELTABLE rct

    -- Get functionality profile information
    LEFT JOIN [ax].RETAILSTORETABLE rst ON rst.RECID = rct.RECID
    LEFT JOIN [ax].RETAILFUNCTIONALITYPROFILE rfp on rfp.PROFILEID = rst.FUNCTIONALITYPROFILE

    -- Get the store's country/region
    INNER JOIN [ax].COMPANYINFO ci ON ci.DATAAREA = rct.INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].LEDGER l ON l.PRIMARYFORLEGALENTITY = ci.RECID
    INNER JOIN [ax].DIRPARTYLOCATION drl ON drl.ISPRIMARY = 1 AND drl.PARTY = ci.RECID
    INNER JOIN [ax].LOGISTICSPOSTALADDRESS lpa ON lpa.ISPRIVATE = 0 AND lpa.LOCATION = drl.LOCATION
    INNER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION lacr ON lacr.COUNTRYREGIONID = lpa.COUNTRYREGIONID

    -- Get the company's language
    INNER JOIN [ax].DIRPARTYTABLE dpt on dpt.RECID = ci.RECID

     -- Get the store's default language
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = rct.RECID AND clv.ISDEFAULT = 1
    INNER JOIN [ax].RETAILPARAMETERS rp ON rp.[KEY] = 0 AND rp.DATAAREAID = rct.INVENTLOCATIONDATAAREAID

    -- Get the shared parameters
    LEFT JOIN ax.RETAILSHAREDPARAMETERS rsp ON rsp.[KEY] = 0     -- KEY = 0 to make sure it is unique

    LEFT JOIN [ax].RETAILSHAREDBINGPARAMETERS rsbp ON rsbp.[KEY] = 0
    WHERE rsp.[KEY] = 0
)
GO
PRINT N'Creating [crt].[ATTRIBUTEVIEW]...';


GO

CREATE VIEW [crt].[ATTRIBUTEVIEW] AS
WITH AttributeDataType AS
(
    SELECT
        era.RECID AS ATTRIBUTE,
        erat.RECID AS ATTRIBUTETYPE,
        erat.DATATYPE
        FROM ax.ECORESATTRIBUTE era
            JOIN ax.ECORESATTRIBUTETYPE erat 
                ON erat.RECID = era.ATTRIBUTETYPE
        WHERE erat.DATATYPE != 20   -- Non reference attribute type

    UNION ALL

    SELECT
        rav.ATTRIBUTE,
        erat.RECID AS ATTRIBUTETYPE,
        erat.DATATYPE
        FROM crt.REFERENCEATTRIBUTEVIEW rav
            JOIN ax.ECORESATTRIBUTE era
                ON era.RECID = rav.REFERENCEDATTRIBUTE
            JOIN ax.ECORESATTRIBUTETYPE erat 
                ON erat.RECID = era.ATTRIBUTETYPE
)
SELECT 
    adt.ATTRIBUTE,
    adt.DATATYPE AS RAWDATATYPE,
    CASE adt.ATTRIBUTETYPE
        WHEN rsp.IMAGESATTRIBUTETYPE  
            THEN 41     -- Image media attribute
        WHEN rsp.VIDEOSATTRIBUTETYPE
            THEN 40     -- Video media attribute
        ELSE
            adt.DATATYPE 
    END AS DATATYPE
    FROM AttributeDataType adt
        JOIN ax.RETAILSHAREDPARAMETERS rsp ON rsp.[KEY] = 0     -- KEY = 0 to make sure it is unique
GO
PRINT N'Creating [crt].[EMPLOYEEPERMISSIONSVIEW]...';


GO

CREATE VIEW [crt].EMPLOYEEPERMISSIONSVIEW AS
(
    SELECT
        STAFFID,
        CONTINUEONTSERRORS,
        ALLOWKITDISASSEMBLY,
        ALLOWBLINDCLOSE,
        ALLOWCHANGENOVOID,
        ALLOWCREATEORDER,
        ALLOWEDITORDER,
        ALLOWFLOATINGTENDERDECLARATION,
        ALLOWMULTIPLELOGINS,
        ALLOWMULTIPLESHIFTLOGON,
        ALLOWOPENDRAWERONLY,
        ALLOWPRICEOVERRIDE,
        ALLOWRETRIEVEORDER,
        ALLOWSALESTAXCHANGE,
        ALLOWTENDERDECLARATION,
        ALLOWTRANSACTIONSUSPENSION,
        ALLOWTRANSACTIONVOIDING,
        ALLOWXREPORTPRINTING,
        ALLOWZREPORTPRINTING,
        ALLOWCHANGEPERIPHERALSTATION,
        MANAGEDEVICE,
        MANAGERPRIVILEGES,
        ALLOWPASSWORDCHANGE,
        ALLOWRESETPASSWORD,
        MAXLINEDISCOUNTAMOUNT,
        MAXIMUMDISCOUNTPCT,
        MAXLINERETURNAMOUNT,
        MAXTOTALDISCOUNTAMOUNT,
        MAXTOTALDISCOUNTPCT,
        MAXTOTALRETURNAMOUNT,
        USEHANDHELD,
        VIEWTIMECLOCKENTRIES,
        ALLOWUSESHAREDSHIFT,
        ALLOWMANAGESHAREDSHIFT,
        ALLOWTASKGUIDES
        FROM crt.EMPLOYEEPERMISSIONSPOSITIONSVIEW POSITIONS
        WHERE NOT EXISTS ( SELECT * from crt.EMPLOYEEPERMISSIONOVERRIDESVIEW OVERRIDES WHERE POSITIONS.STAFFID = OVERRIDES.STAFFID )

    UNION

    SELECT
        STAFFID,
        CONTINUEONTSERRORS,
        ALLOWKITDISASSEMBLY,
        ALLOWBLINDCLOSE,
        ALLOWCHANGENOVOID,
        ALLOWCREATEORDER,
        ALLOWEDITORDER,
        ALLOWFLOATINGTENDERDECLARATION,
        ALLOWMULTIPLELOGINS,
        ALLOWMULTIPLESHIFTLOGON,
        ALLOWOPENDRAWERONLY,
        ALLOWPRICEOVERRIDE,
        ALLOWRETRIEVEORDER,
        ALLOWSALESTAXCHANGE,
        ALLOWTENDERDECLARATION,
        ALLOWTRANSACTIONSUSPENSION,
        ALLOWTRANSACTIONVOIDING,
        ALLOWXREPORTPRINTING,
        ALLOWZREPORTPRINTING,
        ALLOWCHANGEPERIPHERALSTATION,
        MANAGEDEVICE,
        MANAGERPRIVILEGES,
        ALLOWPASSWORDCHANGE,
        ALLOWRESETPASSWORD,
        MAXLINEDISCOUNTAMOUNT,
        MAXIMUMDISCOUNTPCT,
        MAXLINERETURNAMOUNT,
        MAXTOTALDISCOUNTAMOUNT,
        MAXTOTALDISCOUNTPCT,
        MAXTOTALRETURNAMOUNT,
        USEHANDHELD,
        VIEWTIMECLOCKENTRIES,
        ALLOWUSESHAREDSHIFT,
        ALLOWMANAGESHAREDSHIFT,
        ALLOWTASKGUIDES
        FROM crt.EMPLOYEEPERMISSIONOVERRIDESVIEW
)
GO
PRINT N'Creating [crt].[ORGUNITSVIEW]...';


GO

CREATE VIEW [crt].[ORGUNITSVIEW] AS
(
    SELECT
        sv.RECID,
        sv.TAXGROUP,
        sv.STORENUMBER,
        sv.STORENAME,
        sv.STOREADDRESS,
        sv.USECUSTOMERBASEDTAX,
        sv.USEDESTINATIONBASEDTAX,
        sv.FUNCTIONALITYPROFILE,
        sv.CURRENCY,
        sv.SHIPPINGINVENTLOCATION,
        sv.EMAILRECEIPTPROFILEID,
        sv.LATITUDE,
        sv.LONGITUDE,
        sv.EVENTNOTIFICATIONPROFILEID,
        sv.CHANNELTYPE,
        sv.INVENTLOCATION,
        sv.DEFAULTCUSTACCOUNT,
        sv.POSTALADDRESSRECID,
        sv.ISPUBLISHED
    FROM [crt].STOREVIEW sv
)
GO
PRINT N'Creating [crt].[PRICEADJUSTMENTITEMSVIEW]...';


GO

CREATE VIEW [crt].[PRICEADJUSTMENTITEMSVIEW] AS
(
    SELECT
        pa.OFFERID,
        pa.RECID,
        rgl.ITEMID,
        rgl.INVENTDIMID,
        rgl.DATAAREAID
    FROM [ax].RETAILPERIODICDISCOUNT AS pa
    INNER JOIN [ax].RETAILPERIODICDISCOUNTLINE AS pal ON pal.OFFERID = pa.OFFERID AND pal.DATAAREAID = pa.DATAAREAID
    INNER JOIN [crt].RETAILGROUPMEMBERITEMSVIEW AS rgl ON rgl.RETAILGROUPMEMBERLINE = pal.RETAILGROUPMEMBERLINE AND rgl.DATAAREAID = pal.DATAAREAID
    WHERE pa.PERIODICDISCOUNTTYPE = 3
)
GO
PRINT N'Creating [crt].[CHANNELPRODUCTATTRIBUTEVIEW]...';


GO

CREATE VIEW [crt].[CHANNELPRODUCTATTRIBUTEVIEW] AS
(
    SELECT
        rpracm.ORIGINID AS RECID,
        rpracm.HOSTCHANNEL,
        era.NAME,
        av.DATATYPE,
        rpracm.KEYNAME,
        rpracm.METADATA,
        rpracm.METADATAVERSION,
        rpracm.ATTRIBUTERELATIONTYPE,
        era.RECID AS 'ATTRIBUTE'
    FROM [ax].RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA rpracm
    INNER JOIN [ax].ECORESATTRIBUTE era ON era.RECID = rpracm.ATTRIBUTE
    INNER JOIN [crt].ATTRIBUTEVIEW av ON av.ATTRIBUTE = rpracm.ATTRIBUTE
)
GO
PRINT N'Creating [crt].[RETAILPRODUCTORVARIANTCATEGORYANCESTORSVIEW]...';


GO

-- Shows all categories and ancestors for a given product/variant.
CREATE VIEW [crt].[RETAILPRODUCTORVARIANTCATEGORYANCESTORSVIEW] AS
(
    SELECT
       RPC.PRODUCT,
       RCCL.CATEGORY
    FROM [crt].[RETAILPRODUCTORVARIANTCATEGORYVIEW] RPC
    INNER JOIN [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] RCCL ON RCCL.CONTAINEDCATEGORY = RPC.CATEGORY
)
GO
PRINT N'Creating [crt].[PRODUCTATTRIBUTEMETADATAVIEW]...';


GO

CREATE VIEW crt.PRODUCTATTRIBUTEMETADATAVIEW AS
(
    SELECT 
        rppacm.ATTRIBUTE,
        rppacm.HOSTCHANNEL AS CHANNEL,
        rppacm.KEYNAME,
        av.DATATYPE,
        av.RAWDATATYPE,
        rppacm.METADATA
        FROM ax.RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA rppacm
            JOIN crt.ATTRIBUTEVIEW av
                ON av.ATTRIBUTE = rppacm.ATTRIBUTE
)
GO
PRINT N'Creating [crt].[PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW]...';


GO

CREATE VIEW [crt].[PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW] AS
(
    SELECT
        rppacm.HOSTCHANNEL AS CHANNEL,
        rppacm.ATTRIBUTE,
        rppacm.ATTRIBUTE AS ACTUALATTRIBUTE,
        0 AS ISREFERENCE
        FROM ax.RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA rppacm

    UNION ALL

    SELECT
        rppacm.HOSTCHANNEL AS CHANNEL,
        rav.ATTRIBUTE,
        rav.REFERENCEDATTRIBUTE AS ACTUALATTRIBUTE,
        1 AS ISREFERENCE
        FROM ax.RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA rppacm
            JOIN crt.REFERENCEATTRIBUTEVIEW rav WITH (NOEXPAND)
                ON rav.ATTRIBUTE = rppacm.ATTRIBUTE
)
GO
PRINT N'Creating [crt].[PRODUCTIDENTITIESVIEW]...';


GO

CREATE VIEW [crt].PRODUCTIDENTITIESVIEW AS
(
    ---!!!!!!!! If you are changing this view, make sure that the view GetProductIdentities is also changed. !!!!!!

        -- This select retrieves only standalone products and products' masters
    SELECT
        DISTINCT p.RECID,
        [p].RECID AS LOOKUPID,
        [apv].CHANNELID,
        CASE
            WHEN (([pv].RECID IS NULL) AND ([pv2].RECID IS NOT NULL)) THEN 1
            ELSE 0
        END AS ISMASTER,
        CASE 
            WHEN ([rk].RECID IS NULL) THEN 0
            ELSE 1
        END AS ISKIT,
        0 AS MASTERPRODUCT,
        [p].DISPLAYPRODUCTNUMBER,
        [p].SEARCHNAME,
        [it].ITEMID,
        '' AS INVENTDIMID,
        [apv].VALIDFROM,
        [apv].VALIDTO
    FROM [ax].ECORESPRODUCT p
        INNER JOIN [crt].ASSORTEDPRODUCTSVIEW apv ON [apv].PRODUCTID = [p].RECID
        INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [p].RECID
        LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [p].RECID
        LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [p].RECID
        LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [p].RECID

    UNION ALL

    -- This select returns only variants (no standalone and no product masters)
    SELECT
        DISTINCT p.RECID,
        [pv].PRODUCTMASTER AS LOOKUPID,
        [apv].CHANNELID,
        0 AS ISMASTER,
        0 AS ISKIT,
        [pv].PRODUCTMASTER AS MASTERPRODUCT,
        [p].DISPLAYPRODUCTNUMBER,
        [p].SEARCHNAME,
        [idc].ITEMID,
        [idc].INVENTDIMID,
        [apv].VALIDFROM,
        [apv].VALIDTO
    FROM [ax].[ECORESPRODUCT] p
        INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [p].RECID
        INNER JOIN [crt].ASSORTEDPRODUCTSVIEW apv ON [apv].PRODUCTID = [pv].PRODUCTMASTER
        INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [p].RECID
        INNER JOIN [ax].INVENTTABLE it ON [it].ITEMID = [idc].ITEMID AND [idc].DATAAREAID = [it].DATAAREAID
)
GO
PRINT N'Creating [crt].[CATALOGCHANNELPRODUCTCATEGORYVIEW]...';


GO

-- [Deprecated] [Last used release = CTP-8]

CREATE VIEW [crt].[CATALOGCHANNELPRODUCTCATEGORYVIEW] AS
(
    SELECT
        [rprct].ORIGINID AS CHANNELID,
        [cpc].CATALOG AS CATALOGID,
        [cpc].CATEGORY AS CATEGORYID,
        [cpc].PRODUCT AS PRODUCTID,
        [cpc].INCLUDEEXCLUDETYPE,
        [rpc].PUBLISHEDVALIDFROM AS VALIDFROM,
        [rpc].PUBLISHEDVALIDTO AS VALIDTO
    FROM [ax].RETAILPUBCATALOG [rpc]
    INNER JOIN [crt].CATALOGPRODUCTCATEGORYVIEW cpc ON [rpc].ORIGIN = [cpc].CATALOG
    INNER JOIN [crt].PUBCATALOGCHANNELVIEW pccv ON pccv.[CATALOG] = [rpc].ORIGIN
    INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON [rprct].ORIGINID = pccv.[CHANNEL]
    WHERE [rprct].CATEGORYHIERARCHY = [cpc].CATEGORYHIERARCHY
)
GO
PRINT N'Creating [crt].[RETAILTRANSACTIONSVIEW]...';


GO

CREATE VIEW [crt].[RETAILTRANSACTIONSVIEW] AS
   WITH RETAILTRANSACTIONSALESTRANSBATCH AS
    (
        SELECT DISTINCT
            ROW_NUMBER() OVER (PARTITION BY rta.SALESORDERID,it.ITEMID, rta.TYPE ORDER BY rta.TRANSACTIONID DESC) AS ROWNUM
            ,rta.[SALESORDERID]
            ,rta.[TYPE]
            ,rtt.[NETAMOUNT]
            ,rtt.[TAXAMOUNT]
            ,rta.[PAYMENTAMOUNT]
            ,it.[ITEMID]
            ,erpt.[NAME] AS PRODUCTNAME
            ,it.[PRODUCT]
            ,rta.[TRANSDATE]
            ,rta.[STORE]
            ,rtt.[QTY]
            ,rta.[CHANNEL]
            ,rta.[TRANSACTIONID]
            ,rtt.[CUSTACCOUNT],
            rta.[ENTRYSTATUS]
        FROM [ax].RETAILTRANSACTIONTABLE rta WITH (NOLOCK)
        INNER JOIN ax.RETAILCHANNELTABLE rct on rta.CHANNEL = rct.RECID
        INNER JOIN [ax].RETAILTRANSACTIONSALESTRANS rtt WITH (NOLOCK) ON rtt.TERMINALID = rta.TERMINAL AND rtt.TRANSACTIONID = rta.TRANSACTIONID AND rtt.CHANNEL = rta.CHANNEL
        INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = rta.CHANNEL AND clv.ISDEFAULT = 1 -- Use default channel language
        INNER JOIN [ax].INVENTTABLE it WITH (NOLOCK) ON it.ITEMID = rtt.ITEMID AND it.DATAAREAID = rct.INVENTLOCATIONDATAAREAID
        INNER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON erpt.PRODUCT = it.PRODUCT AND erpt.LANGUAGEID = clv.LANGUAGEID
        WHERE rta.TYPE = 2 OR rta.TYPE = 19 OR rta.TYPE = 14 -- TYPE 2 SALES TRANSACTION TYPE 19 CUSTOMER ORDER TYPE 14 SALES ORDER
    )
    SELECT
         TYPE,
         NETAMOUNT,
         TAXAMOUNT,
         PAYMENTAMOUNT,
         ITEMID,
         PRODUCTNAME,
         PRODUCT,
         TRANSDATE,
         STORE,
         QTY,
         CHANNEL,
         TRANSACTIONID,
         CUSTACCOUNT, 
         ENTRYSTATUS
    FROM RETAILTRANSACTIONSALESTRANSBATCH
    WHERE
        (ROWNUM = 1 OR SALESORDERID IS NULL OR LEN(LTRIM(RTRIM(SALESORDERID))) = 0)
        -- TO EXCLUDE VOIDED AND CANCELLED TRANSACTIONS
        AND (ENTRYSTATUS <> 1 AND ENTRYSTATUS <> 4);
GO
PRINT N'Creating [crt].[CHANNELCONFIGURATIONVIEW]...';


GO

-- [Deprecated] [Last used release = CTP-8]

CREATE VIEW [crt].[CHANNELCONFIGURATIONVIEW] AS
(
    SELECT
        [rct].[RECID],
        [rct].[CHANNELTYPE],
        [rct].[INVENTLOCATION],
        [rct].[INVENTLOCATIONDATAAREAID],
        [rct].[CURRENCY],
        [rct].[PRICEINCLUDESSALESTAX],
        [rct].[DISPLAYTAXPERTAXCOMPONENT],
        [l].ACCOUNTINGCURRENCY AS 'COMPANYCURRENCY',
        [lpa].[COUNTRYREGIONID],
        [lacr].[ISOCODE] AS 'COUNTRYREGIONISOCODE',
        [rsp].[EXCHANGERATETYPE],
        [rsp].[STAFFPASSWORDHASH],
        [rsp].[TSPASSWORDENCRYPTION],
        [rsp].[DEVICETOKENALGORITHM],
        [rsp].[DEVICETOKENEXPIRATION],
        [rsp].[EARNLOYALTYOFFLINE],
        [rtsp].[PROFILEID] AS 'TSPROFILEID',
        [rtsp].[LANGUAGE] AS 'TSLANGUAGEID',
        [rfp].[TSSTAFF] AS 'TSSTAFFLOGONCONFIGURATION',
		[rfp].[DAYSCUSTOMERHISTORY] AS 'DAYSCUSTOMERHISTORY',
        [dpt].LANGUAGEID AS 'COMPANYLANGUAGEID',
        [rtsp].[SERVERSERVICENAME] AS 'TSSERVICENAME',
        [rtsp].[SECURITYOFF] AS 'TSSECURITYOFF',
        [rtsp].[USERID] AS 'TSUSERID',
        [rtsp].[SERVICEHOSTURL] AS 'TSSERVICEHOSTURL',
        [rtsp].[ISSUERURI] AS 'TSISSUERURI',
        [rtsp].[IDENTITYPROVIDER] AS 'TSIDENTITYPROVIDER',
        [rtsp].[IDENTITYPROVIDERCLAIMTYPE] AS 'TSIDENTITYPROVIDERCLAIMTYPE',
        [rtsp].[AUDIENCEURN] AS 'TSAUDIENCEURN',
        [rtsp].[ISSUEDTOKENTYPE] AS 'TSISSUEDTOKENTYPE',
        [rp].PICKUPDELIVERYMODECODE,
        [rp].ELECTRONICDELIVERYMODECODE,
        [rp].GIFTCARDITEM,
        [rp].CANCELLATIONCHARGE,
        [rp].CANCELLATIONCHARGECODE,
        [rp].EXPIRATIONDATE AS 'QUOTEEXPIRATIONDAYS',
        [rp].MINIMUMDEPOSITFORSALESORDER,
        [rp].SHIPPINGCHARGECODE,
        [rp].PASSWORDEXPIRYINTERVAL AS 'PASSWORDEXPIRYINTERVAL',
        [rp].PASSWORDEXPIRYNOTIFICATIONTHRESHOLD AS 'PASSWORDEXPIRYNOTIFICATIONTHRESHOLD',
        [rct].CHANNELTIMEZONE AS 'TIMEZONECODE',
        [rct].CHANNELTIMEZONEINFOID AS 'TIMEZONEINFOID',
        [clv].LANGUAGEID AS 'DEFAULTLANGUAGEID',
        [rsbp].[APIKEY] AS 'BINGAPIKEY',
        [lpa].VALIDFROM,
        [lpa].VALIDTO,
        [crt].GETCATALOGIMAGEATTRIBUTEDEFAULTVALUE() AS CATALOGDEFAULTIMAGETEMPLATE,
        [crt].GETEMPLOYEEIMAGEATTRIBUTEDEFAULTVALUE() AS EMPLOYEEDEFAULTIMAGETEMPLATE,
        [crt].GETCUSTOMERIMAGEATTRIBUTEDEFAULTVALUE() AS CUSTOMERDEFAULTIMAGETEMPLATE,
        [crt].GETCATEGORYIMAGEATTRIBUTEDEFAULTVALUE() AS CATEGORYDEFAULTIMAGETEMPLATE,
        [crt].GETPRODUCTIMAGEATTRIBUTEDEFAULTVALUE() AS PRODUCTDEFAULTIMAGETEMPLATE
    FROM [ax].RETAILCHANNELTABLE rct

    -- Get transaction service profile information
    LEFT JOIN [ax].RETAILTRANSACTIONSERVICEPROFILE rtsp ON rct.TRANSACTIONSERVICEPROFILE = rtsp.PROFILEID
    LEFT JOIN [ax].RETAILSTORETABLE rst ON rst.RECID = rct.RECID
    LEFT JOIN [ax].RETAILFUNCTIONALITYPROFILE rfp on rfp.PROFILEID = rst.FUNCTIONALITYPROFILE

    -- Get the store's country/region
    INNER JOIN [ax].COMPANYINFO ci ON ci.DATAAREA = rct.INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].LEDGER l ON l.PRIMARYFORLEGALENTITY = ci.RECID
    INNER JOIN [ax].DIRPARTYLOCATION drl ON drl.ISPRIMARY = 1 AND drl.PARTY = ci.RECID
    INNER JOIN [ax].LOGISTICSPOSTALADDRESS lpa ON lpa.ISPRIVATE = 0 AND lpa.LOCATION = drl.LOCATION
    INNER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION lacr ON lacr.COUNTRYREGIONID = lpa.COUNTRYREGIONID

    -- Get the company's language
    INNER JOIN [ax].DIRPARTYTABLE dpt on dpt.RECID = ci.RECID

     -- Get the store's default language
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = rct.RECID AND clv.ISDEFAULT = 1
    INNER JOIN [ax].RETAILPARAMETERS rp ON rp.[KEY] = 0 AND rp.DATAAREAID = rct.INVENTLOCATIONDATAAREAID

    CROSS JOIN [ax].RETAILSHAREDPARAMETERS rsp

    LEFT JOIN [ax].RETAILSHAREDBINGPARAMETERS rsbp ON rsbp.[KEY] = 0
    WHERE rsp.[KEY] = 0
)
GO
PRINT N'Creating [crt].[JOURNALTRANSACTIONVIEW]...';


GO

CREATE VIEW [crt].[JOURNALTRANSACTIONVIEW] AS
(
    SELECT  
        RT.CHANNEL AS 'CHANNELID'
        ,RT.BATCHID
        ,RT.BATCHTERMINALID
        ,RT.TRANSACTIONID AS 'TRANSACTIONID'
        ,RT.SALESORDERID AS 'SALESID'
        ,RT.CREATEDDATETIME
        ,RT.DESCRIPTION
        ,(RT.GROSSAMOUNT * -1.0) AS 'GROSSAMOUNT'
        ,CASE WHEN RT.TYPE = 7 THEN    -- TYPE = 7: TenderDeclaration
                (
                    SELECT SUM(TD.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONTENDERDECLARATIONTRANS TD
                    WHERE 
                        TD.TRANSACTIONID = RT.TRANSACTIONID
                        AND TD.TERMINAL = RT.TERMINAL
                        AND TD.DATAAREAID = RT.DATAAREAID
                        AND TD.TRANSACTIONSTATUS = 0    -- 0: Normal status transaction
                        AND TD.CHANNEL = RT.CHANNEL
                )
            WHEN RT.TYPE = 16 THEN    -- TYPE = 16: BankDrop
                (
                    SELECT SUM(B.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONBANKEDTENDERTRANS B
                    WHERE 
                        B.TRANSACTIONID = RT.TRANSACTIONID
                        AND B.TERMINAL = RT.TERMINAL
                        AND B.DATAAREAID = RT.DATAAREAID
                        AND B.TRANSACTIONSTATUS = 0    -- 0: Normal status transaction
                        AND B.CHANNEL = RT.CHANNEL
                )
            WHEN RT.TYPE = 17 THEN    -- TYPE = 17: SafeDrop
                (
                    SELECT SUM(S.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONSAFETENDERTRANS S
                    WHERE 
                        S.TRANSACTIONID = RT.TRANSACTIONID
                        AND S.TERMINAL = RT.TERMINAL
                        AND S.DATAAREAID = RT.DATAAREAID
                        AND S.TRANSACTIONSTATUS = 0    -- 0: Normal status transaction
                        AND S.CHANNEL = RT.CHANNEL
                )
            WHEN RT.TYPE = 3 THEN    -- TYPE = 3: Payment
                (
                    SELECT SUM(P.AMOUNTTENDERED)
                    FROM [ax].RETAILTRANSACTIONPAYMENTTRANS P
                    WHERE
                        P.TRANSACTIONID = RT.TRANSACTIONID
                        AND P.TERMINAL = RT.TERMINAL
                        AND P.DATAAREAID  = RT.DATAAREAID
                        AND P.TRANSACTIONSTATUS = 0    -- 0: Normal status transaction
                        AND P.CHANNEL = RT.CHANNEL
                )
            ELSE (RT.GROSSAMOUNT * -1.0) END AS 'TOTALAMOUNT'
        ,RT.TERMINAL AS 'TERMINAL'
        ,RT.STORE AS 'STORE'
        ,RT.STAFF AS 'STAFF'
        ,RT.CUSTACCOUNT AS 'CUSTOMERID'
        ,RT.RECEIPTEMAIL AS 'RECEIPTEMAIL'
        ,RT.TYPE
        ,CASE LEN(ISNULL(AT.DELIVERYNAME, ''))
            WHEN 0 THEN DPT.NAME
            ELSE AT.DELIVERYNAME END AS 'NAME'
        ,RT.CHANNELREFERENCEID AS 'CHANNELREFERENCEID'
        ,CV.EMAIL
        ,RT.RECEIPTID AS 'RECEIPTID'
        ,DATEADD(second, RT.TRANSTIME, CAST(RT.TRANSDATE AS DATETIME)) AS 'BEGINDATETIME'
        ,RT.BUSINESSDATE
    FROM [ax].RETAILTRANSACTIONTABLE RT
    LEFT JOIN [ax].RETAILTRANSACTIONADDRESSTRANS AT ON
        AT.TRANSACTIONID = RT.TRANSACTIONID
        AND AT.TERMINAL = RT.TERMINAL
        AND AT.STORE = RT.STORE
        AND AT.CHANNEL = RT.CHANNEL
        AND AT.SALELINENUM = 0      -- SaleLineNum 0 = Header level address
    LEFT JOIN [crt].[CUSTOMERSVIEW] CV    
        ON CV.ACCOUNTNUMBER = RT.CUSTACCOUNT AND CV.DATAAREAID = RT.DATAAREAID
    LEFT JOIN [ax].DIRPARTYTABLE DPT ON CV.PARTY = DPT.RECID
    WHERE (
    RT.ENTRYSTATUS = 0 -- Normal
    OR RT.ENTRYSTATUS = 2 -- Posted
    ) AND (
    RT.TYPE = 2 -- Sales
    OR RT.TYPE = 3    -- Payment
    OR RT.TYPE = 7    -- TenderDeclaration
    OR RT.TYPE = 14   -- SalesOrder
    OR RT.TYPE = 15   -- SalesInvoice
    OR RT.TYPE = 16   -- BankDrop
    OR RT.TYPE = 17   -- SafeDrop
    OR RT.TYPE = 18   -- IncomeExpense
    OR RT.TYPE = 19   -- CustomerOrder
    )
)
GO
PRINT N'Creating [crt].[GLOBALCUSTOMERSVIEW]...';


GO

-- !!! If you are modifying this view consider making sure the function GETGLOBALCUSTOMERSBYPARTYID is in sync. !!!
CREATE VIEW [crt].[GLOBALCUSTOMERSVIEW] AS
(
    SELECT
        dpt.PARTYNUMBER,
        dpt.RECID AS RECORDID,
        ISNULL(ct.ACCOUNTNUM, '') AS ACCOUNTNUMBER,
        dpt.NAME,
        CASE
            WHEN dpn.RECID IS NULL THEN 2 -- Organization
            ELSE 1 -- Customer
        END AS CUSTOMERTYPE,
        cpa.ADDRESS AS FULLADDRESS,
        ceap.LOCATOR AS PHONE,
        ceae.LOCATOR AS EMAIL,
        dpn.VALIDFROM AS CUSTOMERNAMEVALIDFROM,
        dpn.VALIDTO AS CUSTOMERNAMEVALIDTO,
        ISNULL(ct.ORGID, '') AS ORGID,
        ISNULL(ct.DATAAREAID, '') AS DATAAREAID,
        CAST(N'' AS XML).value ('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)') AS OFFLINEIMAGE
    FROM [ax].DIRPARTYTABLE dpt
    -- left outer join for global customers
    LEFT OUTER JOIN [ax].CUSTTABLE ct ON ct.PARTY = dpt.RECID
    LEFT OUTER JOIN [ax].DIRPERSONNAME dpn ON dpn.PERSON = dpt.RECID
    -- phone
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceap ON dpt.RECID = ceap.DIRPARTYRECORDID AND ceap.METHODYTPE = 1 AND ceap.ISPRIMARY = 1
    -- email
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceae ON dpt.RECID = ceae.DIRPARTYRECORDID AND ceae.METHODYTPE = 2 AND ceae.ISPRIMARY = 1
    -- address
    LEFT OUTER JOIN [crt].CUSTOMERPOSTALADDRESSESVIEW cpa ON dpt.RECID = cpa.DIRPARTYTABLERECID AND cpa.ISPRIMARY = 1
    -- offline images
    LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer ON ct.RECID = rmamer.MASTERENTITYRECID AND rmamer.ISDEFAULT = 1
    LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON rmamer.MEDIARESOURCEID = rmr.RESOURCEID
)
GO
PRINT N'Creating [crt].[PUBPRODUCTATTRIBUTEVALUEEXPLODEDVIEW]...';


GO

CREATE VIEW [crt].[PUBPRODUCTATTRIBUTEVALUEEXPLODEDVIEW] AS
(
    SELECT 
        rpioie.VALIDFROM AS ORGVALIDFROM,
        rpioie.VALIDTO AS ORGVALIDTO,
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        rppav.PRODUCT,
        ppacmv.CHANNEL,
        rppav.CATALOG,
        rpioie.DISTANCE,
        rppav.DATETIMEVALUE,
        rppav.DATETIMEVALUETZID,
        rppav.FLOATVALUE,
        rppav.INTVALUE, 
        rppav.LANGUAGEID,
        rppav.TEXTVALUE,
        rppav.UNITOFMEASURE
        FROM ax.RETAILPUBPRODUCTATTRIBUTEVALUE rppav
            JOIN ax.RETAILPUBINTORGINHERITANCEEXPLODED rpioie
                ON rpioie.ANCESTORINTERNALORG = rppav.INTERNALORGANIZATION
            JOIN ax.RETAILPUBRETAILCHANNELTABLE rprct
                ON rprct.INTERNALORGANIZATION = rpioie.INTERNALORGANIZATION
            JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv
                ON ppacmv.ACTUALATTRIBUTE = rppav.ATTRIBUTE
                    AND ppacmv.CHANNEL = rprct.ORIGINID
)
GO
PRINT N'Creating [crt].[STORESBYEMPLOYEEVIEW]...';


GO

CREATE VIEW [crt].[STORESBYEMPLOYEEVIEW] AS
(
    SELECT DISTINCT rst.STORENUMBER,
        dpt.NAME AS 'STORENAME',
        pav.ADDRESS AS 'STOREADDRESS',
        hw.PERSONNELNUMBER,
        omu.OMOPERATINGUNITNUMBER
    FROM [ax].[DIRADDRESSBOOKPARTY] dabp
        INNER JOIN [ax].[HCMWORKER] hw ON dabp.PARTY = hw.PERSON
        INNER JOIN [ax].[RETAILSTOREADDRESSBOOK] rsab on dabp.ADDRESSBOOK = rsab.ADDRESSBOOK
        INNER JOIN [ax].[RETAILSTORETABLE] rst ON rsab.STORERECID = rst.RECID
        INNER JOIN [ax].[RETAILCHANNELTABLE] rct ON rst.RECID = rct.RECID
        INNER JOIN [ax].[DIRPARTYTABLE] dpt ON rct.OMOPERATINGUNITID = dpt.RECID
        INNER JOIN [ax].[OMOPERATINGUNIT] omu ON rct.OMOPERATINGUNITID = omu.RECID
        LEFT OUTER JOIN [crt].[POSTALADDRESSESVIEW] pav ON (rct.OMOPERATINGUNITID = pav.PARTY AND pav.ISPRIMARY = 1)
    WHERE rsab.ADDRESSBOOKTYPE = 1 
)
GO
PRINT N'Creating [crt].[ATTRIBUTEDEFAULTVALUEVIEW]...';


GO

CREATE VIEW [crt].[ATTRIBUTEDEFAULTVALUEVIEW] AS
(
    SELECT
        ppacmv.CHANNEL,
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        eradv.VALUE
        FROM crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv
            JOIN ax.ECORESATTRIBUTE era
                ON era.RECID = ppacmv.ACTUALATTRIBUTE
            JOIN ax.ECORESATTRIBUTETYPE erat
                ON erat.RECID = era.ATTRIBUTETYPE
            JOIN ax.ECORESATTRIBUTEDEFAULTVALUE eradv 
                ON eradv.ATTRIBUTE = ppacmv.ACTUALATTRIBUTE
		WHERE erat.DATATYPE != 20	-- REFEFENCE ATTRIBUTE TYPE
)
GO
PRINT N'Creating [crt].[DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW]...';


GO

CREATE VIEW [crt].[DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW] AS
(
    SELECT 
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        eraga.DEFAULTVALUE AS VALUE,
		ppacmv.CHANNEL
        FROM ax.RETAILSHAREDPARAMETERS rsp 
            JOIN ax.ECORESATTRIBUTEGROUPATTRIBUTE eraga
                ON eraga.ATTRIBUTEGROUP = rsp.PRODUCTDEFAULTATTRIBUTEGROUP
			JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv
				ON ppacmv.ACTUALATTRIBUTE = eraga.ATTRIBUTE
        WHERE rsp.[KEY] = 0 AND eraga.DEFAULTVALUE != 0
)
GO
PRINT N'Creating [crt].[CHANNELPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW]...';


GO

CREATE VIEW [crt].[CHANNELPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW] AS
(
    SELECT 
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        eraga.DEFAULTVALUE AS VALUE,
        ppacmv.CHANNEL,
        rpioie.DISTANCE
        FROM ax.RETAILPUBINTERNALORGATTRIBUTEGROUP rpioag
            JOIN ax.RETAILPUBINTORGINHERITANCEEXPLODED rpioie 
                ON rpioie.ANCESTORINTERNALORG = rpioag.INTERNALORGANIZATION
            JOIN ax.RETAILPUBRETAILCHANNELTABLE rprct
                ON rprct.INTERNALORGANIZATION = rpioie.INTERNALORGANIZATION
            JOIN ax.ECORESATTRIBUTEGROUPATTRIBUTE eraga
                ON eraga.ATTRIBUTEGROUP = rpioag.ATTRIBUTEGROUP
            JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv
                ON ppacmv.ACTUALATTRIBUTE = eraga.ATTRIBUTE
                    AND ppacmv.CHANNEL = rprct.ORIGINID
        WHERE rpioag.MODIFIER = 1 AND eraga.DEFAULTVALUE != 0   -- Product
            AND GETUTCDATE() BETWEEN rpioie.VALIDFROM AND rpioie.VALIDTO
)
GO
PRINT N'Creating [crt].[GETITEMAVAILABILITIESBYITEMQUANTITIES]...';


GO
-- (UPGRADE) Dropping previous inline function in order to re-create table function.


-- Get item availabilities by requested item quantities.
-- For items with sufficient quantities available in one warehouse, the topmost warehouse is returned, order by preferences descending, then available quantities descending, and recid ascending.
-- Otherwise, at most top n = @i_MaxWarehousesPerItem warehouses are returned, order by available quantities descending, then preferences descending, and recid ascending.
-- Because there is no efficient way of calculating running totals, the function returns cannot return just enough records to fulfill the order.
CREATE FUNCTION [crt].[GETITEMAVAILABILITIESBYITEMQUANTITIES]
(
    @bi_ChannelId               BIGINT,
    @tvp_ItemQuantities         [crt].ITEMQUANTITYTABLETYPE READONLY,
    @nvc_CustomerAccountNumber  NVARCHAR(20),
    @i_MaxWarehousesPerItem     INT
)

RETURNS @result TABLE
(
	RECID BIGINT,
	ITEMID NVARCHAR(20),
	VARIANTINVENTDIMID NVARCHAR(20),
	WAREHOUSEINVENTDIMID NVARCHAR(20),
	INVENTSITEID NVARCHAR(10),
	INVENTLOCATIONID NVARCHAR(10),
	AVAILPHYSICAL NUMERIC(32, 16),
	UNITID NVARCHAR(10),
	PREFERENCES INT
)

AS
BEGIN

	DECLARE @tbl_ItemAvailabilityInner AS TABLE
	(
		RECID BIGINT, 
		ITEMID NVARCHAR(20),
		VARIANTINVENTDIMID NVARCHAR(20),
		WAREHOUSEINVENTDIMID NVARCHAR(20),
		INVENTSITEID NVARCHAR(10),
		INVENTLOCATIONID NVARCHAR(10),
		AVAILPHYSICAL NUMERIC(32,16),
		UNITID NVARCHAR(10),
		DATAAREAID NVARCHAR(4)
	)


	DECLARE @tbl_ItemAvailability AS TABLE
	(
		RECID BIGINT,
        ITEMID NVARCHAR(20),
        VARIANTINVENTDIMID  NVARCHAR(20),
        AVAILPHYSICAL NUMERIC(32,16),
		PREFERENCES INT
	)

	DECLARE @tbl_SufficientQuantityItems AS TABLE
	(
	    ITEMID NVARCHAR(20),
		VARIANTINVENTDIMID NVARCHAR(20)
	)


	INSERT @tbl_ItemAvailabilityInner SELECT * 
	FROM [crt].GETITEMAVAILABILITY(@tvp_ItemQuantities);

    WITH ITEM_INVENTORY_SETTINGS AS
    (
        SELECT
            IQ.ITEMID
            ,IQ.VARIANTINVENTDIMID
            ,CT.INVENTLOCATION AS CUSTOMERWAREHOUSE
            ,CT.INVENTSITEID AS CUSTOMERSITE
            ,ID_WAREHOUSE.INVENTLOCATIONID AS ITEMWAREHOUSE
            ,ID_SITE.INVENTSITEID AS ITEMSITE
            ,RCT.INVENTLOCATION AS CHANNELWAREHOUSE
            ,IL_CHANNEL.INVENTSITEID AS CHANNELSITE
            ,IISS_WAREHOUSE.MANDATORYINVENTLOCATION AS ISITEMWAREHOUSEMANDATORY
            ,IISS_SITE.MANDATORYINVENTSITE AS ISITEMSITEMANDATORY
        FROM @tvp_ItemQuantities IQ
        JOIN [ax].RETAILCHANNELTABLE CHANNEL ON CHANNEL.RECID = @bi_ChannelId
        LEFT JOIN [ax].INVENTITEMSALESSETUP IISS_SITE ON IISS_SITE.ITEMID = IQ.ITEMID AND IISS_SITE.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID AND IISS_SITE.INVENTDIMID = [crt].GETALLBLANKINVENTDIMID()
        LEFT JOIN [ax].INVENTDIM ID_SITE ON ID_SITE.INVENTDIMID = IISS_SITE.INVENTDIMIDDEFAULT AND ID_SITE.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
        LEFT JOIN [ax].INVENTITEMSALESSETUP IISS_WAREHOUSE ON IISS_WAREHOUSE.ITEMID = IQ.ITEMID AND IISS_WAREHOUSE.INVENTDIMID = IISS_SITE.INVENTDIMIDDEFAULT AND IISS_WAREHOUSE.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
        LEFT JOIN [ax].INVENTDIM ID_WAREHOUSE ON ID_WAREHOUSE.INVENTDIMID = IISS_WAREHOUSE.INVENTDIMIDDEFAULT AND ID_WAREHOUSE.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
        LEFT JOIN [ax].CUSTTABLE CT ON CT.ACCOUNTNUM = @nvc_CustomerAccountNumber AND CT.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
        LEFT JOIN [ax].RETAILPUBRETAILCHANNELTABLE RCT ON RCT.ORIGINID = @bi_ChannelId
        LEFT JOIN [ax].INVENTLOCATION IL_CHANNEL ON IL_CHANNEL.INVENTLOCATIONID = RCT.INVENTLOCATION AND IL_CHANNEL.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
    ),
    ITEM_AVAILABILITIES AS
    (
        SELECT
            IAV.RECID
            ,IAV.ITEMID
            ,IAV.VARIANTINVENTDIMID
            ,IAV.AVAILPHYSICAL
            ,CASE
                WHEN IAV.INVENTLOCATIONID = IIS.CUSTOMERWAREHOUSE AND IAV.INVENTLOCATIONID != '' THEN 32
                ELSE 0
            END | CASE
                WHEN IAV.INVENTSITEID = IIS.CUSTOMERSITE AND IAV.INVENTSITEID != '' THEN 16
                ELSE 0
            END | CASE
                WHEN IAV.INVENTLOCATIONID = IIS.ITEMWAREHOUSE AND IAV.INVENTLOCATIONID != '' THEN 8
                ELSE 0
            END | CASE
                WHEN IAV.INVENTSITEID = IIS.ITEMSITE AND IAV.INVENTSITEID != '' THEN 4
                ELSE 0
            END | CASE
                WHEN IAV.INVENTLOCATIONID = IIS.CHANNELWAREHOUSE AND IAV.INVENTLOCATIONID != '' THEN 2
                ELSE 0
            END | CASE
                WHEN IAV.INVENTSITEID = IIS.CHANNELSITE AND IAV.INVENTSITEID != '' THEN 1
                ELSE 0
            END PREFERENCES
            FROM @tvp_ItemQuantities IQ
            INNER JOIN @tbl_ItemAvailabilityInner IAV ON IAV.ITEMID = IQ.ITEMID AND IAV.VARIANTINVENTDIMID = IQ.VARIANTINVENTDIMID
            INNER JOIN [ax].RETAILCHANNELTABLE CHANNEL ON CHANNEL.RECID = @bi_ChannelId AND CHANNEL.INVENTLOCATIONDATAAREAID =  IAV.DATAAREAID
            LEFT JOIN ITEM_INVENTORY_SETTINGS IIS ON IIS.ITEMID = IQ.ITEMID AND IIS.VARIANTINVENTDIMID = IQ.VARIANTINVENTDIMID
            WHERE (IIS.ISITEMWAREHOUSEMANDATORY = 1 AND IAV.INVENTLOCATIONID = IIS.ITEMWAREHOUSE)                                                                       -- Mandatory warehouse,
                OR ((IIS.ISITEMWAREHOUSEMANDATORY IS NULL OR IIS.ISITEMWAREHOUSEMANDATORY != 1) AND IIS.ISITEMSITEMANDATORY = 1 AND IAV.INVENTSITEID = IIS.ITEMSITE)    -- or mandatory site,
                OR ((IIS.ISITEMWAREHOUSEMANDATORY IS NULL OR IIS.ISITEMWAREHOUSEMANDATORY != 1) AND (IIS.ISITEMSITEMANDATORY IS NULL OR IIS.ISITEMSITEMANDATORY != 1))  -- or not mandatory
    )

	INSERT @tbl_ItemAvailability (RECID, ITEMID, VARIANTINVENTDIMID, AVAILPHYSICAL, PREFERENCES)
	SELECT RECID, ITEMID, VARIANTINVENTDIMID, AVAILPHYSICAL, PREFERENCES
	FROM ITEM_AVAILABILITIES;

	INSERT @tbl_SufficientQuantityItems (ITEMID, VARIANTINVENTDIMID)
	SELECT IQ.ITEMID, IQ.VARIANTINVENTDIMID
    FROM @tvp_ItemQuantities IQ
    INNER JOIN @tbl_ItemAvailability IA ON IA.ITEMID = IQ.ITEMID AND IA.VARIANTINVENTDIMID = IQ.VARIANTINVENTDIMID
    WHERE IQ.QUANTITY <= IA.AVAILPHYSICAL
    GROUP BY IQ.ITEMID, IQ.VARIANTINVENTDIMID;

	WITH INSUFFICIENT_QUANTITY_ITEMS AS
    (
        SELECT
            IQ.ITEMID
            ,IQ.VARIANTINVENTDIMID
        FROM @tvp_ItemQuantities IQ
        LEFT JOIN @tbl_SufficientQuantityItems SQI ON SQI.ITEMID = IQ.ITEMID AND SQI.VARIANTINVENTDIMID = IQ.VARIANTINVENTDIMID
        WHERE SQI.ITEMID IS NULL    -- Exclude records in SUFFICIENT_QUANTITY_ITEMS set
    ),
    SUFFICIENT_QUANTITY_ITEM_AVAILABILITIES AS
    (
        SELECT
            IA.RECID
            ,IA.ITEMID
            ,IA.VARIANTINVENTDIMID
            ,IA.PREFERENCES
            ,RANK() OVER
            (
                PARTITION BY IA.ITEMID, IA.VARIANTINVENTDIMID

                -- Order by preferences first because there are enough available quantities
                -- Add recid to break ties so that ranks will always be consecutive numbers
                ORDER BY IA.PREFERENCES DESC, IA.AVAILPHYSICAL DESC, IA.RECID
            ) AS RANK
        FROM @tbl_SufficientQuantityItems SQI
        INNER JOIN @tbl_ItemAvailability IA ON IA.ITEMID = SQI.ITEMID AND IA.VARIANTINVENTDIMID = SQI.VARIANTINVENTDIMID
    ),
    INSUFFICIENT_QUANTITY_ITEM_AVAILABILITIES AS
    (
        SELECT
            IA.RECID
            ,IA.ITEMID
            ,IA.VARIANTINVENTDIMID
            ,IA.AVAILPHYSICAL
            ,IA.PREFERENCES
            ,RANK() OVER
            (
                PARTITION BY IA.ITEMID, IA.VARIANTINVENTDIMID

                -- Order by quantities first to maximize the chance of fulfilling the order
                -- Add recid to break ties so that ranks will always be consecutive numbers
                ORDER BY IA.AVAILPHYSICAL DESC, IA.PREFERENCES DESC, IA.RECID
            ) AS RANK
        FROM INSUFFICIENT_QUANTITY_ITEMS IQI
        INNER JOIN @tbl_ItemAvailability IA ON IA.ITEMID = IQI.ITEMID AND IA.VARIANTINVENTDIMID = IQI.VARIANTINVENTDIMID
    ),
    ASSIGNED_ITEM_AVAILABILITIES AS
    (
        SELECT
            RECID
            ,ITEMID
            ,VARIANTINVENTDIMID
            ,PREFERENCES
        FROM SUFFICIENT_QUANTITY_ITEM_AVAILABILITIES
        WHERE RANK = 1

        UNION ALL

        SELECT
            RECID
            ,ITEMID
            ,VARIANTINVENTDIMID
            ,PREFERENCES
        FROM INSUFFICIENT_QUANTITY_ITEM_AVAILABILITIES
        WHERE RANK <= @i_MaxWarehousesPerItem AND (RANK = 1 OR AVAILPHYSICAL > 0) -- No need to return zero quantity records except for the first one.
    )
  
  
	INSERT @result
    SELECT
        IAV.RECID
        ,IAV.ITEMID
        ,IAV.VARIANTINVENTDIMID
        ,IAV.WAREHOUSEINVENTDIMID
        ,IAV.INVENTSITEID
        ,IAV.INVENTLOCATIONID
        ,IAV.AVAILPHYSICAL
        ,IAV.UNITID
        ,AIA.PREFERENCES
    FROM ASSIGNED_ITEM_AVAILABILITIES AIA
    JOIN @tbl_ItemAvailabilityInner IAV ON IAV.RECID = AIA.RECID

    RETURN;
END
GO
PRINT N'Creating [crt].[GETVARIANTSBYITEMIDANDINVENTDIMIDS]...';


GO

-- Gets the list of variants for the specified list of item and inventory dimension identifiers.
CREATE FUNCTION [crt].[GETVARIANTSBYITEMIDANDINVENTDIMIDS]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE,
    @tvp_ItemVariantIds [crt].[ITEMVARIANTINVENTDIMTABLETYPE]    READONLY
)
RETURNS @VARIANTS TABLE
(
    RECID                   BIGINT,
    ITEMID                  NVARCHAR(20),
    VARIANTID               NVARCHAR(10),
    INVENTDIMID             NVARCHAR(20),
    DISTINCTPRODUCTVARIANT  BIGINT,
    SIZEID                  NVARCHAR(10),
    COLORID                 NVARCHAR(10),
    STYLEID                 NVARCHAR(10),
    CONFIGID                NVARCHAR(10),
    COLOR                   NVARCHAR(60),
    SIZE                    NVARCHAR(60),
    STYLE                   NVARCHAR(60),
    CONFIG                  NVARCHAR(60)
)
AS
BEGIN
    DECLARE @tvp_DistinctProductVariantIds [crt].[RECORDIDTABLETYPE];
    DECLARE @nvc_DataAreaId NVARCHAR(4);

    -- Get the data area for the specified channel identifier.
    SELECT @nvc_DataAreaId = rct.INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId;

    -- Convert the ItemId, VariantInventDimId pairs into distinct product variant identifiers.
    INSERT INTO @tvp_DistinctProductVariantIds (RECID)
    SELECT idc.DISTINCTPRODUCTVARIANT
    FROM @tvp_ItemVariantIds ids
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON idc.ITEMID = ids.ITEMID AND idc.INVENTDIMID = ids.VARIANTINVENTDIMID AND idc.DATAAREAID = @nvc_DataAreaId

    -- Retrieve the variants.
    INSERT @VARIANTS
    SELECT
        v.RECID,
        v.ITEMID,
        v.VARIANTID,
        v.INVENTDIMID,
        v.DISTINCTPRODUCTVARIANT,
        v.SIZEID,
        v.COLORID,
        v.STYLEID,
        v.CONFIGID,
        v.COLOR,
        v.SIZE,
        v.STYLE,
        v.CONFIG
    FROM [crt].GETVARIANTS(@bi_ChannelId, @dt_ChannelDate, @tvp_DistinctProductVariantIds) v

    RETURN;
END
GO
PRINT N'Creating [crt].[GETGLOBALCUSTOMERSBYPARTYID]...';


GO

--!!! If you are modifing this function consider making sure the view crt.GLOBALCUSTOMERSVIEW is in sync. !!!
CREATE FUNCTION [crt].[GETGLOBALCUSTOMERSBYPARTYID]
(
    @tvp_PartyIds [crt].[RECORDIDTABLETYPE]   READONLY
)
RETURNS TABLE
RETURN

SELECT
    dpt.PARTYNUMBER,
    dpt.RECID AS RECORDID,
    ISNULL(ct.ACCOUNTNUM, '') AS ACCOUNTNUMBER,
    dpt.NAME,
    CASE
        WHEN dpn.RECID IS NULL THEN 2 -- Organization
        ELSE 1 -- Customer
    END AS CUSTOMERTYPE,
    cpa.ADDRESS AS FULLADDRESS,
    ceap.LOCATOR AS PHONE,
    ceae.LOCATOR AS EMAIL,
	dpn.VALIDFROM AS CUSTOMERNAMEVALIDFROM,
    dpn.VALIDTO AS CUSTOMERNAMEVALIDTO,
    ISNULL(ct.ORGID, '') AS ORGID,
    ISNULL(ct.DATAAREAID, '') AS DATAAREAID,
    CAST(N'' AS XML).value ('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)') AS OFFLINEIMAGE
FROM [ax].DIRPARTYTABLE dpt
INNER JOIN @tvp_PartyIds AS ids on ids.RECID = dpt.RECID
-- Global customers are not stored in [ax].CUSTTABLE. Hence, a LEFT OUTER JOIN is being performed here.
LEFT OUTER JOIN [ax].CUSTTABLE ct ON ct.PARTY = dpt.RECID
LEFT OUTER JOIN [ax].DIRPERSONNAME dpn ON dpn.PERSON = dpt.RECID
-- phone
LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceap ON dpt.RECID = ceap.DIRPARTYRECORDID AND ceap.METHODYTPE = 1 AND ceap.ISPRIMARY = 1
-- email
LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceae ON dpt.RECID = ceae.DIRPARTYRECORDID AND ceae.METHODYTPE = 2 AND ceae.ISPRIMARY = 1
-- address
LEFT OUTER JOIN [crt].CUSTOMERPOSTALADDRESSESVIEW cpa ON dpt.RECID = cpa.DIRPARTYTABLERECID AND cpa.ISPRIMARY = 1
-- offline images
LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer ON ct.RECID = rmamer.MASTERENTITYRECID AND rmamer.ISDEFAULT = 1
LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON rmamer.MEDIARESOURCEID = rmr.RESOURCEID
GO
PRINT N'Creating [crt].[GETPRODUCTSEARCHRESULTSBYCATEGORYID]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTSEARCHRESULTSBYCATEGORYID]
(
    @bi_ChannelId                 BIGINT,
    @bi_CatalogId                 BIGINT,
    @dt_ChannelDate               DATETIME,
    @nvc_Locale                   NVARCHAR(7),
    @bi_CategoryId                BIGINT
)
RETURNS TABLE
RETURN
    SELECT
        [prods].PRODUCTID AS RECID,
        [it].ITEMID AS ITEMID,
        COALESCE([erpt_locale].NAME, [erpt_default].NAME) AS NAME,
        [itm].PRICE,
        [gpml].URI AS PRIMARYIMAGE
    FROM [crt].GETPRODUCTIDSBYCATEGORYID(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @bi_CategoryId) prods
        LEFT OUTER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [prods].PRODUCTID
        LEFT OUTER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
            LEFT OUTER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [prods].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
                LEFT OUTER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
        LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_locale ON [erpt_locale].PRODUCT = [prods].PRODUCTID AND [erpt_locale].LANGUAGEID = @nvc_Locale
        LEFT OUTER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = @bi_ChannelId AND [clv].ISDEFAULT = 1
            LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_default ON [erpt_default].PRODUCT = [prods].PRODUCTID AND [erpt_default].LANGUAGEID = [clv].LANGUAGEID
        OUTER APPLY (SELECT TOP 1 REPLACE(REPLACE(URI, '{LANGUAGEID}', @nvc_Locale), '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS([erp].DISPLAYPRODUCTNUMBER))) AS URI FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, [prods].PRODUCTID, @nvc_Locale) ORDER BY PRIORITY, ISDEFAULT, URI) gpml
GO
PRINT N'Creating [crt].[GETPRICEREFINERVALUES]...';


GO
-- ================================================================
-- Description: Retrieves the minimum and maximum price range
-- possible for the given product identifiers.
-- ================================================================


CREATE FUNCTION [crt].[GETPRICEREFINERVALUES]
(
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @tvp_ProductIds             [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    SELECT PRICETYPE, PRICE
    FROM
    (
        SELECT
            MIN(PRICE) MINPRICE,
            MAX(PRICE) MAXPRICE
        FROM [crt].[GETREFINERPRICES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductIds)
    ) prices
    UNPIVOT
    (
        PRICE FOR PRICETYPE IN (MINPRICE, MAXPRICE)
    ) AS PRICEREFINERVALUES;
GO
PRINT N'Creating [crt].[SEARCHPRODUCTSBYTEXT]...';


GO

-- Dead code (deprecated): This code is not used as of AX 7 RTW.

CREATE FUNCTION [crt].[SEARCHPRODUCTSBYTEXT]
(
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_Locale              NVARCHAR(7),
    @nvc_SearchText          NVARCHAR(1000)  -- 1000 because the size of the biggest column being looked up is [ax].ECORESPRODUCTTRANSLATION.DESCRIPTION of type NVARCHAR(1000)
)
RETURNS TABLE
RETURN
    SELECT
        [sp].RECORDID AS RECID,
        [it].ITEMID AS ITEMID,
        COALESCE([erpt_locale].NAME, [erpt_p1].NAME, [erpt_p2].NAME) AS NAME,
        [itm].PRICE AS PRICE,
        [sp].RANKING,
        [gpml].URI AS PRIMARYIMAGE
    FROM [crt].SEARCHPRODUCTS(@bi_ChannelId, @dt_ChannelDate, @nvc_Locale, @nvc_SearchText) sp
    LEFT OUTER JOIN [ax].INVENTTABLE it WITH (FORCESEEK) ON [it].PRODUCT = [sp].RECORDID
    LEFT OUTER JOIN [ax].RETAILCHANNELTABLE rct ON [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    LEFT OUTER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = [rct].RECID
    LEFT OUTER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [it].PRODUCT
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_locale ON [erpt_locale].PRODUCT = [sp].RECORDID AND [erpt_locale].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_p1 ON [erpt_p1].PRODUCT = [sp].RECORDID AND [clv].PRIORITY = 1 AND [erpt_p1].LANGUAGEID = [clv].LANGUAGEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_p2 ON [erpt_p2].PRODUCT = [sp].RECORDID AND [clv].PRIORITY = 2 AND [erpt_p2].LANGUAGEID = [clv].LANGUAGEID
    LEFT OUTER JOIN [ax].INVENTTABLEMODULE itm ON [it].ITEMID = [itm].ITEMID AND [it].DATAAREAID = [itm].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    LEFT OUTER JOIN [crt].PRODUCTCATALOGRULESVIEW pcrv ON [pcrv].CHANNELID = [rct].RECID AND [pcrv].PRODUCTID = [sp].RECORDID
    OUTER APPLY (SELECT TOP 1 REPLACE(REPLACE(URI, '{LANGUAGEID}', @nvc_Locale), '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS([erp].DISPLAYPRODUCTNUMBER))) AS URI FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, [sp].RECORDID, @nvc_Locale) ORDER BY PRIORITY, ISDEFAULT, URI) gpml
    WHERE [rct].RECID = @bi_ChannelId AND (@bi_CatalogId = 0 OR ([pcrv].CATALOGID = @bi_CatalogId AND @dt_ChannelDate BETWEEN [pcrv].VALIDFROM AND [pcrv].VALIDTO))
GO
PRINT N'Creating [crt].[GETITEMAVAILABLEQUANTITIESBYITEMS]...';


GO

-- Get item available quantities.
CREATE FUNCTION [crt].GETITEMAVAILABLEQUANTITIESBYITEMS
(
    @bi_ChannelId              BIGINT,
    @tvp_ItemVariantInventDims  [crt].ITEMVARIANTINVENTDIMTABLETYPE READONLY,
    @nvc_CustomerAccountNumber  NVARCHAR(20)
)
RETURNS TABLE
RETURN
    SELECT
        IVI.ITEMID
        ,IVI.VARIANTINVENTDIMID
        ,SUM(IAV.AVAILPHYSICAL) AS AVAILPHYSICAL
        ,MAX(IAV.UNITID) AS UNITID
    FROM @tvp_ItemVariantInventDims IVI
    JOIN [crt].ITEMAVAILABILITYVIEW IAV ON IAV.ITEMID = IVI.ITEMID AND (IVI.VARIANTINVENTDIMID = '' OR IAV.VARIANTINVENTDIMID = IVI.VARIANTINVENTDIMID)
    LEFT JOIN [crt].GETITEMINVENTORYSETTINGS(@bi_ChannelId, @tvp_ItemVariantInventDims, @nvc_CustomerAccountNumber) IIS ON IIS.ITEMID = IVI.ITEMID AND IIS.VARIANTINVENTDIMID = IVI.VARIANTINVENTDIMID
    WHERE (IIS.ISITEMWAREHOUSEMANDATORY = 1 AND IAV.INVENTLOCATIONID = IIS.ITEMWAREHOUSE)                                                                       -- Mandatory warehouse,
        OR ((IIS.ISITEMWAREHOUSEMANDATORY IS NULL OR IIS.ISITEMWAREHOUSEMANDATORY != 1) AND IIS.ISITEMSITEMANDATORY = 1 AND IAV.INVENTSITEID = IIS.ITEMSITE)    -- or mandatory site,
        OR ((IIS.ISITEMWAREHOUSEMANDATORY IS NULL OR IIS.ISITEMWAREHOUSEMANDATORY != 1) AND (IIS.ISITEMSITEMANDATORY IS NULL OR IIS.ISITEMSITEMANDATORY != 1))  -- or not mandatory
    GROUP BY IVI.ITEMID, IVI.VARIANTINVENTDIMID
GO
PRINT N'Creating [crt].[GETITEMAVAILABILITIESBYITEMS]...';


GO

-- Get item availabilities by items.
CREATE FUNCTION [crt].GETITEMAVAILABILITIESBYITEMS
(
    @bi_ChannelId               BIGINT,
    @tvp_ItemVariantInventDims  [crt].ITEMVARIANTINVENTDIMTABLETYPE READONLY,
    @nvc_CustomerAccountNumber  NVARCHAR(20)
)
RETURNS TABLE
RETURN
    SELECT
        IAV.[RECID]
        ,IAV.[ITEMID]
        ,IAV.[VARIANTINVENTDIMID]
        ,IAV.[WAREHOUSEINVENTDIMID]
        ,IAV.[INVENTSITEID]
        ,IAV.[INVENTLOCATIONID]
        ,IAV.[AVAILPHYSICAL]
        ,IAV.[UNITID]
        ,CASE
            WHEN IAV.INVENTLOCATIONID = IIS.CUSTOMERWAREHOUSE AND IAV.INVENTLOCATIONID != '' THEN 32
            ELSE 0
        END | CASE
            WHEN IAV.INVENTSITEID = IIS.CUSTOMERSITE AND IAV.INVENTSITEID != '' THEN 16
            ELSE 0
        END | CASE
            WHEN IAV.INVENTLOCATIONID = IIS.ITEMWAREHOUSE AND IAV.INVENTLOCATIONID != '' THEN 8
            ELSE 0
        END | CASE
            WHEN IAV.INVENTSITEID = IIS.ITEMSITE AND IAV.INVENTSITEID != '' THEN 4
            ELSE 0
        END | CASE
            WHEN IAV.INVENTLOCATIONID = IIS.CHANNELWAREHOUSE AND IAV.INVENTLOCATIONID != '' THEN 2
            ELSE 0
        END | CASE
            WHEN IAV.INVENTSITEID = IIS.CHANNELSITE AND IAV.INVENTSITEID != '' THEN 1
            ELSE 0
        END PREFERENCES
    FROM @tvp_ItemVariantInventDims IVI
    JOIN [crt].ITEMAVAILABILITYVIEW IAV ON IAV.ITEMID = IVI.ITEMID AND IAV.VARIANTINVENTDIMID = IVI.VARIANTINVENTDIMID
    LEFT JOIN [crt].GETITEMINVENTORYSETTINGS(@bi_ChannelId, @tvp_ItemVariantInventDims, @nvc_CustomerAccountNumber) IIS ON IIS.ITEMID = IVI.ITEMID AND IIS.VARIANTINVENTDIMID = IVI.VARIANTINVENTDIMID
    WHERE (IIS.ISITEMWAREHOUSEMANDATORY = 1 AND IAV.INVENTLOCATIONID = IIS.ITEMWAREHOUSE)                                                                       -- Mandatory warehouse,
        OR ((IIS.ISITEMWAREHOUSEMANDATORY IS NULL OR IIS.ISITEMWAREHOUSEMANDATORY != 1) AND IIS.ISITEMSITEMANDATORY = 1 AND IAV.INVENTSITEID = IIS.ITEMSITE)    -- or mandatory site,
        OR ((IIS.ISITEMWAREHOUSEMANDATORY IS NULL OR IIS.ISITEMWAREHOUSEMANDATORY != 1) AND (IIS.ISITEMSITEMANDATORY IS NULL OR IIS.ISITEMSITEMANDATORY != 1))  -- or not mandatory
GO
PRINT N'Creating [crt].[GETCATALOGCHANNELPRODUCTRELATION]...';


GO

-- Gets catalog channel product's hieararchy
CREATE FUNCTION [crt].[GETCATALOGCHANNELPRODUCTRELATION]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE
)
RETURNS TABLE
RETURN
    SELECT
        pcc.CHANNEL,
        cprv.CATALOG,
        cprv.PRODUCT,
        cprv.RELATEDPRODUCT,
        cprv.PRODUCTRELATIONTYPE
    FROM [crt].CATALOGPRODUCTRELATIONVIEW cprv
    INNER JOIN [crt].GETPUBCATALOGCURRENT(@bi_ChannelId, @dt_ChannelDate) pcc ON pcc.CATALOG = cprv.CATALOG
GO
PRINT N'Creating [crt].[GETPRODUCTCATEGORIES]...';


GO

-- Get product navigation categories. @bi_CatalogId = 0 means all applicable catalogs.
CREATE FUNCTION [crt].[GETPRODUCTCATEGORIES]
(
    @bi_ChannelId     BIGINT,
    @bi_CatalogId     BIGINT,
    @dt_ChannelDate   DATE,
    @b_IsForwardLooking BIT,
    @b_ProductIdsPassed BIT,
    @tvp_ProductIds [crt].RECORDIDTABLETYPE READONLY,
    @b_CategoryIdsPassed BIT,
    @tvp_CategoryIds [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN

    -- @bi_CatalogId = 0: Shared categories
    SELECT
        ncpc.PRODUCT,
        ncpc.CATEGORY,
        0 AS [CATALOG]
    FROM [crt].GETNONCATALOGPRODUCTCATEGORY(@bi_ChannelId, @b_ProductIdsPassed, @tvp_ProductIds) ncpc
    JOIN @tvp_CategoryIds cids ON @b_CategoryIdsPassed = 0 OR cids.RECID = ncpc.CATEGORY
    JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rprct.ORIGINID = @bi_ChannelId
    WHERE @bi_CatalogId = 0 AND rprct.CATEGORYHIERARCHY = ncpc.CATEGORYHIERARCHY

    UNION ALL

    -- @bi_CatalogId = 0: Catalog specific categories
    SELECT
        ccpc.PRODUCT,
        ccpc.CATEGORY,
        ccpc.[CATALOG]
    FROM [crt].GETCATALOGCHANNELPRODUCTCATEGORY(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking, @b_ProductIdsPassed, @tvp_ProductIds) ccpc
    JOIN @tvp_CategoryIds cids ON @b_CategoryIdsPassed = 0 OR cids.RECID = ccpc.CATEGORY
    WHERE @bi_CatalogId = 0 AND ccpc.INCLUDEEXCLUDETYPE = 1    -- Include

    UNION ALL

    -- @bi_CatalogId != 0: Inherited categories
    SELECT
        ncpc.PRODUCT,
        ncpc.CATEGORY,
        rpcp.[CATALOG]
    FROM [crt].GETNONCATALOGPRODUCTCATEGORY(@bi_ChannelId, @b_ProductIdsPassed, @tvp_ProductIds) ncpc
    JOIN @tvp_CategoryIds cids ON @b_CategoryIdsPassed = 0 OR cids.RECID = ncpc.CATEGORY
    JOIN [ax].RETAILPUBCATALOGPRODUCT rpcp ON rpcp.PRODUCT = ncpc.PRODUCT AND rpcp.[CATALOG] = @bi_CatalogId
    JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON rprct.ORIGINID = @bi_ChannelId
    WHERE rprct.CATEGORYHIERARCHY = ncpc.CATEGORYHIERARCHY AND rpcp.USEHIERARCHY = 1
        AND EXISTS(
            SELECT 1
            FROM [ax].[RETAILPUBCATALOG]
            WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
        )
        AND NOT EXISTS (
            SELECT *
            FROM [crt].GETCATALOGCHANNELPRODUCTCATEGORY(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking, @b_ProductIdsPassed, @tvp_ProductIds) ccpc
            WHERE ccpc.[CATALOG] = @bi_CatalogId
                AND ccpc.PRODUCT = rpcp.PRODUCT
                AND ccpc.CATEGORY = ncpc.CATEGORY
                AND ccpc.INCLUDEEXCLUDETYPE = 0    -- Exclude
        )

    UNION ALL

    -- @bi_CatalogId != 0: Catalog specific categories
    SELECT
        ccpc.PRODUCT,
        ccpc.CATEGORY,
        ccpc.[CATALOG]
    FROM [crt].GETCATALOGCHANNELPRODUCTCATEGORY(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking, @b_ProductIdsPassed, @tvp_ProductIds) ccpc
    JOIN @tvp_CategoryIds cids ON @b_CategoryIdsPassed = 0 OR cids.RECID = ccpc.CATEGORY
    WHERE ccpc.[CATALOG] = @bi_CatalogId AND ccpc.INCLUDEEXCLUDETYPE = 1    -- Include
GO
PRINT N'Creating [crt].[GETCUSTOMERSEARCHRESULTS]...';


GO
CREATE FUNCTION [crt].[GETCUSTOMERSEARCHRESULTS]
(
    @bi_ChannelId         BIGINT,
    @dt_ChannelDate       DATETIME,
    @nvc_SearchText       NVARCHAR(255)  -- length is 255 because [ax].LOGISTICSELECTRONICADDRESS.LOCATOR has a length of 255 and is the longest compared string.
)
RETURNS TABLE
RETURN
    SELECT
        ISNULL([ct].ACCOUNTNUM, '') AS ACCOUNTNUMBER,
        CASE
          WHEN dpn.RECID IS NULL THEN 2 -- Organization if RECID is null
          ELSE 1 -- Customer
        END AS CUSTOMERTYPE,
        [ceae].LOCATOR AS EMAIL,
        [cpa].ADDRESS AS FULLADDRESS,
        [dpt].NAME AS NAME,
        CAST(N'' AS XML).value ('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)') AS OFFLINEIMAGE,
        [dpt].PARTYNUMBER,
        [ceap].LOCATOR AS PHONE,
        [dpt].RECID AS RECORDID,
        [results].ISASYNCCUSTOMER AS ISASYNCCUSTOMER,
        [results].RANKING AS RANKING
    FROM [crt].CUSTOMERSEARCH(@bi_ChannelId, @dt_ChannelDate, @nvc_SearchText) results
    INNER JOIN [ax].DIRPARTYTABLE dpt ON [dpt].RECID = [results].PARTYID
    -- Global customers are not stored in [ax].CUSTTABLE. Hence, a LEFT OUTER JOIN is being performed here.
    LEFT OUTER JOIN [ax].CUSTTABLE ct ON [ct].PARTY = [dpt].RECID
    LEFT OUTER JOIN [ax].DIRPERSONNAME dpn ON dpn.PERSON = dpt.RECID AND (@dt_ChannelDate BETWEEN dpn.VALIDFROM AND dpn.VALIDTO)
    -- phone
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceap ON [dpt].RECID = [ceap].DIRPARTYRECORDID AND [ceap].METHODYTPE = 1 AND [ceap].ISPRIMARY = 1
    -- email
    LEFT OUTER JOIN [crt].CUSTOMERELECTRONICADDRESSESVIEW ceae ON [dpt].RECID = [ceae].DIRPARTYRECORDID AND [ceae].METHODYTPE = 2 AND [ceae].ISPRIMARY = 1
    -- address
    LEFT OUTER JOIN [crt].CUSTOMERPOSTALADDRESSESVIEW cpa ON [dpt].RECID = [cpa].DIRPARTYTABLERECID AND [cpa].ISPRIMARY = 1
    -- offline images
    LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer ON [ct].RECID = [rmamer].MASTERENTITYRECID AND [rmamer].ISDEFAULT = 1
    LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON [rmamer].MEDIARESOURCEID = [rmr].RESOURCEID

    UNION ALL
    
    SELECT 
        ISNULL([ct].CUSTACCOUNTASYNC, '') AS ACCOUNTNUMBER,
        [ct].RELATIONSHIPTYPE AS CUSTOMERTYPE,
        [ct].RECEIPTEMAIL AS EMAIL,
        [adr].STREET AS FULLADDRESS,
        [ct].CUSTNAME AS NAME,
        NULL AS OFFLINEIMAGE,
        CAST([ct].REPLICATIONCOUNTERFROMORIGIN AS nvarchar(40)) AS PARTYNUMBER,
        [ct].PHONE AS PHONE,
        [results].ISASYNCCUSTOMER AS ISASYNCCUSTOMER,
        [ct].REPLICATIONCOUNTERFROMORIGIN AS RECORDID,
        [results].RANKING AS RANKING
    FROM [crt].CUSTOMERSEARCHASYNC(@bi_ChannelId, @dt_ChannelDate, @nvc_SearchText) results
    INNER JOIN [ax].RETAILASYNCCUSTOMER ct ON [ct].REPLICATIONCOUNTERFROMORIGIN = [results].PARTYID
    LEFT OUTER JOIN [ax].RETAILASYNCADDRESS adr ON [ct].CUSTACCOUNTASYNC = [adr].CUSTACCOUNTASYNC
GO
PRINT N'Creating [crt].[GETDEFAULTPRODUCTATTRIBUTEVALUE]...';


GO
-- Gets default product attribute's values
CREATE FUNCTION [crt].[GETDEFAULTPRODUCTATTRIBUTEVALUE]
(
    @bi_ChannelId   BIGINT,
    @tvp_ProductIds [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN

     SELECT
        ppacmv.CHANNEL,
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        eraga.ATTRIBUTEGROUP,
        0 AS ATTRIBUTEGROUPTYPE,    -- Default
        erav.VALUE,
        erpiv.PRODUCT
     FROM @tvp_ProductIds as pid
     JOIN [ax].RETAILSHAREDPARAMETERS rsp ON rsp.[KEY] = 0  -- KEY = 0 to make sure it is unique
     JOIN [ax].ECORESATTRIBUTEGROUPATTRIBUTE eraga ON rsp.PRODUCTDEFAULTATTRIBUTEGROUP = eraga.ATTRIBUTEGROUP
     JOIN [ax].ECORESPRODUCTINSTANCEVALUE erpiv ON erpiv.PRODUCT = pid.RECID
     JOIN [ax].ECORESATTRIBUTEVALUE erav ON erav.INSTANCEVALUE = erpiv.RECID AND erav.ATTRIBUTE = eraga.ATTRIBUTE
     JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv ON ppacmv.ACTUALATTRIBUTE = eraga.ATTRIBUTE AND ppacmv.CHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPLODED]...';


GO

CREATE FUNCTION [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPLODED]
(
    @bi_ChannelId           BIGINT, -- The unique channel identifier.
    @tvp_ProductIds         [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN

    SELECT 
        rpioie.VALIDFROM AS ORGVALIDFROM,
        rpioie.VALIDTO AS ORGVALIDTO,
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        rppav.PRODUCT,
        ppacmv.CHANNEL,
        rppav.CATALOG,
        rpioie.DISTANCE,
        rppav.DATETIMEVALUE,
        rppav.DATETIMEVALUETZID,
        rppav.FLOATVALUE,
        rppav.INTVALUE, 
        rppav.LANGUAGEID,
        rppav.TEXTVALUE,
        rppav.UNITOFMEASURE
        FROM ax.RETAILPUBPRODUCTATTRIBUTEVALUE rppav
		JOIN @tvp_ProductIds as ids ON ids.RECID = rppav.PRODUCT
            JOIN ax.RETAILPUBINTORGINHERITANCEEXPLODED rpioie
                ON rpioie.ANCESTORINTERNALORG = rppav.INTERNALORGANIZATION
            JOIN ax.RETAILPUBRETAILCHANNELTABLE rprct
                ON rprct.INTERNALORGANIZATION = rpioie.INTERNALORGANIZATION
            JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv
                ON ppacmv.ACTUALATTRIBUTE = rppav.ATTRIBUTE
                    AND ppacmv.CHANNEL = rprct.ORIGINID AND ppacmv.CHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETITEMAVAILABILITIESBYITEMWAREHOUSES]...';


GO

-- Get item availabilities by item warehouses.
CREATE FUNCTION [crt].GETITEMAVAILABILITIESBYITEMWAREHOUSES
(
    @bi_ChannelId               BIGINT,
    @tvp_ItemWarehouses [crt].ITEMWAREHOUSETABLETYPE READONLY
)
RETURNS TABLE
RETURN
    SELECT
        IAV.[RECID]
        ,IAV.[ITEMID]
        ,IAV.[VARIANTINVENTDIMID]
        ,IAV.[WAREHOUSEINVENTDIMID]
        ,IAV.[INVENTSITEID]
        ,IAV.[INVENTLOCATIONID]
        ,IAV.[AVAILPHYSICAL]
        ,IAV.[UNITID]
    FROM @tvp_ItemWarehouses IW
    JOIN [ax].RETAILCHANNELTABLE CHANNEL ON CHANNEL.RECID = @bi_ChannelId
    INNER JOIN [crt].ITEMAVAILABILITYVIEW IAV ON IAV.ITEMID = IW.ITEMID AND IAV.VARIANTINVENTDIMID = IW.VARIANTINVENTDIMID AND IAV.INVENTLOCATIONID = IW.INVENTLOCATIONID AND IAV.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID
    LEFT JOIN [ax].INVENTITEMSALESSETUP IISS_SITE ON IISS_SITE.ITEMID = IW.ITEMID AND IISS_SITE.DATAAREAID = CHANNEL.INVENTLOCATIONDATAAREAID AND IISS_SITE.INVENTDIMID = [crt].GETALLBLANKINVENTDIMID()
    LEFT JOIN [ax].INVENTDIM ID_SITE ON ID_SITE.INVENTDIMID = IISS_SITE.INVENTDIMIDDEFAULT AND ID_SITE.DATAAREAID = IISS_SITE.DATAAREAID
    LEFT JOIN [ax].INVENTITEMSALESSETUP IISS_WAREHOUSE ON IISS_WAREHOUSE.ITEMID = IW.ITEMID AND IISS_WAREHOUSE.INVENTDIMID = IISS_SITE.INVENTDIMIDDEFAULT AND IISS_WAREHOUSE.DATAAREAID = IISS_SITE.DATAAREAID
    LEFT JOIN [ax].INVENTDIM ID_WAREHOUSE ON ID_WAREHOUSE.INVENTDIMID = IISS_WAREHOUSE.INVENTDIMIDDEFAULT AND ID_WAREHOUSE.DATAAREAID = IISS_WAREHOUSE.DATAAREAID
    WHERE (IISS_WAREHOUSE.MANDATORYINVENTLOCATION = 1 AND IAV.INVENTLOCATIONID = ID_WAREHOUSE.INVENTLOCATIONID)                                                                                 -- Mandatory warehouse,
        OR ((IISS_WAREHOUSE.MANDATORYINVENTLOCATION IS NULL OR IISS_WAREHOUSE.MANDATORYINVENTLOCATION != 1) AND IISS_SITE.MANDATORYINVENTSITE = 1 AND IAV.INVENTSITEID = ID_SITE.INVENTSITEID)  -- or mandatory site,
        OR ((IISS_WAREHOUSE.MANDATORYINVENTLOCATION IS NULL OR IISS_WAREHOUSE.MANDATORYINVENTLOCATION != 1) AND (IISS_SITE.MANDATORYINVENTSITE IS NULL OR IISS_SITE.MANDATORYINVENTSITE != 1))  -- or not mandatory
GO
PRINT N'Creating [crt].[GETPRODUCTRELATIONSHIPS]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTRELATIONSHIPS]
(
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATETIME,
    @nvc_Locale              NVARCHAR(7),
    @bi_ProductId            BIGINT
)
RETURNS TABLE
RETURN
    SELECT
        [par_relatedproducts].PRODUCTID AS RECID,
        [erprt_type].RECID AS RELATIONTYPEID,
        [erprt_type].NAME AS RELATIONNAME,
        0 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        COALESCE([erpt].NAME, [erp].SEARCHNAME, [it].ITEMID) AS NAME,
        [itm].PRICE,
        COALESCE([tvt].TRANSLATION, [ertv].TEXTVALUE) AS PRIMARYIMAGE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [ax].ECORESPRODUCTRELATIONTABLE erprt_relation ON [erprt_relation].PRODUCT1 = [par].PRODUCTID
    INNER JOIN [ax].ECORESPRODUCTRELATIONTYPE erprt_type ON [erprt_type].RECID = [erprt_relation].PRODUCTRELATIONTYPE
    INNER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par_relatedproducts WITH (NOEXPAND) ON [par_relatedproducts].CHANNELID = [par].CHANNELID AND [par_relatedproducts].PRODUCTID = [erprt_relation].PRODUCT2 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [erprt_relation].PRODUCT2 AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [erprt_relation].PRODUCT2
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [erprt_relation].PRODUCT2 AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    LEFT OUTER JOIN [crt].DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW gpavv ON [gpavv].CHANNEL = @bi_ChannelId
    LEFT OUTER JOIN [ax].ECORESTEXTVALUE ertv ON [ertv].RECID = [gpavv].VALUE
    LEFT OUTER JOIN [crt].GETTEXTVALUETRANSLATION(@bi_ChannelId) tvt ON [tvt].VALUE = [ertv].RECID AND [tvt].LANGUAGE = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].PRODUCTID = @bi_ProductId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO

    UNION ALL
    
    -- Get temporarily assorted remote products' relationships
    SELECT
        [par_relatedproducts].PRODUCTID AS RECID,
        [erprt_type].RECID AS RELATIONTYPEID,
        [erprt_type].NAME AS RELATIONNAME,
        1 AS ISREMOTE,
        [it].ITEMID AS ITEMID,
        COALESCE([erpt].NAME, [erp].SEARCHNAME, [it].ITEMID) AS NAME,
        [itm].PRICE,
        COALESCE([tvt].TRANSLATION, [ertv].TEXTVALUE) AS PRIMARYIMAGE
    FROM [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par
    INNER JOIN [ax].ECORESPRODUCTRELATIONTABLE erprt_relation ON [erprt_relation].PRODUCT1 = [par].PRODUCTID
    INNER JOIN [ax].ECORESPRODUCTRELATIONTYPE erprt_type ON [erprt_type].RECID = [erprt_relation].PRODUCTRELATIONTYPE
    INNER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par_relatedproducts ON [par_relatedproducts].CHANNELID = [par].CHANNELID AND [par_relatedproducts].PRODUCTID = [erprt_relation].PRODUCT2 AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [erprt_relation].PRODUCT2 AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [erprt_relation].PRODUCT2
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON [erpt].PRODUCT = [erprt_relation].PRODUCT2 AND [erpt].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    LEFT OUTER JOIN [crt].DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW gpavv ON [gpavv].CHANNEL = @bi_ChannelId
    LEFT OUTER JOIN [ax].ECORESTEXTVALUE ertv ON [ertv].RECID = [gpavv].VALUE
    LEFT OUTER JOIN [crt].GETTEXTVALUETRANSLATION(@bi_ChannelId) tvt ON [tvt].VALUE = [ertv].RECID AND [tvt].LANGUAGE = @nvc_Locale
    WHERE [par].CHANNELID = @bi_ChannelId AND [par].PRODUCTID = @bi_ProductId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
GO
PRINT N'Creating [crt].[GLOBALPRODUCTATTRIBUTEVALUEVIEW]...';


GO

CREATE VIEW [crt].[GLOBALPRODUCTATTRIBUTEVALUEVIEW] AS
(
    SELECT
        CHANNEL,
        ATTRIBUTE,
        ISREFERENCE,
        VALUE,
        1 AS SOURCE    -- AttributeDefaultValue
        FROM crt.ATTRIBUTEDEFAULTVALUEVIEW

    UNION ALL

    SELECT
        CHANNEL,
        ATTRIBUTE,
        ISREFERENCE,
        VALUE,
        2 AS SOURCE    -- DefaultProductAttributeGroupDefaultValue
        FROM crt.DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW

    UNION ALL

    SELECT
        CHANNEL,
        ATTRIBUTE,
        ISREFERENCE,
        VALUE,
        3 AS SOURCE    -- ChannelProductAttributeGroupDefaultValue
        FROM crt.CHANNELPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW
)
GO
PRINT N'Creating [crt].[PRODUCTATTRIBUTESVIEW]...';


GO

--This is the view used to materialize a product attributes lookup table for SQLite offline implementation
--This is required due to performance reasons when looking up attributes on mobile devices
--Please avoid referencing this view on SQLServer since not all product attribute features are available due to performance impact for SQLite
CREATE VIEW crt.PRODUCTATTRIBUTESVIEW AS
WITH TEXTVALUETRANSLATION AS
(
    SELECT
        ertvt.TEXTVALUETABLE        AS VALUE,
        ertvt.[LANGUAGE]            AS LANGUAGE,
        ertvt.TEXTVALUE             AS TRANSLATION
    FROM ax.ECORESTEXTVALUETRANSLATION ertvt
),

ATTRIBUTEEXPANDEDVALUE AS
(
    SELECT
        erv.RECID,
        erbv.BOOLEANVALUE,
        ercv.CURRENCYVALUE,
        ercv.CURRENCYCODE,
        erdtv.DATETIMEVALUE,
        erdtv.DATETIMEVALUETZID,
        erfv.FLOATVALUE,
        uom_float.SYMBOL AS FLOATUNITSYMBOL,
        eriv.INTVALUE,
        uom_int.SYMBOL AS INTUNITSYMBOL,
        ertv.TEXTVALUE,
        tvt.LANGUAGE,
        tvt.TRANSLATION
    FROM [ax].ECORESVALUE erv
    LEFT JOIN [ax].ECORESBOOLEANVALUE erbv ON erbv.RECID = erv.RECID
    LEFT JOIN [ax].ECORESCURRENCYVALUE ercv ON ercv.RECID = erv.RECID
    LEFT JOIN [ax].ECORESDATETIMEVALUE erdtv ON erdtv.RECID = erv.RECID
    LEFT JOIN [ax].ECORESFLOATVALUE erfv ON erfv.RECID = erv.RECID
    LEFT JOIN [ax].UNITOFMEASURE uom_float ON uom_float.RECID = erfv.FLOATUNITOFMEASURE
    LEFT JOIN [ax].ECORESINTVALUE eriv ON eriv.RECID = erv.RECID
    LEFT JOIN [ax].UNITOFMEASURE uom_int ON uom_int.RECID = eriv.INTUNITOFMEASURE
    LEFT JOIN [ax].ECORESTEXTVALUE ertv ON ertv.RECID = erv.RECID
    LEFT JOIN TEXTVALUETRANSLATION tvt ON tvt.VALUE = ertv.RECID
),

NONPRODUCTSPECIFICATTRIBUTES AS
(
    SELECT
        gpavv.CHANNEL,
        gpavv.ATTRIBUTE,
        gpavv.VALUE,
        gpavv.ISREFERENCE,
        0 AS PRODUCT,
        0 AS CATEGORY,
        0 AS CATALOG,
        0 AS DISTANCE,
        gpavv.SOURCE,
        ve.BOOLEANVALUE,
        ve.CURRENCYVALUE,
        ve.CURRENCYCODE,
        ve.DATETIMEVALUE,
        ve.DATETIMEVALUETZID,
        ve.FLOATVALUE,
        ve.FLOATUNITSYMBOL,
        ve.INTVALUE,
        ve.INTUNITSYMBOL,
        ve.TEXTVALUE,
        ve.LANGUAGE,
        ve.TRANSLATION
    FROM [crt].GLOBALPRODUCTATTRIBUTEVALUEVIEW gpavv
    INNER JOIN ATTRIBUTEEXPANDEDVALUE ve ON ve.RECID = gpavv.VALUE
),

STANDARDPRODUCTATTRIBUTEVALUE AS
(
    SELECT
        EP.RECID AS PRODUCT,
        RSA.ATTRIBUTE,
        EP.DISPLAYPRODUCTNUMBER AS TEXTVALUE,
        '' AS LANGUAGEID,
        '' AS TRANSLATION
    FROM [ax].ECORESPRODUCT EP
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 1  -- ProductNumber

    UNION ALL

    SELECT
        EPT.PRODUCT,
        RSA.ATTRIBUTE,
        '' AS TEXTVALUE,
        EPT.LANGUAGEID,
        EPT.NAME AS TRANSLATION
    FROM [ax].ECORESPRODUCTTRANSLATION EPT
    INNER JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 2  -- ProductName

    UNION ALL

    SELECT
        EP.RECID AS PRODUCT,
        RSA.ATTRIBUTE,
        EP.SEARCHNAME AS TEXTVALUE,
        '' AS LANGUAGEID,
        '' AS TRANSLATION
    FROM [ax].ECORESPRODUCT EP
    INNER JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 3  -- SearchName

    UNION ALL

    SELECT
        EPT.PRODUCT,
        RSA.ATTRIBUTE,
        '' AS TEXTVALUE,
        EPT.LANGUAGEID,
        EPT.DESCRIPTION AS TRANSLATION
    FROM [ax].ECORESPRODUCTTRANSLATION EPT
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 4  -- Description

    UNION ALL

    -- variant dimension translation attributes

    SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        rsa.ATTRIBUTE,
        EC.NAME AS TEXTVALUE,
        COALESCE(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        COALESCE(PMDVT.NAME, '') AS TRANSLATION
    FROM ax.ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV
    INNER JOIN ax.ECORESPRODUCTVARIANTCOLOR EPVC ON EPVDV.RECID = EPVC.RECID
    INNER JOIN ax.ECORESCOLOR EC ON EC.RECID = EPVC.COLOR
    INNER JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    INNER JOIN ax.ECORESPRODUCTMASTERCOLOR EPMC ON (EPMC.COLORPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMC.COLOR = EC.RECID)
    LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMVALUETRANSLATION PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMC.RECID
    INNER JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 5  -- Color

    UNION ALL

    SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        rsa.ATTRIBUTE,
        EC.NAME AS TEXTVALUE,
        COALESCE(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        COALESCE(PMDVT.NAME, '') AS TRANSLATION
    FROM ax.ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV
    INNER JOIN ax.ECORESPRODUCTVARIANTSTYLE EPVS ON EPVDV.RECID = EPVS.RECID
    INNER JOIN ax.ECORESSTYLE EC ON EC.RECID = EPVS.STYLE
    INNER JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    INNER JOIN ax.ECORESPRODUCTMASTERSTYLE EPMS ON (EPMS.STYLEPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMS.STYLE = EC.RECID)
    LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMVALUETRANSLATION PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMS.RECID
    INNER JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 6  -- Style

    UNION ALL

    SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        RSA.ATTRIBUTE,
        EC.NAME AS TEXTVALUE,
        COALESCE(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        COALESCE(PMDVT.NAME, '') AS TRANSLATION
    FROM ax.ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV
    INNER JOIN ax.ECORESPRODUCTVARIANTSIZE EPVS ON EPVDV.RECID = EPVS.RECID
    INNER JOIN ax.ECORESSIZE EC ON EC.RECID = EPVS.SIZE
    INNER JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    INNER JOIN ax.ECORESPRODUCTMASTERSIZE EPMS ON (EPMS.SIZEPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMS.SIZE = EC.RECID)
    LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMVALUETRANSLATION PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMS.RECID
    INNER JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 7  -- Size

    UNION ALL

    SELECT
        EPVDV.DISTINCTPRODUCTVARIANT AS PRODUCT,
        rsa.ATTRIBUTE,
        EC.NAME AS TEXTVALUE,
        COALESCE(PMDVT.LANGUAGEID, '') AS LANGUAGEID,
        COALESCE(PMDVT.NAME, '') AS TRANSLATION
    FROM ax.ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV
    INNER JOIN ax.ECORESPRODUCTVARIANTCONFIGURATION EPVC ON EPVDV.RECID = EPVC.RECID
    INNER JOIN ax.ECORESCONFIGURATION EC ON EC.RECID = EPVC.CONFIGURATION
    INNER JOIN ax.ECORESDISTINCTPRODUCTVARIANT EDPV ON EDPV.RECID = EPVDV.DISTINCTPRODUCTVARIANT
    INNER JOIN ax.ECORESPRODUCTMASTERCONFIGURATION EPMC ON (EPMC.CONFIGPRODUCTMASTER = EDPV.PRODUCTMASTER AND EPMC.CONFIGURATION = EC.RECID)
    LEFT OUTER JOIN ax.ECORESPRODUCTMASTERDIMVALUETRANSLATION PMDVT ON PMDVT.PRODUCTMASTERDIMENSIONVALUE = EPMC.RECID
    INNER JOIN ax.RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 8  -- Configuration
),

LIVEPRODUCTATTRIBUTEVALUEEXPANDED AS
(
    SELECT
        ppacmv.CHANNEL,
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        0 AS ATTRIBUTEGROUP,
        0 AS ATTRIBUTEGROUPTYPE,
        0 AS VALUE,
        spav.PRODUCT,
        0 AS CATEGORY,
        0 AS CATALOG,
        5 AS SOURCE,    -- StandardProductAttributeValue
        0 AS BOOLEANVALUE,
        0 AS CURRENCYVALUE,
        '' AS CURRENCYCODE,
        0 AS DATETIMEVALUE,
        0 AS DATETIMEVALUETZID,
        0 AS FLOATVALUE,
        '' AS FLOATUNITSYMBOL,
        0 AS INTVALUE,
        '' AS INTUNITSYMBOL,
        spav.TEXTVALUE,
        spav.LANGUAGEID AS LANGUAGE,
        spav.TRANSLATION
    FROM STANDARDPRODUCTATTRIBUTEVALUE spav
    INNER JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv ON ppacmv.ACTUALATTRIBUTE = spav.ATTRIBUTE
),

LIVEPRODUCTATTRIBUTEVALUE AS
(
    SELECT
        lpave.CHANNEL,
        lpave.ATTRIBUTE,
        lpave.VALUE,
        lpave.ISREFERENCE,
        lpave.PRODUCT,
        lpave.CATEGORY,
        lpave.CATALOG,
        0 AS DISTANCE,
        lpave.SOURCE,
        lpave.BOOLEANVALUE,
        lpave.CURRENCYVALUE,
        lpave.CURRENCYCODE,
        lpave.DATETIMEVALUE,
        lpave.DATETIMEVALUETZID,
        lpave.FLOATVALUE,
        lpave.FLOATUNITSYMBOL,
        lpave.INTVALUE,
        lpave.INTUNITSYMBOL,
        lpave.TEXTVALUE,
        lpave.LANGUAGE,
        lpave.TRANSLATION
    FROM LIVEPRODUCTATTRIBUTEVALUEEXPANDED lpave
),

PRODUCTATTRIBUTEVALUES AS
(
    SELECT
        CHANNEL,
        ATTRIBUTE,
        VALUE,
        ISREFERENCE,
        0 AS PRODUCT,
        0 AS CATEGORY,
        0 AS CATALOG,
        0 AS DISTANCE,
        SOURCE,
        BOOLEANVALUE,
        CURRENCYVALUE,
        CURRENCYCODE,
        DATETIMEVALUE,
        DATETIMEVALUETZID,
        FLOATVALUE,
        FLOATUNITSYMBOL,
        INTVALUE,
        INTUNITSYMBOL,
        TEXTVALUE,
        LANGUAGE,
        TRANSLATION
    FROM NONPRODUCTSPECIFICATTRIBUTES

    UNION ALL

    SELECT
        CHANNEL,
        ATTRIBUTE,
        VALUE,
        ISREFERENCE,
        PRODUCT,
        CATEGORY,
        CATALOG,
        0 AS DISTANCE,
        SOURCE,
        BOOLEANVALUE,
        CURRENCYVALUE,
        CURRENCYCODE,
        DATETIMEVALUE,
        DATETIMEVALUETZID,
        FLOATVALUE,
        FLOATUNITSYMBOL,
        INTVALUE,
        INTUNITSYMBOL,
        TEXTVALUE,
        LANGUAGE,
        TRANSLATION
    FROM LIVEPRODUCTATTRIBUTEVALUE
)

SELECT
    PAV.CHANNEL             AS CHANNEL,
    PAV.ATTRIBUTE           AS ATTRIBUTE,
    PAV.VALUE               AS VALUE,
    PAV.ISREFERENCE         AS ISREFERENCE,
    PAV.PRODUCT             AS PRODUCT,
    PAV.CATEGORY            AS CATEGORY,
    PAV.CATALOG             AS CATALOG,
    PAV.DISTANCE            AS DISTANCE,
    PAV.SOURCE              AS SOURCE,
    PAV.BOOLEANVALUE        AS BOOLEANVALUE,
    PAV.CURRENCYVALUE       AS CURRENCYVALUE,
    PAV.CURRENCYCODE        AS CURRENCYCODE,
    PAV.DATETIMEVALUE       AS DATETIMEVALUE,
    PAV.DATETIMEVALUETZID   AS DATETIMEVALUETZID,
    PAV.FLOATVALUE          AS FLOATVALUE,
    PAV.FLOATUNITSYMBOL     AS FLOATUNITSYMBOL,
    PAV.INTVALUE            AS INTVALUE,
    PAV.INTUNITSYMBOL       AS INTUNITSYMBOL,
    PAV.TEXTVALUE           AS TEXTVALUE,
    PAV.LANGUAGE            AS LANGUAGE,
    PAV.TRANSLATION         AS TRANSLATION
FROM PRODUCTATTRIBUTEVALUES PAV
GO
PRINT N'Creating [crt].[RETAILOFFLINEPRODUCTSBYCHANNELVIEW]...';


GO

CREATE VIEW [crt].[RETAILOFFLINEPRODUCTSBYCHANNELVIEW] AS 
-- CTE Section
 WITH RETAILOFFLINEPROFILESETTINGSBYCHANNEL AS (
  SELECT 
    rst.RECID AS CHANNEL, 
    rop.RECID as OFFLINEPROFILE,
    rop.LIMITASSORTEDPRODUCTS, 
    rop.PRODUCTSBYSALESAMOUNT,
    rop.PRODUCTSALESAMOUNTLIMIT, 
    rop.PRODUCTSALESAMOUNTLIMITDAYS, 
    rop.PRODUCTSBYSALESQUANTITY,
    rop.PRODUCTSALESQUANTITYLIMIT, 
    rop.PRODUCTSALESQUANTITYLIMITDAYS, 
    rop.PRODUCTSBYRECENTARRIVAL,
    rop.PRODUCTSARRIVALLIMIT, 
    rop.PRODUCTSARRIVALLIMITDAYS, 
    rop.PRODUCTSBYSPECIFICCATEGORY
 FROM ax.RETAILSTORETABLE rst
 JOIN ax.RETAILOFFLINEPROFILE rop ON rop.RECID = rst.OFFLINEPROFILE
),
ASSORTEDPRODUCTS AS (
    SELECT
        rct.RECID AS 'CHANNELID',
        PRODUCTID,
        VARIANTID,
        VALIDFROM,
        VALIDTO, 
        MAX(CREATEDDATETIME) AS 'CREATEDDATETIME'
    FROM [ax].RETAILASSORTMENTLOOKUP ral
    INNER JOIN [ax].RETAILASSORTMENTLOOKUPCHANNELGROUP ralcg on ralcg.ASSORTMENTID = ral.ASSORTMENTID
    INNER JOIN [ax].RETAILCHANNELTABLE rct on rct.OMOPERATINGUNITID = ralcg.OMOPERATINGUNITID -- Resolve OM to Channel
    INNER JOIN [ax].INVENTTABLE it on it.PRODUCT = ral.PRODUCTID and it.DATAAREAID = rct.INVENTLOCATIONDATAAREAID -- Include only Released items
    GROUP BY rct.RECID, ral.PRODUCTID, ral.VARIANTID, ral.VALIDFROM, ral.VALIDTO, ral.LINETYPE
    HAVING MIN(LINETYPE) = 1 -- Remove excluded products
    
    UNION

    SELECT
        tap.CHANNELID,
        tap.PRODUCTID,
        0 AS 'VARIANTID',
        tap.VALIDFROM,
        tap.VALIDTO,
        GETUTCDATE() AS 'CREATEDDATETIME'
    FROM [crt].TMPASSORTEDPRODUCTS tap),
TOPPRODUCTSBYSALESAMOUNT AS (
SELECT 
        ROW_NUMBER() OVER (PARTITION BY CHANNEL ORDER BY SALESAMOUNT DESC) AS ROWNUM, -- number of product by sales amount per channel
        PRODUCT,
        CHANNEL
        FROM (SELECT 
                    rtv.CHANNEL, 
                    rtv.PRODUCT, 
                    CAST(-1 * SUM(rtv.NETAMOUNT) + -1 * SUM(rtv.TAXAMOUNT) AS DECIMAL(18,2)) AS SALESAMOUNT
                    FROM crt.RETAILTRANSACTIONSVIEW rtv
                         JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops 
                            ON rops.CHANNEL = rtv.CHANNEL 
                         -- SELECT only if PRODUCTSBYSALESAMOUNT checkbox checked.
                         WHERE rops.PRODUCTSBYSALESAMOUNT = 1
                         AND rops.LIMITASSORTEDPRODUCTS = 1
                         -- Do not include returns
                         AND rtv.QTY < 0
                         -- Get only products sold in last PRODUCTSALESAMOUNTLIMITDAYS days
                         AND CONVERT(date, DATEADD(day, -rops.PRODUCTSALESAMOUNTLIMITDAYS, GETDATE())) <= rtv.TRANSDATE
                         GROUP BY rtv.PRODUCT, rtv.CHANNEL
              ) rtv
),

TOPPRODUCTSBYQUANTITY AS (
SELECT 
        ROW_NUMBER() OVER (PARTITION BY Channel ORDER BY QUANTITY DESC) AS ROWNUM, -- number of product by quantity per channel
        PRODUCT,
        CHANNEL
        FROM (
            SELECT 
                rtv.CHANNEL,
                rtv.PRODUCT, 
                SUM(-1 * CONVERT(INT, rtv.QTY)) AS QUANTITY
            FROM crt.RETAILTRANSACTIONSVIEW rtv
            JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops 
            ON rops.CHANNEL = rtv.CHANNEL 
        WHERE rops.PRODUCTSBYSALESQUANTITY = 1
              AND rops.LIMITASSORTEDPRODUCTS = 1
              -- Do not include returns
              AND rtv.QTY < 0
              -- Get only products sold in last PRODUCTSALESAMOUNTLIMITDAYS days
              AND CONVERT(date, DATEADD(day, -rops.PRODUCTSALESQUANTITYLIMITDAYS, GETDATE())) <= rtv.TRANSDATE
        GROUP BY rtv.PRODUCT, rtv.CHANNEL) rtv
),
TopProductsByRecentArrivals AS (
SELECT
        ROW_NUMBER() OVER (PARTITION BY Channel ORDER BY CREATEDDATETIME DESC) AS ROWNUM, -- number of product by quantity per channel
        PRODUCT,
        CHANNEL
        FROM (
            SELECT
                apv.CHANNELID AS 'CHANNEL',
                apv.PRODUCTID AS 'PRODUCT',
                apv.CREATEDDATETIME
            FROM ASSORTEDPRODUCTS apv
            JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops
            ON rops.CHANNEL = apv.CHANNELID
        WHERE rops.PRODUCTSBYRECENTARRIVAL = 1
              AND rops.LIMITASSORTEDPRODUCTS = 1
                -- Get only products sold in last PRODUCTSARRIVALLIMITDAYS days
              AND CONVERT(date, DATEADD(day, -rops.PRODUCTSARRIVALLIMITDAYS, GETDATE())) <= apv.CREATEDDATETIME
        GROUP BY apv.PRODUCTID, apv.CHANNELID, apv.CREATEDDATETIME) apv
)

SELECT CHANNEL, PRODUCT FROM (
-- SELECT Top products by sales amount per channel using Offline profile settings.
SELECT rops.CHANNEL, tpbsa.PRODUCT FROM RetailOfflineProfileSettingsByChannel rops
INNER JOIN TOPPRODUCTSBYSALESAMOUNT tpbsa
    ON tpbsa.CHANNEL = rops.CHANNEL 
WHERE tpbsa.ROWNUM <= rops.PRODUCTSALESAMOUNTLIMIT -- Get only TOP PRODUCTSALESAMOUNTLIMIT products

UNION 

-- SELECT Top products by quantity per channel using Offline profile settings.
SELECT rops.CHANNEL, tpbc.PRODUCT FROM RetailOfflineProfileSettingsByChannel rops
INNER JOIN TOPPRODUCTSBYQUANTITY tpbc -- TopProductsByQuantity
    ON tpbc.CHANNEL = rops.CHANNEL 
WHERE  tpbc.ROWNUM <= rops.PRODUCTSALESQUANTITYLIMIT -- Get only TOP PRODUCTSALESAMOUNTLIMIT products

UNION

-- Select products for specified categories
SELECT rops.CHANNEL, it.PRODUCT FROM [crt].[CATEGORYITEMSVIEW] civ 
JOIN ax.INVENTTABLE it ON civ.ITEMID = it.ITEMID
JOIN ax.RETAILOFFLINEPRODUCTSCATEGORY ropc ON ropc.ECORESCATEGORY = civ.CATEGORYID
JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops ON rops.OFFLINEPROFILE = ropc.OFFLINEPROFILE
WHERE rops.LIMITASSORTEDPRODUCTS = 1
      -- Select all products from appropriate categories only when OfflineProfile.PRODUCTSBYSPECIFICCATEGORY = 1
      AND rops.PRODUCTSBYSPECIFICCATEGORY = 1 
) OFFLINEPRODUCTS 
JOIN [crt].[ASSORTEDPRODUCTSVIEW] ASSORTEDPRODUCTS 
ON OfflineProducts.CHANNEL = AssortedProducts.CHANNELID AND 
   OfflineProducts.PRODUCT = AssortedProducts.PRODUCTID

UNION

SELECT tpbra.CHANNEL, tpbra.PRODUCT FROM TOPPRODUCTSBYRECENTARRIVALS tpbra
INNER JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops 
  ON tpbra.CHANNEL = rops.CHANNEL
WHERE tpbra.ROWNUM <= rops.PRODUCTSARRIVALLIMIT -- Get only TOP PRODUCTSARRIVALLIMIT products

UNION

--SELECT ALL ASSORTED PRODUCTS if rops.LIMITASSORTEDPRODUCTS = 0
SELECT 
    AssortedProducts.CHANNELID AS 'CHANNEL', 
    AssortedProducts.PRODUCTID AS 'PRODUCT'
FROM [crt].[ASSORTEDPRODUCTSVIEW] AssortedProducts
JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL  rops
    ON AssortedProducts.CHANNELID = rops.CHANNEL
WHERE rops.LIMITASSORTEDPRODUCTS = 0
GO
PRINT N'Creating [crt].[RETAILOFFLINECUSTOMERSBYCHANNELVIEW]...';


GO
-- This view is used by CDX Client to filter customers by offline profile settings for offline sqlite database creation.

CREATE VIEW [crt].[RETAILOFFLINECUSTOMERSBYCHANNELVIEW] AS 
-- CTE Section
 WITH RETAILOFFLINEPROFILESETTINGSBYCHANNEL AS (
  SELECT 
    rst.RECID AS CHANNEL, 
    rop.RECID as OFFLINEPROFILE,
    rop.CUSTOMERBYADDRESS, 
    rop.CUSTOMERBYSALESAMOUNT,
    rop.CUSTOMERBYSALESAMOUNTDAYLIMIT,
    rop.CUSTOMERBYSALESAMOUNTNUMLIMIT,
    rop.CUSTOMERBYVISITS,
    rop.CUSTOMERBYVISITSDAYLIMIT,
    rop.CUSTOMERBYVISITSNUMLIMIT,
    rop.LIMITAVAILABLECUSTOMERS
 FROM ax.RETAILSTORETABLE rst
 JOIN ax.RETAILOFFLINEPROFILE rop ON rop.RECID = rst.OFFLINEPROFILE
),
TOPCUSTOMERSBYSALESAMOUNT AS (
SELECT 
        ROW_NUMBER() OVER (PARTITION BY Channel ORDER BY SALESAMOUNT DESC) AS ROWNUMBER, -- number of product by sales amount per channel
        CUSTACCOUNT,
        CHANNEL, 
        SALESAMOUNT
        FROM (SELECT 
            rtv.CHANNEL, 
            rtv.CUSTACCOUNT, 
            CAST(-1 * SUM(rtv.NETAMOUNT) + -1 * SUM(rtv.TAXAMOUNT) AS DECIMAL(18,2)) AS SALESAMOUNT
            FROM [crt].[RETAILTRANSACTIONSVIEW] rtv
                 JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops 
                    ON rops.CHANNEL = rtv.CHANNEL 
                 -- SELECT only if OfflineProfile.CUSTOMERBYSALESAMOUNT checkbox checked.
                 WHERE rops.CUSTOMERBYSALESAMOUNT = 1 
                        -- Get only products sold in last OfflineProfile.CUSTOMERBYSALESAMOUNTDAYLIMIT days
                        AND CONVERT(date, DATEADD(day, -rops.CUSTOMERBYSALESAMOUNTDAYLIMIT, GETDATE())) <= rtv.TRANSDATE
                        -- Count transactions with customer only. 
                        AND rtv.CUSTACCOUNT <>''
                        -- Do not include returns
                        AND rtv.QTY < 0
                 GROUP BY rtv.CUSTACCOUNT, rtv.CHANNEL) rtv
),
TOPCUSTOMERSBYVISITS AS (
SELECT 
        ROW_NUMBER() OVER (PARTITION BY CHANNEL ORDER BY VISITS DESC) AS ROWNUMBER, -- number of product by sales amount per channel
        CUSTACCOUNT,
        CHANNEL, 
        VISITS
        FROM (SELECT 
            rtv.CHANNEL, 
            rtv.CUSTACCOUNT, 
            COUNT(TRANSACTIONID) AS VISITS
            FROM crt.RETAILTRANSACTIONSVIEW rtv
                 JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops 
                    ON rops.CHANNEL = rtv.CHANNEL 
                 -- SELECT transactions only if OfflineProfile.CUSTOMERBYVISITS checkbox checked.
                 WHERE rops.CUSTOMERBYVISITS = 1 
                 -- Get only products sold in last OfflineProfile.PRODUCTSALESAMOUNTLIMITDAYS days
                    AND CONVERT(date, DATEADD(day, -rops.CUSTOMERBYVISITSDAYLIMIT, GETDATE())) <= rtv.TRANSDATE
                    -- Count transactions with customer only. 
                    AND rtv.CUSTACCOUNT <> ''
            GROUP BY rtv.CUSTACCOUNT, rtv.CHANNEL) rtv
),
STOREPARTYRECID AS (
SELECT rops.CHANNEL, 
       dpt.RECID AS PARTY, 
       ct.ACCOUNTNUM AS CUSTACCOUNT, 
       cpav.CITY,
       cpav.COUNTRYREGIONID,
       cpav.COUNTY,
       cpav.COUNTYNAME,
       cpav.DIRPARTYLOCATIONRECID,
       cpav.DIRPARTYTABLERECID,
       cpav.DISTRICTNAME,
       cpav.POSTBOX,
       cpav.STATE,
       cpav.STATENAME,
       cpav.STREET,
       cpav.ZIPCODE
FROM [ax].DIRPARTYTABLE dpt 
INNER JOIN [ax].DIRADDRESSBOOKPARTY dabp 
    ON dabp.PARTY = dpt.RECID 
INNER JOIN [ax].RETAILSTOREADDRESSBOOK rsab 
    ON rsab.ADDRESSBOOK = dabp.ADDRESSBOOK AND rsab.ADDRESSBOOKTYPE = 0 -- Customers
INNER JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops 
    ON rops.CHANNEL = rsab.STORERECID
INNER JOIN crt.CUSTOMERPOSTALADDRESSESVIEW cpav 
    ON cpav.DIRPARTYTABLERECID = dpt.RECID
LEFT OUTER JOIN ax.CUSTTABLE ct 
    ON ct.PARTY = dabp.PARTY
)

-- FIlter customers by top sales amount
SELECT  rops.CHANNEL, ct.PARTY, tcbsa.CUSTACCOUNT FROM RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops
INNER JOIN TOPCUSTOMERSBYSALESAMOUNT tcbsa
    ON tcbsa.CHANNEL = rops.CHANNEL 
    -- Get only TOP PRODUCTSALESAMOUNTLIMIT products
    AND rops.CUSTOMERBYSALESAMOUNTNUMLIMIT >= tcbsa.ROWNUMBER
INNER JOIN ax.CUSTTABLE ct on tcbsa.CUSTACCOUNT = ct.ACCOUNTNUM
WHERE rops.LIMITAVAILABLECUSTOMERS = 1

UNION 

-- Filter customers by number of visits
SELECT  rops.CHANNEL, ct.PARTY, tcbv.CUSTACCOUNT FROM RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops
INNER JOIN TOPCUSTOMERSBYVISITS tcbv
    ON tcbv.CHANNEL = rops.CHANNEL 
    -- Get only TOP CUSTOMERBYVISITSNUMLIMIT products
    AND rops.CUSTOMERBYVISITSNUMLIMIT >= tcbv.ROWNUMBER
INNER JOIN ax.CUSTTABLE ct on tcbv.CUSTACCOUNT = ct.ACCOUNTNUM
WHERE rops.LIMITAVAILABLECUSTOMERS = 1

UNION 

-- Filter customers by address parts
SELECT DISTINCT 
    sprc.CHANNEL, 
    sprc.PARTY, 
    sprc.CUSTACCOUNT 
FROM STOREPARTYRECID sprc
INNER JOIN ax.RETAILOFFLINECUSTOMERADDRESSFILTER rocaf 
ON (rocaf.ADDRESSPART = 1 AND sprc.ZIPCODE = rocaf.FILTERVALUE) OR -- Zip code
   (rocaf.ADDRESSPART = 2 AND sprc.CITY LIKE rocaf.FILTERVALUE) OR -- City
   (rocaf.ADDRESSPART = 3 AND (sprc.COUNTY LIKE rocaf.FILTERVALUE OR sprc.COUNTYNAME LIKE rocaf.FILTERVALUE)) OR -- County
   (rocaf.ADDRESSPART = 4 AND (sprc.STATE = rocaf.FILTERVALUE OR sprc.STATENAME LIKE rocaf.FILTERVALUE)) OR -- State
   (rocaf.ADDRESSPART = 5 AND (sprc.COUNTRYREGIONID LIKE rocaf.FILTERVALUE)) OR
   (rocaf.ADDRESSPART = 6 AND (sprc.STREET LIKE rocaf.FILTERVALUE)) OR -- Street
   (rocaf.ADDRESSPART = 7 AND (sprc.DISTRICTNAME LIKE rocaf.FILTERVALUE)) OR -- District
   (rocaf.ADDRESSPART = 9 AND (sprc.POSTBOX LIKE rocaf.FILTERVALUE)) -- Postbox
INNER JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops
ON rops.CHANNEL = sprc.CHANNEL AND 
   rops.LIMITAVAILABLECUSTOMERS = 1 AND 
   rops.CUSTOMERBYADDRESS = 1

-- Add all customers from addressbook if we are not filtering them.
UNION
SELECT sprc.CHANNEL, 
    sprc.PARTY, 
    sprc.CUSTACCOUNT FROM STOREPARTYRECID sprc 
JOIN RETAILOFFLINEPROFILESETTINGSBYCHANNEL rops
ON rops.CHANNEL = sprc.CHANNEL AND rops.LIMITAVAILABLECUSTOMERS = 0;
GO
PRINT N'Creating [crt].[PRODUCTCATEGORYRULESVIEW]...';


GO

-- [Deprecated] [Last used release = CTP-8]

CREATE VIEW [crt].[PRODUCTCATEGORYRULESVIEW] AS
(
	-- @bi_CatalogId = 0: Shared categories
    SELECT
        [ncpc].CHANNELID,
        0 AS CATALOGID,
        [ncpc].CATEGORYID AS CATEGORYID,
        [ncpc].PRODUCTID AS PRODUCTID,
        null AS VALIDFROM,
        null AS VALIDTO
    FROM [crt].NONCATALOGPRODUCTCATEGORYVIEW ncpc
    INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON [rprct].ORIGINID = [ncpc].CHANNELID
    WHERE [rprct].CATEGORYHIERARCHY = [ncpc].CATEGORYHIERARCHY

    UNION

    -- @bi_CatalogId != 0: Inherited categories
    SELECT
        [ncpc].CHANNELID,
        [rpcp].CATALOG AS CATALOGID,
        [ncpc].CATEGORYID,
        [ncpc].PRODUCTID,
        [rpc].VALIDFROM,
        [rpc].VALIDTO
    FROM [crt].NONCATALOGPRODUCTCATEGORYVIEW ncpc
    INNER JOIN [ax].RETAILPUBCATALOGPRODUCT rpcp ON [rpcp].PRODUCT = [ncpc].PRODUCTID
    INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON [rprct].ORIGINID = [ncpc].CHANNELID
    INNER JOIN [crt].CATALOGPRODUCTCATEGORYVIEW cpc ON [cpc].CATALOG = [rpcp].CATALOG AND [cpc].PRODUCT = [rpcp].PRODUCT AND [cpc].CATEGORY = [ncpc].CATEGORYID AND [cpc].INCLUDEEXCLUDETYPE = 1  -- Include
    INNER JOIN [ax].RETAILPUBCATALOG rpc ON [rpc].ORIGIN = [cpc].CATALOG
    WHERE [rprct].CATEGORYHIERARCHY = [ncpc].CATEGORYHIERARCHY AND [rpcp].USEHIERARCHY = 1
        AND EXISTS(
            SELECT 1
            FROM [ax].[RETAILPUBCATALOG]
            WHERE ORIGIN = [rpcp].CATALOG AND ENABLESNAPSHOT = 0
        )

    UNION

    -- @bi_CatalogId != 0: Catalog specific categories
    SELECT
        [ccpc].CHANNELID,
        [ccpc].CATALOGID,
        [ccpc].CATEGORYID,
        [ccpc].PRODUCTID,
        [ccpc].VALIDFROM,
        [ccpc].VALIDTO
    FROM [crt].CATALOGCHANNELPRODUCTCATEGORYVIEW ccpc
    WHERE [ccpc].INCLUDEEXCLUDETYPE = 1  -- Include
)
GO
PRINT N'Creating [crt].[GETPRODUCTRELATIONS]...';


GO

-- Get product relations. @bi_CatalogId = 0 means all applicable catalogs.
CREATE FUNCTION [crt].[GETPRODUCTRELATIONS]
(
    @bi_ChannelId       BIGINT,
    @bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATE,
    @tvp_ProductIds     [crt].RECORDIDTABLETYPE READONLY
)
RETURNS @productRelations TABLE
(
    [CATALOG] BIGINT,
    [PRODUCT] BIGINT,
    [RELATEDPRODUCT] BIGINT,
    [PRODUCTRELATIONTYPE] NVARCHAR(60),
    [EXCLUSION] BIT
)
AS
BEGIN

    -- Declare and fill a cursor with ids of all products related to the specified products,
    -- directly or indirectly.
    DECLARE @tvp_AllIds [crt].RECORDIDTABLETYPE
    INSERT @tvp_AllIds(RECID)
        SELECT DISTINCT allIds.RECID
        FROM (
            SELECT erprt.PRODUCT1 AS RECID
            FROM ax.ECORESPRODUCTRELATIONTABLE erprt
            INNER JOIN @tvp_ProductIds ids ON ids.RECID = erprt.PRODUCT1

            UNION

            SELECT erprt.PRODUCT1 AS RECID
            FROM ax.ECORESPRODUCTRELATIONTABLE erprt
            INNER JOIN @tvp_ProductIds ids ON ids.RECID = erprt.PRODUCT2
        ) AS allIds

    INSERT @productRelations(
        [CATALOG],
        [PRODUCT],
        [RELATEDPRODUCT],
        [PRODUCTRELATIONTYPE],
        [EXCLUSION])

    -- Non catalog product relations
    SELECT
        0 AS [CATALOG],
        erprt.PRODUCT1 AS PRODUCT,
        erprt.PRODUCT2 AS RELATEDPRODUCT,
        erprtype.NAME AS PRODUCTRELATIONTYPE,
        0 AS EXCLUSION
        FROM @tvp_AllIds tpi
        INNER JOIN ax.ECORESPRODUCTRELATIONTABLE erprt ON erprt.PRODUCT1 = tpi.RECID
    INNER JOIN ax.ECORESPRODUCTRELATIONTYPE erprtype ON erprt.PRODUCTRELATIONTYPE = erprtype.RECID
    WHERE @bi_CatalogId = 0 OR (EXISTS(
        SELECT 1
        FROM [ax].[RETAILPUBCATALOG]
        WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
    ) AND NOT EXISTS (
        SELECT 1
        FROM [crt].GETCATALOGCHANNELPRODUCTRELATIONEXCLUSION(@bi_ChannelId, @dt_ChannelDate) ccpre
        WHERE ccpre.[CATALOG] = @bi_CatalogId AND ccpre.PRODUCTRELATION = erprt.RECID
    ))

    UNION ALL

    -- Catalog product relations
    SELECT
        ccpr.CATALOG,
        ccpr.PRODUCT,
        ccpr.RELATEDPRODUCT,
        erprtype.NAME AS PRODUCTRELATIONTYPE,
        0 AS EXCLUSION
    FROM @tvp_AllIds tpi
    INNER JOIN [crt].GETCATALOGCHANNELPRODUCTRELATION(@bi_ChannelId, @dt_ChannelDate) ccpr ON ccpr.PRODUCT = tpi.RECID
    INNER JOIN ax.ECORESPRODUCTRELATIONTYPE erprtype ON erprtype.RECID = ccpr.PRODUCTRELATIONTYPE
    WHERE ccpr.CHANNEL = @bi_ChannelId
        AND (@bi_CatalogId = 0                  -- All catalogs
            OR ccpr.CATALOG = @bi_CatalogId)    -- Given catalog

    RETURN;

END
GO
PRINT N'Creating [crt].[SEARCHPRODUCTSBYCATEGORY]...';


GO

CREATE FUNCTION [crt].[SEARCHPRODUCTSBYCATEGORY]
(
    @tvp_QueryResultSettings                    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                               BIGINT,
    @bi_CatalogId                               BIGINT,
    @dt_ChannelDate                             DATE,
    @b_IncludeProductsFromDescendantCategories  BIT,
    @tvp_CategoryIds                            [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS @IDS TABLE
(
    RECID BIGINT
)
AS
BEGIN
    DECLARE @tvp_DummyId [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_ExpandedCategoryIdSet [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_SearchedIds [crt].RECORDIDTABLETYPE

    INSERT INTO @tvp_DummyId VALUES (0) -- Insert dummy record to satisfy API contract

    ;WITH CategoryHierarchyTree (RECID, LEVEL)
    AS
    (
        SELECT [cchv].RECID, 0 AS LEVEL
        FROM crt.CHANNELCATEGORYHIERARCHYVIEW cchv
        INNER JOIN @tvp_CategoryIds cids ON [cids].RECID = [cchv].RECID AND [cchv].CHANNELID = @bi_ChannelId

        UNION ALL

        SELECT [cchv].RECID, LEVEL + 1
        FROM crt.CHANNELCATEGORYHIERARCHYVIEW cchv
        INNER JOIN CategoryHierarchyTree ct ON [cchv].PARENTCATEGORY = [ct].RECID AND [cchv].CHANNELID = @bi_ChannelId
    )


    INSERT INTO @tvp_ExpandedCategoryIdSet(RECID)
    SELECT [ct].RECID FROM CategoryHierarchyTree ct
    INNER JOIN [ax].ECORESCATEGORY erc ON [erc].RECID = [ct].RECID
    WHERE (@b_IncludeProductsFromDescendantCategories = 0 AND [ct].LEVEL = 0) OR @b_IncludeProductsFromDescendantCategories = 1

    INSERT INTO @tvp_SearchedIds(RECID)
    -- Return only Master/Standalone product ids as required by paging and assortments
    SELECT DISTINCT COALESCE([pv].PRODUCTMASTER, [pc].PRODUCT) AS RECID
    FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 0 /* @b_ProductIdsPassed */, @tvp_DummyId, 1 /* @b_CategoryIdsPassed */, @tvp_ExpandedCategoryIdSet) pc
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [pc].PRODUCT

    ;WITH UnpagedProductSearchResult (RECID, ROWNUM)
    AS
    (
        SELECT DISTINCT
            [gap].PRODUCTID AS RECID,
            ROW_NUMBER() OVER (ORDER BY [gap].PRODUCTID) AS ROWNUM
        FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_SkipVariantExpansion */, 1 /* @b_ProductIdsPassed */, @tvp_SearchedIds) gap
    )

    INSERT @IDS(RECID)
    SELECT
        RECID
    FROM UnpagedProductSearchResult
    INNER JOIN @tvp_QueryResultSettings settings ON [settings].[TOP] = 0 OR ROWNUM BETWEEN ([settings].[SKIP] + 1) AND ([settings].[SKIP] + [settings].[TOP])

    RETURN;
END
GO
PRINT N'Creating [crt].[GETPRODUCTCATEGORY]...';


GO

-- Get product categories for attributes. @bi_CatalogId = 0 means all applicable catalogs.
CREATE FUNCTION [crt].[GETPRODUCTCATEGORY]
(
    @bi_ChannelId       BIGINT,
    @bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_ProductIdsPassed BIT, -- 1 when @tvp_ProductIds parameter is passed, 0 otherwise.
    @tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_DummyId        [crt].[RECORDIDTABLETYPE] READONLY  -- A single row of ID 0
)
RETURNS TABLE
RETURN
    -- Channel navigation hierarchy
    SELECT
        @bi_ChannelId AS CHANNEL,
        pc.PRODUCT,
        pc.CATEGORY,
        pc.CATALOG
    FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, @b_ProductIdsPassed, @tvp_ProductIds, 0 /* @b_CategoryIdsPassed */, @tvp_DummyId) pc

    UNION ALL

    -- Retail product category hierarchy
    SELECT
        @bi_ChannelId AS CHANNEL,
        erpc.PRODUCT,
        erpc.CATEGORY,
        0 AS [CATALOG]
    FROM [ax].ECORESPRODUCTCATEGORY erpc
    JOIN @tvp_ProductIds ids on @b_ProductIdsPassed = 0 OR ids.RECID = erpc.PRODUCT
    JOIN [ax].ECORESCATEGORYHIERARCHYROLE erchr ON erchr.CATEGORYHIERARCHY = erpc.CATEGORYHIERARCHY AND erchr.NAMEDCATEGORYHIERARCHYROLE = 4 /* Retail */;
GO
PRINT N'Creating [crt].[GETPRODUCTATTRIBUTESCHEMAS]...';


GO

-- Get product attribute schemas. @bi_CatalogId = 0 means all applicable catalogs.
-- Note that the result set may contain duplicate rows because one attribute can come from multiple categories.
CREATE FUNCTION [crt].[GETPRODUCTATTRIBUTESCHEMAS]
(
    @bi_ChannelId BIGINT,
    @bi_CatalogId BIGINT,
    @dt_ChannelDate DATE,
    @tvp_ProductIds [crt].RECORDIDTABLETYPE READONLY,
	@tvp_DummyId [crt].[RECORDIDTABLETYPE] READONLY     -- A single row of ID 0
)
RETURNS TABLE
RETURN
    -- NonCategory
    SELECT
        rppacm.ATTRIBUTE,
        0 AS PRODUCT,
        0 AS CATALOG,
        0 AS ATTRIBUTEGROUP,
        0 AS ATTRIBUTEGROUPTYPE
        FROM [ax].RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA rppacm
        WHERE rppacm.ATTRIBUTERELATIONTYPE != 1  -- NonCategory
            AND rppacm.HOSTCHANNEL = @bi_ChannelId

    UNION ALL

    -- Category
    SELECT
        rppacm.ATTRIBUTE,
        pc.PRODUCT,
        pc.CATALOG,
        cpav.ATTRIBUTEGROUP, 
        cpav.ATTRIBUTEGROUPTYPE
        FROM @tvp_ProductIds tpi
            JOIN [crt].GETPRODUCTCATEGORY(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 1 /* @b_ProductIdsPassed */,  @tvp_ProductIds, @tvp_DummyId) pc
                ON pc.PRODUCT = tpi.RECID
            JOIN [crt].CATEGORYPRODUCTATTRIBUTEVIEW cpav 
                ON cpav.CATEGORY = pc.CATEGORY
            JOIN [ax].RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA rppacm
                ON rppacm.ATTRIBUTE = cpav.ATTRIBUTE
                    AND rppacm.HOSTCHANNEL = pc.CHANNEL
        WHERE rppacm.ATTRIBUTERELATIONTYPE = 1  -- Category
            AND rppacm.HOSTCHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETPUBPRODUCTATTRIBUTEVALUE]...';


GO

CREATE FUNCTION [crt].[GETPUBPRODUCTATTRIBUTEVALUE]
(
    @bi_ChannelId       BIGINT,
    @bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_IsForwardLooking BIT,
	@tvp_ProductIds [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    SELECT 
        @bi_ChannelId AS CHANNEL,
        ppavev.ATTRIBUTE,
        ppavev.ISREFERENCE,
        ppavev.PRODUCT,
        ppavev.CATALOG,
        ppavev.DISTANCE,
        7 AS SOURCE,    -- ChannelProductAttributeValue
        ppavev.DATETIMEVALUE,
        ppavev.DATETIMEVALUETZID,
        ppavev.FLOATVALUE,
        ppavev.INTVALUE, 
        ppavev.LANGUAGEID,
        ppavev.TEXTVALUE,
        ppavev.UNITOFMEASURE
    FROM [crt].GETPUBPRODUCTATTRIBUTEVALUEEXPLODED(@bi_ChannelId, @tvp_ProductIds) ppavev
    WHERE ppavev.CATALOG = 0 AND GETUTCDATE() BETWEEN ppavev.ORGVALIDFROM AND ppavev.ORGVALIDTO
        AND
        (@bi_CatalogId = 0 OR EXISTS(
            SELECT 1
            FROM [ax].[RETAILPUBCATALOG]
            WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
        ))

    UNION ALL

    SELECT
        ppacmv.CHANNEL,
        ppacmv.ATTRIBUTE,
        ppacmv.ISREFERENCE,
        rppav.PRODUCT,
        rppav.CATALOG,
        0 AS DISTANCE,
        8 AS SOURCE,    -- CatalogProductAttributeValue
        rppav.DATETIMEVALUE,
        rppav.DATETIMEVALUETZID,
        rppav.FLOATVALUE,
        rppav.INTVALUE,
        rppav.LANGUAGEID,
        rppav.TEXTVALUE,
        rppav.UNITOFMEASURE
    FROM [ax].RETAILPUBPRODUCTATTRIBUTEVALUE rppav
		INNER JOIN @tvp_ProductIds as IDS on ids.RECID = rppav.PRODUCT
        INNER JOIN [crt].GETPUBCATALOGATTRIBUTEINHERITED(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking) pcai ON pcai.CATALOG = rppav.CATALOG
        INNER JOIN [crt].[PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW] ppacmv ON ppacmv.ACTUALATTRIBUTE = rppav.ATTRIBUTE AND ppacmv.CHANNEL = @bi_ChannelId
    WHERE rppav.INTERNALORGANIZATION = 0
        AND (@bi_CatalogId = 0                  -- All catalogs
            OR rppav.CATALOG = @bi_CatalogId)   -- Given catalog

    UNION ALL

    SELECT 
        @bi_ChannelId AS CHANNEL,
        ppavev.ATTRIBUTE,
        ppavev.ISREFERENCE,
        ppavev.PRODUCT,
        ppavev.CATALOG,
        ppavev.DISTANCE,
        9 AS SOURCE,    -- CatalogChannelProductAttributeValue
        ppavev.DATETIMEVALUE,
        ppavev.DATETIMEVALUETZID,
        ppavev.FLOATVALUE,
        ppavev.INTVALUE, 
        ppavev.LANGUAGEID,
        ppavev.TEXTVALUE,
        ppavev.UNITOFMEASURE
    FROM [crt].GETPUBPRODUCTATTRIBUTEVALUEEXPLODED(@bi_ChannelID, @tvp_ProductIds) ppavev
    INNER JOIN [crt].GETPUBCATALOGATTRIBUTEINHERITED(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking) pcai ON pcai.CATALOG = ppavev.CATALOG AND @bi_ChannelId = ppavev.CHANNEL
    INNER JOIN ax.RETAILPUBCATALOG rpc ON rpc.ORIGIN = ppavev.CATALOG
    WHERE rpc.VALIDFROMDATETIME BETWEEN ppavev.ORGVALIDFROM AND ppavev.ORGVALIDTO
        AND (@bi_CatalogId = 0                  -- All catalogs
            OR ppavev.CATALOG = @bi_CatalogId)  -- Given catalog
GO
PRINT N'Creating [crt].[GETCATEGORYPRODUCTATTRIBUTEGROUPDEFAULTVALUE]...';


GO

-- Gets category productattributegroup default values
CREATE FUNCTION [crt].[GETCATEGORYPRODUCTATTRIBUTEGROUPDEFAULTVALUE]
(
	@bi_ChannelId		BIGINT,
	@dt_ChannelDate	DATE,	
	@b_ProductIdsPassed	BIT,
	@tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY,
	@tvp_DummyId		[crt].[RECORDIDTABLETYPE] READONLY	-- A single row of ID 0
)
RETURNS TABLE
RETURN

		SELECT 
			pc.CHANNEL,
			ppacmv.ATTRIBUTE,
			ppacmv.ISREFERENCE,
			cpav.ATTRIBUTEGROUP,
			cpav.ATTRIBUTEGROUPTYPE,
			cpav.DEFAULTVALUE AS VALUE,
			pc.PRODUCT,
			pc.CATEGORY,
			pc.CATALOG
        FROM [crt].GETPRODUCTCATEGORY(@bi_ChannelId, 0 /* @bi_CatalogId */, @dt_ChannelDate, @b_ProductIdsPassed, @tvp_ProductIds, @tvp_DummyId) pc
	        JOIN [crt].CATEGORYPRODUCTATTRIBUTEVIEW cpav ON cpav.CATEGORY = pc.CATEGORY AND cpav.DEFAULTVALUE != 0
			JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv ON ppacmv.ACTUALATTRIBUTE = cpav.ATTRIBUTE AND ppacmv.CHANNEL = pc.CHANNEL
GO
PRINT N'Creating [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED]...';


GO

CREATE FUNCTION [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED]
(
    @bi_ChannelId       BIGINT,
    @bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_IsForwardLooking BIT,
	@tvp_ProductIds [crt].RECORDIDTABLETYPE READONLY
)
RETURNS TABLE
RETURN
    WITH PUBPRODUCTATTRIBUTEVALUE AS (
        SELECT
            ppav.ATTRIBUTE,
            ppav.ISREFERENCE,
            ppav.PRODUCT,
            ppav.CHANNEL,
            ppav.CATALOG,
            ppav.LANGUAGEID,
            ppav.DISTANCE,
            ppav.SOURCE,
            ppav.DATETIMEVALUE,
            ppav.DATETIMEVALUETZID,
            ppav.FLOATVALUE,
            ppav.INTVALUE,
            ppav.TEXTVALUE,
            ppav.UNITOFMEASURE
        FROM [crt].[GETPUBPRODUCTATTRIBUTEVALUE] (@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IsForwardLooking, @tvp_ProductIds) ppav
        WHERE ppav.LANGUAGEID = ''

        UNION ALL 

        SELECT
            ppav.ATTRIBUTE,
            ppav.ISREFERENCE,
            ppav.PRODUCT,
            ppav.CHANNEL,
            ppav.CATALOG,
            ppav.LANGUAGEID,
            ppav.DISTANCE,
            ppav.SOURCE,
            ppav.DATETIMEVALUE,
            ppav.DATETIMEVALUETZID,
            ppav.FLOATVALUE,
            ppav.INTVALUE,
            ppav.TEXTVALUE,
            ppav.UNITOFMEASURE
        FROM [crt].[GETPUBPRODUCTATTRIBUTEVALUE] (@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IsForwardLooking, @tvp_ProductIds) ppav
        JOIN [crt].CHANNELLANGUAGESVIEW clv ON clv.CHANNEL = @bi_ChannelId AND clv.LANGUAGEID = ppav.LANGUAGEID
        WHERE ppav.LANGUAGEID != ''
    )
    SELECT
        ppav.ATTRIBUTE,
        ppav.ISREFERENCE,
        ppav.PRODUCT,
        ppav.CHANNEL,
        ppav.CATALOG,
        ppav.DISTANCE,
        ppav.SOURCE,
        ppav.INTVALUE AS BOOLEANVALUE,
        ppav.FLOATVALUE AS CURRENCYVALUE,
        CASE av.RAWDATATYPE 
			WHEN 1	-- Currency
				THEN ppav.TEXTVALUE 
			ELSE '' 
		END AS CURRENCYCODE,
        ppav.DATETIMEVALUE,
        ppav.DATETIMEVALUETZID,
        ppav.FLOATVALUE,
        uom.SYMBOL AS FLOATUNITSYMBOL,
        ppav.INTVALUE,
        uom.SYMBOL AS INTUNITSYMBOL,
        ppav.TEXTVALUE,
        ppav.LANGUAGEID AS LANGUAGE,
        ppav.TEXTVALUE AS TRANSLATION
    FROM PUBPRODUCTATTRIBUTEVALUE ppav
	JOIN [crt].ATTRIBUTEVIEW av ON av.ATTRIBUTE = ppav.ATTRIBUTE
    LEFT JOIN [ax].UNITOFMEASURE uom ON uom.RECID = ppav.UNITOFMEASURE
GO
PRINT N'Creating [crt].[GETCATEGORYPRODUCTATTRIBUTEVALUE]...';


GO

-- Gets category productattribute's values
CREATE FUNCTION [crt].[GETCATEGORYPRODUCTATTRIBUTEVALUE]
(
	@bi_ChannelId		BIGINT,
	@dt_ChannelDate	DATE,	
	@b_ProductIdsPassed	BIT,
	@tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY,
	@tvp_DummyId		[crt].[RECORDIDTABLETYPE] READONLY	-- A single row of ID 0
)
RETURNS TABLE
RETURN

		SELECT
			pc.CHANNEL,
			ppacmv.ATTRIBUTE,
			ppacmv.ISREFERENCE,
			cpav.ATTRIBUTEGROUP,
			cpav.ATTRIBUTEGROUPTYPE,
			erav.VALUE,
			pc.PRODUCT,
			pc.CATALOG
        FROM [crt].GETPRODUCTCATEGORY(@bi_ChannelId, 0 /* @bi_CatalogId */, @dt_ChannelDate, @b_ProductIdsPassed, @tvp_ProductIds, @tvp_DummyId) pc
	        JOIN [crt].CATEGORYPRODUCTATTRIBUTEVIEW cpav ON cpav.CATEGORY = pc.CATEGORY
            JOIN [ax].ECORESPRODUCTINSTANCEVALUE erpiv ON  erpiv.PRODUCT = pc.PRODUCT
			JOIN [ax].ECORESATTRIBUTEVALUE erav ON erav.INSTANCEVALUE = erpiv.RECID AND erav.ATTRIBUTE = cpav.ATTRIBUTE
			JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv ON ppacmv.ACTUALATTRIBUTE = cpav.ATTRIBUTE AND ppacmv.CHANNEL = pc.CHANNEL  AND ppacmv.CHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETPRODUCTATTRIBUTESCONTAININGVALUES]...';


GO
CREATE FUNCTION [crt].[GETPRODUCTATTRIBUTESCONTAININGVALUES]
(
    @bi_ChannelId               BIGINT,
    @bi_CatalogId               BIGINT,
    @dt_ChannelDate             DATE,
    @tvp_ProductIds             [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_DummyId                [crt].[RECORDIDTABLETYPE] READONLY  -- A single row of ID 0
)
RETURNS TABLE
RETURN
	-- Global product attributes
	SELECT
		gpavv.ATTRIBUTE
	FROM [crt].GLOBALPRODUCTATTRIBUTEVALUEVIEW gpavv
    WHERE gpavv.CHANNEL = @bi_ChannelId
	
	UNION ALL

	-- Live product attributes
	SELECT
		cpav.ATTRIBUTE
    FROM [crt].GETPRODUCTCATEGORY(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 1 /* @b_ProductIdsPassed */, @tvp_ProductIds, @tvp_DummyId) pc
	INNER JOIN [crt].CATEGORYPRODUCTATTRIBUTEVIEW cpav ON cpav.CATEGORY = pc.CATEGORY

	UNION ALL

	-- Published product attributes
	SELECT
		ppacmv.ATTRIBUTE
    FROM ax.RETAILPUBPRODUCTATTRIBUTEVALUE rppav
	JOIN @tvp_ProductIds as ids ON ids.RECID = rppav.PRODUCT
    JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv ON ppacmv.ACTUALATTRIBUTE = rppav.ATTRIBUTE
	WHERE ppacmv.CHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETPRODUCTREFINERS]...';


GO
-- ================================================================
-- Description: Retrieves refiner schema for products.
-- Category and Price are default refiners from channel DB.
-- ================================================================


CREATE FUNCTION [crt].[GETPRODUCTREFINERS]
(
    @bi_ChannelId               BIGINT,
    @bi_CatalogId               BIGINT,
    @dt_ChannelDate             DATE,
    @nvc_Locale                 NVARCHAR(7),
    @tvp_ProductIds             [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_DummyId                [crt].[RECORDIDTABLETYPE] READONLY  -- A single row of ID 0
)
RETURNS TABLE
RETURN

    -- Attribute product refiners
    SELECT DISTINCT
        [pas].ATTRIBUTE AS RECID,
        COALESCE([erat].FRIENDLYNAME, [era].NAME) AS KEYNAME,
        1 AS SOURCE,  -- Attribute
        [cra].DATATYPE,
        [raf].DISPLAYOPTION,
        [raf].DISPLAYTEMPLATE,
        [raf].THRESHOLDVALUE
    FROM [crt].[GETPRODUCTATTRIBUTESCONTAININGVALUES](@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @tvp_ProductIds, @tvp_DummyId) AS pas
    INNER JOIN [crt].CHANNELREFINABLEATTRIBUTE cra ON [cra].ATTRIBUTE = [pas].ATTRIBUTE
    INNER JOIN [ax].RETAILATTRIBUTEFILTER raf ON [raf].ATTRIBUTE = [pas].ATTRIBUTE
    INNER JOIN [ax].ECORESATTRIBUTE era ON [era].RECID = [raf].ATTRIBUTE
    LEFT OUTER JOIN [ax].ECORESATTRIBUTETRANSLATION erat ON [erat].ATTRIBUTE = [raf].ATTRIBUTE AND [erat].LANGUAGE = @nvc_Locale
    WHERE [cra].CHANNEL = @bi_ChannelId

    UNION ALL

    -- Category is a default product refiner
    SELECT
        NULL AS RECID,
        'Category' AS KEYNAME,
        2 AS SOURCE,  -- Category
        5 AS DATATYPE,  -- Text value
        1 AS DISPLAYOPTION,  -- Multi select
        0 AS DISPLAYTEMPLATE,  -- List
        NULL AS THRESHOLDVALUE  -- Threshold values are not applicable to category refiner

    UNION ALL

    -- Price is a default product refiner
    SELECT
        NULL AS RECID,
        'Price' AS KEYNAME,
        3 AS SOURCE,  -- Price
        1 AS DATATYPE,  -- Currency value
        0 AS DISPLAYOPTION,  -- Single select
        1 AS DISPLAYTEMPLATE,  -- Slider
        NULL AS THRESHOLDVALUE  -- Threshold values are not applicable to category refiner
GO
PRINT N'Creating [crt].[GETLIVEPRODUCTATTRIBUTEVALUE]...';


GO

-- Gets live product attributes' values
CREATE FUNCTION [crt].[GETLIVEPRODUCTATTRIBUTEVALUE]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_ProductIdsPassed BIT,
    @tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY,
	@tvp_DummyId		[crt].[RECORDIDTABLETYPE] READONLY	-- A single row of ID 0
)
RETURNS TABLE
RETURN

    SELECT
        CHANNEL,
        ATTRIBUTE,
        ISREFERENCE,
        ATTRIBUTEGROUP,
        ATTRIBUTEGROUPTYPE,
        VALUE,
        PRODUCT,
        CATEGORY,
        CATALOG,
        4 AS SOURCE    -- CategoryProductAttributeGroupDefaultValue
    FROM [crt].GETCATEGORYPRODUCTATTRIBUTEGROUPDEFAULTVALUE(@bi_ChannelId, @dt_ChannelDate, @b_ProductIdsPassed, @tvp_ProductIds, @tvp_DummyId)

    UNION ALL

    SELECT
        CHANNEL,
        ATTRIBUTE,
        ISREFERENCE,
        ATTRIBUTEGROUP,
        ATTRIBUTEGROUPTYPE,
        VALUE,
        PRODUCT,
        0 AS CATEGORY,
        CATALOG,
        6 AS SOURCE    -- CategoryProductAttributeValue
    FROM [crt].[GETCATEGORYPRODUCTATTRIBUTEVALUE](@bi_ChannelId, @dt_ChannelDate, @b_ProductIdsPassed, @tvp_ProductIds, @tvp_DummyId)

	UNION ALL

    SELECT
        CHANNEL,
        ATTRIBUTE,
        ISREFERENCE,
        ATTRIBUTEGROUP,
        ATTRIBUTEGROUPTYPE,
        VALUE,
        PRODUCT,
        0 AS CATEGORY,
        0 AS CATALOG,
        6 AS SOURCE    -- CategoryProductAttributeValue
    FROM [crt].[GETDEFAULTPRODUCTATTRIBUTEVALUE](@bi_ChannelId, @tvp_ProductIds)
GO
PRINT N'Creating [crt].[GETLIVEPRODUCTATTRIBUTEVALUEEXPANDED]...';


GO

-- Gets live product expanded attributes' values
CREATE FUNCTION [crt].[GETLIVEPRODUCTATTRIBUTEVALUEEXPANDED]
(
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_ProductIdsPassed BIT,
    @tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_DummyId        [crt].[RECORDIDTABLETYPE] READONLY  -- A single row of ID 0
)
RETURNS TABLE
RETURN

    SELECT
        lpav.CHANNEL,
        lpav.ATTRIBUTE,
        NULL AS DISPLAYORDER,
        lpav.ISREFERENCE,
        lpav.ATTRIBUTEGROUP,
        lpav.ATTRIBUTEGROUPTYPE,
        lpav.VALUE,
        lpav.PRODUCT,
        lpav.CATEGORY,
        lpav.CATALOG,
        lpav.SOURCE,
        ve.BOOLEANVALUE,
        ve.CURRENCYVALUE,
        ve.CURRENCYCODE,
        ve.DATETIMEVALUE,
        ve.DATETIMEVALUETZID,
        ve.FLOATVALUE,
        ve.FLOATUNITSYMBOL,
        ve.INTVALUE,
        ve.INTUNITSYMBOL,
        ve.TEXTVALUE,
        ve.LANGUAGE,
        ve.TRANSLATION
    FROM [crt].GETLIVEPRODUCTATTRIBUTEVALUE(@bi_ChannelId, @dt_ChannelDate, @b_ProductIdsPassed, @tvp_ProductIds, @tvp_DummyId) lpav
        JOIN crt.GETVALUEEXPANDED(@bi_ChannelId) ve
            ON ve.RECID = lpav.VALUE

    UNION ALL

    SELECT
        ppacmv.CHANNEL,
        ppacmv.ATTRIBUTE,
        spav.DISPLAYORDER,
        ppacmv.ISREFERENCE,
        0 AS ATTRIBUTEGROUP,
        0 AS ATTRIBUTEGROUPTYPE,
        0 AS VALUE,
        spav.PRODUCT,
        0 AS CATEGORY,
        0 AS CATALOG,
        5 AS SOURCE,    -- StandardProductAttributeValue
        NULL AS BOOLEANVALUE,
        NULL AS CURRENCYVALUE,
        NULL AS CURRENCYCODE,
        NULL AS DATETIMEVALUE,
        NULL AS DATETIMEVALUETZID,
        NULL AS FLOATVALUE,
        NULL AS FLOATUNITSYMBOL,
        NULL AS INTVALUE,
        NULL AS INTUNITSYMBOL,
        spav.TEXTVALUE,
        spav.LANGUAGEID AS LANGUAGE,
        spav.TRANSLATION
    FROM [crt].[GETSTANDARDPRODUCTATTRIBUTEVALUE](@bi_ChannelId, @b_ProductIdsPassed, @tvp_ProductIds) spav
    JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv ON ppacmv.ACTUALATTRIBUTE = spav.ATTRIBUTE WHERE ppacmv.CHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[SEARCHPRODUCTSBYKEYWORD]...';


GO

CREATE FUNCTION [crt].[SEARCHPRODUCTSBYKEYWORD]
(
    @bi_ChannelId           BIGINT,
    @dt_ChannelDate         DATE,
    @nvc_SearchCondition    NVARCHAR(4000),
    @nvc_LanguageId         NVARCHAR(7),
    @tvp_ProductIds         [crt].[RECORDIDTABLETYPE] READONLY
)
RETURNS TABLE
RETURN
    -- The SELECT below is to enable "universal" search from the cart page. The client
    -- may not know what the string represents, and so cannot make a decision
    -- as to which search criteria to use. Since this string will often be an
    -- item id, we have to expand the keyword search space (which is attributes
    -- only) to include the item ids as well.
    SELECT p.RECID
    FROM [ax].ECORESPRODUCT p
    INNER JOIN [ax].RETAILCHANNELTABLE RCT ON RCT.RECID = @bi_ChannelId
    INNER JOIN [ax].INVENTTABLE IT ON IT.PRODUCT = p.RECID AND CONTAINS(it.ITEMID, @nvc_SearchCondition) AND IT.DATAAREAID = RCT.INVENTLOCATIONDATAAREAID

    UNION

    SELECT lpavv.PRODUCT AS RECID
    FROM [crt].GETLIVEPRODUCTATTRIBUTEVALUE(@bi_ChannelId, @dt_ChannelDate, 0 /* @b_ProductIdsPassed */, @tvp_ProductIds, @tvp_ProductIds) lpavv
    INNER JOIN [ax].ECORESTEXTVALUE ertv ON ertv.RECID = lpavv.VALUE AND CONTAINS(ertv.TEXTVALUE, @nvc_SearchCondition)

    UNION

    SELECT EP.RECID
    FROM [ax].ECORESPRODUCT EP
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 1  -- ProductNumber
    JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW m ON m.ACTUALATTRIBUTE = rsa.ATTRIBUTE AND m.CHANNEL = @bi_ChannelId
    WHERE CONTAINS(ep.DISPLAYPRODUCTNUMBER, @nvc_SearchCondition)

    UNION

    SELECT EP.RECID
    FROM [ax].ECORESPRODUCT EP
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID IN (2, 4)  -- ProductName, ProductDescription
    JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW m ON m.ACTUALATTRIBUTE = rsa.ATTRIBUTE AND m.CHANNEL = @bi_ChannelId
    JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON erpt.PRODUCT = ep.RECID
    WHERE erpt.LANGUAGEID = @nvc_LanguageId AND (CONTAINS(erpt.NAME, @nvc_SearchCondition) OR (CONTAINS(erpt.DESCRIPTION, @nvc_SearchCondition)))

    UNION

    SELECT EP.RECID
    FROM [ax].ECORESPRODUCT EP
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 3  -- SearchName
    JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW m ON m.ACTUALATTRIBUTE = rsa.ATTRIBUTE AND m.CHANNEL = @bi_ChannelId
    WHERE CONTAINS(EP.SEARCHNAME, @nvc_SearchCondition)

    UNION

    SELECT EPVDV.DISTINCTPRODUCTVARIANT AS RECID
    FROM [ax].ECORESPRODUCTVARIANTCOLOR EPVC
    JOIN [ax].ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV ON EPVDV.RECID = EPVC.RECID
    JOIN [ax].ECORESCOLOR EC ON EC.RECID = EPVC.COLOR AND CONTAINS(EC.NAME, @nvc_SearchCondition)
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 5  -- Color
    JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW m ON m.ACTUALATTRIBUTE = rsa.ATTRIBUTE AND m.CHANNEL = @bi_ChannelId

    UNION

    SELECT EPVDV.DISTINCTPRODUCTVARIANT AS RECID
    FROM [ax].ECORESPRODUCTVARIANTSTYLE EPVS
    JOIN [ax].ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV ON EPVDV.RECID = EPVS.RECID
    JOIN [ax].ECORESSTYLE EC ON EC.RECID = EPVS.STYLE AND CONTAINS(EC.NAME, @nvc_SearchCondition)
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 6  -- Style
    JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW m ON m.ACTUALATTRIBUTE = rsa.ATTRIBUTE AND m.CHANNEL = @bi_ChannelId

    UNION

    SELECT EPVDV.DISTINCTPRODUCTVARIANT AS RECID
    FROM [ax].ECORESPRODUCTVARIANTSIZE EPVS
    JOIN [ax].ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV ON EPVDV.RECID = EPVS.RECID
    JOIN [ax].ECORESSIZE EC ON EC.RECID = EPVS.SIZE AND CONTAINS(EC.NAME, @nvc_SearchCondition)
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 7  -- Size
    JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW m ON m.ACTUALATTRIBUTE = rsa.ATTRIBUTE AND m.CHANNEL = @bi_ChannelId

    UNION

    SELECT EPVDV.DISTINCTPRODUCTVARIANT AS RECID
    FROM [ax].ECORESPRODUCTVARIANTCONFIGURATION EPVC
    JOIN [ax].ECORESPRODUCTVARIANTDIMENSIONVALUE EPVDV ON EPVDV.RECID = EPVC.RECID
    JOIN [ax].ECORESCONFIGURATION EC ON EC.RECID = EPVC.CONFIGURATION AND CONTAINS(EC.NAME, @nvc_SearchCondition)
    JOIN [ax].RETAILSTANDARDATTRIBUTE RSA ON RSA.STANDARDATTRIBUTEID = 8  -- Configuration
    JOIN [crt].PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW m ON m.ACTUALATTRIBUTE = rsa.ATTRIBUTE AND m.CHANNEL = @bi_ChannelId
GO
PRINT N'Creating [crt].[GETPRODUCTLANGUAGES]...';


GO

-- For every passed in product Id the function returns key value: ProductID - LanguageID 
-- where LanguageID corrensponds to the Languauge which belongs to any product's attribute's translation.
-- The function doesn't return duplicates.
CREATE FUNCTION [crt].[GETPRODUCTLANGUAGES]
(
    @bi_ChannelId       BIGINT,
	@bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATE,
    @tvp_ProductIds     [crt].RECORDIDTABLETYPE READONLY,
	@tvp_DummyId		[crt].[RECORDIDTABLETYPE] READONLY	-- A single row of ID 0
)
RETURNS TABLE
RETURN
-- Non product specific live attribute values.------------------------
    SELECT
        0 AS PRODUCT,
        tvt.LANGUAGE
    FROM [crt].GLOBALPRODUCTATTRIBUTEVALUEVIEW gpavv
	JOIN [ax].ECORESVALUE erv ON erv.RECID = gpavv.VALUE
    JOIN [crt].GETTEXTVALUETRANSLATION(@bi_ChannelId) tvt ON tvt.VALUE = erv.RECID
    WHERE gpavv.CHANNEL = @bi_ChannelId 
	  AND
        (@bi_CatalogId = 0 OR EXISTS(
            SELECT 1
            FROM [ax].[RETAILPUBCATALOG]
            WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
        ))

    UNION 

    -- Product specific live attribute values.------------------------------
	SELECT
        lpav.PRODUCT,
        tvt.LANGUAGE
    FROM [crt].GETLIVEPRODUCTATTRIBUTEVALUE(@bi_ChannelId, @dt_ChannelDate, 1, @tvp_ProductIds, @tvp_DummyId) lpav
    JOIN [ax].ECORESVALUE erv on erv.RECID = lpav.VALUE
    JOIN [crt].GETTEXTVALUETRANSLATION(@bi_ChannelId) tvt ON tvt.VALUE = erv.RECID
	WHERE @bi_CatalogId = 0 OR EXISTS(
        SELECT 1
        FROM [ax].[RETAILPUBCATALOG]
        WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0)

    UNION ALL

    SELECT
        spav.PRODUCT,
        spav.LANGUAGEID AS LANGUAGE
    FROM [crt].[GETSTANDARDPRODUCTATTRIBUTEVALUE](@bi_ChannelId, 1, @tvp_ProductIds) spav
    JOIN crt.PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW ppacmv ON ppacmv.ACTUALATTRIBUTE = spav.ATTRIBUTE 
	WHERE ppacmv.CHANNEL = @bi_ChannelId
	  AND @bi_CatalogId = 0 OR EXISTS(
        SELECT 1
        FROM [ax].[RETAILPUBCATALOG]
        WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0)
	

    UNION 

    -- Non product specific published attribute values.-----------------------------------------
    SELECT
        ppave.PRODUCT,
        ppave.LANGUAGE
    -- The variable @tvp_DummyId is used below but in fact its purpose is not to provide literally *dummy* id but a row with ID 0 which should be 
	-- there for a business reason we are interested in only those products which have value 0 as their productID
	FROM [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED] (@bi_ChannelId, @bi_CatalogID, @dt_ChannelDate, 1, @tvp_DummyId) ppave 
    WHERE ppave.CHANNEL = @bi_ChannelId
	  AND (@bi_CatalogId = 0                  -- All catalogs
			OR (ppave.CATALOG = 0 AND EXISTS(   -- Channel product attribute value for non-snapshotted catalog
				SELECT 1
				FROM [ax].[RETAILPUBCATALOG]
				WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
			))                
			OR ppave.CATALOG = @bi_CatalogId)   -- Given catalog

    UNION 

    -- Product specific published attribute values.------------------------------------------------
    SELECT
        ppave.PRODUCT,
        ppave.LANGUAGE
    FROM @tvp_ProductIds tpi
    INNER JOIN [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED] (@bi_ChannelId, @bi_CatalogID, @dt_ChannelDate, 1, @tvp_ProductIds) ppave ON ppave.PRODUCT = tpi.RECID
    WHERE ppave.CHANNEL = @bi_ChannelId
	  AND (@bi_CatalogId = 0                  -- All catalogs
            OR (ppave.CATALOG = 0 AND EXISTS(   -- Channel product attribute value for non-snapshotted catalog
                SELECT 1
                FROM [ax].[RETAILPUBCATALOG]
                WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
            ))                
            OR ppave.CATALOG = @bi_CatalogId)   -- Given catalog
GO
PRINT N'Creating [crt].[GETPRODUCTATTRIBUTEVALUES]...';


GO

-- Get product attribute values. @bi_CatalogId = 0 means all applicable catalogs.
CREATE FUNCTION [crt].[GETPRODUCTATTRIBUTEVALUES]
(
    @bi_ChannelId       BIGINT,
    @bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATE,
    @b_IsForwardLooking BIT,
    @tvp_ProductIds     [crt].RECORDIDTABLETYPE READONLY,
    @tvp_DummyId        [crt].[RECORDIDTABLETYPE] READONLY  -- A single row of ID 0
)
RETURNS TABLE
RETURN
    -- Non product specific live attribute values.
    SELECT
        gpavv.ATTRIBUTE,
        gpavv.VALUE,
        NULL AS DISPLAYORDER,
        gpavv.ISREFERENCE,
        0 AS PRODUCT,
        0 AS CATEGORY,
        0 AS CATALOG,
        0 AS DISTANCE,
        gpavv.SOURCE,
        ve.BOOLEANVALUE,
        ve.CURRENCYVALUE,
        ve.CURRENCYCODE,
        ve.DATETIMEVALUE,
        ve.DATETIMEVALUETZID,
        ve.FLOATVALUE,
        ve.FLOATUNITSYMBOL,
        ve.INTVALUE,
        ve.INTUNITSYMBOL,
        ve.TEXTVALUE,
        ve.LANGUAGE,
        ve.TRANSLATION
    FROM [crt].GLOBALPRODUCTATTRIBUTEVALUEVIEW gpavv
        JOIN crt.GETVALUEEXPANDED(@bi_ChannelId) ve
            ON ve.RECID = gpavv.VALUE
    WHERE gpavv.CHANNEL = @bi_ChannelId 
        AND
        (@bi_CatalogId = 0 OR EXISTS(
            SELECT 1
            FROM [ax].[RETAILPUBCATALOG]
            WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
        ))

    UNION ALL

    -- Product specific live attribute values.
    SELECT
        lpave.ATTRIBUTE,
        lpave.VALUE,
        lpave.DISPLAYORDER,
        lpave.ISREFERENCE,
        lpave.PRODUCT,
        lpave.CATEGORY,
        lpave.CATALOG,
        0 AS DISTANCE,
        lpave.SOURCE,
        lpave.BOOLEANVALUE,
        lpave.CURRENCYVALUE,
        lpave.CURRENCYCODE,
        lpave.DATETIMEVALUE,
        lpave.DATETIMEVALUETZID,
        lpave.FLOATVALUE,
        lpave.FLOATUNITSYMBOL,
        lpave.INTVALUE,
        lpave.INTUNITSYMBOL,
        lpave.TEXTVALUE,
        lpave.LANGUAGE,
        lpave.TRANSLATION
    FROM [crt].[GETLIVEPRODUCTATTRIBUTEVALUEEXPANDED](@bi_ChannelId, @dt_ChannelDate, 1 /* @b_ProductIdsPassed */, @tvp_ProductIds, @tvp_DummyId) lpave
    WHERE @bi_CatalogId = 0 OR EXISTS(
        SELECT 1
        FROM [ax].[RETAILPUBCATALOG]
        WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
    )

    UNION ALL

    -- Non product specific published attribute values.
    SELECT
        ppave.ATTRIBUTE,
        0 AS VALUE,
        NULL AS DISPLAYORDER,
        ppave.ISREFERENCE,
        ppave.PRODUCT,
        0 AS CATEGORY,
        ppave.CATALOG,
        ppave.DISTANCE,
        ppave.SOURCE,
        ppave.BOOLEANVALUE,
        ppave.CURRENCYVALUE,
        ppave.CURRENCYCODE,
        ppave.DATETIMEVALUE,
        ppave.DATETIMEVALUETZID,
        ppave.FLOATVALUE,
        ppave.FLOATUNITSYMBOL,
        ppave.INTVALUE,
        ppave.INTUNITSYMBOL,
        ppave.TEXTVALUE,
        ppave.LANGUAGE,
        ppave.TRANSLATION
    -- The variable @tvp_DummyId is used below but in fact its purpose is not to provide literally *dummy* id but a row with ID 0 which should be 
    -- there for a business reason we are interested in only those products which have value 0 as their productID
    FROM [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED] (@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IsForwardLooking, @tvp_DummyId) ppave 

    UNION ALL

    -- Product specific published attribute values.
    SELECT
        ppave.ATTRIBUTE,
        0 AS VALUE,
        NULL AS DISPLAYORDER,
        ppave.ISREFERENCE,
        ppave.PRODUCT,
        0 AS CATEGORY,
        ppave.CATALOG,
        ppave.DISTANCE,
        ppave.SOURCE,
        ppave.BOOLEANVALUE,
        ppave.CURRENCYVALUE,
        ppave.CURRENCYCODE,
        ppave.DATETIMEVALUE,
        ppave.DATETIMEVALUETZID,
        ppave.FLOATVALUE,
        ppave.FLOATUNITSYMBOL,
        ppave.INTVALUE,
        ppave.INTUNITSYMBOL,
        ppave.TEXTVALUE,
        ppave.LANGUAGE,
        ppave.TRANSLATION
    FROM [crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED] (@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IsForwardLooking, @tvp_ProductIds) ppave
GO
PRINT N'Creating [crt].[GETPRODUCTATTRIBUTEVALUECOMBINATIONS]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTATTRIBUTEVALUECOMBINATIONS]
(
    @bi_ChannelId       BIGINT,
    @bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATETIME,
    @nvc_Locale         nvarchar(7),
    @tvp_ProductIds     [crt].RECORDIDTABLETYPE READONLY,
    @tvp_DummyId        [crt].[RECORDIDTABLETYPE] READONLY  -- Single row of ID 0 (needed by GetProductCategories function called by GetProductAttributeValues)
)
RETURNS TABLE
RETURN
SELECT DISTINCT
    [pavfn].ATTRIBUTE,
    [pavfn].VALUE AS ATTRIBUTEVALUEID,
    COALESCE([erat].FRIENDLYNAME, [era].NAME) AS NAME,
    [pavfn].[ISREFERENCE],
    0 AS ISREMOTE,
    [pavfn].[PRODUCT],
    [pavfn].[CATEGORY],
    [pavfn].[CATALOG],
    [pavfn].[DISTANCE],
    [pavfn].[SOURCE],
    [pavfn].CURRENCYVALUE, -- DATATYPE = 1
    [pavfn].DATETIMEVALUE, -- DATATYPE = 2
    [pavfn].FLOATVALUE, -- DATATYPE = 3
    [pavfn].INTVALUE, -- DATATYPE = 4
    CASE
        WHEN [pavfn].LANGUAGE = @nvc_Locale THEN [pavfn].TRANSLATION
        ELSE [pavfn].TEXTVALUE
    END AS TEXTVALUE, -- DATATYPE = 5
    CAST([pavfn].BOOLEANVALUE AS BIT) AS BOOLEANVALUE, -- DATATYPE = 6
    [pavfn].CURRENCYCODE,
    [pamv].DATATYPE,
    CASE [pamv].DATATYPE
        WHEN 3 THEN [pavfn].FLOATUNITSYMBOL
        WHEN 4 THEN [pavfn].INTUNITSYMBOL
        ELSE NULL
    END AS UNITOFMEASURESYMBOL
FROM [crt].GETPRODUCTATTRIBUTEVALUES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, @tvp_ProductIds, @tvp_DummyId) AS pavfn
INNER JOIN [crt].PRODUCTATTRIBUTEMETADATAVIEW pamv ON [pamv].ATTRIBUTE = [pavfn].ATTRIBUTE
INNER JOIN [ax].ECORESATTRIBUTE era ON [era].RECID = [pavfn].ATTRIBUTE
LEFT OUTER JOIN [ax].ECORESATTRIBUTETRANSLATION erat ON [erat].ATTRIBUTE = [pavfn].ATTRIBUTE AND [erat].LANGUAGE = @nvc_Locale
LEFT OUTER JOIN @tvp_ProductIds ids ON [pavfn].PRODUCT = 0  -- Do not return Product 0 properties when retrieving variant product properties.
LEFT OUTER JOIN [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND) ON [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = [ids].RECID
WHERE ([par].VARIANTID IS NULL OR [pavfn].PRODUCT = [ids].RECID) AND [pamv].DATATYPE NOT IN (40, 41)  -- Media types are not returned because they cannot be represented in text form.

UNION ALL
-- Retrieve attribute values for remote products
SELECT DISTINCT
    [pavfn].ATTRIBUTE,
    [pavfn].VALUE AS ATTRIBUTEVALUEID,
    COALESCE([erat].FRIENDLYNAME, [era].NAME) AS NAME,
    [pavfn].[ISREFERENCE],
    1 AS ISREMOTE,
    [pavfn].[PRODUCT],
    [pavfn].[CATEGORY],
    [pavfn].[CATALOG],
    [pavfn].[DISTANCE],
    [pavfn].[SOURCE],
    [pavfn].CURRENCYVALUE, -- DATATYPE = 1
    [pavfn].DATETIMEVALUE, -- DATATYPE = 2
    [pavfn].FLOATVALUE, -- DATATYPE = 3
    [pavfn].INTVALUE, -- DATATYPE = 4
    CASE
        WHEN [pavfn].LANGUAGE = @nvc_Locale THEN [pavfn].TRANSLATION
        ELSE [pavfn].TEXTVALUE
    END AS TEXTVALUE, -- DATATYPE = 5
    CAST([pavfn].BOOLEANVALUE AS BIT) AS BOOLEANVALUE, -- DATATYPE = 6
    [pavfn].CURRENCYCODE,
    [pamv].DATATYPE,
    CASE [pamv].DATATYPE
        WHEN 3 THEN [pavfn].FLOATUNITSYMBOL
        WHEN 4 THEN [pavfn].INTUNITSYMBOL
        ELSE NULL
    END AS UNITOFMEASURESYMBOL
FROM [crt].GETPRODUCTATTRIBUTEVALUES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, @tvp_ProductIds, @tvp_DummyId) AS pavfn
INNER JOIN [crt].PRODUCTATTRIBUTEMETADATAVIEW pamv ON [pamv].ATTRIBUTE = [pavfn].ATTRIBUTE
INNER JOIN [ax].ECORESATTRIBUTE era ON [era].RECID = [pavfn].ATTRIBUTE
LEFT OUTER JOIN [ax].ECORESATTRIBUTETRANSLATION erat ON [erat].ATTRIBUTE = [pavfn].ATTRIBUTE AND [erat].LANGUAGE = @nvc_Locale
LEFT OUTER JOIN @tvp_ProductIds ids ON [pavfn].PRODUCT = 0  -- Do not return Product 0 properties when retrieving variant product properties.
LEFT OUTER JOIN [crt].REMOTEPRODUCTASSORTMENTRULESVIEW par ON [par].CHANNELID = @bi_ChannelId AND [par].VARIANTID = [ids].RECID
WHERE ([par].VARIANTID IS NULL OR [pavfn].PRODUCT = [ids].RECID) AND [pamv].DATATYPE NOT IN (40, 41)  -- Media types are not returned because they cannot be represented in text form.
GO
PRINT N'Creating [crt].[GETPRODUCTREFINERVALUES]...';


GO

CREATE FUNCTION [crt].[GETPRODUCTREFINERVALUES]
(
    @bi_ChannelId               BIGINT,
    @bi_CatalogId               BIGINT,
    @dt_ChannelDate             DATE,
    @nvc_Locale                 NVARCHAR(7),
    @tvp_ProductIds             [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_Refiners               [crt].[PRODUCTREFINERTABLETYPE] READONLY,
    @tvp_DummyId                [crt].[RECORDIDTABLETYPE] READONLY  -- A single row of ID 0
)
RETURNS TABLE
RETURN
    SELECT DISTINCT
        [pavfn].ATTRIBUTE AS RECID,
        1 AS REFINERSOURCE,  -- Attribute
        [refiners].DATATYPE,
        CASE [refiners].DATATYPE
            WHEN 1 THEN CONVERT(nvarchar, [pavfn].CURRENCYVALUE)
            WHEN 3 THEN CONVERT(nvarchar, [pavfn].FLOATVALUE)
            WHEN 4 THEN CONVERT(nvarchar, [pavfn].INTVALUE)
            WHEN 5 THEN
                CASE
                    WHEN [pavfn].LANGUAGE = @nvc_Locale THEN CONVERT(nvarchar, [pavfn].TRANSLATION)
                    ELSE CONVERT(nvarchar, [pavfn].TEXTVALUE)
                END
            WHEN 6 THEN CONVERT(nvarchar, [pavfn].BOOLEANVALUE)
            ELSE NULL
        END AS VALUE,
        CASE [refiners].DATATYPE
            WHEN 1 THEN [pavfn].CURRENCYCODE
            WHEN 3 THEN [pavfn].FLOATUNITSYMBOL
            WHEN 4 THEN [pavfn].INTUNITSYMBOL
            ELSE NULL
        END AS UNIT
    FROM [crt].GETPRODUCTATTRIBUTEVALUES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, @tvp_ProductIds, @tvp_DummyId) AS pavfn
    INNER JOIN @tvp_Refiners refiners ON [refiners].SOURCE = 1  /* Attribute refiners */ AND [refiners].RECID = [pavfn].ATTRIBUTE AND (refiners.DISPLAYTEMPLATE = 0 OR refiners.DISPLAYTEMPLATE = 1)

    UNION ALL

    -- Category is a default product refiner
    SELECT DISTINCT
        0 AS RECID,
        2 AS REFINERSOURCE,  -- Category
        [refiners].DATATYPE,
            CASE
                WHEN [rperct].LANGUAGEID = @nvc_Locale THEN [rperct].FRIENDLYNAME
                ELSE [rperct].SEARCHTEXT
            END AS VALUE,
        NULL AS UNIT
    FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_ProductIdsPassed */, @tvp_ProductIds, 0 /* @b_CategoryIdsPassed */, @tvp_DummyId) gpc
    INNER JOIN @tvp_Refiners refiners ON [refiners].SOURCE = 2  -- Category refiners
    INNER JOIN [ax].RETAILPUBECORESCATEGORYTRANSLATION rperct ON [rperct].CATEGORY = [gpc].CATEGORY

    UNION ALL

    -- Price is a default product refiner
    SELECT
        0 AS RECID,
        3 AS REFINERSOURCE,  -- Price
        [refiners].DATATYPE,
        CONVERT(nvarchar, [grp].PRICE) AS VALUE,
        [rct].CURRENCY AS UNIT
    FROM [crt].[GETPRICEREFINERVALUES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductIds) grp
    INNER JOIN @tvp_Refiners refiners ON [refiners].SOURCE = 3  -- Price refiners
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
GO
PRINT N'Creating [crt].[REFINEPRODUCTS]...';


GO
-- ================================================================
-- Description: Retrieves product identifiers that satisfy at least
-- one refiner value condition. No intersection is performed here.
-- ================================================================


CREATE FUNCTION [crt].[REFINEPRODUCTS]
(
    @bi_ChannelId       BIGINT,
    @bi_CatalogId       BIGINT,
    @dt_ChannelDate     DATE,
    @nvc_LanguageId     nvarchar(7),
    @tvp_ProductIds     [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_RefinerValues  [crt].[PRODUCTREFINERVALUETABLETYPE] READONLY,
    @tvp_DummyId        [crt].[RECORDIDTABLETYPE] READONLY     -- A single row of ID 0
)
RETURNS @t_ResultSet TABLE
(
    PRODUCT BIGINT PRIMARY KEY
)
AS
BEGIN
    DECLARE @b_AreAttributeRefinersPresent BIT
    DECLARE @b_AreCategoryRefinersPresent  BIT
    DECLARE @b_ArePriceRefinersPresent     BIT

    DECLARE @t_AttributeRefinedProducts TABLE
    (
        [RECID] BIGINT PRIMARY KEY
    )
    DECLARE @t_CategoryRefinedProducts TABLE
    (
        [RECID] BIGINT PRIMARY KEY
    )
    DECLARE @t_PriceRefinedProducts TABLE
    (
        [RECID] BIGINT PRIMARY KEY
    )
    
    SET @b_AreAttributeRefinersPresent = (SELECT CASE WHEN EXISTS(SELECT * FROM @tvp_RefinerValues WHERE REFINERSOURCE = 1) THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END)
    SET @b_AreCategoryRefinersPresent = (SELECT CASE WHEN EXISTS(SELECT * FROM @tvp_RefinerValues WHERE REFINERSOURCE = 2) THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END)
    SET @b_ArePriceRefinersPresent = (SELECT CASE WHEN EXISTS(SELECT * FROM @tvp_RefinerValues WHERE REFINERSOURCE = 3) THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END)

    DECLARE @t_ProductAttributeValues TABLE
    (
        [ATTRIBUTE]         BIGINT,
        [PRODUCT]           BIGINT,
        [BOOLEANVALUE]      INT,
        [CURRENCYVALUE]     NUMERIC(32,16),
        [CURRENCYCODE]      NVARCHAR(3),
        [DATETIMEVALUE]     DATETIME,
        [FLOATVALUE]        NUMERIC(32,16),
        [INTVALUE]          INT,
        [TEXTVALUE]         NVARCHAR(1999),
        [LANGUAGE]          NVARCHAR(7),
        [TRANSLATION]       NVARCHAR(1999)
    )
    
    INSERT INTO @t_ProductAttributeValues
    SELECT
        [pavfn].[ATTRIBUTE],
        [pavfn].[PRODUCT],
        [pavfn].[BOOLEANVALUE],
        [pavfn].[CURRENCYVALUE],
        [pavfn].[CURRENCYCODE],
        [pavfn].[DATETIMEVALUE],
        [pavfn].[FLOATVALUE],
        [pavfn].[INTVALUE],
        [pavfn].[TEXTVALUE],
        [pavfn].[LANGUAGE],
        [pavfn].[TRANSLATION]
    FROM [crt].GETPRODUCTATTRIBUTEVALUES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, @tvp_ProductIds, @tvp_DummyId) AS pavfn
    
    --------------------------------------------- ATTRIBUTE REFINER --------------------------------------------------
    IF (@b_AreAttributeRefinersPresent = 1)
    BEGIN
        INSERT INTO @t_AttributeRefinedProducts
        -- Processing attribute refiners of list type that require matching refiner values
        SELECT
            [pavfn].PRODUCT
        FROM @t_ProductAttributeValues AS pavfn
        INNER JOIN @tvp_RefinerValues rv ON [rv].RECID = [pavfn].ATTRIBUTE AND [rv].[REFINERSOURCE] = 1  -- attribute refiner(s)
        INNER JOIN [ax].RETAILATTRIBUTEFILTER raf ON [raf].ATTRIBUTE = [rv].RECID AND [raf].DISPLAYTEMPLATE = 0 AND  -- List refiner type
        (
            ([pavfn].[CURRENCYVALUE] = CASE [rv].DATATYPE WHEN 1 THEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) END AND [rv].UNIT = [pavfn].[CURRENCYCODE]) OR
            ([pavfn].[FLOATVALUE] = CASE [rv].DATATYPE WHEN 3 THEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) END) OR
            ([pavfn].[INTVALUE] = CASE [rv].DATATYPE WHEN 4 THEN CONVERT(INT, [rv].LEFTVALUEBOUND) END) OR
            ([pavfn].[TEXTVALUE] = CASE [rv].DATATYPE WHEN 5 THEN [rv].LEFTVALUEBOUND END) OR
            ([pavfn].[TRANSLATION] = CASE [rv].DATATYPE WHEN 5 THEN [rv].LEFTVALUEBOUND END AND [pavfn].LANGUAGE = @nvc_LanguageId) OR
            ([pavfn].[BOOLEANVALUE] = CASE [rv].[DATATYPE] WHEN 6 THEN CONVERT(INT, [rv].LEFTVALUEBOUND) END)
        )

        UNION

        -- Processing attribute refiners that are either slider or range type that require values in between refiner values
        SELECT
            [pavfn].PRODUCT
        FROM @t_ProductAttributeValues AS pavfn
        INNER JOIN @tvp_RefinerValues rv ON [rv].RECID = [pavfn].ATTRIBUTE AND [rv].REFINERSOURCE = 1  -- attribute refiner(s)
        INNER JOIN [ax].RETAILATTRIBUTEFILTER raf ON [raf].ATTRIBUTE = [rv].RECID AND [raf].DISPLAYTEMPLATE BETWEEN 1 AND 3 AND  -- Not list refiner type
        (
            ([pavfn].CURRENCYVALUE >= CASE [rv].DATATYPE WHEN 1 THEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) END AND
             [pavfn].CURRENCYVALUE <= CASE [rv].DATATYPE WHEN 1 THEN CONVERT(NUMERIC(32,16), [rv].RIGHTVALUEBOUND) END) OR
            ([pavfn].FLOATVALUE >= CASE [rv].DATATYPE WHEN 3 THEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) END AND
             [pavfn].FLOATVALUE <= CASE [rv].DATATYPE WHEN 3 THEN CONVERT(NUMERIC(32,16), [rv].RIGHTVALUEBOUND) END) OR
            ([pavfn].INTVALUE >= CASE [rv].DATATYPE WHEN 4 THEN CONVERT(INT, [rv].LEFTVALUEBOUND) END AND
             [pavfn].INTVALUE <= CASE [rv].DATATYPE WHEN 4 THEN CONVERT(INT, [rv].RIGHTVALUEBOUND) END)
        )

        -- Adding master products of variants that match attribute refiner
        INSERT INTO @t_AttributeRefinedProducts
        SELECT DISTINCT
            [erdpv].PRODUCTMASTER
        FROM ax.ECORESDISTINCTPRODUCTVARIANT erdpv
        INNER JOIN @t_AttributeRefinedProducts arp_variant ON [arp_variant].RECID = [erdpv].RECID AND [erdpv].PRODUCTMASTER != [arp_variant].RECID
    END
    
    --------------------------------------------- CATEGORY REFINER --------------------------------------------------
    IF (@b_AreCategoryRefinersPresent = 1 AND @b_AreAttributeRefinersPresent = 1)
    BEGIN
        INSERT INTO @t_CategoryRefinedProducts
        SELECT
            [pc].[PRODUCT]
        FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_ProductIdsPassed */, @tvp_ProductIds, 0 /* @b_CategoryIdsPassed */, @tvp_DummyId) pc
        INNER JOIN @tvp_RefinerValues rv ON [rv].[REFINERSOURCE] = 2  -- category refiner(s)
        INNER JOIN @t_AttributeRefinedProducts arp ON [arp].RECID = [pc].PRODUCT AND @b_AreAttributeRefinersPresent = 1
        INNER JOIN [ax].RETAILPUBECORESCATEGORYTRANSLATION rperct ON [pc].CATEGORY = [rperct].CATEGORY AND rperct.CHANNEL = @bi_ChannelId AND
        (
            [rv].LEFTVALUEBOUND = [rperct].FRIENDLYNAME AND [rperct].LANGUAGEID = @nvc_LanguageId
        )
    END
    ELSE IF (@b_AreCategoryRefinersPresent = 1 AND @b_AreAttributeRefinersPresent = 0)
    BEGIN
        INSERT INTO @t_CategoryRefinedProducts
        SELECT
            [pc].[PRODUCT]
        FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_ProductIdsPassed */, @tvp_ProductIds, 0 /* @b_CategoryIdsPassed */, @tvp_DummyId) pc
        INNER JOIN @tvp_RefinerValues rv ON [rv].[REFINERSOURCE] = 2  -- category refiner(s)
        INNER JOIN [ax].RETAILPUBECORESCATEGORYTRANSLATION rperct ON [pc].CATEGORY = [rperct].CATEGORY AND rperct.CHANNEL = @bi_ChannelId AND
        (
            [rv].LEFTVALUEBOUND = [rperct].FRIENDLYNAME AND [rperct].LANGUAGEID = @nvc_LanguageId
        )
    END
    
    --------------------------------------------- PRICE REFINER ----------------------------------------------------
    IF (@b_ArePriceRefinersPresent = 1 AND @b_AreAttributeRefinersPresent = 1 AND @b_AreCategoryRefinersPresent = 1)
    BEGIN
        INSERT INTO @t_PriceRefinedProducts
        SELECT
            [grp].PRODUCT
        FROM [crt].[GETREFINERPRICES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductIds) grp
        INNER JOIN @tvp_RefinerValues rv ON [grp].PRICE BETWEEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) AND CONVERT(NUMERIC(32,16), [rv].RIGHTVALUEBOUND) AND [rv].[REFINERSOURCE] = 3  -- price refiner(s)
        INNER JOIN @t_AttributeRefinedProducts arp ON [arp].RECID = [grp].PRODUCT AND @b_AreAttributeRefinersPresent = 1
        INNER JOIN @t_CategoryRefinedProducts crp ON [crp].RECID = [grp].PRODUCT AND @b_AreCategoryRefinersPresent = 1
    END
    ELSE IF (@b_ArePriceRefinersPresent = 1 AND @b_AreAttributeRefinersPresent = 1 AND @b_AreCategoryRefinersPresent = 0)
    BEGIN
        INSERT INTO @t_PriceRefinedProducts
        SELECT
            [grp].PRODUCT
        FROM [crt].[GETREFINERPRICES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductIds) grp
        INNER JOIN @tvp_RefinerValues rv ON [grp].PRICE BETWEEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) AND CONVERT(NUMERIC(32,16), [rv].RIGHTVALUEBOUND) AND [rv].[REFINERSOURCE] = 3  -- price refiner(s)
        INNER JOIN @t_AttributeRefinedProducts arp ON [arp].RECID = [grp].PRODUCT AND @b_AreAttributeRefinersPresent = 1
    END
    ELSE IF (@b_ArePriceRefinersPresent = 1 AND @b_AreAttributeRefinersPresent = 0 AND @b_AreCategoryRefinersPresent = 1)
    BEGIN
        INSERT INTO @t_PriceRefinedProducts
        SELECT
            [grp].PRODUCT
        FROM [crt].[GETREFINERPRICES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductIds) grp
        INNER JOIN @tvp_RefinerValues rv ON [grp].PRICE BETWEEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) AND CONVERT(NUMERIC(32,16), [rv].RIGHTVALUEBOUND) AND [rv].[REFINERSOURCE] = 3  -- price refiner(s)
        INNER JOIN @t_CategoryRefinedProducts crp ON [crp].RECID = [grp].PRODUCT AND @b_AreCategoryRefinersPresent = 1
    END
    ELSE IF (@b_ArePriceRefinersPresent = 1 AND @b_AreAttributeRefinersPresent = 0 AND @b_AreCategoryRefinersPresent = 0)
    BEGIN
        INSERT INTO @t_PriceRefinedProducts
        SELECT
            [grp].PRODUCT
        FROM [crt].[GETREFINERPRICES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductIds) grp
        INNER JOIN @tvp_RefinerValues rv ON [grp].PRICE BETWEEN CONVERT(NUMERIC(32,16), [rv].LEFTVALUEBOUND) AND CONVERT(NUMERIC(32,16), [rv].RIGHTVALUEBOUND) AND [rv].[REFINERSOURCE] = 3  -- price refiner(s)
    END
    
    -------------------------------------- SUMMATION OF REFINED PRODUCTS -------------------------------------------
    IF (@b_ArePriceRefinersPresent = 1)
    BEGIN
        INSERT INTO @t_ResultSet
        SELECT RECID FROM @t_PriceRefinedProducts
    END
    ELSE IF (@b_AreCategoryRefinersPresent = 1)
    BEGIN
        INSERT INTO @t_ResultSet
        SELECT RECID FROM @t_CategoryRefinedProducts
    END
    ELSE IF (@b_AreAttributeRefinersPresent = 1)
    BEGIN
        INSERT INTO @t_ResultSet
        SELECT RECID FROM @t_AttributeRefinedProducts
    END

    RETURN;
END
GO
PRINT N'Creating [crt].[FINDPRODUCTSBYKEYWORD]...';


GO

CREATE FUNCTION [crt].[FINDPRODUCTSBYKEYWORD]
(
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_SearchCondition     NVARCHAR(4000),
    @nvc_LanguageId          NVARCHAR(7)
)
RETURNS @IDS TABLE
(
    RECID BIGINT
)
AS
BEGIN
    DECLARE @tvp_DummyId [crt].RECORDIDTABLETYPE
    DECLARE @tvp_SearchedIds [crt].RECORDIDTABLETYPE

    INSERT INTO @tvp_DummyId VALUES (0)  -- Insert dummy record to satisfy API contract
    
    INSERT INTO @tvp_SearchedIds(RECID)
    -- Return only Master/Standalone product ids as required by paging and assortments
    SELECT DISTINCT COALESCE([pv].PRODUCTMASTER, [spk].RECID) AS RECID
    FROM [crt].SEARCHPRODUCTSBYKEYWORD(@bi_ChannelId, @dt_ChannelDate, @nvc_SearchCondition, @nvc_LanguageId, @tvp_DummyId) spk
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [spk].RECID

    ;WITH ProductSearchResult (RECID, ROWNUM)
    AS
    (
        SELECT DISTINCT
            [gap].PRODUCTID AS RECID,
            ROW_NUMBER() OVER (ORDER BY [gap].PRODUCTID) AS ROWNUM
        FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_SkipVariantExpansion */, 1 /* @b_ProductIdsPassed */, @tvp_SearchedIds) gap
    )

    INSERT @IDS(RECID)
    SELECT
        RECID
    FROM ProductSearchResult
    INNER JOIN @tvp_QueryResultSettings settings ON [settings].[TOP] = 0 OR ROWNUM BETWEEN ([settings].[SKIP] + 1) AND ([settings].[SKIP] + [settings].[TOP])

    RETURN;
END
GO
PRINT N'Creating [crt].[REFINEANDSEARCHPRODUCTSBYKEYWORD]...';


GO

CREATE FUNCTION [crt].[REFINEANDSEARCHPRODUCTSBYKEYWORD]
(
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @nvc_SearchCondition        NVARCHAR(4000),
    @nvc_LanguageId             NVARCHAR(7),
    @tvp_RefinerValues          [crt].PRODUCTREFINERVALUETABLETYPE READONLY
)
RETURNS @IDS TABLE
(
    RECID BIGINT
)
AS
BEGIN
    DECLARE @tvp_SearchedProducts [crt].RECORDIDTABLETYPE
    DECLARE @tvp_DummyId          [crt].RECORDIDTABLETYPE
    DECLARE @tvp_SearchSettings   [crt].QUERYRESULTSETTINGSTABLETYPE

    -- No paging while retrieving product ids because refined products have to be calculated over the entire span of result set
    INSERT INTO @tvp_SearchSettings VALUES(0, 0, 0, '', 0)

    -- Insert dummy record to satisfy API contract
    INSERT INTO @tvp_DummyId VALUES (0)

    INSERT INTO @tvp_SearchedProducts(RECID)
    SELECT TOP 1000 RECID  -- We do not support refining products beyond 1,000 to avoid performance degradation
    FROM [crt].[FINDPRODUCTSBYKEYWORD](@tvp_SearchSettings, @bi_ChannelId, @dt_ChannelDate, @nvc_SearchCondition, @nvc_LanguageId)

    -- Retrieve product variants so their attributes can be used for product refinement
    INSERT INTO @tvp_SearchedProducts
    SELECT
        [erdpv].RECID
    FROM [ax].ECORESDISTINCTPRODUCTVARIANT erdpv
    INNER JOIN @tvp_SearchedProducts ids ON [erdpv].PRODUCTMASTER = [ids].RECID

    INSERT INTO @IDS (RECID)
    SELECT DISTINCT
        COALESCE(pv2.PRODUCTMASTER, pv.PRODUCTMASTER, ids.PRODUCT) AS RECID
    FROM [crt].[REFINEPRODUCTS](@bi_ChannelId, 0 /* @bi_CatalogId */, @dt_ChannelDate, @nvc_LanguageId, @tvp_SearchedProducts, @tvp_RefinerValues, @tvp_DummyId) [ids]
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [ids].PRODUCT
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [ids].PRODUCT
    ORDER BY 1  -- meaning sort the first column being returned
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

    RETURN;
END
GO
PRINT N'Creating [crt].[REFINEANDSEARCHPRODUCTSBYCATEGORY]...';


GO

CREATE FUNCTION [crt].[REFINEANDSEARCHPRODUCTSBYCATEGORY]
(
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @bi_CatalogId               BIGINT,
    @dt_ChannelDate             DATE,
    @i_CategoryLevels           INT,
    @nvc_LanguageId             NVARCHAR(7),
    @tvp_CategoryIds            [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_RefinerValues          [crt].[PRODUCTREFINERVALUETABLETYPE] READONLY
)    
RETURNS @IDS TABLE
(
    RECID BIGINT
)
AS
BEGIN
    DECLARE @tvp_SearchedProducts   [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId            [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_SearchSettings     [crt].[QUERYRESULTSETTINGSTABLETYPE]

    -- No paging while retrieving product ids because refined products have to be calculated over the entire span of result set
    INSERT INTO @tvp_SearchSettings VALUES(0, 0, 0, '', 0)

    -- Insert dummy record to satisfy API contract
    INSERT INTO @tvp_DummyId VALUES (0)

    -- Search products
    INSERT INTO @tvp_SearchedProducts(RECID)
    SELECT TOP 1000 RECID  -- We do not support refining products beyond 1,000 to avoid performance degradation
    FROM [crt].[SEARCHPRODUCTSBYCATEGORY](@tvp_SearchSettings, @bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @i_CategoryLevels, @tvp_CategoryIds)

    -- Retrieve product variants so their attributes can be used for product refinement
    INSERT INTO @tvp_SearchedProducts
    SELECT
        [erdpv].RECID
    FROM [ax].ECORESDISTINCTPRODUCTVARIANT erdpv
    INNER JOIN @tvp_SearchedProducts ids ON [erdpv].PRODUCTMASTER = [ids].RECID

    INSERT INTO @IDS (RECID)
    SELECT DISTINCT
        COALESCE(pv2.PRODUCTMASTER, pv.PRODUCTMASTER, ids.PRODUCT) AS RECID
    FROM [crt].[REFINEPRODUCTS](@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @nvc_LanguageId, @tvp_SearchedProducts, @tvp_RefinerValues, @tvp_DummyId) [ids]
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [ids].PRODUCT
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [ids].PRODUCT
    ORDER BY 1  -- meaning sort the first column being returned
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

    RETURN;
END
GO
PRINT N'Creating [crt].[GETSHIFTTENDERPAYMENTTRANS]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTTENDERPAYMENTTRANS]
    @bi_ChannelId						bigint,
	@nvc_TerminalId						nvarchar(10),
	@bi_ShiftId							bigint,
	@i_TransactionType					int	
AS

BEGIN
	SET NOCOUNT ON;

			SELECT		STPTV.TENDERTYPEID, 
						STPTV.TENDERTYPENAME,
						STPTV.CURRENCY, 
						STPTV.COUNTINGREQUIRED, 
						STPTV.TENDEREDAMOUNT, 
						STPTV.TENDEREDAMOUNTCUR,
						STPTV.TRANSACTIONTYPE

			FROM		[crt].[SHIFTTENDERPAYMENTTRANSVIEW] STPTV

			WHERE	STPTV.CHANNEL = @bi_ChannelId 
					AND STPTV.TRANSACTIONTYPE = @i_TransactionType
					AND STPTV.BATCHTERMINALID = @nvc_TerminalId
					AND STPTV.BATCHID = @bi_ShiftId
END;
GO
PRINT N'Creating [crt].[UPDATEEMPLOYEEPASSWORD]...';


GO

CREATE PROCEDURE [crt].[UPDATEEMPLOYEEPASSWORD]
    @nvc_StaffId        nvarchar(25),
    @nvc_PasswordHash   nvarchar(128),
    @nvc_PasswordSalt   nvarchar(128),
    @nvc_PasswordHashAlgorithm nvarchar(25),
    @dt_PasswordLastChangedDateTime datetime,
    @nvc_ChangePasswordAtNextLogOn bit
AS
BEGIN
    SET NOCOUNT ON

    UPDATE [ax].[RETAILSTAFFTABLE] SET
        [PASSWORDSALT] = @nvc_PasswordSalt,
        [PASSWORDDATA] = @nvc_PasswordHash,
        [PASSWORDHASHALGORITHM] = @nvc_PasswordHashAlgorithm,
        [PASSWORDLASTCHANGEDDATETIME] = @dt_PasswordLastChangedDateTime,
        [CHANGEPASSWORD] = @nvc_ChangePasswordAtNextLogOn
    WHERE
        STAFFID = @nvc_StaffId
END;
GO
PRINT N'Creating [crt].[GETWAREHOUSEADDRESSINDIA]...';


GO

CREATE PROCEDURE [crt].[GETWAREHOUSEADDRESSINDIA]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nv_InventLocationId            NVARCHAR(10),
    @nv_InventLocationDataAreaId    NVARCHAR(4)
AS
BEGIN
    SET NOCOUNT ON;
    IF (@nv_InventLocationId IS NULL)
    BEGIN
        RETURN;
    END

    DECLARE @bi_LogisticsLocationRecid BIGINT
    DECLARE @i_RoleType INT
    DECLARE @tvp_LogisticsLocationRoleId [crt].[RECORDIDTABLETYPE]

    -- Delivery role
    SET @i_RoleType = 2

    INSERT INTO @tvp_LogisticsLocationRoleId(RECID)
    SELECT ilr.[RECID]
        FROM [ax].[LOGISTICSLOCATIONROLE] AS ilr
    WHERE ilr.[TYPE] = @i_RoleType

    -- search warehouse default location
    SET @bi_LogisticsLocationRecid = [crt].[GETINVENTLOCATIONDEFAULTLOCATIONINDIA](@nv_InventLocationId, @nv_InventLocationDataAreaId, @tvp_LogisticsLocationRoleId)

    IF (@bi_LogisticsLocationRecid = 0)
    BEGIN
        -- warehouse didn't have a default location so search for site
        SET @bi_LogisticsLocationRecid = [crt].[GETINVENTSITEDEFAULTLOCATIONINDIA](@nv_InventLocationId, @nv_InventLocationDataAreaId, @tvp_LogisticsLocationRoleId)

        IF (@bi_LogisticsLocationRecid = 0)
        BEGIN
            -- site didn't have a default location so search for company
            SET @bi_LogisticsLocationRecid = [crt].[GETCOMPANYDEFAULTLOCATIONINDIA](@nv_InventLocationDataAreaId, @tvp_LogisticsLocationRoleId)
        END
    END

    SELECT
        [lpa].[COUNTRYREGIONID],
        [lpa].[ZIPCODE],
        [lpa].[STATE],
        [lpa].[COUNTY],
        [lpa].[CITY],
        [lpa].[STREET],
        [lpa].[STREETNUMBER],
        [lpa].[DISTRICTNAME],
        [lpa].[RECID],
        ISNULL([lacr].[ISOCODE], N'') AS ISOCODE,
        [lpa].[VALIDFROM],
        [lpa].[VALIDTO]
    FROM [ax].[LOGISTICSPOSTALADDRESS] AS lpa
    INNER JOIN [ax].[LOGISTICSLOCATION] AS ll ON ll.[RECID] = lpa.[LOCATION]
    LEFT OUTER JOIN [ax].[LOGISTICSADDRESSCOUNTRYREGION] AS lacr ON lacr.COUNTRYREGIONID = lpa.COUNTRYREGIONID
    WHERE ll.[RECID] = @bi_LogisticsLocationRecid
        AND GETUTCDATE() BETWEEN lpa.[VALIDFROM] AND lpa.[VALIDTO]
    ORDER BY [lpa].LOCATION, [lpa].VALIDFROM
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END
GO
PRINT N'Creating [crt].[GETTAXREGIMEINDIA]...';


GO

CREATE PROCEDURE [crt].[GETTAXREGIMEINDIA]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT
AS
BEGIN
    SET NOCOUNT ON;

    -- ChannelId is mandatory
    IF (@bi_ChannelId IS NULL)
    BEGIN
        RAISERROR (N'CHANNEL ID MANDATORY', 16, 1)
        RETURN;
    END

    SELECT
        rct_in.[INTERSTATETAXGROUP] AS 'TAXGROUPNAME'
    FROM [ax].[RETAILCHANNELTABLE_IN] as rct_in
    INNER JOIN [ax].[RETAILCHANNELTABLE] as rct
        ON rct_in.[RETAILCHANNELTABLE] = rct.[RECID]
    WHERE rct.[RECID] = @bi_ChannelId
    ORDER BY [rct].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
END;
GO
PRINT N'Creating [crt].[DELETESALESTRANSACTIONS]...';


GO


CREATE PROCEDURE [crt].[DELETESALESTRANSACTIONS]
    @tvp_SalesTransactionIds       [crt].[STRINGIDTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    DECLARE @dtt_ChangeDate             DATETIME;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    SET @dtt_ChangeDate = GETUTCDATE();

	-- Delete the sales transactions
	DELETE FROM [crt].SALESTRANSACTION
	WHERE 
		SALESTRANSACTION.TRANSACTIONID IN (SELECT STRINGID FROM @tvp_SalesTransactionIds)

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETTRADEAGREEMENTS]...';


GO

CREATE PROCEDURE [crt].[GETTRADEAGREEMENTS]
    @bi_ChannelId           BIGINT,
    @Relation               INT,
    @ItemCode               INT,
    @ItemRelation           NVARCHAR(20),
    @AccountCode            INT,
    @AccountRelations       [crt].[PRICEACCOUNTRELATIONSTABLETYPE] READONLY,
    @UnitId                 NVARCHAR(10),
    @CurrencyCode           NVARCHAR(3),
    @Quantity               NUMERIC(32,16),
    @ColorId                NVARCHAR(10),
    @SizeId                 NVARCHAR(10),
    @StyleId                NVARCHAR(10),
    @ConfigId               NVARCHAR(10),
    @ActiveDate             DATE
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @NoDate DATE = [crt].GETMINAXDATE();
    DECLARE @ABSQuantity NUMERIC(32,16) = abs(@Quantity);

    SELECT
        ta.RECID,
        ta.ITEMCODE,
        ta.ACCOUNTCODE,
        ta.ITEMRELATION,
        ta.ACCOUNTRELATION,
        ta.QUANTITYAMOUNTFROM,
        ta.QUANTITYAMOUNTTO,
        ta.FROMDATE,
        ta.TODATE,
        ta.AMOUNT,
        ta.CURRENCY,
        ta.PERCENT1,
        ta.PERCENT2,
        ta.SEARCHAGAIN,
        ta.PRICEUNIT,
        ta.RELATION,
        ta.UNITID,
        ta.MARKUP,
        ta.ALLOCATEMARKUP,
        ta.INVENTDIMID,
		ta.MAXIMUMRETAILPRICE_IN AS MAXIMUMRETAILPRICEINDIA
    FROM [ax].PRICEDISCTABLE ta
	INNER JOIN [ax].RETAILCHANNELTABLE AS c
		ON c.INVENTLOCATIONDATAAREAID = ta.DATAAREAID AND c.RECID = @bi_ChannelId
    LEFT JOIN [ax].INVENTDIM invdim ON ta.INVENTDIMID = invdim.INVENTDIMID AND ta.DATAAREAID = c.INVENTLOCATIONDATAAREAID
    WHERE
        ta.RELATION = @Relation
        AND ta.ITEMCODE = @ItemCode
        AND ta.ITEMRELATION = @ItemRelation
        AND ta.ACCOUNTCODE = @AccountCode

        -- USES Tvp: CREATE TYPE FINDPRICEAGREEMENT_ACCOUNTRELATIONS_TABLETYPE AS TABLE(ACCOUNTRELATION nvarchar(20) NOT NULL);
        AND (ta.ACCOUNTRELATION) IN (SELECT ar.ACCOUNTRELATION FROM @AccountRelations ar)

        AND ta.CURRENCY = @CurrencyCode
        AND ((@UnitId = '') OR (ta.UNITID = @UnitId))
        AND ta.QUANTITYAMOUNTFROM <= @ABSQuantity
        AND (ta.QUANTITYAMOUNTTO >= @ABSQuantity OR ta.QUANTITYAMOUNTTO = 0.0)
        AND ((ta.FROMDATE <= @ActiveDate OR ta.FROMDATE <= @NoDate)
                AND (ta.TODATE >= @ActiveDate OR ta.TODATE <= @NoDate))
        AND (invdim.INVENTCOLORID = @ColorId OR invdim.INVENTCOLORID = '')
        AND (invdim.INVENTSIZEID = @SizeId OR invdim.INVENTSIZEID = '')
        AND (invdim.INVENTSTYLEID = @StyleId OR invdim.INVENTSTYLEID = '')
        AND (invdim.CONFIGID = @ConfigId OR invdim.INVENTSTYLEID = '')

        -- ORDERBY CLAUSE MUST MATCH THAT IN AX TO ENSURE COMPATIBLE PRICING BEHAVIOR.
        -- SEE THE CLASS PRICEDISC.FINDPRICEAGREEMENT() AND TABLE PRICEDISCTABLE.PRICEDISCIDX
        ORDER BY ta.QUANTITYAMOUNTFROM, ta.RECID, ta.FROMDATE

END;
GO
PRINT N'Creating [crt].[COMPLETECUSTOMERACCOUNTACTIVATIONREQUEST]...';


GO

CREATE PROCEDURE [crt].[COMPLETECUSTOMERACCOUNTACTIVATIONREQUEST]
    @nvc_EmailAddress        NVARCHAR(100),
    @nvc_ActivationToken    UNIQUEIDENTIFIER,
    @nvc_ExternalIdentityIssuer NVARCHAR(500) OUTPUT,
    @nvc_ExternalIdentityId NVARCHAR(500) OUTPUT
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                        INT;
    DECLARE @i_TransactionIsOurs                INT;
    DECLARE @i_Error                            INT;
    DECLARE @bit_PendingActivationToken    INT;
    DECLARE @bi_EXTERNALIDTOCUSTOMERMAPRECID    BIGINT;
    DECLARE @bi_IdentityProviderRecId BIGINT;
    DECLARE @nvc_CustomerAccountNumber NVARCHAR(20);

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;
    SET @bit_PendingActivationToken = [crt].GETACTIVEACCOUNTACTIVATIONREQUESTSTATUS();
	
	IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    IF NOT EXISTS ( 
    SELECT CUSTOMERACCOUNTNUMBER FROM [crt].[RETAILCUSTOMEREMAILACTIVATION] 
    WHERE ACTIVATIONID = CAST(@nvc_ActivationToken AS UNIQUEIDENTIFIER) AND EMAIL = @nvc_EmailAddress AND STATUS = @bit_PendingActivationToken)
    BEGIN
      SET @i_ReturnCode =  1; -- No pending activation token found.
      GOTO exit_label
    END

    UPDATE [crt].[RETAILCUSTOMEREMAILACTIVATION] 
    SET STATUS = [crt].GETCLOSEDACCOUNTACTIVATIONREQUESTSTATUS(),
         @nvc_ExternalIdentityId = EXTERNALIDENTITYID,
		 @bi_IdentityProviderRecId = IDENTITYPROVIDERRECID,
		 @nvc_CustomerAccountNumber = CUSTOMERACCOUNTNUMBER
        WHERE ACTIVATIONID = CAST(@nvc_ActivationToken AS UNIQUEIDENTIFIER) AND EMAIL = @nvc_EmailAddress AND STATUS = @bit_PendingActivationToken
    
    IF NOT EXISTS ( 
    SELECT EXTERNALIDENTITYID FROM [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
    WHERE EXTERNALIDENTITYID = @nvc_ExternalIdentityId
		  AND PROVIDERID = @bi_IdentityProviderRecId
		  AND CUSTOMERACCOUNTNUMBER = @nvc_CustomerAccountNumber
          AND ISACTIVATED=0)
    BEGIN
      SET @i_ReturnCode =  2; -- No inactive external identity was associated with the provided activation token.
      GOTO exit_label
    END

     
    UPDATE [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
    SET ISACTIVATED = 1
    WHERE EXTERNALIDENTITYID = @nvc_ExternalIdentityId
		  AND PROVIDERID = @bi_IdentityProviderRecId
		  AND CUSTOMERACCOUNTNUMBER = @nvc_CustomerAccountNumber
    
    IF NOT EXISTS ( 
    SELECT RECID FROM [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
    WHERE 
	    ISACTIVATED = 1 
		AND EXTERNALIDENTITYID = @nvc_ExternalIdentityId
		AND PROVIDERID = @bi_IdentityProviderRecId
		AND CUSTOMERACCOUNTNUMBER = @nvc_CustomerAccountNumber)
    BEGIN
      SET @i_ReturnCode =  3; -- No activated mapping was found.
      GOTO exit_label
    END

    SELECT @nvc_ExternalIdentityIssuer = ISSUER
            FROM [ax].[RETAILIDENTITYPROVIDER]
            WHERE RECID = @bi_IdentityProviderRecId

    -- Clean up requests older than one week
    DELETE FROM [crt].[RETAILCUSTOMEREMAILACTIVATION]
        WHERE LASTMODIFIEDTIME < DATEADD(DAY, -7, SYSUTCDATETIME())

	SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;
	
exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETUNITOFMEASUREOPTIONS]...';


GO

-- Gets the unit of measure options for the given product identifiers.
CREATE PROCEDURE [crt].[GETUNITOFMEASUREOPTIONS]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId            BIGINT,
    @tvp_ProductIds          [crt].[RECORDIDTABLETYPE]    READONLY
AS
BEGIN
    SET NOCOUNT ON;

    -- Get the data area for the specified channel identifier.
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = rct.INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId;

    -- Retrieves the unit of measure conversions.
    SELECT
        tvppi.RECID             AS PRODUCT,
        it.ITEMID               AS ITEMID,
        uomc.FROMUNITOFMEASURE  AS FROMUNITID,
        uom1.SYMBOL             AS FROMUOMSYMBOL,
        uomc.TOUNITOFMEASURE    AS TOUNITID,
        uom2.SYMBOL             AS TOUOMSYMBOL
    FROM [ax].UNITOFMEASURECONVERSION UOMC
    INNER JOIN [ax].UNITOFMEASURE uom1 ON uom1.RECID = uomc.FROMUNITOFMEASURE
    INNER JOIN [ax].UNITOFMEASURE uom2 ON uom2.RECID = uomc.TOUNITOFMEASURE
    INNER JOIN [ax].INVENTTABLE it ON (it.PRODUCT = uomc.PRODUCT AND it.DATAAREAID = @nvc_DataAreaId) OR uomc.PRODUCT = 0
    INNER JOIN [ax].INVENTTABLEMODULE itm ON (itm.ITEMID = it.ITEMID AND itm.MODULETYPE = 2 AND itm.DATAAREAID = @nvc_DataAreaId)
        AND (uom1.SYMBOL = itm.UNITID OR uom2.SYMBOL = itm.UNITID)
    INNER JOIN @tvp_ProductIds tvppi ON tvppi.RECID = it.PRODUCT

END;
GO
PRINT N'Creating [crt].[GETCOUNTRYREGIONS]...';


GO

CREATE PROCEDURE [crt].[GETCOUNTRYREGIONS]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_LanguageId          NVARCHAR(10)

AS
BEGIN

    DECLARE @tvp_CountryRegionIds [crt].STRINGIDTABLETYPE;

    SET NOCOUNT ON

    -- Select the countryId matching the criteria.
    INSERT INTO @tvp_CountryRegionIds
    SELECT DISTINCT
        [LCNTRY].COUNTRYREGIONID
    FROM [ax].LOGISTICSADDRESSCOUNTRYREGION LCNTRY
    INNER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION LTRANS ON LTRANS.COUNTRYREGIONID = LCNTRY.COUNTRYREGIONID
    WHERE (@nvc_LanguageId IS NULL OR LTRANS.LANGUAGEID = @nvc_LanguageId)
    ORDER BY [LCNTRY].COUNTRYREGIONID
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

    -- Fetch the details of CountryRegions
    SELECT
        LCNTRY.COUNTRYREGIONID
        ,LCNTRY.ISOCODE
        ,LCNTRY.TIMEZONE
        ,LCNTRY.ADDRFORMAT AS ADDRESSFORMATID
        ,LFORMAT.NAME AS ADDRESSFORMATNAME
        ,LTRANS.SHORTNAME
        ,LTRANS.LONGNAME
        ,LTRANS.LANGUAGEID
    FROM @tvp_CountryRegionIds CRI
    INNER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION LCNTRY ON LCNTRY.COUNTRYREGIONID = CRI.STRINGID
    INNER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION LTRANS ON LTRANS.COUNTRYREGIONID = LCNTRY.COUNTRYREGIONID
    INNER JOIN [ax].LOGISTICSADDRESSFORMATHEADING LFORMAT ON LFORMAT.ADDRFORMAT = LCNTRY.ADDRFORMAT
    WHERE (LTRANS.LANGUAGEID = @nvc_LanguageId OR @nvc_LanguageId IS NULL)

    -- Fetch the Address formatting information
    SELECT
        LACR.COUNTRYREGIONID
       ,LAFL.ELEMENT
       ,CAST(LAFL.LINENUM AS INT) AS LINEINDEX
       ,LAFL.DATAENTRYONLY
       ,LAFL.SEPARATOR
       ,LAFL.SEPARATORCRLF
       ,LAFL.INACTIVE
       ,LAFL.EXPAND
       ,LAFL.SPECIAL
       ,LAFL.NUMOFSPACES
    FROM @tvp_CountryRegionIds CRI
    INNER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION LACR ON LACR.COUNTRYREGIONID = CRI.STRINGID
    INNER JOIN [ax].LOGISTICSADDRESSFORMATHEADING LAFH ON LACR.ADDRFORMAT = LAFH.ADDRFORMAT
    INNER JOIN [ax].LOGISTICSADDRESSFORMATLINES LAFL ON LAFH.ADDRFORMAT = LAFL.ADDRFORMAT
    WHERE
        LAFL.INACTIVE = 0
    ORDER BY LINEINDEX ASC

END;
GO
PRINT N'Creating [crt].[INSERTINVOICETRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTINVOICETRANS]
    @bi_ChannelId           BIGINT,
    @TVP_InvoiceTrans       [crt].[RETAILTRANSACTIONORDERINVOICETRANSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONORDERINVOICETRANS
    (
        [DATAAREAID],
        [INVOICEID],
        [AMOUNTCUR],        
        [SALESORDERINVOICETYPE],
        [TRANSACTIONSTATUS],
        [LINENUM],
        [STOREID],
        [TERMINALID],
        [TRANSACTIONID],
        [CHANNEL]
    )
    SELECT
        [DATAAREAID],
        [INVOICEID],
        [AMOUNTCUR],
        1,	--OrderInvoiceType::Invoice == 1
        [TRANSACTIONSTATUS],
        [LINENUM],
        [STOREID],
        [TERMINALID],
        [TRANSACTIONID],
        @bi_ChannelId
    FROM @TVP_InvoiceTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[SAVEUSERCREDENTIALS]...';


GO
CREATE PROCEDURE [crt].[SAVEUSERCREDENTIALS]
    @bi_recId bigint
    ,@nvc_StaffId nvarchar(25)
    ,@nvc_HashedCredential nvarchar(524)
    ,@nvc_Salt   nvarchar(524)    
    ,@nvc_HashAlgorithm nvarchar(50)
    ,@nvc_GrantType nvarchar(256)								
    ,@nvc_CredentialId nvarchar(256)
    ,@nvc_AdditionalAuthenticationData nvarchar(max)
AS
BEGIN
    SET NOCOUNT ON
    BEGIN TRANSACTION;
		
    MERGE [ax].[RETAILSTAFFCREDENTIALTABLE] RTCT
    USING
    (
	    VALUES
	    (
            @BI_RECID,
            @NVC_STAFFID,
            @NVC_HASHEDCREDENTIAL,
            @NVC_SALT,
            @NVC_HASHALGORITHM,
            @NVC_GRANTTYPE,
            @NVC_CREDENTIALID,
            @NVC_ADDITIONALAUTHENTICATIONDATA
	    )
    ) AS INPUT (RECID, STAFFID, HASHEDCREDENTIAL, SALT, HASHALGORITHM, GRANTTYPE, CREDENTIALID, ADDITIONALAUTHENTICATIONDATA)
    -- make sure to filter deleted records out to avoid updating deleted records (deleted records have a deleted date time set different from min ax date [ax null date])
    ON INPUT.STAFFID = RTCT.STAFFID AND INPUT.GRANTTYPE = RTCT.GRANTTYPE AND RTCT.DELETEDDATETIME = [crt].GETMINAXDATETIME()
    WHEN MATCHED THEN
        UPDATE SET
            RTCT.HASHEDCREDENTIAL = INPUT.HASHEDCREDENTIAL,
            RTCT.SALT = INPUT.SALT,
            RTCT.HASHALGORITHM = INPUT.HASHALGORITHM,
            RTCT.GRANTTYPE = INPUT.GRANTTYPE,
            RTCT.CREDENTIALID = INPUT.CREDENTIALID,
            RTCT.ADDITIONALAUTHENTICATIONDATA = INPUT.ADDITIONALAUTHENTICATIONDATA
    WHEN NOT MATCHED THEN
	    INSERT
	    (
		    RECID,
		    STAFFID,
		    GRANTTYPE,
		    CREDENTIALID,
		    HASHEDCREDENTIAL,
		    SALT,
		    HASHALGORITHM,
		    ADDITIONALAUTHENTICATIONDATA,
		    DELETEDDATETIME,
		    DELETEDDATETIMETZID
	    )
	    VALUES
	    (
		    INPUT.RECID,
		    INPUT.STAFFID,
		    INPUT.GRANTTYPE,
		    INPUT.CREDENTIALID,
		    INPUT.HASHEDCREDENTIAL,
		    INPUT.SALT,
		    INPUT.HASHALGORITHM,
		    INPUT.ADDITIONALAUTHENTICATIONDATA,
		    [crt].GETMINAXDATETIME(), -- this represents utc null date in AX
		    0
	    );

    COMMIT TRANSACTION;
END;
GO
PRINT N'Creating [crt].[GETDEVICECONFIGURATION]...';


GO
CREATE PROCEDURE [crt].[GETDEVICECONFIGURATION]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId           BIGINT, -- The unique channel identifier (required).
    @nvc_TerminalId         NVARCHAR(10), -- The terminal identifier (required).
    @b_IncludeImages        BIT = 1 -- A value indicating whether to retrieve images.
AS
BEGIN

/*  // data level map for device configuration:
    //
    // data level             |   content
    // =======================|================================================================
    // device config (header) |   register info, hardware profile info, visual profile info etc.
    // drawers                |   + drawer name, IP, port
    // pinters                |   + printer name, IP, port
    // pinpad                 |   + pinpad name, IP, port
    // =======================|================================================================
*/

    SET NOCOUNT ON
    DECLARE @i_ReturnCode               INT;

    -- initializes the return code; we'll return the number of data sets as the return code.
    SET @i_ReturnCode = 0;

    -- Select device configuration (header)
    SELECT
        AGGREGATEITEMS,
        AGGREGATEITEMSFORPRINTING,
        AGGREGATEPAYMENTS,
        AUDITENABLED,
        NFCEVOIDED,
        NFCECONTINGENCYMNODENABLED,
        CREATEASYNCCUSTOMERS,
        CREATEOFFLINECUSTOMERORDERS,
        DAYSTRANSACTIONSEXISTS,
        DISCOUNTATTOTAL,
        DISPLAYSECONDARYTOTALCURRENCY,
        ENDOFTRANSACTION,
        ITEMNOTONFILE,
        LIMITSTAFFLISTTOSTORE,
        LINEITEMTAXCHANGE,
        PRODUCTDISCOUNT,
        MARKUP,
        MAXIMUMPRICE,
        MAXIMUMQTY,
        MINIMUMPASSWORDLENGTH,
        MUSTKEYINPRICEIFZERO,
        FUNCTIONALITYPROFILEDESCRIPTION,
        RETURNPRODUCT,
        OPENDRAWER,
        OVERRIDEPRICE,
        PRINTXREPORTONTERMINAL,
        PROFILEID,
        REFUNDSALE,
        SALESPERSON,
        SEARCHCUSTOMERSINAX,
        SECONDARYTOTALCURRENCY,
        SERIALNUMBER,
        SHOWSTAFFLISTATLOGON,
        STAFFBARCODELOGON,
        STAFFBARCODELOGONREQUIRESPASSWORD,
        STAFFCARDLOGON,
        STAFFCARDLOGONREQUIRESPASSWORD,
        STARTOFTRANSACTION,
        TAENABLEREGISTRATION,
        TENDERDECLARATION,
        TRANSACTIONTAXCHANGE,
        VOIDISPRESSED,
        VOIDPAYMENT,
        VOIDTRANSACTION,
        INCLUDEKITCOMPONENTS,
        MAXTRANSACTIONSEARCHRESULTS,
        REQUIREAMOUNTDECLARATION,
        DECIMALNOTREQUIREDFORMINORCURRENCYUNIT,
        MANUALCALCULATEDISCOUNTS,
        CULTURENAME,
        HIDETRAININGMODE,
        PHONE,
        STATEMENTMETHOD,
        CHANNELID,
        STORENUMBER,
        TAXGROUP,
        TAXIDENTIFICATIONNUMBER,
        TAXOVERRIDEGROUP,
        TENDERDECLARATIONCALCULATION,
        USECUSTOMERBASEDTAX,
        USEDESTINATIONBASEDTAX,
        AUTOLOGOFFTIMEOUT,
        CREATERECORDING,
        CUSTOMERDISPLAYTEXT1,
        CUSTOMERDISPLAYTEXT2,
        EFTSTORERECID,
        EFTTERMINALID,
        EXITAFTEREACHTRANSACTION,
        HARDWAREPROFILE,
        LOCATION,
        TERMINALDESCRIPTION,
        OPENDRAWERATLILO,
        PLAYBACKRECORDING,
        PRINTVATREFUNDCHECKS,
        SELECTHARDWARESTATIONONTENDERING,
        STANDALONE,
        TERMINALID,
        TERMINALSTATEMENT,
        COLOR,
        POSSKINNAME,
        FONTSCHEME,
        IIF (@b_IncludeImages = 1, LOGONBACKGROUNDPICTURE, null) AS LOGONBACKGROUNDPICTURE,
        IIF (@b_IncludeImages = 1, LOGONBACKGROUNDPICTUREPORTRAIT, null) AS LOGONBACKGROUNDPICTUREPORTRAIT,
        IIF (@b_IncludeImages = 1, BACKGROUNDPICTURE, null) AS BACKGROUNDPICTURE,
        CURRENCY,
        INVENTLOCATION,
        STATEMENTPOSTINGASBUSINESSDAY,
        STATEMENTCALCULATIONBATCHENDTIMEINSECONDS,
        OFFLINEPROFILE,
        CHECKNEWDBINTERVAL,
        TRXUPLOADINTERVAL,
        RECONNECTINTERVAL,
        OFFLINETIMEOUT
    FROM [crt].DEVICECONFIGURATIONSVIEW
        WHERE CHANNELID = @bi_ChannelId
        AND TERMINALID = @nvc_TerminalId;

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- Select drawer configuration
    SELECT 
        rhc.RECID,
        rhp.DRAWERDEVICENAME as 'DEVICENAME',
        rhc.DRAWERIP as 'IPADDRESS',
        rhc.DRAWERPORT as 'PORT',
        rhc.TERMINALID
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILTERMINALTABLE] rt ON rt.TERMINALID = rhc.TERMINALID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rt.HARDWAREPROFILE = rhp.PROFILEID
        WHERE rhc.TERMINALID = @nvc_TerminalId
        AND rhp.DRAWER = 4 -- Network
    UNION ALL
    SELECT
        rhc.RECID,
        rhp.DRAWER2DEVICENAME as 'DEVICENAME',
        rhc.DRAWER2IP as 'IPADDRESS',
        rhc.DRAWER2PORT as 'PORT',
        rhc.TERMINALID
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILTERMINALTABLE] rt ON rt.TERMINALID = rhc.TERMINALID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rt.HARDWAREPROFILE = rhp.PROFILEID
        WHERE rhc.TERMINALID = @nvc_TerminalId
        AND rhp.DRAWER2 = 4; -- Network

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- Select printer configuration
    SELECT 
        rhc.RECID,
        rhp.PRINTERDEVICENAME as 'DEVICENAME',
        rhc.PRINTERIP as 'IPADDRESS',
        rhc.PRINTERPORT as 'PORT',
        rhc.TERMINALID
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILTERMINALTABLE] rt ON rt.TERMINALID = rhc.TERMINALID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rt.HARDWAREPROFILE = rhp.PROFILEID
        WHERE rhc.TERMINALID = @nvc_TerminalId
        AND rhp.PRINTER = 4 -- Network
    UNION ALL
    SELECT
        rhc.RECID,
        rhp.PRINTER2DEVICENAME as 'DEVICENAME',
        rhc.PRINTER2IP as 'IPADDRESS',
        rhc.PRINTER2PORT as 'PORT',
        rhc.TERMINALID
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILTERMINALTABLE] rt ON rt.TERMINALID = rhc.TERMINALID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rt.HARDWAREPROFILE = rhp.PROFILEID
        WHERE rhc.TERMINALID = @nvc_TerminalId
        AND rhp.PRINTER = 4; -- Network

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- Select pinpad configuration
    SELECT 
        rhc.RECID,
        rhp.PINPADDEVICENAME as 'DEVICENAME',
        rhc.PINPADIP as 'IPADDRESS',
        rhc.PINPADPORT as 'PORT',
        rhc.TERMINALID
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILTERMINALTABLE] rt ON rt.TERMINALID = rhc.TERMINALID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rt.HARDWAREPROFILE = rhp.PROFILEID
        WHERE rhc.TERMINALID = @nvc_TerminalId
        AND rhp.PINPAD = 3; -- Network

    SET @i_ReturnCode = @i_ReturnCode + 1;
    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTTAXTRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTTAXTRANS]
    @bi_ChannelId           BIGINT,
    @TVP_TaxTrans           [crt].[RETAILTRANSACTIONTAXTRANSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONTAXTRANS
    (
        [AMOUNT],
        [DATAAREAID],
        [ISINCLUDEDINPRICE],
        [SALELINENUM],
        [STOREID],
        [TAXCODE],
        [TERMINALID],
        [TRANSACTIONID],
        [CHANNEL]
    )
    SELECT
        [AMOUNT],
        [DATAAREAID],
        [ISINCLUDEDINPRICE],
        [SALELINENUM],
        [STOREID],
        [TAXCODE],
        [TERMINALID],
        [TRANSACTIONID],
        @bi_ChannelId
    FROM @TVP_TaxTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTBANKEDTENDERTRANS]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    INSERTBANKEDTENDERTRANS inserts tender transactions into AX.[RETAILTRANSACTIONBANKEDTENDERTRANS].
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[INSERTBANKEDTENDERTRANS]
    @bi_channelId                   BIGINT,
    @TVP_TenderDropTransTable       [crt].[TENDERDROPTRANSTYPE]    READONLY,
    @d_BusinessDate                 DATE
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].[RETAILTRANSACTIONBANKEDTENDERTRANS]
           (
            [AMOUNTCUR]
           ,[AMOUNTCURPOS]
           ,[AMOUNTMST]
           ,[AMOUNTMSTPOS]
           ,[AMOUNTTENDERED]
           ,[AMOUNTTENDEREDPOS]
           ,[BANKBAGNO]
           ,[CARDORACCOUNT]
           ,[CARDTYPEID]
           ,[CHANNEL]
           ,[CURRENCY]
           ,[EXCHRATE]
           ,[EXCHRATEMST]
           ,[LINENUM]
           ,[QTY]
           ,[REPLICATED]
           ,[SHIFT]
           ,[SHIFTDATE]
           ,[STAFF]
           ,[STATEMENTCODE]
           ,[STATUSTYPE]
           ,[STORE]
           ,[TENDERTYPE]
           ,[TERMINAL]
           ,[TRANSACTIONID]
           ,[TRANSACTIONSTATUS]
           ,[TRANSDATE]
           ,[TRANSTIME]
           ,[DATAAREAID]
           ,[BUSINESSDATE])
     SELECT
           [AMOUNTCUR]
           ,[AMOUNTCURPOS]
           ,[AMOUNTMST]
           ,[AMOUNTMSTPOS]
           ,[AMOUNTTENDERED]
           ,[AMOUNTTENDEREDPOS]
           ,[BANKBAGNO]
           ,[CARDORACCOUNT]
           ,[CARDTYPEID]
           ,@bi_channelId
           ,[CURRENCY]
           ,[EXCHRATE] * 100.00 -- ePOS behavior
           ,[EXCHRATEMST] * 100.00 -- ePOS behavior
           ,[LINENUM]
           ,[QTY]
           ,[REPLICATED]
           ,[SHIFT]
           ,[SHIFTDATE]
           ,[STAFF]
           ,[STATEMENTCODE]
           ,[STATUSTYPE]
           ,[STORE]
           ,[TENDERTYPE]
           ,[TERMINAL]
           ,[TRANSACTIONID]
           ,[TRANSACTIONSTATUS]
           ,[TRANSDATE]
           ,[TRANSTIME]
           ,[DATAAREAID]
           ,@d_BusinessDate
            FROM @TVP_TenderDropTransTable AS Source

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;
        
        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETLATESTNUMBERSEQUENCE]...';


GO

CREATE PROCEDURE [crt].[GETLATESTNUMBERSEQUENCE]
    @bi_ChannelId                       bigint,
    @nvc_TerminalId                     nvarchar(10)
AS

BEGIN
    SET NOCOUNT ON;

	DECLARE @nvc_StoreTerminalPrefix nvarchar(100);
	DECLARE @nvc_TransactionIdFormat nvarchar(150);
	DECLARE @nvc_StoreNumber nvarchar(20);
	
	-- Get store number from channel id	
	SELECT @nvc_StoreNumber = RST.STORENUMBER
	FROM ax.RETAILSTORETABLE RST
	WHERE
		RST.RECID = @bi_ChannelId

	-- composes the format for the number sequence
	SET @nvc_StoreTerminalPrefix = @nvc_StoreNumber + '-' + @nvc_TerminalId + '-';
	SET @nvc_TransactionIdFormat = @nvc_StoreTerminalPrefix + '[0-9]%'; -- format: storeid-terminalid-numbersequence

	-- get max shift id
    WITH SHIFTNUMSEQ(SHIFTID)
    AS
    (
        SELECT MAX(BATCHID) AS 'SHIFTID' FROM ax.RETAILPOSBATCHTABLE BT
        WHERE BT.CHANNEL = @bi_ChannelId AND BT.TERMINALID = @nvc_TerminalId
        UNION
        SELECT MAX(SHIFTID) from crt.RETAILSHIFTSTAGINGTABLE ST
        WHERE ST.CHANNEL = @bi_ChannelId AND ST.TERMINALID = @nvc_TerminalId
    )
    SELECT TOP 1 MAX(SHIFTID) AS SHIFTID from SHIFTNUMSEQ;

	-- get max transaction id
	WITH TRANSACTION_NUMBERSEQUENCES AS
	(
		-- get the latest number sequence for a transactions
		SELECT TOP 1
			-- removes prefix in case transaction id is formated
			-- this is no-op when transaction id is integer
			CAST(REPLACE(ST.TRANSACTIONID, @nvc_StoreTerminalPrefix, '') as BIGINT) as NUMBERSEQUENCE
		FROM ax.RETAILTRANSACTIONTABLE ST
		WHERE
			ST.CHANNEL = @bi_ChannelId 
			AND	ST.TERMINAL = @nvc_TerminalId 
			AND
			(
				ISNUMERIC(TRANSACTIONID) = 1						-- just a number sequence
				OR TRANSACTIONID LIKE @nvc_TransactionIdFormat		-- or follows the storeid-terminalid-numbersequence format
			)
		ORDER BY
			ST.CREATEDDATETIME DESC,
			ST.ROWVERSION DESC

		UNION

		-- get the latest number sequence for a cart
		SELECT TOP 1
			-- removes prefix in case transaction id is formated
			-- this is no-op when transaction id is integer
			CAST(REPLACE(ST.TRANSACTIONID, @nvc_StoreTerminalPrefix, '') as BIGINT) as NUMBERSEQUENCE
		FROM crt.SALESTRANSACTION ST
		WHERE
			ST.CHANNELID = @bi_ChannelId 
			AND	ST.TERMINALID = @nvc_TerminalId 
			AND
			(
				ISNUMERIC(TRANSACTIONID) = 1						-- just a number sequence
				OR TRANSACTIONID LIKE @nvc_TransactionIdFormat		-- or follows the storeid-terminalid-numbersequence format
			)
		ORDER BY
			ST.CREATEDDATETIME DESC,
			ST.ROWVERSION DESC
	)
	SELECT CAST(COALESCE(MAX(NUMBERSEQUENCE), 0) as varchar(100)) as TRANSACTIONID FROM TRANSACTION_NUMBERSEQUENCES;

	-- get max receipt number sequences
	WITH MaxTransaction(CREATEDDATETIME, TYPE)
	AS
	(
		SELECT 
			MAX(CREATEDDATETIME) AS CREATEDDATETIME,
			TYPE
		FROM
			ax.RETAILTRANSACTIONTABLE RT
		WHERE
			RT.CHANNEL = @bi_ChannelId 
			AND RT.TERMINAL = @nvc_TerminalId
			AND COALESCE(RT.RECEIPTID, '') <> '' 
		GROUP BY
			TYPE, CHANNEL, TERMINAL
	)
    SELECT
		RT.RECEIPTID, 
		RT.TYPE, 
		RT.NETAMOUNT
	FROM
		ax.RETAILTRANSACTIONTABLE RT
    CROSS JOIN MaxTransaction MT
    WHERE
		RT.TYPE = MT.TYPE
		AND RT.CREATEDDATETIME = MT.CREATEDDATETIME

END;
GO
PRINT N'Creating [crt].[INSERTLOYALTYCARDTIER]...';


GO

CREATE PROCEDURE [crt].[INSERTLOYALTYCARDTIER]
    @TVP_LOYALTYCARDTIERTABLETYPE       [crt].[LOYALTYCARDTIERTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].[RETAILLOYALTYCARDTIER]
    (
        [RECID],
		[AFFILIATION],
		[LOYALTYCARD],
		[LOYALTYTIER],
		[VALIDFROM],
		[VALIDTO]
    )
    SELECT
        [RECID],
		[AFFILIATION],
		[LOYALTYCARD],
		[LOYALTYTIER],
		[VALIDFROM],
		[VALIDTO]
    FROM @TVP_LOYALTYCARDTIERTABLETYPE;


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[POPULATECHANNELREFINABLEATTRIBUTE]...';


GO
CREATE PROCEDURE [crt].[POPULATECHANNELREFINABLEATTRIBUTE]
AS BEGIN

    DELETE [crt].[CHANNELREFINABLEATTRIBUTE];
    
    INSERT INTO [crt].[CHANNELREFINABLEATTRIBUTE]
    (
        CHANNEL, 
        ATTRIBUTE, 
        KEYNAME, 
        DATATYPE
    )
    SELECT
        rppacm.HOSTCHANNEL,
        rppacm.ATTRIBUTE,
        rppacm.KEYNAME,
        rppacm.DATATYPE
    FROM [ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] rppacm
    WHERE CONVERT(XML, COALESCE(rppacm.METADATA, '<ProductProperty IsRefinable="false" />')).exist('/ProductProperty[@IsRefinable="true"]') = 1
    
END;
GO
PRINT N'Creating [crt].[GETDISCOUNTTRADEAGREEMENTS]...';


GO

CREATE PROCEDURE [crt].[GETDISCOUNTTRADEAGREEMENTS]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @ItemIds                    [crt].[STRINGIDTABLETYPE] READONLY,
    @Customer                   nvarchar(20),
    @MinDate                    DATE,
    @MaxDate                    DATE,
    @nvc_CurrencyCode           NVARCHAR(3)
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @NoDate date = [crt].GETMINAXDATE();
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = INVENTLOCATIONDATAAREAID from [ax].RETAILCHANNELTABLE where RECID = @bi_ChannelId

    DECLARE @CustomerPriceGroups TABLE (LINEDISC nvarchar(20), MULTILINEDISC nvarchar(20), ENDDISC nvarchar(20));

    INSERT INTO @CustomerPriceGroups
        (LINEDISC, MULTILINEDISC, ENDDISC)
    (SELECT LINEDISC, MULTILINEDISC, ENDDISC
        FROM [ax].CUSTTABLE WHERE ACCOUNTNUM = @Customer AND DATAAREAID = @nvc_DataAreaId)

    DECLARE @LineDiscGroup nvarchar(20) = (SELECT LINEDISC from @CustomerPriceGroups)
    DECLARE @MultilineDiscGroup nvarchar(20) = (SELECT MULTILINEDISC from @CustomerPriceGroups)
    DECLARE @TotalDiscGroup nvarchar(20) = (SELECT ENDDISC from @CustomerPriceGroups)

    select STRINGID into #tempItem from @ItemIds

    DECLARE @ItemLineDiscGroups TABLE (LINEDISC nvarchar(20));
    INSERT INTO @ItemLineDiscGroups
        (LINEDISC)
    (SELECT DISTINCT LINEDISC FROM [ax].[INVENTTABLEMODULE]
        INNER JOIN #tempItem ON ITEMID = STRINGID
        WHERE MODULETYPE = 2 AND DATAAREAID = @nvc_DataAreaId)

    DECLARE @ItemMultilineDiscGroups TABLE (MULTILINEDISC nvarchar(20));
    INSERT INTO @ItemMultilineDiscGroups
        (MULTILINEDISC)
    (SELECT DISTINCT MULTILINEDISC FROM [ax].[INVENTTABLEMODULE]
        INNER JOIN #tempItem ON ITEMID = STRINGID
        WHERE MODULETYPE = 2 AND DATAAREAID = @nvc_DataAreaId)

    SELECT
        ta.RECID,
        ta.ITEMCODE,
        ta.ACCOUNTCODE,
        ta.ITEMRELATION,
        ta.ACCOUNTRELATION,
        ta.QUANTITYAMOUNTFROM,
        ta.QUANTITYAMOUNTTO,
        ta.FROMDATE,
        ta.TODATE,
        ta.AMOUNT,
        ta.CURRENCY,
        ta.PERCENT1,
        ta.PERCENT2,
        ta.SEARCHAGAIN,
        ta.PRICEUNIT,
        ta.RELATION,
        ta.UNITID,
        ta.MARKUP,
        ta.ALLOCATEMARKUP,
        ta.INVENTDIMID,
        ta.MAXIMUMRETAILPRICE_IN AS MAXIMUMRETAILPRICEINDIA,
        invdim.CONFIGID,
        invdim.INVENTCOLORID,
        invdim.INVENTSIZEID,
        invdim.INVENTSTYLEID
    FROM [ax].PRICEDISCTABLE ta
    INNER JOIN [ax].RETAILCHANNELTABLE AS c
        ON c.INVENTLOCATIONDATAAREAID = ta.DATAAREAID AND c.RECID = @bi_ChannelId
    LEFT JOIN [ax].INVENTDIM invdim ON ta.INVENTDIMID = invdim.INVENTDIMID AND ta.DATAAREAID = invdim.DATAAREAID
    WHERE
        -- agreement is of one of the sales discount types
        ta.RELATION IN (5, 6, 7)
        AND ta.CURRENCY = @nvc_CurrencyCode 

        -- and currently active
        AND ((ta.FROMDATE <= @MinDate OR ta.FROMDATE <= @NoDate)
                AND (ta.TODATE >= @MaxDate OR ta.TODATE <= @NoDate))

        AND ta.DATAAREAID = @nvc_DataAreaId
        -- and customer/group relation matches
        AND
        (
         -- account code is group and relation is in the price groups
         ((ta.ACCOUNTCODE = 1) AND
          (
            (ta.RELATION = 5 AND ta.ACCOUNTRELATION = @LineDiscGroup)) OR
            (ta.RELATION = 6 AND ta.ACCOUNTRELATION = @MultilineDiscGroup) OR
            (ta.RELATION = 7 AND ta.ACCOUNTRELATION = @TotalDiscGroup))
         OR
         -- or account code is customer and customer is on the agreement
         ((ta.ACCOUNTCODE = 0) AND (ta.ACCOUNTRELATION = @Customer))
         OR
         -- or account code is ALL customers
         ((ta.ACCOUNTCODE = 2))
        )

        -- and item/group relation matches
        AND
        (
         -- item code is one of the items passed in
         ((ta.ITEMCODE = 0) AND (ta.ITEMRELATION in (SELECT i.STRINGID FROM @ItemIds i)))
         OR
         -- item code is group and trade agreement type is line discount, match item line discounts
         ((ta.ITEMCODE = 1) AND (ta.RELATION = 5) AND (ta.ITEMRELATION IN (SELECT LINEDISC FROM @ItemLineDiscGroups)))
         OR
         -- item code is group and trade agreement type is multiline discount, match item line multiline discounts
         ((ta.ITEMCODE = 1) AND (ta.RELATION = 6) AND (ta.ITEMRELATION IN (SELECT MULTILINEDISC FROM @ItemMultilineDiscGroups)))
         OR
         -- item code is all items
         (ta.ITEMCODE = 2)
        )

        -- and warehouse is either for all or for current channel
        AND
        (
         invdim.INVENTLOCATIONID = '' OR (invdim.INVENTLOCATIONID = c.INVENTLOCATION)
        )
    ORDER BY [ta].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETKITCOMPONENTSINFO]...';


GO

CREATE PROCEDURE [crt].[GETKITCOMPONENTSINFO]
    @tvp_QueryResultSettings           [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                      BIGINT,
    @dt_ChannelDate                    DATE,   -- The current date in the channel's time zone.
    @tvp_KitComponentProductListings   [crt].[RECORDIDTABLETYPE] READONLY
AS
BEGIN

SET NOCOUNT ON

DECLARE @kitProductMasterIds                [crt].[RECORDIDTABLETYPE];
DECLARE @components                         [crt].[RECORDIDTABLETYPE];
DECLARE @tvp_KitComponentVariantsInfo       [crt].[KITCOMPONENTINFOTYPE]
DECLARE @tvp_ExplodedKitComponentVariants   [crt].[KITCOMPONENTINFOTYPE]

-- Create a temporary table to store the assorted products.
DECLARE @tbl_AssortedExplodedProducts TABLE (
    PRODUCTID                   BIGINT NOT NULL,
    VARIANTID                   BIGINT NOT NULL,
    ITEMID                      NVARCHAR(20) NOT NULL
)


-- Get the master productid and standard product ids for in  @tvp_KitComponentProductListings -- this is used as input to crt.GetAssortedProducts
INSERT @components
SELECT KCPL.RECID FROM @tvp_KitComponentProductListings KCPL            -- Retrieve the master product ids of the components (if the component is standalone product or a product master) in @tvp_KitComponentProductListings
    INNER JOIN [ax].INVENTTABLE IT ON IT.PRODUCT = KCPL.RECID
UNION                                                                   -- Retrieve the master product ids of the components (if the component is variant) in @tvp_KitComponentProductListings
SELECT DPV.PRODUCTMASTER FROM @tvp_KitComponentProductListings KCPL
    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT DPV ON DPV.RECID = KCPL.RECID


--from @components, filter out the products which are not assorted -
-- Note: skipExpansion is set to false hence the output contains all variants of the master products
INSERT @tbl_AssortedExplodedProducts (PRODUCTID, VARIANTID, ITEMID)
SELECT
    AP.PRODUCTID,
    AP.VARIANTID,
    AP.ITEMID
FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0, 0 /*SkipExpansion=0*/, 1, @components) AP


-- get the productmasterid of all kits
INSERT @kitProductMasterIds SELECT PRODUCTMASTER from [ax].RETAILKIT

-- First explode all the kit components/substitutes that are product masters

INSERT INTO @tvp_ExplodedKitComponentVariants
SELECT
    AP.VARIANTID as KITLINEPRODUCTLISTING,
    RKLDV.QUANTITY,
    RKLDV.UNIT,
    RKLDV.CHARGE,
    AP.ITEMID,
    AP.PRODUCTID,
    CAST(RKLDV.ISDEFAULTCOMPONENT AS DEC(18,0)),
    RKLDV.KITPRODUCTMASTERLISTING AS KITPRODUCTMASTERLISTING,
    RKLDV.KITLINEIDENTIFIER,
    RKLDV.CHANNEL
FROM [crt].GETRETAILKITLINEDEFINITION(@bi_ChannelId, @dt_ChannelDate, @kitProductMasterIds) RKLDV
    INNER JOIN @tbl_AssortedExplodedProducts AP ON (RKLDV.KITLINEPRODUCTLISTING =  AP.PRODUCTID AND  AP.VARIANTID <> 0)

-- Collect information of all kit components/substitutes that are non product masters (distinct products).

INSERT INTO @tvp_KitComponentVariantsInfo
SELECT
    RKLDV.KITLINEPRODUCTLISTING,
    RKLDV.QUANTITY,
    RKLDV.UNIT,
    RKLDV.CHARGE,
    AP.ITEMID,
    AP.PRODUCTID,
    CAST(RKLDV.ISDEFAULTCOMPONENT AS DEC(18,0)),
    RKLDV.KITPRODUCTMASTERLISTING AS KITPRODUCTMASTERLISTING,
    RKLDV.KITLINEIDENTIFIER,
    RKLDV.CHANNEL
FROM [crt].GETRETAILKITLINEDEFINITION(@bi_ChannelId, @dt_ChannelDate, @kitProductMasterIds) RKLDV
    INNER JOIN @tbl_AssortedExplodedProducts AP 
    ON AP.VARIANTID = RKLDV.KITLINEPRODUCTLISTING OR (AP.PRODUCTID = RKLDV.KITLINEPRODUCTLISTING AND AP.VARIANTID=0)
WHERE  NOT EXISTS (SELECT TOP 1 PRODUCTMASTER FROM [ax].ECORESDISTINCTPRODUCTVARIANT WHERE PRODUCTMASTER = AP.PRODUCTID AND AP.VARIANTID = 0) -- in addition to the exploded variants, @tbl_AssortedExplodedProducts contains a record representing the exploded master product hence remove that extra entry
ORDER BY [RKLDV].KITLINEIDENTIFIER
OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

-- For the same product in a component line of a given kit, component information specified at the non-product-master level takes precedence over component information specified at the product master level.
-- Hence, add an entry from the exploded table only if an entry does not already exist in the non-product master table.
MERGE @tvp_KitComponentVariantsInfo AS KCVI
USING @tvp_ExplodedKitComponentVariants AS EKCV
ON (KCVI.KITLINEPRODUCTLISTING = EKCV.KITLINEPRODUCTLISTING AND KCVI.KITPRODUCTMASTERLISTING = EKCV.KITPRODUCTMASTERLISTING AND KCVI.KITLINEIDENTIFIER = EKCV.KITLINEIDENTIFIER)
WHEN NOT MATCHED THEN
INSERT (KITLINEPRODUCTLISTING, QUANTITY, UNIT, CHARGE, ITEMID, KITLINEPRODUCTMASTERLISTING, ISDEFAULTCOMPONENT, KITPRODUCTMASTERLISTING, KITLINEIDENTIFIER, CHANNEL)
VALUES (EKCV.KITLINEPRODUCTLISTING, EKCV.QUANTITY, EKCV.UNIT, EKCV.CHARGE, EKCV.ITEMID, EKCV.KITLINEPRODUCTMASTERLISTING, EKCV.ISDEFAULTCOMPONENT, EKCV.KITPRODUCTMASTERLISTING, EKCV.KITLINEIDENTIFIER, EKCV.CHANNEL);

SELECT
    KITLINEPRODUCTLISTING,
    QUANTITY,
    UNIT,
    CHARGE,
    ITEMID,
    KITLINEPRODUCTMASTERLISTING,
    ISDEFAULTCOMPONENT,
    KITPRODUCTMASTERLISTING,
    KITLINEIDENTIFIER,
    CHANNEL
FROM @tvp_KitComponentVariantsInfo KCTVI;

END;
GO
PRINT N'Creating [crt].[DELETEUSERCREDENTIALS]...';


GO
CREATE PROCEDURE [crt].[DELETEUSERCREDENTIALS]
    @nvc_StaffId nvarchar(25)
    ,@nvc_GrantType nvarchar(256)
AS
BEGIN
    SET NOCOUNT ON
		
    UPDATE [ax].[RETAILSTAFFCREDENTIALTABLE] SET
        DELETEDDATETIME = GETUTCDATE()
    WHERE
        STAFFID = @nvc_StaffId AND
        (
            @nvc_GrantType = '*'			-- mark all credentials as deleted for that user in case '*' is provided
            OR GRANTTYPE = @nvc_GrantType	        -- mark just a specific credential as deleted based on grant type
        )
        AND deletedDateTime = crt.GETMINAXDATETIME()

END;
GO
PRINT N'Creating [crt].[SEARCHPRODUCTSBYCATEGORYID]...';


GO

-- DEAD CODE: Not deleted to prevent breaking backward compatibility.

CREATE PROCEDURE [crt].[SEARCHPRODUCTSBYCATEGORYID]
(
    @tvp_QueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE READONLY,
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @nvc_Locale              NVARCHAR(7),
    @dt_ChannelDate          DATETIME,
    @bi_CategoryId           BIGINT
)
AS
BEGIN
    DECLARE @tvp_SubCategoryIds [crt].[RECORDIDTABLETYPE]

    ;WITH CategoryHierarchyTree (RECID)
    AS
    (
        SELECT [cchv].RECID
        FROM [crt].CHANNELCATEGORYHIERARCHYVIEW cchv
        WHERE [cchv].RECID = @bi_CategoryId AND [cchv].CHANNELID = @bi_ChannelId

        UNION ALL

        SELECT [cchv].RECID
        FROM [crt].CHANNELCATEGORYHIERARCHYVIEW cchv
        INNER JOIN CategoryHierarchyTree ct ON [cchv].PARENTCATEGORY = [ct].RECID AND [cchv].CHANNELID = @bi_ChannelId
    )

    INSERT INTO @tvp_SubCategoryIds(RECID)
    SELECT [ct].RECID FROM CategoryHierarchyTree ct
    INNER JOIN [ax].ECORESCATEGORY erc ON [erc].RECID = [ct].RECID

    SELECT DISTINCT
        [par].PRODUCTID AS RECID,
        [it].ITEMID AS ITEMID,
        COALESCE([erpt_locale].NAME, [erpt_p1].NAME, [erpt_p2].NAME) AS NAME,
        [itm].PRICE,
        [gpml].URI AS PRIMARYIMAGE
    FROM [crt].LOCALPRODUCTASSORTMENTRULESVIEW par WITH (NOEXPAND)
    INNER JOIN [crt].PRODUCTCATEGORYRULESVIEW pcrv ON [par].CHANNELID = [pcrv].CHANNELID AND [par].PRODUCTID = [pcrv].PRODUCTID AND [par].VARIANTID = 0 AND @dt_ChannelDate BETWEEN COALESCE([pcrv].VALIDFROM, DATEADD(d, -10, GETDATE())) AND COALESCE([pcrv].VALIDTO, DATEADD(d, 10, GETDATE()))
    INNER JOIN @tvp_SubCategoryIds cids ON [cids].RECID = [pcrv].CATEGORYID
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
    INNER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [par].PRODUCTID AND [it].DATAAREAID = [rct].INVENTLOCATIONDATAAREAID
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [par].PRODUCTID
    INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = [par].CHANNELID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_locale ON [erpt_locale].PRODUCT = [par].PRODUCTID AND [erpt_locale].LANGUAGEID = @nvc_Locale
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_p1 ON [erpt_p1].PRODUCT = [par].PRODUCTID AND [clv].PRIORITY = 1 AND [erpt_p1].LANGUAGEID = [clv].LANGUAGEID
    LEFT OUTER JOIN [ax].ECORESPRODUCTTRANSLATION erpt_p2 ON [erpt_p2].PRODUCT = [par].PRODUCTID AND [clv].PRIORITY = 2 AND [erpt_p2].LANGUAGEID = [clv].LANGUAGEID
    OUTER APPLY (SELECT TOP 1 REPLACE(REPLACE(URI, '{LANGUAGEID}', @nvc_Locale), '{PRODUCTNUMBER}', (SELECT [crt].REPLACEUNWANTEDCHARACTERS(erp.DISPLAYPRODUCTNUMBER))) AS URI FROM [crt].GETMEDIALOCATIONBYPRODUCTID(@bi_ChannelId, @bi_CatalogId, [par].PRODUCTID, @nvc_Locale) ORDER BY PRIORITY, ISDEFAULT, URI) gpml
    LEFT OUTER JOIN [ax].INVENTTABLEMODULE itm ON [itm].ITEMID = [it].ITEMID AND [itm].DATAAREAID = [it].DATAAREAID AND [itm].MODULETYPE = 2  -- Sales
    WHERE [par].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [par].VALIDFROM AND [par].VALIDTO
        AND (
            @bi_CatalogId = 0 OR
            EXISTS
            (
                SELECT 1 FROM [crt].PRODUCTCATALOGRULESVIEW pcr
                WHERE [pcr].CHANNELID = [par].CHANNELID AND [pcr].CATALOGID = @bi_CatalogId AND [pcr].PRODUCTID = [par].PRODUCTID AND @dt_ChannelDate BETWEEN [pcr].VALIDFROM AND [pcr].VALIDTO
            )
        )
    ORDER BY 3
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END
GO
PRINT N'Creating [crt].[GETCUSTOMERAFFILIATIONSBYCUSTOMERACCOUNT]...';


GO

CREATE PROCEDURE [crt].[GETCUSTOMERAFFILIATIONSBYCUSTOMERACCOUNT]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_CustomerAccount            NVARCHAR(20),
    @nvc_DataAreaId                 NVARCHAR(4),
    @nvc_Locale                     NVARCHAR(7)
AS
BEGIN
    SET NOCOUNT ON

    -- Select CustomerAffiliations which are associated with the customer account.
    SELECT
        rca.RECID,
        rca.CUSTACCOUNTNUM,
        rca.RETAILAFFILIATIONID,
        ra.NAME,
        rat.DESCRIPTION,
        rca.DATAAREAID,
        rat.LANGUAGEID
    FROM [ax].[RETAILCUSTAFFILIATION] rca
    INNER JOIN [ax].RETAILAFFILIATION ra 
            ON ra.RECID = rca.RETAILAFFILIATIONID
     LEFT JOIN [ax].[RETAILAFFILIATIONTRANSLATION] rat
            ON rat.AFFILIATION = ra.RECID
           AND rat.LANGUAGEID = @nvc_Locale
    WHERE rca.CUSTACCOUNTNUM = @nvc_CustomerAccount
      AND rca.DATAAREAID = @nvc_DataAreaId
    ORDER BY [rca].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[DELETEPICKINGLISTLINES]...';


GO

CREATE PROCEDURE [crt].[DELETEPICKINGLISTLINES]
    @nvc_OrderId     NVARCHAR(50)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Delete the purchase order line from table.
    DELETE FROM [crt].[PICKINGLISTLINE] WHERE ORDERID = @nvc_OrderId

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
    SET NOCOUNT OFF
END;
GO
PRINT N'Creating [crt].[INSERTTAXTRANSINDIA]...';


GO

CREATE PROCEDURE [crt].[INSERTTAXTRANSINDIA]
    @bi_ChannelId           BIGINT,
    @TVP_TaxTransIndia      [crt].[RETAILTRANSACTIONTAXTRANSINDIATABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [crt].RETAILTRANSACTIONTAXTRANS_IN
    (
        [SALELINENUM],
        [STOREID],
        [TAXCODE],
        [TERMINALID],
        [TRANSACTIONID],
        [CHANNEL],
		[TAXITEMGROUP],
		[TAXPERCENTAGE],
		[TAXCOMPONENT],
		[TAXFORMULA],
		[TAXISEXEMPT],
		[TAXBASIS],
		[TAXISINCLUDEDINPRICE],
		[ISTAXONTAX],
		[DATAAREAID]
    )
    SELECT
        [SALELINENUM],
        [STOREID],
        [TAXCODE],
        [TERMINALID],
        [TRANSACTIONID],
        @bi_ChannelId,
		[TAXITEMGROUP],
		[TAXPERCENTAGE],
		[TAXCOMPONENT],
		[TAXFORMULA],
		[TAXISEXEMPT],
		[TAXBASIS],
		[TAXISINCLUDEDINPRICE],
		[ISTAXONTAX],
		[DATAAREAID]
    FROM @TVP_TaxTransIndia AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETSHIFTTENDERBANKDROPTRANS]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTTENDERBANKDROPTRANS]
    @bi_ChannelId						bigint,
	@nvc_TerminalId						nvarchar(10),
	@bi_ShiftId							bigint,
	@i_TransactionType					int
AS

BEGIN
	SET NOCOUNT ON;

			SELECT	STBDTV.TENDERTYPEID, 
					STBDTV.TENDERTYPENAME,
					STBDTV.CURRENCY, 
					STBDTV.COUNTINGREQUIRED, 
					STBDTV.TENDEREDAMOUNT, 
					STBDTV.TENDEREDAMOUNTCUR,
					STBDTV.TRANSACTIONTYPE

			FROM	[crt].[SHIFTTENDERBANKDROPTRANSVIEW] STBDTV

			WHERE	STBDTV.CHANNEL = @bi_ChannelId 
					AND STBDTV.TRANSACTIONTYPE = @i_TransactionType
					AND STBDTV.BATCHTERMINALID = @nvc_TerminalId
					AND STBDTV.BATCHID = @bi_ShiftId 
END;
GO
PRINT N'Creating [crt].[GETSALESLINEDELIVERYPREFERENCES]...';


GO

CREATE PROCEDURE [crt].[GETSALESLINEDELIVERYPREFERENCES]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT,
    @tvp_salesLineDeliveryOptions   [crt].[SALESLINEDELIVERYOPTIONSTABLETYPE]   READONLY
AS
BEGIN

    DECLARE @dt_UtcDate AS DATETIME
    DECLARE @nv_PickupDeliveryModeCode AS NVARCHAR(10)
    DECLARE @nv_ElectronicDeliveryModeCode AS NVARCHAR(10)
    
    SET NOCOUNT ON
        
    SET @dt_UtcDate = GETUTCDATE()
    
    SELECT 
        @nv_PickupDeliveryModeCode = PICKUPDELIVERYMODECODE, 
        @nv_ElectronicDeliveryModeCode = ELECTRONICDELIVERYMODECODE 
    FROM [ax].RETAILPARAMETERS
    
    SELECT DISTINCT 
        SALESLINEID, 
        CASE 
            WHEN DV.CODE = @nv_PickupDeliveryModeCode THEN [crt].GETPICKUPDELIVERYTYPE()
            WHEN DV.CODE = @nv_ElectronicDeliveryModeCode THEN [crt].GETELECTRONICDELIVERYTYPE()
        ELSE [crt].GETSHIPTOADDRESSDELIVERYTYPE()
        END AS DELIVERYPREFERENCETYPE
    FROM @tvp_salesLineDeliveryOptions SDO
    INNER JOIN [crt].DELIVERYMODESEXPLODEDVIEW DV ON DV.CHANNELID = @bi_ChannelId
        AND DV.ITEMID = SDO.ITEMID
        AND (DV.INVENTDIM = '' OR DV.INVENTDIM = ISNULL(NULLIF(SDO.VARIANTINVENTDIMID,''),DV.INVENTDIM))
    ORDER BY [SDO].SALESLINEID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[PURGESALESONTERMINAL]...';


GO
/******************************************************************************************
 * DESCRIPTION:  Deletes rows from all Transaction tables for given Terminal and Channel
 ******************************************************************************************/


CREATE PROCEDURE [crt].[PURGESALESONTERMINAL]
    @bi_ChannelId       BIGINT
   ,@vc_TerminalId      VARCHAR(40)
   ,@i_RetentionDays    INT     = 1        --must be >= 1
   ,@f_PurgeOrder       BIT     = 1
AS BEGIN
    IF @bi_ChannelId IS NULL
    BEGIN
        PRINT 'ERROR: You must specify the channel id.'
        GOTO exit_label;
    END
    IF @vc_TerminalId IS NULL
    BEGIN
        PRINT 'ERROR: You must specify the terminal id.'
        GOTO exit_label;
    END

    SET NOCOUNT ON;
    DECLARE @i_BatchSize    INT;
    DECLARE @i_WaitSeconds  INT;
    DECLARE @i_WaitRows     INT;
    SET @i_BatchSize        = 8000     -- controls granularity of exec time of one call.
    SET @i_WaitSeconds      = 4         --must be >= 1 and < 60, execution limit
    SET @i_WaitRows         = 10000     --must be > batch size

    --capture datetimes:
    DECLARE @dt_CurrentDatetime         DATETIME;
    DECLARE @dt_RetentionDatetime       DATETIME;
    DECLARE @vc_ErrorHeader             VARCHAR(50);
    DECLARE @vc_Error                   VARCHAR(1000);
    DECLARE @vc_Success                 VARCHAR(1000);
    DECLARE @i_Error                    INT;
    DECLARE @i_Rowcount                 INT;
    DECLARE @i_ReturnCode               INT;
    DECLARE @bi_TableRowcount           BIGINT;
    DECLARE @bi_WaitTrigger             BIGINT;
    DECLARE @vc_WaitTime                VARCHAR(10);
    DECLARE @f_ExitLoop                 BIT;
    DECLARE @vc_TableName               VARCHAR(64);
    DECLARE @i_RowId                    INT;
    DECLARE @f_ExitInnerLoop            BIT;
    DECLARE @vc_InnerTableName          VARCHAR(64);
    DECLARE @i_InnerRowcount            INT;
    DECLARE @bi_InnerTableRowcount      BIGINT;
    DECLARE @bi_InnerWaitTrigger        BIGINT;
    DECLARE @t_TransactionList          TABLE
    (
        nvc_TransactionId   NVARCHAR(44) NOT NULL
    );

    SET @vc_ErrorHeader             = '[PURGESALESONTERMINAL] Hard Delete Handler: ';
    SET @bi_TableRowcount           = 0;
    SET @bi_WaitTrigger             = 0;
    SET @vc_Success                 = ''; --will be used for reporting the number of rows deleted.

    --protect against null being explicitly passed for the retention days
    SET @i_RetentionDays    = ISNULL(@i_RetentionDays, 10);

    IF  @i_RetentionDays < 1 OR
        @i_BatchSize < 1 OR
        @i_BatchSize > 10000 OR
        @i_WaitSeconds < 1 OR
        @i_WaitSeconds > 59 OR
        @i_WaitRows < 1 OR
        @i_WaitRows < @i_BatchSize
    BEGIN
        SET @vc_Error = @vc_ErrorHeader + 'Invalid parameters set, cannot execute.';
        GOTO exit_label;
    END
    IF @@TRANCOUNT > 0
    BEGIN
        SET @vc_Error = @vc_ErrorHeader + 'Cannot call within a transaction!';
        GOTO exit_label;
    END

    --set execution parameters
    SET @dt_CurrentDatetime   = GETUTCDATE();
    SET @dt_RetentionDatetime = DATEADD(DAY, -1 * @i_RetentionDays, @dt_CurrentDatetime);

    --handle single and double digit wait times:
    SET @vc_WaitTime = '00:00:' + RIGHT('0' + CONVERT(VARCHAR, @i_WaitSeconds), 2);

    SET @bi_TableRowcount = 0;
    SET @bi_WaitTrigger   = 0;
    SET @f_ExitLoop       = 0;

    --run deletes on this table
    WHILE (@f_ExitLoop = 0)
    BEGIN

        -- build list of transaction ids that needs purging
        DELETE FROM @t_TransactionList;

        IF (@f_PurgeOrder = 1)
        BEGIN
            SET @vc_TableName = 'SALESTRANSACTION';
            INSERT INTO @t_TransactionList
                SELECT TOP (@i_BatchSize) TRANSACTIONID
                FROM [crt].SALESTRANSACTION WITH (ROWLOCK, UPDLOCK, READPAST)
                WHERE
                    MODIFIEDDATETIME < @dt_RetentionDatetime
                    AND CHANNELID = @bi_ChannelId
                    AND TERMINALID = @vc_TerminalId

        END
        ELSE
        BEGIN
            SET @vc_TableName = 'RETAILTRANSACTIONTABLE';
            INSERT INTO @t_TransactionList
                SELECT TOP (@i_BatchSize) TRANSACTIONID
                FROM [ax].RETAILTRANSACTIONTABLE WITH (ROWLOCK, UPDLOCK, READPAST)
                WHERE
                    MODIFIEDDATETIME < @dt_RetentionDatetime
                    AND CHANNEL = @bi_ChannelId
                    AND TERMINAL = @vc_TerminalId
        END
        SELECT @i_Rowcount = COUNT(*) FROM @t_TransactionList;

        IF @i_Rowcount = 0
        BEGIN
            SET @vc_Error = NULL;
            SET @vc_Success = 'NOTHING TO PURGE';
            GOTO exit_label;
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = '[ax].[RETAILTRANSACTIONADDRESSTRANS]';
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN
            DELETE TOP(@i_BatchSize) [ax].[RETAILTRANSACTIONADDRESSTRANS]
            FROM [ax].[RETAILTRANSACTIONADDRESSTRANS] rtat
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rtat.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONSALESTRANS';
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONSALESTRANS
            FROM [ax].RETAILTRANSACTIONSALESTRANS rtst
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rtst.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows
            END
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RetailTransactionMarkupTrans';
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONMARKUPTRANS
            FROM [ax].RETAILTRANSACTIONMARKUPTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RetailTransactionTaxTrans';
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONTAXTRANS
            FROM [ax].RETAILTRANSACTIONTAXTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error =  @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows
            END
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONAFFILIATIONTRANS';
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN
            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONAFFILIATIONTRANS
            FROM [ax].RETAILTRANSACTIONAFFILIATIONTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error =  @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RetailTransactionAttributeTrans'
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONATTRIBUTETRANS
            FROM [ax].RETAILTRANSACTIONATTRIBUTETRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error =  @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONBANKEDTENDERTRANS';
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONBANKEDTENDERTRANS
            FROM [ax].RETAILTRANSACTIONBANKEDTENDERTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error =  @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONDISCOUNTTRANS';
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONDISCOUNTTRANS
            FROM [ax].RETAILTRANSACTIONDISCOUNTTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONINCOMEEXPENSETRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONINCOMEEXPENSETRANS
            FROM [ax].RETAILTRANSACTIONINCOMEEXPENSETRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONINFOCODETRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONINFOCODETRANS
            FROM [ax].RETAILTRANSACTIONINFOCODETRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONKITSDISASSEMBLYTRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONKITSDISASSEMBLYTRANS
            FROM [ax].RETAILTRANSACTIONKITSDISASSEMBLYTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS
            FROM [ax].RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONORDERINVOICETRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONORDERINVOICETRANS
            FROM [ax].RETAILTRANSACTIONORDERINVOICETRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONORDERSTATUS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONORDERSTATUS
            FROM [ax].RETAILTRANSACTIONORDERSTATUS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONPAYMENTTRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONPAYMENTTRANS
            FROM [ax].RETAILTRANSACTIONPAYMENTTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONPAYMENTTRANS_BR';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONPAYMENTTRANS_BR
            FROM [ax].RETAILTRANSACTIONPAYMENTTRANS_BR rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONSAFETENDERTRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONSAFETENDERTRANS
            FROM [ax].RETAILTRANSACTIONSAFETENDERTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONTABLE_RU';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONTABLE_RU
            FROM [ax].RETAILTRANSACTIONTABLE_RU rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONTAXTRANS_IN';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [crt].RETAILTRANSACTIONTAXTRANS_IN
            FROM [crt].RETAILTRANSACTIONTAXTRANS_IN rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        SET @vc_InnerTableName = 'RETAILTRANSACTIONTENDERDECLARATIONTRANS';
        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE TOP(@i_BatchSize) [ax].RETAILTRANSACTIONTENDERDECLARATIONTRANS
            FROM [ax].RETAILTRANSACTIONTENDERDECLARATIONTRANS rt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rt.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @vc_Error = @vc_Error + CHAR(13) + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            END

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END
        END

        -- Done with sub-tables, now clean masters
        IF (@f_PurgeOrder = 1)
        BEGIN
            SET @vc_TableName = 'SALESTRANSACTION';
            DELETE [crt].SALESTRANSACTION
            FROM [crt].SALESTRANSACTION st
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = st.TRANSACTIONID
            OPTION (MAXDOP 1);
        END
        ELSE
        BEGIN
            SET @vc_TableName = 'RETAILTRANSACTIONTABLE';
            DELETE [ax].RETAILTRANSACTIONTABLE
            FROM [ax].RETAILTRANSACTIONTABLE rtt
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = rtt.TRANSACTIONID
            OPTION (MAXDOP 1);
        END

        --keep track of how many rows we've deleted from this table.
        SET @bi_TableRowcount = @bi_TableRowcount + @i_Rowcount;
        IF @i_Rowcount < @i_BatchSize
        BEGIN
            SET @f_ExitLoop = 1;
            SET @vc_Success =
                ' Purge Job started from ' + @vc_TableName +
                ' at ' + CONVERT(VARCHAR, @dt_CurrentDatetime, 109) +
                ' and ended at ' + CONVERT(VARCHAR, GETUTCDATE(), 109) +
                '. Deleted ' + convert(varchar, @bi_TableRowcount) + ' rows. ';
        END
        ELSE
        BEGIN
            IF @bi_WaitTrigger <> @bi_TableRowcount/@i_WaitRows
            BEGIN
                WAITFOR DELAY @vc_WaitTime;
            END
            SET @bi_WaitTrigger = @bi_TableRowcount/@i_WaitRows;
        END
    END

exit_label:
    IF @vc_Error IS NOT NULL
    BEGIN
        RAISERROR(@vc_Error, 16, 1);
    END
    ELSE
    BEGIN
        RAISERROR(@vc_Success, 10, 1);
    END
END
GO
PRINT N'Creating [crt].[GETIDENTITYPROVIDER]...';


GO

CREATE PROCEDURE [crt].[GETIDENTITYPROVIDER]
    @nvc_Issuer NVARCHAR(500),
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
    
AS
BEGIN
    SET NOCOUNT ON
    SELECT RECID, [TYPE] AS IDENTITYPROVIDERTYPE, ISSUER
    FROM ax.RETAILIDENTITYPROVIDER
    WHERE ISSUER = @nvc_Issuer

END;
GO
PRINT N'Creating [crt].[GETSHIFTTOTALAMOUNT]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTTOTALAMOUNT]
    @tvp_ShiftTotalAmountTempTable       [crt].[SHIFTTENDERAMOUNTTYPE]    READONLY
AS

BEGIN

-- [20] indicates declare starting amount type
-- [5] indicates float entry amount
-- [4] indicates tender removal amount
-- [7] indicates tender declare amount
-- [17] indicates safe drop amount
-- [16] indicates bank drop amount

	WITH SHIFTSTORETOTALAMOUNT(TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, [20],[5],[4],[7],[17],[16])
	AS
	(
		SELECT TENDERTYPEID, 
				TENDERTYPENAME, 
				CURRENCY, 
				COUNTINGREQUIRED,
				[20],	
				[5],	
				[4],	
				[7],	
				[17],	
				[16]	
		FROM	
		(
			SELECT TENDERTYPEID, 
				TENDERTYPENAME, 
				CURRENCY, 
				COUNTINGREQUIRED,
				TENDEREDAMOUNT,
				TRANSACTIONTYPE 
			FROM @tvp_ShiftTotalAmountTempTable) AS D
			PIVOT (SUM(TENDEREDAMOUNT) FOR D.TRANSACTIONTYPE IN ([20],[5],[4],[17],[16],[7])
		) AS PVT
	),
	SHIFTTENDERTOTALAMOUNT (TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, [20],[5],[4],[7],[17],[16])
	AS
	(
		SELECT TENDERTYPEID, 
				TENDERTYPENAME, 
				CURRENCY, 
				COUNTINGREQUIRED,
				[20],	
				[5],	
				[4],	
				[7],	
				[17],	
				[16]	
		FROM	
		(
			SELECT TENDERTYPEID, 
				TENDERTYPENAME, 
				CURRENCY, 
				COUNTINGREQUIRED,
				TENDEREDAMOUNTCUR,
				TRANSACTIONTYPE 
			FROM @tvp_ShiftTotalAmountTempTable) AS D
			PIVOT (SUM(TENDEREDAMOUNTCUR) FOR D.TRANSACTIONTYPE IN ([20],[5],[4],[17],[16],[7])
		) AS PVT
	)

	SELECT	ss.TENDERTYPEID, 
			ss.TENDERTYPENAME, 
			ss.CURRENCY, 
			ss.COUNTINGREQUIRED, 
			-- Retrieve the store aggregated amount
			ss.[20] AS STARTINGAMOUNT,
			ss.[5] AS ADDTOTENDERAMOUNT,
			ss.[4] AS REMOVETENDERAMOUNT,
			ss.[7] AS DECLARETENDERAMOUNT,
			ss.[17] AS SAFEDROPAMOUNT,
			ss.[16] AS BANKDROPAMOUNT,
			-- Retrieve the tendered currency aggregated amount
			st.[20] AS STARTINGAMOUNTCUR,
			st.[5] AS ADDTOTENDERAMOUNTCUR,
			st.[4] AS REMOVETENDERAMOUNTCUR,
			st.[7] AS DECLARETENDERAMOUNTCUR,
			st.[17] AS SAFEDROPAMOUNTCUR,
			st.[16] AS BANKDROPAMOUNTCUR

	FROM SHIFTSTORETOTALAMOUNT AS ss 
	JOIN SHIFTTENDERTOTALAMOUNT st 

	ON	ss.TENDERTYPEID = st.TENDERTYPEID 
		AND ss.TENDERTYPENAME = st.TENDERTYPENAME
		AND ss.CURRENCY = st.CURRENCY
		AND ss.COUNTINGREQUIRED = st.COUNTINGREQUIRED	
END;
GO
PRINT N'Creating [crt].[GETACTIVESHIFT]...';


GO

CREATE PROCEDURE [crt].[GETACTIVESHIFT]
    @bi_ChannelId       BIGINT,
    @nvc_CurrentTerminalId     NVARCHAR(10),
    @nvc_UserId         NVARCHAR(50)
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;

    -- Select active shift identifier.
    SELECT [SHIFTID],
           [TERMINALID]
    FROM [crt].SHIFTSVIEW SHIFT
    WHERE SHIFT.CHANNEL = @bi_ChannelId AND
		  (SHIFT.TERMINALID = @nvc_CurrentTerminalId OR SHIFT.CURRENTTERMINALID = @nvc_CurrentTerminalId) AND
          (SHIFT.STAFFID = @nvc_UserId OR SHIFT.CURRENTSTAFFID = @nvc_UserId) AND
          SHIFT.STATUS = 1 -- 1 means shift is open.

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;


exit_label:

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[POPULATEPRODUCTCATALOGRULES]...';


GO

CREATE PROCEDURE [crt].[POPULATEPRODUCTCATALOGRULES]
AS BEGIN
    MERGE [crt].PRODUCTCATALOGRULES target
    USING
    (
        SELECT
            [ccv].CHANNEL AS CHANNELID,
            [ccv].CATALOG AS CATALOGID,
            [pcp].PRODUCT AS PRODUCTID,
            [pc].VALIDFROM,
            [pc].VALIDTO
        FROM [ax].RETAILPUBCATALOGPRODUCT pcp
        INNER JOIN [ax].RETAILPUBCATALOG pc ON [pc].ORIGIN = [pcp].CATALOG
        INNER JOIN [crt].PUBCATALOGCHANNELVIEW ccv ON [ccv].CATALOG = [pcp].CATALOG
    ) source
    ON [source].CHANNELID = [target].CHANNELID AND [source].CATALOGID = [target].CATALOGID AND [source].PRODUCTID = [target].PRODUCTID
    WHEN NOT MATCHED BY TARGET
        THEN INSERT (CHANNELID, CATALOGID, PRODUCTID, VALIDFROM, VALIDTO) VALUES ([source].CHANNELID, [source].CATALOGID, [source].PRODUCTID, [source].VALIDFROM, [source].VALIDTO)
    WHEN NOT MATCHED BY SOURCE
        THEN DELETE
    WHEN MATCHED AND ([source].VALIDFROM != [target].VALIDFROM OR [source].VALIDTO != [target].VALIDTO)
        THEN UPDATE SET [target].VALIDFROM = [source].VALIDFROM, [target].VALIDTO = [source].VALIDTO;
END;
GO
PRINT N'Creating [crt].[INSERTINCOMEEXPENSETRANSACTION]...';


GO

CREATE PROCEDURE [crt].[INSERTINCOMEEXPENSETRANSACTION]
    @TVP_INCOMEEXPENSETYPE         [crt].[RETAILINCOMEEXPENSETABLETYPE]    READONLY,
    @d_BusinessDate                DATE
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    INSERT INTO [ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS]
    (
            [TRANSACTIONID]
            ,[RECEIPTID]
            ,[INCOMEEXEPENSEACCOUNT]
            ,[STORE]
            ,[TERMINAL]
            ,[STAFF]
            ,[TRANSACTIONSTATUS]
            ,[AMOUNT]
            ,[ACCOUNTTYPE]
            ,[TRANSDATE]
            ,[TRANSTIME]
            ,[DATAAREAID]
            ,[CHANNEL]
            ,[BUSINESSDATE]
    )
     SELECT
            [TRANSACTIONID]
            ,[RECEIPTID]
            ,[INCOMEEXEPENSEACCOUNT]
            ,[STORE]
            ,[TERMINAL]
            ,[STAFF]
            ,[TRANSACTIONSTATUS]
            ,[AMOUNT]
            ,[ACCOUNTTYPE]
            ,[TRANSDATE]
            ,[TRANSTIME]
            ,[DATAAREAID]
            ,[CHANNEL]
            ,@d_BusinessDate
    FROM @TVP_INCOMEEXPENSETYPE AS SOURCE;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETCATALOGDEFINITION]...';


GO

CREATE PROCEDURE [crt].[GETCATALOGDEFINITION]
	@bi_ChannelId BIGINT
AS
BEGIN
    SET NOCOUNT ON

    SELECT
        LISTID,
        ATTRIBUTERECID,
        ATTRIBUTEKEYNAME,
        LISTGROUPID,
        LISTLENGTH
    FROM [crt].CATALOGLISTDEFINITIONVIEW
	WHERE CHANNELID = @bi_ChannelId

    ORDER BY LISTID

END;
GO
PRINT N'Creating [crt].[GETAFFILIATIONSBYAFFILIATIONTYPE]...';


GO

CREATE PROCEDURE [crt].[GETAFFILIATIONSBYAFFILIATIONTYPE]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @i_affiliationType              INT,
    @nvc_Locale                     NVARCHAR(7)
AS
BEGIN
    SET NOCOUNT ON

    -- Select all RetailAffiliation which are associated with the affiliation type
    SELECT
        [ra].RECID,
        [ra].AFFILIATIONTYPE,
        [ra].NAME,
        [rat].DESCRIPTION
    FROM [crt].[RETAILAFFILIATIONSVIEW] ra
    LEFT JOIN [ax].[RETAILAFFILIATIONTRANSLATION] rat ON [rat].AFFILIATION = [ra].RECID AND [rat].LANGUAGEID = @nvc_Locale
    WHERE [ra].AFFILIATIONTYPE = @i_affiliationType
    ORDER BY [ra].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[INSERTADDRESSTRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTADDRESSTRANS]
    @bi_ChannelId           BIGINT,
    @TVP_AddressTrans       [crt].[RETAILTRANSACTIONADDRESSTRANSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONADDRESSTRANS
    (
        [DATAAREAID],
        [STORE],
        [TERMINAL],
        [TRANSACTIONID],
        [SALELINENUM],
        [DELIVERYNAME],
        [SALESNAME],
        [ZIPCODE],
        [COUNTRYREGIONID],
        [STATE],
        [CITY],
        [COUNTY],
        [STREET],
        [EMAIL],
		[EMAILCONTENT],
        [PHONE],
        [STREETNUMBER],
        [DISTRICTNAME],
        [CHANNEL]
    )
    SELECT
        [DATAAREAID],
        [STORE],
        [TERMINAL],
        [TRANSACTIONID],
        [SALELINENUM],
        [DELIVERYNAME],
        [SALESNAME],
        [ZIPCODE],
        [COUNTRYREGIONID],
        [STATE],
        [CITY],
        [COUNTY],
        [STREET],
        [EMAIL],
		[EMAILCONTENT],
        [PHONE],
        [STREETNUMBER],
        [DISTRICTNAME],
        @bi_ChannelId
    FROM @TVP_AddressTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETTAXCODEINTERVALSINDIA]...';


GO

-- Gets tax code intervals bases on the intersections of Sales tax group and Item sales tax group at the the specified date.
CREATE PROCEDURE [crt].[GETTAXCODEINTERVALSINDIA]
    @bi_ChannelId       BIGINT,
    @nvc_SalesTaxGroup  NVARCHAR(10),
    @nvc_ItemTaxGroup   NVARCHAR(10),
    @dt_TransactionDate DATE
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_Error                    INT;
    DECLARE @dt_NoDateBoundary          DATE;
    DECLARE @nvc_DataAreaId             NVARCHAR(4);
    DECLARE @bi_SalesTaxFormType        BIGINT;
    DECLARE @i_IndiaTaxTypeCST          INT;

    SET @dt_NoDateBoundary = [crt].GETMINAXDATE();
    SET @i_IndiaTaxTypeCST = 2
    SET @bi_SalesTaxFormType = 0

    SELECT @nvc_DataAreaId = rct.INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct
        WHERE rct.RECID = @bi_ChannelId

    SELECT @bi_SalesTaxFormType = ISNULL(rsti.SALESTAXFORMTYPES,0) FROM [ax].RETAILSTORETABLE rst
        LEFT JOIN [ax].RETAILSTORETABLE_IN rsti ON rsti.RETAILSTORETABLE = rst.RECID
        WHERE rst.RECID = @bi_ChannelId

    SELECT DISTINCT
        toi.TAXITEMGROUP,
        toi.TAXCODE,
        toi.ABATEMENTPERCENT_IN,
        ISNULL(td.TAXVALUE, 0.0) AS TAXVALUE,
        ISNULL(td.TAXLIMITMIN, 0.0) AS TAXLIMITMIN,
        ISNULL(td.TAXLIMITMAX, 0.0) AS TAXLIMITMAX,
        tgd.EXEMPTTAX,
        tgh.TAXGROUPROUNDING,
        tt.TAXCURRENCYCODE,
        tt.TAXINCLUDEINTAX,
        tt.TAXBASE,
        tt.TAXLIMITBASE,
        tt.TAXCALCMETHOD,
        tt.TAXONTAX,
        tt.TAXUNIT,
        tt.TAXTYPE_IN,
        ISNULL(tcl.TAXMAX,0) AS TAXMAX,
        ISNULL(tcl.TAXMIN,0) AS TAXMIN
    FROM [ax].TAXGROUPHEADING tgh
    INNER JOIN [ax].TAXGROUPDATA tgd ON tgh.TAXGROUP = tgd.TAXGROUP AND tgh.DATAAREAID = tgd.DATAAREAID
    INNER JOIN [ax].TAXONITEM toi ON tgd.TAXCODE = toi.TAXCODE AND tgd.DATAAREAID = toi.DATAAREAID
    INNER JOIN [ax].TAXDATA td ON toi.TAXCODE = td.TAXCODE AND toi.DATAAREAID = td.DATAAREAID
    INNER JOIN [ax].TAXTABLE tt ON tt.TAXCODE = td.TAXCODE AND tt.DATAAREAID = td.DATAAREAID
        AND ((tt.TAXTYPE_IN = @i_IndiaTaxTypeCST
                AND td.SALESTAXFORMTYPES_IN = @bi_SalesTaxFormType)
            OR tt.TAXTYPE_IN <> @i_IndiaTaxTypeCST)
    LEFT JOIN [ax].TAXCOLLECTLIMIT tcl ON
        tcl.TAXCODE = td.TAXCODE
        AND tcl.DATAAREAID = @nvc_DataAreaId
        -- The date range to cover the transaction date.
        AND (tcl.TAXFROMDATE IS NULL
            OR (@dt_TransactionDate >= tcl.TAXFROMDATE)
            OR (tcl.TAXFROMDATE = @dt_NoDateBoundary))
        AND (tcl.TAXTODATE IS NULL
            OR @dt_TransactionDate < DATEADD(d, 1, tcl.TAXTODATE)
            OR tcl.TAXTODATE = @dt_NoDateBoundary)
    WHERE
        toi.TAXITEMGROUP = @nvc_ItemTaxGroup
        AND tgh.TAXGROUP = @nvc_SalesTaxGroup
        -- The date range to cover the transaction date.
        AND ((@dt_TransactionDate >= td.TAXFROMDATE
            OR td.TAXFROMDATE = @dt_NoDateBoundary)
        AND (@dt_TransactionDate < DATEADD(d, 1, td.TAXTODATE)
            OR td.TAXTODATE = @dt_NoDateBoundary))
        AND tgh.DATAAREAID = @nvc_DataAreaId

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

exit_label:

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[UPDATEONLINECHANNELPUBLISHSTATUS]...';


GO

CREATE PROCEDURE [crt].[UPDATEONLINECHANNELPUBLISHSTATUS]
    @bi_ChannelId               BIGINT,
    @i_PublishStatus            INT,
    @nvc_PublishStatusMessage   NVARCHAR(max) = NULL
AS
BEGIN
    SET NOCOUNT ON

    UPDATE [ax].[RETAILONLINECHANNELPUBLISHSTATUS]
    SET
        PUBLISHSTATUS = @i_PublishStatus,
        PUBLISHSTATUSMESSAGE = @nvc_PublishStatusMessage
    WHERE
        ONLINECHANNEL = @bi_ChannelId
END;
GO
PRINT N'Creating [crt].[GETPRODUCTS]...';


GO
CREATE PROCEDURE [crt].[GETPRODUCTS]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId           BIGINT, -- The unique channel identifier (required).
    @bi_CatalogId           BIGINT, -- The catalog identifier (optional).
    @i_DataLevel            INT,    -- A value to control the richness of the products returned.
    @dt_ChannelDate         DATETIME,   -- The current date in the channel's time zone.
    @b_IsForwardLooking     BIT,    -- A value indicating whether to include products in future assortments.
    @b_SkipVariantExpansion BIT,    -- A value indicating whether product masters are to be expanded.
    @tvp_ProductIds         [crt].[RECORDIDTABLETYPE]   READONLY,
    @b_IsOnlineSearch       BIT     -- A value indicating whether the search is retrieving the product image blob
AS
BEGIN
/*  // data level map for product:
    //
    // data level   |   content
    // =============|================================================================
    // identity     |   id, item id, invent dim
    // minimal      |   + behavior data: is (master, serialized, kit) flags, validity
    // standard     |   + first class properties, indexed properties
    // extended     |   + composition information
    // complete     |   + change tracking information
    // =============|================================================================
*/
    SET NOCOUNT ON

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_Error                    INT;

    DECLARE @tvp_ExpandedWorkingIdSet       [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_LookupIds                  [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId                    [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DistinctProductVariantIds  [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_ProductIdsNormalized       [crt].[RECORDIDSTABLETYPE]
    DECLARE @tvp_AssortedProductIds         [crt].[PRODUCTLOOKUPIDTABLETYPE]
    DECLARE @tvp_CatalogAssortedProductIds  [crt].[PRODUCTLOOKUPIDTABLETYPE]

    DECLARE @ProductNameAttributeName           NVARCHAR(256) = 'ProductName'
    DECLARE @ProductDescriptionAttributeName    NVARCHAR(256) = 'Description'
    DECLARE @ProductImageAttributeName          NVARCHAR(256) = 'Image'

    -- Insert dummy record to satisfy API contract
    INSERT INTO @tvp_DummyId VALUES (0)

    -- initializes the return code; we'll return the number of data sets as the return code.
    SET @i_ReturnCode = 0;
    SET @bi_CatalogId = ISNULL(@bi_CatalogId, 0);

    -- Retrieve the data area for the current channel identifier.
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId

    -- The copy operation into @tvp_Ids below is needed for performance improvements, do not remove it.
    DECLARE @tvp_Ids crt.RECORDIDTABLETYPE
    INSERT INTO @tvp_Ids(RECID)
    SELECT tpi.RECID
    FROM @tvp_ProductIds tpi
    ORDER BY [tpi].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

    -- Normalize all input identifiers. That means standalone, product master and variant
    -- identifiers all return the parent product as the lookup identifer. This is necessary
    -- because the input product identifiers can be any type of product (standalone, product
    -- master, variant, kit, etc).
    INSERT @tvp_ProductIdsNormalized (RECID, PARENTRECID)
    SELECT DISTINCT
        ids.RECID AS 'PRODUCTID',
        COALESCE(pv2.PRODUCTMASTER, pv.PRODUCTMASTER, ids.RECID) AS 'LOOKUPID'
    FROM @tvp_Ids ids
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [ids].RECID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [ids].RECID

    -- Retrieve the unique parent product identifiers.
    INSERT @tvp_LookupIds (RECID)
    SELECT DISTINCT PARENTRECID -- LOOKUPID
    FROM @tvp_ProductIdsNormalized

    -- Filter lookup identifiers by assortment and expand all product masters to their individually assorted variants if requested.
    INSERT @tvp_AssortedProductIds (LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO)
    SELECT
        ap.PRODUCTID AS LOOKUPID,
        CASE
            WHEN ap.VARIANTID = 0 THEN ap.PRODUCTID
            ELSE ap.VARIANTID
        END AS PRODUCTID,
        ap.ISREMOTE,
        ap.VALIDFROM,
        ap.VALIDTO
    FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking, 0 /* @b_SkipVariantExpansion */, 1 /* @b_ProductIdsPassed */, @tvp_LookupIds) ap

    -- Build the expanded working set
    IF (@bi_CatalogId = 0)
    BEGIN
        INSERT @tvp_CatalogAssortedProductIds (LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO)
        SELECT LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO
        FROM @tvp_AssortedProductIds
    END
    ELSE
    BEGIN
        -- Filter out any products that are not in the specified catalog.
        WITH cte_CatalogProducts AS
        (
            SELECT
                ap.LOOKUPID,
                ap.PRODUCTID,
                ap.ISREMOTE,
                CASE
                    WHEN ap.VALIDFROM > pc.VALIDFROM THEN ap.VALIDFROM
                    ELSE pc.VALIDFROM
                END AS 'VALIDFROM',
                CASE
                    WHEN pc.VALIDTO < ap.VALIDTO THEN pc.VALIDTO
                    ELSE ap.VALIDTO
                END AS 'VALIDTO'
            FROM @tvp_AssortedProductIds ap
            INNER JOIN [ax].RETAILPUBCATALOGPRODUCT pcp ON pcp.PRODUCT = ap.LOOKUPID OR pcp.PRODUCT = ap.PRODUCTID
            INNER JOIN [ax].RETAILPUBCATALOG pc ON pc.ORIGIN = pcp.CATALOG
            INNER JOIN [crt].PUBCATALOGCHANNELVIEW ccv ON ccv.CATALOG = pcp.CATALOG
            WHERE ccv.CHANNEL = @bi_ChannelId AND ccv.CATALOG = @bi_CatalogId AND
                ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN ap.VALIDFROM AND ap.VALIDTO) OR
                    (@b_IsForwardLooking = 1 AND ap.VALIDTO >= @dt_ChannelDate))
        )
        INSERT @tvp_CatalogAssortedProductIds (LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO)
        -- Retrieve the product masters that are either explicitly or implicitly part of the specified catalog.
        SELECT cp.LOOKUPID, cp.PRODUCTID, cp.ISREMOTE, cp.VALIDFROM, cp.VALIDTO
        FROM cte_CatalogProducts cp
        WHERE ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN cp.VALIDFROM AND cp.VALIDTO) OR
                (@b_IsForwardLooking = 1 AND cp.VALIDTO >= @dt_ChannelDate))
        UNION
        -- Retrieve the product variants that are either explicitly or implicitly part of the specified catalog.
        SELECT cp.LOOKUPID, cp.LOOKUPID, cp.ISREMOTE, cp.VALIDFROM, cp.VALIDTO
        FROM cte_CatalogProducts cp
        WHERE ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN cp.VALIDFROM AND cp.VALIDTO) OR
                (@b_IsForwardLooking = 1 AND cp.VALIDTO >= @dt_ChannelDate))
    END

    DECLARE @tbl_ProductIdentities TABLE (
        LOOKUPID BIGINT NOT NULL,
        PRODUCTID BIGINT NOT NULL,
        ISMASTER BIT NOT NULL,
        ISKIT BIT NOT NULL,
        ISREMOTE BIT NOT NULL,
        MASTERPRODUCT BIGINT NOT NULL,
        DISPLAYPRODUCTNUMBER NVARCHAR(70) NOT NULL,
        SEARCHNAME NVARCHAR(20) NULL,
        ITEMID NVARCHAR(20) NOT NULL,
        INVENTDIMID NVARCHAR(20) NOT NULL,
        OFFLINEIMAGE NVARCHAR(MAX) NULL,
        INVENTRECID BIGINT NULL
    )

    -- For the filtered identifiers, we can now build the identity for each product.
    INSERT INTO @tbl_ProductIdentities
    SELECT DISTINCT
        ap.LOOKUPID,
        ap.PRODUCTID,
        CASE
            WHEN (([pv].RECID IS NULL) AND ([pv2].RECID IS NOT NULL)) THEN 1
            ELSE 0
        END AS ISMASTER,
        CASE
            WHEN ([rk].RECID IS NULL) THEN 0
            ELSE 1
        END AS ISKIT,
        ap.ISREMOTE,
        CASE
            WHEN (([pv].RECID IS NULL) AND ([pv2].RECID IS NOT NULL)) THEN 0 -- IsMaster
            ELSE ap.LOOKUPID
        END AS MASTERPRODUCT,
        erp.DISPLAYPRODUCTNUMBER,
        erp.SEARCHNAME,
        COALESCE(it.ITEMID, idc.ITEMID) AS ITEMID,
        ISNULL(idc.INVENTDIMID, '') AS INVENTDIMID,
        NULL AS OFFLINEIMAGE,
        it.RECID AS INVENTRECID
    FROM @tvp_CatalogAssortedProductIds ap
    -- If @b_SkipVariantExpansion was set to true and the provided product ID was a variant ID then we need to return just master (or standalone one) and the only
    -- variant whose IDs were passed, all other variants should not be returned.
    INNER JOIN @tvp_Ids ids ON (@b_SkipVariantExpansion = 0 OR (@b_SkipVariantExpansion = 1 AND ([ids].RECID = [ap].PRODUCTID) OR ([ap].PRODUCTID = [ap].LOOKUPID)))
    INNER JOIN [ax].ECORESPRODUCT erp ON [erp].RECID = [ap].PRODUCTID
    LEFT OUTER JOIN [ax].INVENTTABLE it ON [it].PRODUCT = [ap].PRODUCTID AND [it].DATAAREAID = @nvc_DataAreaId
    LEFT OUTER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].DISTINCTPRODUCTVARIANT = [ap].PRODUCTID AND [idc].DATAAREAID = @nvc_DataAreaId
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [ap].PRODUCTID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [ap].PRODUCTID
    LEFT OUTER JOIN [ax].RETAILKIT rk ON [rk].PRODUCTMASTER = [ap].PRODUCTID

    -- Populate final set of product ids for which further data should be retrieved
    INSERT @tvp_ExpandedWorkingIdSet (RECID)
    SELECT DISTINCT [pids].PRODUCTID
    FROM @tbl_ProductIdentities pids

    --Update the OfflineImage column with image value, if any
    IF @b_IsOnlineSearch = 0
    BEGIN
        UPDATE pid
        SET pid.OFFLINEIMAGE = CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("[img].[MediumSize]")))', 'NVARCHAR(MAX)')
        FROM @tbl_ProductIdentities pid
            INNER JOIN [ax].ECORESPRODUCTIMAGE img
            ON pid.INVENTRECID = [img].REFRECORD AND [img].DEFAULTIMAGE = 1
    END

    -- retrieve product identities
    SELECT
        [piv].PRODUCTID AS 'RECID',
        [piv].LOOKUPID,
        [piv].ISMASTER,
        [piv].ISKIT,
        [piv].ISREMOTE,
        [piv].MASTERPRODUCT,
        [piv].ITEMID,
        [piv].INVENTDIMID,
        [piv].DISPLAYPRODUCTNUMBER,
        [piv].SEARCHNAME,
        [piv].OFFLINEIMAGE

    FROM @tbl_ProductIdentities piv
    ORDER BY LOOKUPID, ISMASTER desc, RECID

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- retrieve the distinct product variant identifiers for each variant in our expanded set
    INSERT INTO @tvp_DistinctProductVariantIds (RECID)
    SELECT DISTINCT [piv].[PRODUCTID]
    FROM @tbl_ProductIdentities piv
    WHERE [piv].ISMASTER = 0 AND [piv].MASTERPRODUCT <> 0

    IF NOT EXISTS(SELECT NULL FROM @tvp_DistinctProductVariantIds)
    BEGIN
        SELECT
            NULL AS ITEMID,
            NULL AS VARIANTID,
            NULL AS INVENTDIMID,
            NULL AS DISTINCTPRODUCTVARIANT,
            NULL AS SIZEID,
            NULL AS COLORID,
            NULL AS STYLEID,
            NULL AS CONFIGID,
            NULL AS COLOR,
            NULL AS SIZE,
            NULL AS STYLE,
            NULL AS CONFIG
    END
    ELSE
    BEGIN
        -- retrieve the product variant identities
        SELECT
            [vv].ITEMID,
            [vv].VARIANTID,
            [vv].INVENTDIMID,
            [vv].DISTINCTPRODUCTVARIANT,
            [vv].SIZEID,
            [vv].COLORID,
            [vv].STYLEID,
            [vv].CONFIGID,
            [vv].COLOR,
            [vv].SIZE,
            [vv].STYLE,
            [vv].CONFIG
        FROM [crt].GETVARIANTS(@bi_ChannelId, @dt_ChannelDate, @tvp_DistinctProductVariantIds) vv
    END

    SET @i_ReturnCode = @i_ReturnCode + 1;
    IF (@i_DataLevel < 1)
        RETURN @i_ReturnCode;

    -- Retrieve the product rules
    SELECT
        [prv].PRODUCTID AS 'RECID',
        [prv].BLOCKEDONPOS,
        [prv].DATEBLOCKED,
        [prv].DATETOACTIVATEITEM,
        [prv].DATETOBEBLOCKED,
        [prv].KEYINGINPRICE,
        [prv].KEYINGINQTY,
        [prv].MUSTKEYINCOMMENT,
        [prv].QTYBECOMESNEGATIVE,
        [prv].SCALEITEM,
        [prv].ZEROPRICEVALID,
        [prv].ISSERIALIZED,
        [prv].ISACTIVEINSALESPROCESS,
        [prv].DEFAULTUNITOFMEASURE
    FROM [crt].PRODUCTRULESVIEW prv
    INNER JOIN @tvp_ExpandedWorkingIdSet ids ON [ids].RECID = [prv].PRODUCTID
    WHERE [prv].DATAAREAID = @nvc_DataAreaId

    SET @i_ReturnCode = @i_ReturnCode + 1;

    IF (@i_DataLevel < 2)
    BEGIN
        -- Extract attribute schema of the first-class(Name, Description, Image) attributes for this data level.
        SELECT
            [pamv].ATTRIBUTE,
            [pamv].KEYNAME,
            CASE [pamv].KEYNAME
                WHEN @ProductNameAttributeName THEN 5  /* Text */
                WHEN @ProductDescriptionAttributeName THEN 5  /* Text */
                WHEN @ProductImageAttributeName THEN 41  /* Image */
            END AS DATATYPE,
            [era].NAME,
            [erat].LANGUAGE,
            [erat].FRIENDLYNAME,
            0 AS PRODUCT,
            0 AS CATALOG,
            0 AS ATTRIBUTEGROUP,
            0 AS ATTRIBUTEGROUPTYPE
        FROM [ax].RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA pamv
            INNER JOIN [ax].ECORESATTRIBUTE era ON [era].RECID = [pamv].ATTRIBUTE
            LEFT JOIN [ax].ECORESATTRIBUTETRANSLATION erat ON [erat].ATTRIBUTE = [pamv].ATTRIBUTE
            WHERE [pamv].HOSTCHANNEL = @bi_ChannelId
                AND ([pamv].KEYNAME = @ProductNameAttributeName
                    OR [pamv].KEYNAME = @ProductDescriptionAttributeName
                    OR [pamv].KEYNAME = @ProductImageAttributeName)

        SET @i_ReturnCode = @i_ReturnCode + 1;

        -- Retrieve product attribute values for the first-class(Name, Description, Image) attributes for this data level.
        SELECT
            [gpavv].ATTRIBUTE,
            [gpavv].VALUE,
            [gpavv].ISREFERENCE,
            0 AS PRODUCT,
            0 AS CATEGORY,
            0 AS CATALOG,
            0 AS DISTANCE,
            2 AS SOURCE,  /* DefaultProductAttributeGroupDefaultValue */
            NULL AS BOOLEANVALUE,
            NULL AS CURRENCYVALUE,
            NULL AS CURRENCYCODE,
            NULL AS DATETIMEVALUE,
            NULL AS DATETIMEVALUETZID,
            NULL AS FLOATVALUE,
            NULL AS FLOATUNITSYMBOL,
            NULL AS INTVALUE,
            NULL AS INTUNITSYMBOL,
            [ertv].TEXTVALUE,
            [tvt].LANGUAGE,
            [tvt].TRANSLATION
        FROM [crt].DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW gpavv
        INNER JOIN [ax].ECORESTEXTVALUE ertv ON [ertv].RECID = [gpavv].VALUE
        LEFT JOIN [crt].GETTEXTVALUETRANSLATION(@bi_ChannelId) tvt ON [tvt].VALUE = [ertv].RECID
        WHERE [gpavv].CHANNEL = @bi_ChannelId 
            AND
            (@bi_CatalogId = 0 OR EXISTS(
                SELECT 1
                FROM [ax].RETAILPUBCATALOG
                WHERE ORIGIN = @bi_CatalogId AND ENABLESNAPSHOT = 0
            ))

        UNION ALL

        SELECT
            [rav].ATTRIBUTE,
            0 AS VALUE,
            1 AS ISREFERENCE,
            [ept].PRODUCT,
            0 AS CATEGORY,
            0 AS CATALOG,
            0 AS DISTANCE,
            5 AS SOURCE,  /* StandardProductAttributeValue */
            CONVERT(BIT, 0) AS BOOLEANVALUE,
            CONVERT(NUMERIC(32,16), 0) AS CURRENCYVALUE,
            '' AS CURRENCYCODE,
            CONVERT(DATETIME, 0) AS DATETIMEVALUE,
            CONVERT(INT, 0) AS DATETIMEVALUETZID,
            CONVERT(NUMERIC(32,16), 0) AS FLOATVALUE,
            '' AS FLOATUNITSYMBOL,
            CONVERT(INT, 0) AS INTVALUE,
            '' AS INTUNITSYMBOL,
            '' AS TEXTVALUE,
            [ept].LANGUAGEID AS LANGUAGE,
            CASE [rsa].STANDARDATTRIBUTEID
                WHEN 2 /* ProductName */ THEN [ept].NAME
                WHEN 4 /* Description */ THEN [ept].DESCRIPTION
            END AS TRANSLATION
        FROM @tvp_ExpandedWorkingIdSet AS ids
        INNER JOIN [ax].RETAILSTANDARDATTRIBUTE rsa ON [rsa].STANDARDATTRIBUTEID = 2 /* ProductName */ OR [rsa].STANDARDATTRIBUTEID = 4 /* Description */
        INNER JOIN [crt].REFERENCEATTRIBUTEVIEW rav ON [rav].REFERENCEDATTRIBUTE = [rsa].ATTRIBUTE
        INNER JOIN [ax].ECORESPRODUCTTRANSLATION ept ON [ept].PRODUCT = [ids].RECID
        INNER JOIN [crt].CHANNELLANGUAGESVIEW clv ON [clv].CHANNEL = @bi_ChannelId AND [clv].LANGUAGEID = [ept].LANGUAGEID

        SET @i_ReturnCode = @i_ReturnCode + 1;

        -- exit here if the data level is minimal
        RETURN @i_ReturnCode
    END
    ELSE BEGIN
        -- Retrieve the attribute schema.
        SELECT
            [pas].ATTRIBUTE,
            [pamv].KEYNAME,
            [pamv].DATATYPE AS DATATYPE,
            [era].NAME,
            [erat].LANGUAGE,
            [erat].FRIENDLYNAME,
            [pas].PRODUCT,
            [pas].[CATALOG],
            [pas].ATTRIBUTEGROUP,
            [pas].ATTRIBUTEGROUPTYPE
        FROM [crt].GETPRODUCTATTRIBUTESCHEMAS(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @tvp_ExpandedWorkingIdSet, @tvp_DummyId) AS pas
            INNER JOIN [crt].PRODUCTATTRIBUTEMETADATAVIEW pamv ON [pamv].ATTRIBUTE = [pas].ATTRIBUTE
            INNER JOIN [ax].ECORESATTRIBUTE era ON [era].RECID = [pas].ATTRIBUTE
            LEFT JOIN [ax].ECORESATTRIBUTETRANSLATION erat ON [erat].ATTRIBUTE = [pas].ATTRIBUTE
            WHERE [pamv].CHANNEL = @bi_ChannelId

        SET @i_ReturnCode = @i_ReturnCode + 1;

        -- Retrieve product attributes
        SELECT
            [pavfn].[ATTRIBUTE],
            [pavfn].[VALUE],
            [pavfn].[DISPLAYORDER],
            [pavfn].[ISREFERENCE],
            [pavfn].[PRODUCT],
            [pavfn].[CATEGORY],
            [pavfn].[CATALOG],
            [pavfn].[DISTANCE],
            [pavfn].[SOURCE],
            [pavfn].[BOOLEANVALUE],
            [pavfn].[CURRENCYVALUE],
            [pavfn].[CURRENCYCODE],
            [pavfn].[DATETIMEVALUE],
            [pavfn].[DATETIMEVALUETZID],
            [pavfn].[FLOATVALUE],
            [pavfn].[FLOATUNITSYMBOL],
            [pavfn].[INTVALUE],
            [pavfn].[INTUNITSYMBOL],
            [pavfn].[TEXTVALUE],
            [pavfn].[LANGUAGE],
            [pavfn].[TRANSLATION]
        FROM [crt].GETPRODUCTATTRIBUTEVALUES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IsForwardLooking, @tvp_ExpandedWorkingIdSet, @tvp_DummyId) AS pavfn

        SET @i_ReturnCode = @i_ReturnCode + 1;
    END

    -- Retrieve active or all catalogs depending on the value of @bi_CatalogId.
    SELECT DISTINCT
        pcp.CATALOG,
        ap.PRODUCTID AS 'PRODUCT',
        CASE
            WHEN ap.VALIDFROM > pc.VALIDFROM THEN ap.VALIDFROM
            ELSE pc.VALIDFROM
        END AS 'VALIDFROM',
        CASE
            WHEN pc.VALIDTO < ap.VALIDTO THEN pc.VALIDTO
            ELSE ap.VALIDTO
        END AS 'VALIDTO'
    FROM @tvp_CatalogAssortedProductIds ap
    INNER JOIN [ax].RETAILPUBCATALOGPRODUCT pcp ON pcp.PRODUCT = ap.PRODUCTID OR pcp.PRODUCT = ap.LOOKUPID
    INNER JOIN [ax].RETAILPUBCATALOG pc ON pc.ORIGIN = pcp.CATALOG
    INNER JOIN [crt].PUBCATALOGCHANNELVIEW ccv ON ccv.CATALOG = pcp.CATALOG
    WHERE ccv.CHANNEL = @bi_ChannelId AND (ccv.CATALOG = @bi_CatalogId OR @bi_CatalogId = 0)
        AND pc.VALIDTO >= @dt_ChannelDate AND (@b_IsForwardLooking = 1 OR pc.VALIDFROM <= @dt_ChannelDate)

    UNION ALL

    -- Retrieve assortment dates when no catalogs have been requested.
    SELECT
        0 AS 'CATALOG',
        ap.PRODUCTID AS 'PRODUCT',
        ap.VALIDFROM,
        ap.VALIDTO
    FROM @tvp_CatalogAssortedProductIds ap
    WHERE @bi_CatalogId = 0 AND (@b_IsForwardLooking = 1 OR @dt_ChannelDate BETWEEN ap.VALIDFROM AND ap.VALIDTO)
    ORDER BY VALIDFROM DESC

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- Retrieve product categories
    SELECT DISTINCT
        categories.PRODUCT,
        categories.CATEGORY,
        categories.[CATALOG],
        0 AS ISPRIMARY
    FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IsForwardLooking, 1 /* @b_ProductIdsPassed */, @tvp_ExpandedWorkingIdSet, 0 /* @b_CategoryIdsPassed */, @tvp_DummyId) categories

    SET @i_ReturnCode = @i_ReturnCode + 1;

    IF (@i_DataLevel < 3)
        RETURN @i_ReturnCode;

    -- Retrieve product relations
    SELECT
        [prfn].PRODUCT,
        [prfn].RELATEDPRODUCT,
        [prfn].PRODUCTRELATIONTYPE,
        [prfn].[CATALOG],
        [prfn].EXCLUSION
    FROM [crt].GETPRODUCTRELATIONS(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @tvp_LookupIds) AS prfn

    SET @i_ReturnCode = @i_ReturnCode + 1;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTSHIFTSTAGING]...';


GO

CREATE PROCEDURE [crt].[INSERTSHIFTSTAGING]
    @TVP_SHIFTTABLETYPE [crt].[SHIFTTABLETYPE] READONLY,
    @RV_ROWVERSION      ROWVERSION             OUTPUT
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_Error                INT;
    DECLARE @tvp_RowVersion         TABLE ([ROWVERSION] BINARY(8));

    INSERT INTO [crt].RETAILSHIFTSTAGINGTABLE
    (
        CHANNEL
        ,STOREID
        ,TERMINALID
        ,SHIFTID		
        ,STAFFID
		,CURRENTSTAFFID
        ,[STATUS]
        ,CURRENTTERMINALID
        ,STARTDATETIMEUTC
        ,STATUSDATETIMEUTC
        ,DATAAREAID
        ,CASHDRAWER
		,ISSHARED
    )
    OUTPUT INSERTED.[ROWVERSION] INTO @tvp_RowVersion
    SELECT
        SOURCE.CHANNEL
        ,SOURCE.STOREID
        ,SOURCE.TERMINALID
        ,SOURCE.SHIFTID
        ,SOURCE.STAFFID
		,SOURCE.CURRENTSTAFFID
        ,SOURCE.[STATUS]
        ,SOURCE.CURRENTTERMINALID
        ,SOURCE.STARTDATETIMEUTC
        ,SOURCE.STATUSDATETIMEUTC
        ,SOURCE.DATAAREAID
        ,SOURCE.CASHDRAWER
		,SOURCE.ISSHARED
    FROM @TVP_SHIFTTABLETYPE AS SOURCE

    SELECT @i_Error = @@ERROR;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        RETURN @i_ReturnCode;
    END;

    SELECT TOP 1 @RV_ROWVERSION = CAST([ROWVERSION] AS ROWVERSION) FROM @tvp_RowVersion;
END;
GO
PRINT N'Creating [crt].[INSERTTENDERDECLARATION]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [INSERTTENDERDECLARATION] inserts tender transactions into AX.[RETAILTRANSACTIONTENDERDECLARATIONTRANS].
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[INSERTTENDERDECLARATION]
    @bi_channelId                 BIGINT,
    @TVP_TenderDeclareTrans       [crt].[TENDERDECLARATIONTRANSTYPE]    READONLY,
    @d_BusinessDate               DATE 
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS]
    (
      [AMOUNTCUR]
      ,[AMOUNTMST]
      ,[AMOUNTTENDERED]
      ,[CARDID]
      ,[CHANNEL]
      ,[CURRENCY]
      ,[EXCHRATE]
      ,[EXCHRATEMST]
      ,[LINENUM]
      ,[POSCURRENCY]
      ,[QTY]
      ,[RECEIPTID]
      ,[REPLICATED]
      ,[SHIFT]
      ,[SHIFTDATE]
      ,[STAFF]
      ,[STATEMENTCODE]
      ,[STORE]
      ,[TENDERTYPE]
      ,[TERMINAL]
      ,[TRANSACTIONID]
      ,[TRANSACTIONSTATUS]
      ,[TRANSDATE]
      ,[TRANSTIME]
      ,[DATAAREAID]
      ,[BUSINESSDATE]
    )
    SELECT
      [AMOUNTCUR]
      ,[AMOUNTMST]
      ,[AMOUNTTENDERED]
      ,[CARDID]
      ,@bi_channelId
      ,[CURRENCY]
      ,[EXCHRATE] * 100.00 -- ePOS behavior
      ,[EXCHRATEMST] * 100.00 -- ePOS behavior
      ,[LINENUM]
      ,[POSCURRENCY]
      ,[QTY]
      ,[RECEIPTID]
      ,[REPLICATED]
      ,[SHIFT]
      ,[SHIFTDATE]
      ,[STAFF]
      ,[STATEMENTCODE]
      ,[STORE]
      ,[TENDERTYPE]
      ,[TERMINAL]
      ,[TRANSACTIONID]
      ,[TRANSACTIONSTATUS]
      ,[TRANSDATE]
      ,[TRANSTIME]
      ,[DATAAREAID]
      ,@d_BusinessDate
    FROM @TVP_TenderDeclareTrans AS Source;


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;
        
        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[VERIFYUSERLOCKOUTPOLICY]...';


GO

CREATE PROCEDURE [crt].[VERIFYUSERLOCKOUTPOLICY]
    @bi_ChannelId BIGINT
    ,@nvc_StaffId   NVARCHAR(25)
    ,@i_TimeToAccountUnlockInSeconds INT OUTPUT
AS
BEGIN
    SET NOCOUNT ON	
    DECLARE @i_Error INT;
    DECLARE @i_MaxNumberOfTries INT;
    DECLARE @i_TimeSpanInMinutes INT;
    DECLARE @i_LockoutDurationInMinutes INT;
    DECLARE @Result TABLE(AUTHENTICATIONSTATUS INT, CREATEDDATETIME DATETIME);
    DECLARE @dt_OldestLoginFailureTime DATETIME;
    DECLARE @dt_LatestLoginFailureTime DATETIME;
    DECLARE @nvc_DataAreaId NVARCHAR(10);
    DECLARE @dt_UtcDate DATETIME;
    DECLARE @dt_PasswordLastChangedDateTime DATETIME;
    DECLARE @i_PasswordLastUpdatedOperation INT;
    SET @i_TimeToAccountUnlockInSeconds = 0;
    SET @dt_UtcDate = GETUTCDATE();

    IF @bi_ChannelId = 0
    BEGIN
        -- This implementation gets the first legal entity that this worker is assigned to. An
        -- alternative implementation would find the legal entity with the strictest password policy.
        SET  @nvc_DataAreaId =  (SELECT TOP 1 rct.INVENTLOCATIONDATAAREAID
                                    FROM [ax].[DIRADDRESSBOOKPARTY] dabp  
                                    INNER JOIN [ax].[HCMWORKER] hw ON dabp.PARTY = hw.PERSON  
                                    INNER JOIN [ax].[RETAILSTOREADDRESSBOOK] rsab on dabp.ADDRESSBOOK = rsab.ADDRESSBOOK
                                    INNER JOIN [ax].[RETAILCHANNELTABLE] rct ON rsab.STORERECID = rct.RECID
                                    WHERE rsab.ADDRESSBOOKTYPE = 1 -- 1 = Employee address book
                                    AND hw.PERSONNELNUMBER = @nvc_StaffId)
    END
    ELSE
    BEGIN 
        SET @nvc_DataAreaId = (SELECT INVENTLOCATIONDATAAREAID from [ax].RETAILCHANNELTABLE
                                    WHERE RECID = @bi_ChannelId)
    END
    
    SELECT @i_MaxNumberOfTries = LOCKOUTTHRESHOLD,
    @i_TimeSpanInMinutes = LOGINCOUNTERRESETDURATION,
    @i_LockoutDurationInMinutes = LOCKOUTDURATION
    FROM [ax].RETAILPARAMETERS
    WHERE DATAAREAID = @nvc_DataAreaId;

    IF (ISNULL(@i_MaxNumberOfTries, 0) = 0 OR ISNULL(@i_TimeSpanInMinutes, 0) = 0 OR ISNULL(@i_LockoutDurationInMinutes, 0) = 0)
    BEGIN
        RETURN;
    END    

    --Get the PasswordLastChangedDateTime and PasswordLastUpdateOperation from the RetailStaffTable
    SELECT @dt_PasswordLastChangedDateTime = PASSWORDLASTCHANGEDDATETIME,
    @i_PasswordLastUpdatedOperation = PASSWORDLASTUPDATEDOPERATION
    FROM [ax].RETAILSTAFFTABLE
    WHERE STAFFID = @nvc_StaffId;   
    
    --Get the most recent authentication requests of type Success or InvalidPasswordFailure.We only get the records where the CreatedDateTime is greater than the PasswordLastChangedDateTime.
    INSERT INTO @Result
    SELECT TOP (@i_MaxNumberOfTries) AUTHENTICATIONSTATUS, CREATEDDATETIME FROM [ax].RETAILAUTHENTICATIONLOG
    WHERE STAFFID = @nvc_StaffId AND CREATEDDATETIME >= @dt_PasswordLastChangedDateTime AND (AUTHENTICATIONSTATUS = 0 OR AUTHENTICATIONSTATUS = 1) -- 0 = Success, 1 = InvalidPasswordFailure
    ORDER BY CREATEDDATETIME DESC; 
    
    SET @dt_OldestLoginFailureTime = (SELECT TOP 1 CREATEDDATETIME FROM @Result ORDER BY CREATEDDATETIME ASC);
    SET @dt_LatestLoginFailureTime = (SELECT TOP 1 CREATEDDATETIME FROM @Result ORDER BY CREATEDDATETIME DESC);
    
    -- Return if the number of consecutive logon attempts with invalid password is less than the number of retries allowed, or the password was reset after
    -- the user was locked out.
    IF (((SELECT COUNT(*) FROM @Result) < @i_MaxNumberOfTries) 
    OR ((SELECT COUNT(*) FROM @Result WHERE AUTHENTICATIONSTATUS = 0) <> 0)
    OR (@dt_PasswordLastChangedDateTime > @dt_LatestLoginFailureTime AND @i_PasswordLastUpdatedOperation = 2)) -- 2 = ResetPassword
    BEGIN
        RETURN;
    END
    
    IF (DATEDIFF(SECOND, @dt_OldestLoginFailureTime, @dt_LatestLoginFailureTime) <= @i_TimeSpanInMinutes * 60)
    BEGIN
        IF (DATEDIFF(SECOND, @dt_LatestLoginFailureTime, @dt_UtcDate) <= @i_LockoutDurationInMinutes * 60)
        BEGIN
            --Return time duration (in minutes) after which the user account will be unblocked.
            SET @i_TimeToAccountUnlockInSeconds = @i_LockoutDurationInMinutes * 60 - DATEDIFF(SECOND, @dt_LatestLoginFailureTime, @dt_UtcDate);
        END;
    END;
END;
GO
PRINT N'Creating [crt].[GETREFINERVALUESFORCATEGORYSEARCH]...';


GO

CREATE PROCEDURE [crt].[GETREFINERVALUESFORCATEGORYSEARCH]
(
    @bi_ChannelId                               BIGINT,
    @bi_CatalogId                               BIGINT,
    @dt_ChannelDate                             DATE,
    @b_IncludeProductsFromDescendantCategories  BIT,
    @nvc_Locale                                 NVARCHAR(7),
    @tvp_CategoryIds                            [crt].[RECORDIDTABLETYPE] READONLY
)
AS
BEGIN
    DECLARE @tvp_ProductIds [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId    [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_Refiners   [crt].[PRODUCTREFINERTABLETYPE]
    DECLARE @tvp_Settings   [crt].QUERYRESULTSETTINGSTABLETYPE

    -- No paging while retrieving product ids because refiners are calculated over the entire span of result set
    INSERT INTO @tvp_Settings VALUES(0, 0, 0, '', 0)

    -- Insert dummy record to satisfy API contract
    INSERT INTO @tvp_DummyId VALUES (0)

    -- Get product ids matching keyword search criteria
    INSERT INTO @tvp_ProductIds(RECID)
    SELECT RECID
    FROM [crt].SEARCHPRODUCTSBYCATEGORY(@tvp_Settings, @bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IncludeProductsFromDescendantCategories, @tvp_CategoryIds)

    -- Add variant ids to product ids set because those attributes could be refiners too.
    INSERT INTO @tvp_ProductIds
    SELECT
        [erdpv].RECID
    FROM [ax].ECORESDISTINCTPRODUCTVARIANT erdpv
    INNER JOIN @tvp_ProductIds ids ON [erdpv].PRODUCTMASTER = [ids].RECID

    -- Get refiner information
    INSERT INTO @tvp_Refiners
    OUTPUT inserted.RECID, inserted.SOURCE, inserted.KEYNAME, inserted.DATATYPE, inserted.DISPLAYOPTION, inserted.DISPLAYTEMPLATE, inserted.THRESHOLDVALUE
    SELECT
        [gpr].RECID,
        [gpr].SOURCE,
        [gpr].KEYNAME,
        [gpr].DATATYPE,
        [gpr].DISPLAYOPTION,
        [gpr].DISPLAYTEMPLATE,
        [gpr].THRESHOLDVALUE
    FROM [crt].GETPRODUCTREFINERS(@bi_ChannelId, 0 /* @bi_CatalogId */, @dt_ChannelDate, @nvc_Locale, @tvp_ProductIds, @tvp_DummyId) gpr

    -- Get refiner values using product ids
    SELECT
        [gprv].RECID,
        [gprv].REFINERSOURCE,
        [gprv].DATATYPE,
        [gprv].VALUE,
        [gprv].UNIT
    FROM [crt].GETPRODUCTREFINERVALUES(@bi_ChannelId, 0 /* @bi_CatalogId */, @dt_ChannelDate, @nvc_Locale, @tvp_ProductIds, @tvp_Refiners, @tvp_DummyId) gprv
END;
GO
PRINT N'Creating [crt].[GETMULTIBUYLINEDISCOUNTBYQUANTITY]...';


GO

CREATE PROCEDURE [crt].[GETMULTIBUYLINEDISCOUNTBYQUANTITY]
    @bi_ChannelId BIGINT,
    @OfferId    NVARCHAR(40),
    @Quantity   NUMERIC(32,16)
AS
BEGIN
    SET NOCOUNT ON

    SELECT TOP 1
        MBL.MULTIBUYID,
        MBL.QTYLOWEST,
        MBL.PRICEDISCPCT,
        MBL.RECID
    FROM [ax].RETAILMULTIBUYDISCOUNTLINE AS MBL
	INNER JOIN [ax].RETAILCHANNELTABLE AS C
		ON C.INVENTLOCATIONDATAAREAID = MBL.DATAAREAID AND C.RECID = @bi_ChannelId
    WHERE
        MULTIBUYID = @OfferId
        AND QTYLOWEST <= @Quantity
    ORDER BY MULTIBUYID, QTYLOWEST DESC

END;
GO
PRINT N'Creating [crt].[GETCOUNTIES]...';


GO

CREATE PROCEDURE [crt].[GETCOUNTIES]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @CountryRegionId    NVARCHAR(10),
    @StateProvinceID    NVARCHAR(10) = NULL
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @StateProvinceIDIsNull BIT = CASE WHEN (@StateProvinceID IS NULL OR LEN(LTRIM(RTRIM(@StateProvinceID))) = 0) THEN 1 ELSE 0 END

    SELECT
        LCNTY.COUNTYID
       ,LCNTY.NAME
       ,LCNTY.COUNTRYREGIONID
       ,LCNTY.STATEID
    FROM [ax].LOGISTICSADDRESSCOUNTY LCNTY
    WHERE
        LCNTY.COUNTRYREGIONID = @CountryRegionId
        AND (@StateProvinceIDIsNull = 1 OR LCNTY.STATEID = @StateProvinceID)
    ORDER BY [LCNTY].COUNTRYREGIONID, [LCNTY].STATEID, [LCNTY].COUNTYID
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETLOYALTYTIERS]...';


GO

CREATE PROCEDURE [crt].[GETLOYALTYTIERS]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_loyaltyGroupRecordId        BIGINT,
    @nvc_Locale                     NVARCHAR(7) = 'en-us'
AS
BEGIN
    SET NOCOUNT ON

    -- Select all RetailLoyaltyTier of the loyalty program
    select
        rlt.RECID,
        rlt.TIERID,
        rlt.TIERLEVEL,
        rltt.DESCRIPTION
    from [ax].[RETAILLOYALTYTIER] rlt
    left join [ax].[RETAILLOYALTYTIERTRANSLATION] rltt
        on rltt.LOYALTYTIER = rlt.RECID
        and rltt.LANGUAGEID = @nvc_Locale
    where rlt.AFFILIATION = @bi_loyaltyGroupRecordId
    ORDER BY [rlt].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[INSERTMARKUPTRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTMARKUPTRANS]
    @bi_channelId           BIGINT,
    @TVP_MarkupTrans        [crt].[RETAILTRANSACTIONMARKUPTRANSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONMARKUPTRANS
    (
        [CURRENCYCODE],
        [DATAAREAID],
        [MARKUPCODE],
        [MARKUPLINENUM],
        [SALELINENUM],
        [STORE],
        [TAXGROUP],
        [TAXITEMGROUP],
        [TERMINALID],
        [TRANSACTIONID],
        [VALUE],
        [CALCULATEDAMOUNT],
        [METHOD],
		[TAXAMOUNT],
		[TAXAMOUNTINCLUSIVE],
		[TAXAMOUNTEXCLUSIVE],
        [CHANNEL]
    )
    SELECT
        [CURRENCYCODE],
        [DATAAREAID],
        [MARKUPCODE],
        [MARKUPLINENUM],
        [SALELINENUM],
        [STORE],
        [TAXGROUP],
        [TAXITEMGROUP],
        [TERMINALID],
        [TRANSACTIONID],
        [VALUE],
        [CALCULATEDAMOUNT],
        [METHOD],
		[TAXAMOUNT],
		[TAXAMOUNTINCLUSIVE],
		[TAXAMOUNTEXCLUSIVE],
        @bi_channelId
    FROM @TVP_MarkupTrans AS Source;


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[DELETESTOCKCOUNTTRANSACTIONS]...';


GO

CREATE PROCEDURE [crt].[DELETESTOCKCOUNTTRANSACTIONS]
    @bi_ChannelId			BIGINT,
    @nvc_JournalId			NVARCHAR(50),
    @nvc_ItemId				NVARCHAR(20),
	@nvc_InventSizeId		NVARCHAR(20) = NULL,
	@nvc_InventColorId		NVARCHAR(20) = NULL,
	@nvc_InventStyleId		NVARCHAR(20) = NULL,
	@nvc_ConfigId			NVARCHAR(20) = NULL
AS
BEGIN

    SET NOCOUNT ON
	DECLARE @nvc_InventSizeIdIsNull BIT = CASE WHEN (@nvc_InventSizeId IS NULL OR DATALENGTH(LTRIM(RTRIM(@nvc_InventSizeId))) = 0) THEN 1 ELSE 0 END
	DECLARE @nvc_InventColorIdIsNull BIT = CASE WHEN (@nvc_InventColorId IS NULL OR DATALENGTH(LTRIM(RTRIM(@nvc_InventColorId))) = 0) THEN 1 ELSE 0 END
	DECLARE @nvc_InventStyleIdIsNull BIT = CASE WHEN (@nvc_InventStyleId IS NULL OR DATALENGTH(LTRIM(RTRIM(@nvc_InventStyleId))) = 0) THEN 1 ELSE 0 END
	DECLARE @nvc_ConfigIdIsNull BIT = CASE WHEN (@nvc_ConfigId IS NULL OR DATALENGTH(LTRIM(RTRIM(@nvc_ConfigId))) = 0) THEN 1 ELSE 0 END

    IF (@nvc_ItemId IS NULL OR @nvc_ItemId = '')
    BEGIN
        DELETE FROM [crt].[RETAILSTOCKCOUNT] WHERE JOURNALID = @nvc_JournalId 
    END
    ELSE
    BEGIN
        DELETE	FROM [crt].[RETAILSTOCKCOUNT] 
		WHERE	JOURNALID = @nvc_JournalId
		AND		ITEMID = @nvc_ItemId
		AND		(@nvc_InventSizeIdIsNull = 1 OR INVENTSIZEID = @nvc_InventSizeId)
		AND		(@nvc_InventColorIdIsNull = 1 OR INVENTCOLORID = @nvc_InventColorId)
		AND		(@nvc_InventStyleIdIsNull = 1 OR INVENTSTYLEID = @nvc_InventStyleId)
		AND		(@nvc_ConfigIdIsNull = 1 OR CONFIGID = @nvc_ConfigId)
    END

    SET NOCOUNT OFF
END;
GO
PRINT N'Creating [crt].[GETSHIFTTENDERSAFEDROPTRANS]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTTENDERSAFEDROPTRANS]
    @bi_ChannelId						bigint,
	@nvc_TerminalId						nvarchar(10),
	@bi_ShiftId							bigint,
	@i_TransactionType					int
AS

BEGIN
	SET NOCOUNT ON;

			SELECT	STSDTV.TENDERTYPEID, 
					STSDTV.TENDERTYPENAME,
					STSDTV.CURRENCY, 
					STSDTV.COUNTINGREQUIRED, 
					STSDTV.TENDEREDAMOUNT, 
					STSDTV.TENDEREDAMOUNTCUR,
					STSDTV.TRANSACTIONTYPE

			FROM	[crt].[SHIFTTENDERSAFEDROPTRANSVIEW] STSDTV

			WHERE	STSDTV.CHANNEL = @bi_ChannelId 
					AND STSDTV.TRANSACTIONTYPE = @i_TransactionType
					AND STSDTV.BATCHTERMINALID = @nvc_TerminalId
					AND STSDTV.BATCHID = @bi_ShiftId
END;
GO
PRINT N'Creating [crt].[SAVECHANNELPROPERTY]...';


GO

CREATE PROCEDURE [crt].[SAVECHANNELPROPERTY]
    @bi_ChannelId       BIGINT,
    @nvc_PropertyName   NVARCHAR(128),
    @nvc_PropertyValue  NVARCHAR(MAX)
AS
BEGIN
    SET NOCOUNT ON

    IF NOT EXISTS
    (
        SELECT CHANNEL, NAME
        FROM [crt].[RETAILCHANNELPROPERTIES]
        WHERE
            CHANNEL = @bi_ChannelId AND
            NAME = @nvc_PropertyName
    )
    BEGIN
        INSERT INTO [crt].[RETAILCHANNELPROPERTIES]
        (CHANNEL, NAME, VALUE)
        VALUES (@bi_ChannelId, @nvc_PropertyName, @nvc_PropertyValue)
    END
    ELSE
    BEGIN
        UPDATE [crt].[RETAILCHANNELPROPERTIES]
        SET VALUE = @nvc_PropertyValue
        WHERE
            CHANNEL = @bi_ChannelId AND
            NAME = @nvc_PropertyName
    END
END;
GO
PRINT N'Creating [crt].[GETACTIVELOYALTYCARDTIERS]...';


GO

CREATE PROCEDURE [crt].[GETACTIVELOYALTYCARDTIERS]
    @tvp_QueryResultSettings          [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_LoyaltyCardNumber            NVARCHAR(30),
    @dt_channelLocalDate              DATE
AS
BEGIN
    SET NOCOUNT ON
    
    SELECT 
        ral.AFFILIATION,
        COALESCE(tier.RECID, 0) AS LOYALTYTIER
    FROM (
        SELECT rlct.AFFILIATION, MAX(COALESCE(rlt.TIERLEVEL, 0)) AS MAXTIERLEVEL
        FROM [ax].[RETAILLOYALTYCARD] rlc
        JOIN [ax].[RETAILLOYALTYCARDTIER] rlct
            ON rlc.RECID = rlct.LOYALTYCARD
        LEFT JOIN [ax].[RETAILLOYALTYTIER] rlt
            ON rlct.LOYALTYTIER = rlt.RECID
        WHERE rlc.CARDNUMBER = @nvc_LoyaltyCardNumber
            AND (rlct.VALIDFROM IS NULL OR rlct.VALIDFROM <= @dt_channelLocalDate)
            AND (rlct.VALIDTO IS NULL OR rlct.VALIDTO >= @dt_channelLocalDate)
        GROUP BY rlct.AFFILIATION
    ) ral
    LEFT JOIN [ax].[RETAILLOYALTYTIER] tier
        ON (tier.AFFILIATION = ral.AFFILIATION AND tier.TIERLEVEL = ral.MAXTIERLEVEL)
    ORDER BY [ral].AFFILIATION  -- Possible performance killer
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
END;
GO
PRINT N'Creating [crt].[SAVEPURCHASEORDERLINES]...';


GO

CREATE PROCEDURE [crt].[SAVEPURCHASEORDERLINES]
    @TVP_PURCHASEORDERLINES         [crt].[PURCHASEORDERLINETABLETYPE]    READONLY,
    @nvc_OrderId                    NVARCHAR(50)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    --Delete product line operation is NOT SUPPORTED since no scenario of removal product lines on end client.

    -- Perform Insert
    MERGE INTO [crt].PURCHASEORDERLINE
    USING @TVP_PURCHASEORDERLINES AS SOURCE
    ON
        PURCHASEORDERLINE.ORDERID = @nvc_OrderId AND
        PURCHASEORDERLINE.RECID = SOURCE.RECID AND
        PURCHASEORDERLINE.ITEMID = SOURCE.ITEMID AND
        PURCHASEORDERLINE.CONFIGID = SOURCE.CONFIGID AND
        PURCHASEORDERLINE.INVENTCOLORID = SOURCE.INVENTCOLORID AND
        PURCHASEORDERLINE.INVENTSIZEID = SOURCE.INVENTSIZEID AND
        PURCHASEORDERLINE.INVENTSTYLEID = SOURCE.INVENTSTYLEID
    WHEN MATCHED THEN
        --Update existing product line rows
        UPDATE
        SET
            RECID = SOURCE.RECID,
            ORDERID = @nvc_OrderId,
            LINERECEIPTNUMBER = SOURCE.LINERECEIPTNUMBER,
            ITEMID = SOURCE.ITEMID,
            ITEMNAME = SOURCE.ITEMNAME,
            UNIQUEIDENTIFIER = SOURCE.UNIQUEIDENTIFIER,
            INVENTDIMID = SOURCE.INVENTDIMID,
            QUANTITYORDERED = SOURCE.QUANTITYORDERED,
            PURCHASEQUANTITY = SOURCE.PURCHASEQUANTITY,
            PURCHASEUNIT = SOURCE.PURCHASEUNIT,
            PURCHASERECEIVED = SOURCE.PURCHASERECEIVED,
            PURCHASERECEIVEDNOW = SOURCE.PURCHASERECEIVEDNOW,
            INVENTBATCHID = SOURCE.INVENTBATCHID,
            INVENTSITEID = SOURCE.INVENTSITEID,
            INVENTLOCATIONID = SOURCE.INVENTLOCATIONID,
            CONFIGID = SOURCE.CONFIGID,
            INVENTSERIALID = SOURCE.INVENTSERIALID,
            INVENTSIZEID = SOURCE.INVENTSIZEID,
            INVENTCOLORID = SOURCE.INVENTCOLORID,
            INVENTSTYLEID = SOURCE.INVENTSTYLEID,
            RECEIPTDATE = SOURCE.RECEIPTDATE,
            DELIVERYMETHOD = SOURCE.DELIVERYMETHOD
    WHEN NOT MATCHED THEN
        INSERT
        --Insert new product line rows that are added from end client.
    (
    [RECID],
    [ORDERID],
    [LINERECEIPTNUMBER],
    [ITEMID],
    [ITEMNAME],
    [UNIQUEIDENTIFIER],
    [INVENTDIMID],
    [QUANTITYORDERED],
    [PURCHASEQUANTITY],
    [PURCHASEUNIT],
    [PURCHASERECEIVED],
    [PURCHASERECEIVEDNOW],
    [INVENTBATCHID],
    [INVENTSITEID],
    [INVENTLOCATIONID],
    [CONFIGID],
    [INVENTSERIALID],
    [INVENTSIZEID],
    [INVENTCOLORID],
    [INVENTSTYLEID],
    [RECEIPTDATE],
    [DELIVERYMETHOD]
    )
    VALUES
    (
    SOURCE.[RECID],
    @nvc_OrderId,
    SOURCE.[LINERECEIPTNUMBER],
    SOURCE.[ITEMID],
    SOURCE.[ITEMNAME],
    SOURCE.[UNIQUEIDENTIFIER],
    SOURCE.[INVENTDIMID],
    SOURCE.[QUANTITYORDERED],
    SOURCE.[PURCHASEQUANTITY],
    SOURCE.[PURCHASEUNIT],
    SOURCE.[PURCHASERECEIVED],
    SOURCE.[PURCHASERECEIVEDNOW],
    SOURCE.[INVENTBATCHID],
    SOURCE.[INVENTSITEID],
    SOURCE.[INVENTLOCATIONID],
    SOURCE.[CONFIGID],
    SOURCE.[INVENTSERIALID],
    SOURCE.[INVENTSIZEID],
    SOURCE.[INVENTCOLORID],
    SOURCE.[INVENTSTYLEID],
    SOURCE.[RECEIPTDATE],
    SOURCE.[DELIVERYMETHOD]
    );


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTAFFILIATIONTRANS]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[INSERTAFFILIATIONTRANS] calls the corresponding stored procedures to insert into:
    Affilation lines into RETAILTRANSACTIONAFFILIATIONTRANS.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[INSERTAFFILIATIONTRANS]
    @bi_ChannelId              BIGINT,
    @TVP_AffiliationTrans      [crt].[RETAILTRANSACTIONAFFILIATIONTRANSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONAFFILIATIONTRANS
    (
        [AFFILIATION],
        [LOYALTYTIER],
        [TRANSACTIONID],
        [TERMINALID],
        [RECEIPTID],
        [STAFFID],
        [STOREID],
        [DATAAREAID],
        [CHANNEL]
    )
    SELECT
        [AFFILIATION],
        [LOYALTYTIER],
        [TRANSACTIONID],
        [TERMINALID],
        [RECEIPTID],
        [STAFFID],
        [STOREID],
        [DATAAREAID],
        @bi_ChannelId
    FROM @TVP_AffiliationTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETCHANGEDPRODUCTIDS]...';


GO

CREATE PROCEDURE [crt].[GETCHANGEDPRODUCTIDS]
    @tvp_QueryResultSettings                    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
	@bi_ChannelId BIGINT
	, @tvp_Watermark crt.PRODUCTCHANGETRACKINGANCHORSET READONLY
AS
BEGIN
	DECLARE @changedProductIds TABLE
	( 
		RECID BIGINT,
		SEQUENCE BIGINT
	)

	-- select ids of products changed given the input watermark
	INSERT @changedProductIds(RECID, SEQUENCE)
	SELECT RECID, SEQUENCE
	FROM crt.GETPRODUCTIDSWITHATTRIBUTEVALUECHANGES(@tvp_Watermark) 

	INSERT @changedProductIds(RECID, SEQUENCE)
	SELECT RECID, SEQUENCE
	FROM crt.GETPRODUCTIDSWITHTRANSLATIONCHANGES(@tvp_Watermark) 

	INSERT @changedProductIds(RECID, SEQUENCE)	
	SELECT RECID, SEQUENCE
	FROM crt.GETPRODUCTIDSWITHCATEGORYCHANGES(@tvp_Watermark)

	INSERT @changedProductIds(RECID, SEQUENCE)
	SELECT RECID, SEQUENCE
	FROM crt.GETPRODUCTIDSWITHCOMPOSITIONCHANGES(@tvp_Watermark)

	INSERT @changedProductIds(RECID, SEQUENCE)
	SELECT RECID, SEQUENCE
	FROM crt.GETPRODUCTIDSWITHPUBLISHEDCATALOGCHANGES(@tvp_Watermark)

	INSERT @changedProductIds(RECID, SEQUENCE)
	SELECT RECID, SEQUENCE
	FROM crt.GETPRODUCTIDSWITHPUBLISHEDATTRIBUTEVALUECHANGES(@tvp_Watermark)

	-- return ids in ascending order of timestamp
	-- grouping them because the same record id can be returned more than once (the change to the same product could come from different sources)
	SELECT piv.LOOKUPID AS RECID, MAX(ids.SEQUENCE) AS SEQUENCE
	FROM @changedProductIds AS ids
	INNER JOIN crt.PRODUCTIDENTITIESVIEW piv ON piv.RECID = ids.RECID
	WHERE piv.CHANNELID = @bi_ChannelId
	GROUP BY piv.LOOKUPID
	ORDER BY MAX(SEQUENCE) ASC

	-- select the new watermark
	SELECT 
		@bi_ChannelId AS CHANNELID,
		ECORESPRODUCT,
		ECORESPRODUCTINSTANCEVALUE,
		ECORESINSTANCEVALUE,
		ECORESATTRIBUTE,
		ECORESATTRIBUTEVALUE,
		ECORESVALUE,
		ECORESBOOLEANVALUE,
		ECORESDATETIMEVALUE,
		ECORESCURRENCYVALUE,
		ECORESFLOATVALUE,
		ECORESINTVALUE,
		ECORESREFERENCEVALUE,
		ECORESTEXTVALUE,
		ECORESTEXTVALUETRANSLATION,
		ECORESPRODUCTTRANSLATION,
		ECORESPRODUCTVARIANTCOLOR,
		ECORESPRODUCTVARIANTCONFIGURATION,
		ECORESPRODUCTVARIANTDIMENSIONVALUE,
		ECORESPRODUCTVARIANTSIZE,
		ECORESPRODUCTVARIANTSTYLE,
		ECORESCOLOR,
		ECORESCONFIGURATION,
		ECORESSIZE,
		ECORESSTYLE,
		ECORESATTRIBUTEGROUPATTRIBUTE,
		ECORESCATEGORYATTRIBUTEGROUP,
		ECORESCATEGORYATTRIBUTELOOKUP,
		ECORESDISTINCTPRODUCTVARIANT,
		ECORESPRODUCTCATEGORY,
		RETAILCATEGORYCONTAINMENTLOOKUP,
		RETAILPUBCATALOGPRODUCT,
		RETAILPUBCATALOGPRODUCTCATEGORY,
		RETAILPUBCATALOGPRODUCTRELATION,
		RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION,
		RETAILPUBINTERNALORGATTRIBUTEGROUP,
		RETAILPUBINTORGINHERITANCEEXPLODED,
		RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA,
		RETAILPUBPRODUCTATTRIBUTEVALUE,
		RETAILPUBRETAILCHANNELTABLE,
		RETAILSHAREDPARAMETERS,
		RETAILSTANDARDATTRIBUTE,
		UNITOFMEASURE
	FROM crt.GETPRODUCTINFOSOURCESCURRENTTIMESTAMPS(@bi_ChannelId)
END;
GO
PRINT N'Creating [crt].[LOGAUTHENTICATIONREQUEST]...';


GO

CREATE PROCEDURE [crt].[LOGAUTHENTICATIONREQUEST]    
     @ui_LogId UNIQUEIDENTIFIER
    ,@bi_ChannelId BIGINT
    ,@nvc_StaffId   NVARCHAR(25)
    ,@i_AuthenticationStatus INT
    ,@i_AuthenticationOperation INT
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    --
    -- Insert the authentication request.
    --

    -- Perform Insert
    INSERT INTO [ax].[RETAILAUTHENTICATIONLOG]
    (
	[LOGDATETIME],
        [LOGID],
        [CHANNELID],
        [STAFFID],
        [AUTHENTICATIONSTATUS],
        [AUTHENTICATIONOPERATION]
    )
    VALUES
    (
	GETUTCDATE(),
        @ui_LogId,
        @bi_ChannelId,
        @nvc_StaffId,
        @i_AuthenticationStatus,
        @i_AuthenticationOperation
     )

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END
GO
PRINT N'Creating [crt].[INSERTTRANSACTION]...';


GO

CREATE PROCEDURE [crt].[INSERTTRANSACTION]
    @bi_ChannelId               BIGINT,
    @TVP_TransactionTable       [crt].[RETAILTRANSACTIONTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONTABLE
    (
        [CHANNELREFERENCEID],
        [CREATEDDATETIME],
        [MODIFIEDDATETIME],
        [TRANSDATE],
        [TRANSTIME],
        [BUSINESSDATE],
        [CURRENCY],
        [EXCHRATE],
        [ENTRYSTATUS],
        [CUSTACCOUNT],
		[CUSTACCOUNTASYNC],
        [DATAAREAID],
        [DLVMODE],
        [GROSSAMOUNT],
        [INVENTLOCATIONID],
        [INVENTSITEID],
        [INCOMEEXPENSEAMOUNT],
        [LOGISTICSPOSTALADDRESS],
        [NETAMOUNT],
        [PAYMENTAMOUNT],
		[SALESPAYMENTDIFFERENCE],
        [RECEIPTDATEREQUESTED],
        [SHIPPINGDATEREQUESTED],
        [STORE],
        [TERMINAL],
        [CREATEDONPOSTERMINAL],
        [STAFF],
        [TRANSACTIONID],
        [TYPE],
        [CHANNEL],
        [LOYALTYCARDID],
        [RECEIPTEMAIL],
        [RECEIPTID],
        [NUMBEROFITEMS],
        [NUMBEROFITEMLINES],
        [NUMBEROFPAYMENTLINES],
        [TIMEWHENTRANSCLOSED],
        [SALEISRETURNSALE],
        [DISCAMOUNT],
        [TOTALDISCAMOUNT],
        [CUSTDISCAMOUNT],
        [TOTALMANUALDISCOUNTAMOUNT],
        [TOTALMANUALDISCOUNTPERCENTAGE],
        [BATCHID],
        [BATCHTERMINALID],
        [COMMENT],
        [INVOICECOMMENT],
        [SALESORDERID],
        [DESCRIPTION],
        [STATEMENTCODE],
        [FISCALDOCUMENTID],
        [FISCALSERIALID],
        [CREATEDOFFLINE]
    )
    SELECT
        [CHANNELREFERENCEID],
        [CREATEDDATETIME],
        [CREATEDDATETIME],          -- For inserts, we set MODIFIEDDATETIME = CREATEDDATETIME.
        CAST([TRANSDATE] AS DATE),
        [TRANSTIME],
        CAST([BUSINESSDATE] AS DATE),
        [CURRENCY],
        [EXCHRATE] * 100.00,        -- ePOS behavior
        [ENTRYSTATUS],
        [CUSTOMERID],
        CASE WHEN crt.ISASYNCCUSTOMERID([CUSTOMERID]) <> 0 THEN [CUSTOMERID] ELSE '' END, -- Set [CUSTACCOUNTASYNC] when Async Cust
        [DATAAREAID],
        [DELIVERYMODE],
        [GROSSAMOUNT],
        [INVENTLOCATIONID],
        [INVENTSITEID],
        [INCOMEEXPENSEAMOUNT],
        [LOGISTICSPOSTALADDRESS],
        [NETAMOUNT],
        [PAYMENTAMOUNT],
		[SALESPAYMENTDIFFERENCE],
        CAST([RECEIPTDATEREQUESTED] AS DATE),
        CAST([SHIPPINGDATEREQUESTED] AS DATE),
        [STORE],
        [TERMINAL],
        [TERMINAL], -- using same value for CREATEDONPOSTERMINAL
        [STAFF],
        [TRANSACTIONID],
        [TYPE],
        @bi_ChannelId,
        [LOYALTYCARDID],
        [RECEIPTEMAIL],
        [RECEIPTID],
        [NUMBEROFITEMS],
        [NUMBEROFITEMLINES],
        [NUMBEROFPAYMENTLINES],
        [TIMEWHENTRANSCLOSED],
        [SALEISRETURNSALE],
        [DISCAMOUNT],
        [TOTALDISCAMOUNT],
        [CUSTDISCAMOUNT],
        [TOTALMANUALDISCOUNTAMOUNT],
        [TOTALMANUALDISCOUNTPERCENTAGE],
        [BATCHID],
        [BATCHTERMINALID],
        [COMMENT],
        [INVOICECOMMENT],
        [SALESORDERID],
        [DESCRIPTION],
		[STATEMENTCODE],
        '', --[FISCALDOCUMENTID],
        '', --[FISCALSERIALID]
        [CREATEDOFFLINE]
    FROM @TVP_TransactionTable AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[RELEASEITEMS]...';


GO

-- Release items for available quantities.
CREATE PROCEDURE [crt].RELEASEITEMS
    @tvp_ItemReservationIds [crt].ITEMRESERVATIONIDTABLETYPE READONLY
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    SET @i_ReturnCode           = [crt].fn_kSuccess();
    SET @i_TransactionIsOurs    = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;
        SET @i_TransactionIsOurs = 1;
    END;

    UPDATE ITEMRESERVATION
    SET ISRELEASED = 1
    FROM @tvp_ItemReservationIds iri
    INNER JOIN ITEMRESERVATION ir ON ir.RESERVATIONID = iri.RESERVATIONID;

    SET @i_Error = @@ERROR;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;
        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETLOYALTYREDEEMSCHEMELINES]...';


GO

CREATE PROCEDURE [crt].[GETLOYALTYREDEEMSCHEMELINES]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT,
    @dt_ChannelLocalDate            DATE,
    @nvc_LoyaltyCardNumber          NVARCHAR(30),
    @nvc_RewardPointRewardId        NVARCHAR(64)
AS
BEGIN
    SET NOCOUNT ON

    -- Select all RetailLoyaltyRedeemSchemeLine records that applies to the given loyalty card and reward point in the given channel.
    select 
        rlrsl.RECID,
        ActiveLoyaltyCardTier.AFFILIATION as LOYALTYGROUPRECID,
        ActiveLoyaltyCardTier.LOYALTYTIER as LOYALTYTIERRECID,
        rlrsl.FROMREWARDPOINT,
        rlrsl.FROMREWARDPOINTAMOUNTQTY,
        COALESCE(rgml.CATEGORY, 0) as CATEGORYRECID,
        COALESCE(rgml.PRODUCT, 0) as PRODUCTRECID,
        COALESCE(rgml.VARIANT, 0) as VARIANTRECID,
        rlrsl.TOREWARDAMOUNTCURRENCY,
        rlrsl.TOREWARDAMOUNTQTY,
        rlrsl.TOREWARDTYPE,
        rlrp.REWARDPOINTID AS FROMREWARDPOINTID,
        rlrp.REWARDPOINTTYPE AS FROMREWARDPOINTTYPE,
        rlrp.REDEEMABLE AS FROMREWARDPOINTREDEEMABLE,
        rlrp.REWARDPOINTCURRENCY AS FROMREWARDPOINTCURRENCY,
        rlrp.EXPIRATIONTIMEVALUE AS FROMREWARDPOINTEXPIRATIONTIMEVALUE,
        rlrp.EXPIRATIONTIMEUNIT AS FROMREWARDPOINTEXPIRATIONTIMEUNIT
    from 
    (
        select
            ValidLoyaltyCardTier.LOYALTYCARD,
            ValidLoyaltyCardTier.AFFILIATION,
            ValidLoyaltyCardTier.LOYALTYTIER
        from 
        (
            select
                ROW_NUMBER() OVER (PARTITION BY rlct.LOYALTYCARD, rlct.AFFILIATION ORDER BY TIERLEVEL DESC) Ordinal,
                rlct.LOYALTYCARD,
                rlct.AFFILIATION,
                rlct.LOYALTYTIER,
                COALESCE(rlt.TIERLEVEL, 0) as TIERLEVEL
            from [ax].[RETAILLOYALTYCARD] rlc
            inner join [ax].[RETAILLOYALTYCARDTIER] rlct
            on rlct.LOYALTYCARD = rlc.RECID
            left join [ax].[RETAILLOYALTYTIER] rlt
            on rlct.LOYALTYTIER = rlt.RECID
            where rlc.CARDNUMBER = @nvc_LoyaltyCardNumber
                and (rlct.VALIDFROM is NULL or @dt_ChannelLocalDate >= rlct.VALIDFROM)
                and (rlct.VALIDTO is NULL or @dt_ChannelLocalDate <= rlct.VALIDTO)
        ) ValidLoyaltyCardTier
        where ValidLoyaltyCardTier.Ordinal = 1
    ) ActiveLoyaltyCardTier
    inner join [ax].[RETAILLOYALTYSCHEME] rls
        on rls.AFFILIATION = ActiveLoyaltyCardTier.AFFILIATION
    inner join [ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] rlsce
        on rlsce.LOYALTYSCHEME = rls.RECID
    inner join [ax].[RETAILCHANNELTABLE] rct
        on rct.OMOPERATINGUNITID = rlsce.OMOPERATINGUNIT
    inner join [ax].[RETAILLOYALTYREDEEMSCHEMELINE] rlrsl
        on rlrsl.LOYALTYSCHEME = rls.RECID
        and (rlrsl.LOYALTYTIER = ActiveLoyaltyCardTier.LOYALTYTIER or rlrsl.LOYALTYTIER = 0)
    inner join [ax].[RETAILLOYALTYREWARDPOINT] rlrp
        on rlrp.RECID = rlrsl.FROMREWARDPOINT
    left outer join [ax].[RETAILGROUPMEMBERLINE] rgml
        on rgml.RECID = rlrsl.TORETAILGROUPMEMBERLINE
    where rct.RECID = @bi_ChannelId
        and rlrp.REWARDPOINTID = @nvc_RewardPointRewardId
        and (rlrsl.VALIDFROM is NULL or @dt_ChannelLocalDate >= rlrsl.VALIDFROM)
        and (rlrsl.VALIDTO is NULL or @dt_ChannelLocalDate <= rlrsl.VALIDTO)
    ORDER BY [rlrsl].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[INSERTDISCOUNTTRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTDISCOUNTTRANS]
    @bi_channelId           BIGINT,
    @TVP_DiscountTrans      [crt].[RETAILTRANSACTIONDISCOUNTTRANSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONDISCOUNTTRANS
    (
        [AMOUNT],        
        [DATAAREAID],
        [DEALPRICE],
        [DISCOUNTAMOUNT],
        [DISCOUNTCODE],
        [LINENUM],         
        [PERCENTAGE],
        [PERIODICDISCOUNTOFFERID],
        [SALELINENUM],
        [STOREID],
        [TERMINALID],
        [TRANSACTIONID],
        [CHANNEL],
        [DISCOUNTORIGINTYPE],
        [MANUALDISCOUNTTYPE],
        [CUSTOMERDISCOUNTTYPE] 
    )
    SELECT
        [AMOUNT],
        [DATAAREAID],
        [DEALPRICE],
        [DISCOUNTAMOUNT],
        [DISCOUNTCODE],
        [LINENUM],
        [PERCENTAGE],
        [PERIODICDISCOUNTOFFERID],
        [SALELINENUM],
        [STOREID],
        [TERMINALID],
        [TRANSACTIONID],
        @bi_channelId,
        [DISCOUNTORIGINTYPE],
        [MANUALDISCOUNTTYPE],
        [CUSTOMERDISCOUNTTYPE]   
    FROM @TVP_DiscountTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[CREATEUPDATEASYNCCUSTOMER]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATEASYNCCUSTOMER]
    @TVP_CUSTOMERTABLETYPE                    [crt].CUSTOMERTABLETYPE   READONLY,
    @TVP_CUSTOMERADDRESSTABLETYPE             [crt].CUSTOMERADDRESSTABLETYPE   READONLY,
    @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE   [crt].CUSTOMERELECTRONICADDRESSTABLETYPE   READONLY,
    @TVP_EXTENSIONPROPERTIESTABLETYPE         [crt].EXTENSIONPROPERTIESTABLETYPE READONLY,
    @TVP_CUSTOMERAFFILIATIONTABLETYPE         [crt].CUSTOMERAFFILIATIONTABLETYPE READONLY,
    @TVP_ADDRESSBOOKPARTYTABLETYPE            [crt].ADDRESSBOOKPARTYTABLETYPE READONLY,
    @UPDATEADDRESSES                          BIT =1,
    @UPDATECUSTOMERAFFILIATION                BIT =1,
    @bi_ChannelId                             BIGINT,
    @nvc_DataAreaId                           NVARCHAR(4)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;
    DECLARE @nvc_PrimaryPhone                       NVARCHAR(20);

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    IF EXISTS(SELECT TOP 1 LOCATOR FROM @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE WHERE METHODYTPE = 1) 
        BEGIN 
            SELECT TOP 1 @nvc_PrimaryPhone = ISNULL(LOCATOR, '') FROM @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE WHERE METHODYTPE = 1
        END;
    ELSE
        BEGIN
            SET @nvc_PrimaryPhone = ''
        END;
        
    -- UPSERT INTO THE RETAILASYNCCUSTOMER
    MERGE INTO [ax].RETAILASYNCCUSTOMER
    USING @TVP_CUSTOMERTABLETYPE AS SOURCE
    ON
        [ax].RETAILASYNCCUSTOMER.CUSTACCOUNTASYNC = SOURCE.ACCOUNTNUMBER
    WHEN MATCHED THEN
        UPDATE
        SET
            INVOICEACCOUNT          = SOURCE.INVOICEACCOUNT
            ,CUSTGROUP              = SOURCE.CUSTGROUP
            ,CURRENCY               = SOURCE.CURRENCY
            ,PHONE                  = @nvc_PrimaryPhone
            ,MULTILINEDISC          = SOURCE.MULTILINEDISCOUNTGROUP
            ,ENDDISC                = SOURCE.TOTALDISCOUNTGROUP
            ,LINEDISC               = SOURCE.LINEDISCOUNTGROUP
            ,PRICEGROUP             = SOURCE.PRICEGROUP
            ,TAXGROUP               = SOURCE.TAXGROUP
            ,VATNUM                 = SOURCE.VATNUM
            ,CREDITMAX              = SOURCE.CREDITLIMIT
            ,BLOCKED                = SOURCE.BLOCKED
            ,ORGANIZATIONID         = SOURCE.ORGID
            ,RECEIPTEMAIL           = SOURCE.RECEIPTEMAIL
            ,RECEIPTOPTION          = SOURCE.RECEIPTOPTION
            ,FIRSTNAME              = SOURCE.FIRSTNAME
            ,MIDDLENAME             = SOURCE.MIDDLENAME
            ,LASTNAME               = SOURCE.LASTNAME
    WHEN NOT MATCHED THEN
        INSERT
        (
            ONLINECUSTCREATED
            ,CUSTACCOUNTASYNC
            ,CUSTACCOUNT
            ,CUSTNAME
            ,CUSTGROUP
            ,CURRENCY
            ,LANGUAGEID
            ,STREET
            ,ZIPCODE
            ,[STATE]
            ,COUNTY
            ,PHONE
            ,CELLULARPHONE
            ,EMAIL
            ,URL
            ,MULTILINEDISC
            ,ENDDISC
            ,LINEDISC
            ,PRICEGROUP
            ,TAXGROUP
            ,CREDITMAX
            ,BLOCKED
            ,ORGANIZATIONID
            ,USEPURCHREQUEST
            ,VATNUM
            ,INVOICEACCOUNT
            ,MANDATORYCREDITLIMIT
            ,CONTACTPERSONID
            ,USEORDERNUMBERREFERENCE
            ,RECEIPTOPTION
            ,RECEIPTEMAIL
            ,CITY
            ,COUNTRY
            ,IDENTIFICATIONNUMBER
            ,STORERECID
            ,RELATIONSHIPTYPE
            ,STREETNUMBER
            ,DISTRICTNAME
            ,BUILDINGCOMPLEMENT
            ,CNPJCPFNUM_BR
            ,ADDRESSNAME
            ,ADDRESSPHONE
            ,ADDRESSEMAIL
            ,ADDRESSURL
            ,ADDRESSTAXGROUP
            ,FIRSTNAME
            ,MIDDLENAME
            ,LASTNAME
            ,PHONEEXTENSION
            ,RETAILCUSTAFFILIATIONS
            ,ADDRESSTYPE
            ,DATAAREAID
        )
        VALUES
        (
            0 -- ONLINECUSTCREATED
            ,SOURCE.ACCOUNTNUMBER -- CUSTACCOUNTASYNC
            ,'' -- CUSTACCOUNT
            ,SOURCE.NAME -- CUSTNAME
            ,SOURCE.CUSTGROUP
            ,SOURCE.CURRENCY
            ,SOURCE.LANGUAGEID
            ,'' -- STREET
            ,'' -- ZIPCODE
            ,'' --  [STATE]
            ,'' --  COUNTY
            ,@nvc_PrimaryPhone
            ,'' --  CELLULARPHONE
            ,'' --  EMAIL
            ,'' --  URL
            ,SOURCE.MULTILINEDISCOUNTGROUP --MULTILINEDISC
            ,'' --  ENDDISC
            ,SOURCE.LINEDISCOUNTGROUP -- LINEDISC
            ,SOURCE.PRICEGROUP
            ,SOURCE.TAXGROUP
            ,SOURCE.CREDITLIMIT --CREDITMAX
            ,SOURCE.BLOCKED
            ,SOURCE.ORGID -- ORGANIZATIONID
            ,'' --  USEPURCHREQUEST
            ,SOURCE.VATNUM
            ,SOURCE.INVOICEACCOUNT
            ,'' --  MANDATORYCREDITLIMIT
            ,'' --  CONTACTPERSONID
            ,'' --  USEORDERNUMBERREFERENCE
            ,SOURCE.RECEIPTOPTION
            ,SOURCE.RECEIPTEMAIL
            ,'' --  CITY
            ,'' --  COUNTRY
            ,'' --  IDENTIFICATIONNUMBER
            ,@bi_ChannelId --  STORERECID
            ,SOURCE.INSTANCERELATIONTYPE --  RELATIONSHIPTYPE
            ,'' --  STREETNUMBER
            ,'' --  DISTRICTNAME
            ,'' --  BUILDINGCOMPLEMENT
            ,'' --  CNPJCPFNUM_BR
            ,'' --  ADDRESSNAME
            ,'' --  ADDRESSPHONE
            ,'' --  ADDRESSEMAIL
            ,'' --  ADDRESSURL
            ,'' --  ADDRESSTAXGROUP
            ,SOURCE.FIRSTNAME
            ,SOURCE.MIDDLENAME
            ,SOURCE.LASTNAME
            ,'' --  PHONEEXTENSION
            ,'' --  RETAILCUSTAFFILIATIONS
            ,'' --  ADDRESSTYPE
            ,@nvc_DataAreaId            
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETRETAILDISCOUNTSFORITEMS]...';


GO

CREATE PROCEDURE [crt].[GETRETAILDISCOUNTSFORITEMS]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT,
    @items                          [crt].[ITEMVARIANTINVENTDIMTABLETYPE] READONLY,
    @priceGroups                    [crt].[PRICEGROUPTABLETYPE] READONLY,
    @nvc_CurrencyCode               NVARCHAR(3),
    @MinDate                        DATE,
    @MaxDate                        DATE
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @NoDate DATE = [crt].GETMINAXDATE();
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = INVENTLOCATIONDATAAREAID from [ax].RETAILCHANNELTABLE where RECID = @bi_ChannelId

    -- fetch price group record ids or lookup if missing
    DECLARE @priceGroupRecIds TABLE (PRICEGROUP BIGINT);
    INSERT INTO @priceGroupRecIds (PRICEGROUP)
    SELECT (CASE(pa.PRICEGROUP)
        WHEN 0
        THEN pg.RECID
        ELSE pa.PRICEGROUP
        END)
    FROM @priceGroups AS pa
    INNER JOIN [ax].PRICEDISCGROUP pg ON pg.GROUPID = pa.GROUPID AND DATAAREAID = @nvc_DataAreaId

    -- resolve item Ids and dimensions into product and variant Ids
    DECLARE @itemIds TABLE (ITEMID nvarchar(20), VARIANTINVENTDIMID nvarchar(20), PRODUCT bigint, DISTINCTPRODUCTVARIANT bigint)
    INSERT INTO @itemIds
    SELECT
        it.ITEMID,
        it.VARIANTINVENTDIMID,
        ISNULL(i.PRODUCT,0),
        ISNULL(idc.DISTINCTPRODUCTVARIANT,0)
    FROM @items AS it
    LEFT JOIN [ax].INVENTTABLE i ON i.ITEMID = it.ITEMID AND i.DATAAREAID = @nvc_DataAreaId
    LEFT JOIN [ax].INVENTDIMCOMBINATION idc ON idc.ITEMID = it.ITEMID AND idc.INVENTDIMID = it.VARIANTINVENTDIMID AND idc.DATAAREAID = @nvc_DataAreaId

    DECLARE @itemDiscounts TABLE (OFFERID nvarchar(20), LINENUM numeric(32,16), ITEMID nvarchar(20), INVENTDIMID nvarchar(20))

	-- get discount and lines by RETAILGROUPMEMBERLINE.product
    INSERT INTO @itemDiscounts
    SELECT pd.OFFERID,
        pdl.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
    FROM [ax].[RETAILPERIODICDISCOUNTLINE] pdl
    INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl ON pdl.RETAILGROUPMEMBERLINE = rgl.RECID AND rgl.VARIANT = 0 AND rgl.PRODUCT != 0
    INNER JOIN @itemIds it ON rgl.PRODUCT = it.PRODUCT
	INNER JOIN [ax].[RETAILPERIODICDISCOUNT] pd on pdl.OFFERID = pd.OFFERID 
		and pd.STATUS = 1
        AND pd.PERIODICDISCOUNTTYPE != 3 -- don't fetch price adjustments
        AND pd.CURRENCYCODE = @nvc_CurrencyCode
		AND pd.DATAAREAID = @nvc_DataAreaId
        AND (pd.VALIDFROM <= @MinDate OR pd.VALIDFROM <= @NoDate)
        AND (pd.VALIDTO >= @MaxDate OR pd.VALIDTO <= @NoDate)
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = pd.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE pdl.DATAAREAID = @nvc_DataAreaId 
       AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

	-- get discount and lines by RETAILGROUPMEMBERLINE.variant.
	INSERT INTO @itemDiscounts
    SELECT pd.OFFERID,
        pdl.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
    FROM [ax].[RETAILPERIODICDISCOUNTLINE] pdl
    INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl WITH(INDEX([IX_RETAILGROUPMEMBERLINE_PVC])) ON pdl.RETAILGROUPMEMBERLINE = rgl.RECID AND rgl.VARIANT != 0
    INNER JOIN @itemIds it ON rgl.VARIANT = it.DISTINCTPRODUCTVARIANT
	INNER JOIN [ax].[RETAILPERIODICDISCOUNT] pd on pdl.OFFERID = pd.OFFERID 
		and pd.STATUS = 1
        AND pd.PERIODICDISCOUNTTYPE != 3 -- don't fetch price adjustments
        AND pd.CURRENCYCODE = @nvc_CurrencyCode
        AND pd.DATAAREAID = @nvc_DataAreaId
        AND (pd.VALIDFROM <= @MinDate OR pd.VALIDFROM <= @NoDate)
        AND (pd.VALIDTO >= @MaxDate OR pd.VALIDTO <= @NoDate)
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = pd.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE pdl.DATAAREAID = @nvc_DataAreaId 
       AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

    -- get discount and lines by RETAILGROUPMEMBERLINE.category, product only.
	INSERT INTO @itemDiscounts
    SELECT pd.OFFERID,
        pdl.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
	FROM [ax].[RETAILPERIODICDISCOUNTLINE] pdl
    INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl ON pdl.RETAILGROUPMEMBERLINE = rgl.RECID and rgl.PRODUCT = 0 and rgl.VARIANT = 0 and rgl.CATEGORY != 0
    INNER JOIN [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] rccl ON rccl.CATEGORY = rgl.CATEGORY
    INNER JOIN [ax].[ECORESPRODUCTCATEGORY] pc on pc.CATEGORY = rccl.CONTAINEDCATEGORY
    INNER JOIN @itemIds it ON pc.PRODUCT = it.PRODUCT
	INNER JOIN [ax].[RETAILPERIODICDISCOUNT] pd on pdl.OFFERID = pd.OFFERID
		and pd.STATUS = 1
        AND pd.PERIODICDISCOUNTTYPE != 3 -- don't fetch price adjustments
        AND pd.CURRENCYCODE = @nvc_CurrencyCode
		AND pd.DATAAREAID = @nvc_DataAreaId
        AND (pd.VALIDFROM <= @MinDate OR pd.VALIDFROM <= @NoDate)
        AND (pd.VALIDTO >= @MaxDate OR pd.VALIDTO <= @NoDate)
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = pd.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE pdl.DATAAREAID = @nvc_DataAreaId
       AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

    -- get discount and lines by RETAILGROUPMEMBERLINE.category, variant only.
	INSERT INTO @itemDiscounts
    SELECT pd.OFFERID,
        pdl.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
    FROM [ax].[RETAILPERIODICDISCOUNTLINE] pdl
    INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl ON pdl.RETAILGROUPMEMBERLINE = rgl.RECID and rgl.PRODUCT = 0 and rgl.VARIANT = 0 and rgl.CATEGORY != 0
    INNER JOIN [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] rccl ON rccl.CATEGORY = rgl.CATEGORY
    INNER JOIN [crt].[RETAILSPECIALCATEGORYVARIANTVIEW] scv on scv.CATEGORY = rccl.CONTAINEDCATEGORY
    INNER JOIN @itemIds it ON scv.PRODUCT = it.DISTINCTPRODUCTVARIANT
	INNER JOIN [ax].[RETAILPERIODICDISCOUNT] pd on pdl.OFFERID = pd.OFFERID
		and pd.STATUS = 1
        AND pd.PERIODICDISCOUNTTYPE != 3 -- don't fetch price adjustments
        AND pd.CURRENCYCODE = @nvc_CurrencyCode
		AND pd.DATAAREAID = @nvc_DataAreaId
        AND (pd.VALIDFROM <= @MinDate OR pd.VALIDFROM <= @NoDate)
        AND (pd.VALIDTO >= @MaxDate OR pd.VALIDTO <= @NoDate)
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = pd.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE pdl.DATAAREAID = @nvc_DataAreaId
       AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

    SELECT DISTINCT
        pd.OFFERID,
        pd.NAME,
        pd.PERIODICDISCOUNTTYPE,
        pd.CONCURRENCYMODE,
		pd.CURRENCYCODE,
		pd.PRICINGPRIORITYNUMBER,
        pd.ISDISCOUNTCODEREQUIRED,
        pd.VALIDATIONPERIODID,
        pd.DATEVALIDATIONTYPE,
        pd.VALIDFROM,
        pd.VALIDTO,
        pd.DISCOUNTTYPE,
        pd.DEALPRICEVALUE,
        pd.DISCOUNTPERCENTVALUE,
        pd.DISCOUNTAMOUNTVALUE,
        pd.NOOFLEASTEXPENSIVELINES,
        pd.NUMBEROFTIMESAPPLICABLE,
        pd.LEASTEXPENSIVEMODE,
        pd.LINENUM,
        pd.DISCOUNTPERCENTORVALUE,

        ISNULL(mmol.LINEGROUP,'') AS LINEGROUP,
        ISNULL(mmol.DISCOUNTTYPE,'') AS MIXANDMATCHLINEDISCOUNTTYPE,
        ISNULL(mmol.NUMBEROFITEMSNEEDED,'') AS NUMBEROFITEMSNEEDED,

        ISNULL(dol.DISCOUNTMETHOD,0) AS DISCOUNTMETHOD,
        ISNULL(dol.DISCAMOUNT,0) AS DISCAMOUNT,
        ISNULL(dol.DISCPCT, 0) AS DISCPCT,
        ISNULL(dol.OFFERPRICE, 0) AS OFFERPRICE,

        ISNULL(uom.SYMBOL,'') AS SYMBOL,

        ISNULL(pd.COUNTNONDISCOUNTITEMS, 0) AS COUNTNONDISCOUNTITEMS,

        itemd.ITEMID,
        itemd.INVENTDIMID
    FROM [crt].RETAILPERIODICDISCOUNTSFLATTENEDVIEW pd
    INNER JOIN @itemDiscounts itemd on itemd.OFFERID = pd.OFFERID and itemd.LINENUM = pd.LINENUM
    LEFT JOIN [ax].UNITOFMEASURE uom ON uom.RECID = pd.UNITOFMEASURE
    LEFT JOIN [ax].RETAILDISCOUNTLINEMIXANDMATCH mmol ON pd.DISCOUNTLINEID = mmol.RECID AND pd.DATAAREAID = mmol.DATAAREAID
    LEFT JOIN [ax].RETAILDISCOUNTLINEOFFER dol ON pd.DISCOUNTLINEID = dol.RECID AND pd.DATAAREAID = dol.DATAAREAID
    ORDER BY pd.OFFERID, pd.LINENUM
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
END;
GO
PRINT N'Creating [crt].[VALIDATEADDRESS]...';


GO
CREATE PROCEDURE [crt].[VALIDATEADDRESS]
    @COUNTRYREGIONID    NVARCHAR(10),
    @STATEPROVINCEID    NVARCHAR(10) = NULL,
    @COUNTYID           NVARCHAR(10) = NULL,
    @CITY               NVARCHAR(60) = NULL,
    @DISTRICT           NVARCHAR(60) = NULL,
    @ZIPPOSTALCODE      NVARCHAR(10) = NULL
AS
BEGIN
SET NOCOUNT ON

DECLARE @i_ReturnCode               INT;
DECLARE @i_TransactionIsOurs        INT;
DECLARE @i_Error                    INT;
DECLARE @isRUAddress				BIT;

-- CountryId is mandatory according to Ax schema
IF (@COUNTRYREGIONID IS NULL)
BEGIN
    SET @i_ReturnCode           = 1 ; -- invalid countryid
    GOTO exit_label;
END

IF NOT EXISTS
(
    SELECT 1
    FROM [ax].LOGISTICSADDRESSCOUNTRYREGION LCNTRY
    WHERE LCNTRY.COUNTRYREGIONID = @COUNTRYREGIONID
)
BEGIN
    SET @i_ReturnCode           = 1 ; -- invalid country
    GOTO exit_label;
END

-- Validate State, if exists
IF (@STATEPROVINCEID IS NOT NULL)
BEGIN
    IF NOT EXISTS
    (
        SELECT 1
        FROM [ax].LOGISTICSADDRESSSTATE LSTATE
        WHERE
            LSTATE.STATEID = @STATEPROVINCEID AND
            LSTATE.COUNTRYREGIONID = @COUNTRYREGIONID
    )
    BEGIN
        SET @i_ReturnCode           = 2 ; -- invalid stateid
        GOTO exit_label;
    END
END

-- Validate County, if exists
IF (@COUNTYID IS NOT NULL)
BEGIN
    IF NOT EXISTS
    (
        SELECT 1
        FROM [ax].LOGISTICSADDRESSCOUNTY LCNTY
        WHERE
            LCNTY.COUNTYID = @COUNTYID AND
            LCNTY.COUNTRYREGIONID = @COUNTRYREGIONID AND
            (@STATEPROVINCEID IS NULL OR LCNTY.STATEID = @STATEPROVINCEID)
    )
    BEGIN
        SET @i_ReturnCode           = 3 ; -- invalid countyid
        GOTO exit_label;
    END
END

-- Validate ZipCode, if exists
IF (@ZIPPOSTALCODE IS NOT NULL)
BEGIN
    IF NOT EXISTS
    (
        SELECT 1
        FROM [ax].LOGISTICSADDRESSZIPCODE LZIP
        WHERE
            LZIP.ZIPCODE = @ZIPPOSTALCODE
            AND LZIP.COUNTRYREGIONID = @COUNTRYREGIONID
            AND (@STATEPROVINCEID IS NULL OR LZIP.STATE = @STATEPROVINCEID)
		UNION ALL
		SELECT 1 
		FROM [ax].LOGISTICSADDRESSZIPCODE LZIP		
		INNER JOIN [ax].LOGISTICSADDRESSCITY LCITY ON LZIP.CITYRECID = LCITY.RECID
		WHERE 
			@isRUAddress = 1
			AND (@DISTRICT IS NULL OR @DISTRICT = '')
			AND @CITY IS NOT NULL 		
			AND @CITY <> ''
			AND LZIP.ZIPCODE = @ZIPPOSTALCODE
			AND LZIP.COUNTRYREGIONID = @COUNTRYREGIONID
			AND (@STATEPROVINCEID IS NULL OR LZIP.STATE = @STATEPROVINCEID)
			AND (@COUNTYID IS NULL OR LZIP.COUNTY = '' OR LZIP.COUNTY = @COUNTYID)
			AND LCITY.NAME = @CITY
		UNION ALL
		SELECT 1 
		FROM [ax].LOGISTICSADDRESSZIPCODE LZIP		
		INNER JOIN [ax].LOGISTICSADDRESSDISTRICT LDISTR ON LZIP.DISTRICT = LDISTR.RECID
		WHERE 
			@isRUAddress = 1
			AND (@CITY IS NULL OR @CITY = '')
			AND @DISTRICT IS NOT NULL 		
			AND @DISTRICT <> ''
			AND LZIP.ZIPCODE = @ZIPPOSTALCODE
			AND LZIP.COUNTRYREGIONID = @COUNTRYREGIONID
			AND (@STATEPROVINCEID IS NULL OR LZIP.STATE = @STATEPROVINCEID)
			AND (@COUNTYID IS NULL OR LZIP.COUNTY = '' OR LZIP.COUNTY = @COUNTYID)
			AND LDISTR.NAME = @DISTRICT
		UNION ALL
		SELECT 1 
		FROM [ax].LOGISTICSADDRESSZIPCODE LZIP
		INNER JOIN [ax].LOGISTICSADDRESSDISTRICT LDISTR ON LZIP.DISTRICT = LDISTR.RECID
		INNER JOIN [ax].LOGISTICSADDRESSCITY LCITY ON LZIP.CITYRECID = LCITY.RECID
		WHERE
			@isRUAddress = 1
			AND @CITY IS NOT NULL
			AND @CITY <> ''
			AND @DISTRICT IS NOT NULL
			AND @DISTRICT <> ''
			AND LZIP.ZIPCODE = @ZIPPOSTALCODE
			AND LZIP.COUNTRYREGIONID = @COUNTRYREGIONID
			AND (@STATEPROVINCEID IS NULL OR LZIP.STATE = @STATEPROVINCEID)
			AND (@COUNTYID IS NULL OR LZIP.COUNTY = '' OR LZIP.COUNTY = @COUNTYID)
			AND LDISTR.NAME = @DISTRICT
			AND LCITY.NAME = @CITY
    )
    BEGIN
        SET @i_ReturnCode           = 6 ; -- invalid zipcode
        GOTO exit_label;
    END
END

SET @i_ReturnCode = 0;

exit_label:

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETNOTEXISTINGCATALOGS]...';


GO

CREATE PROCEDURE [crt].[GETNOTEXISTINGCATALOGS]
    @bi_ChannelId BIGINT,
    @tvp_CatalogIds crt.RECORDIDTABLETYPE READONLY

AS
BEGIN
    SET NOCOUNT ON

    SELECT
        LISTID, CATALOGID
    FROM [crt].[CATALOGLISTMAPPING]
	WHERE CHANNELID = @bi_ChannelId
	  AND CATALOGID NOT IN (SELECT RECID FROM @tvp_CatalogIds)
    GROUP BY LISTID, CATALOGID

END;
GO
PRINT N'Creating [crt].[GETLOYALTYEARNSCHEMELINES]...';


GO

CREATE PROCEDURE [crt].[GETLOYALTYEARNSCHEMELINES]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT,
    @dt_ChannelLocalDate            DATE,
    @nvc_LoyaltyCardNumber          NVARCHAR(30)
AS
BEGIN
    SET NOCOUNT ON

    -- Select all RetailLoyaltyEarnSchemeLine records that applies to the given loyalty card in the given channel.
    select
        rlesl.RECID,
        ActiveLoyaltyCardTier.AFFILIATION as LOYALTYGROUPRECID,
        ActiveLoyaltyCardTier.LOYALTYTIER as LOYALTYTIERRECID,
        rlesl.FROMACTIVITYAMOUNTCURRENCY,
        rlesl.FROMACTIVITYAMOUNTQTY,
        rlesl.FROMACTIVITYTYPE,
        COALESCE(rgml.CATEGORY, 0) as CATEGORYRECID,
        COALESCE(rgml.PRODUCT, 0) as PRODUCTRECID,
        COALESCE(rgml.VARIANT, 0) as VARIANTRECID,
        rlesl.TOREWARDPOINT,
        rlrp.REWARDPOINTID as TOREWARDPOINTID,
        rlrp.REWARDPOINTTYPE as TOREWARDPOINTTYPE,
        rlrp.REDEEMABLE as TOREWARDPOINTREDEEMABLE,
        rlrp.REWARDPOINTCURRENCY as TOREWARDPOINTCURRENCY,
        rlesl.TOREWARDPOINTAMOUNTQTY,
        rlrp.EXPIRATIONTIMEUNIT as TOREWARDPOINTEXPIRATIONTIMEUNIT,
        rlrp.EXPIRATIONTIMEVALUE as TOREWARDPOINTEXPIRATIONTIMEVALUE,
        rlesl.VALIDFROM,
        rlesl.VALIDTO
    from 
    (
        select
            ValidLoyaltyCardTier.LOYALTYCARD,
            ValidLoyaltyCardTier.AFFILIATION,
            ValidLoyaltyCardTier.LOYALTYTIER
        from 
        (
            select
                ROW_NUMBER() OVER (PARTITION BY rlct.LOYALTYCARD, rlct.AFFILIATION ORDER BY TIERLEVEL DESC) Ordinal,
                rlct.LOYALTYCARD,
                rlct.AFFILIATION,
                rlct.LOYALTYTIER,
                COALESCE(rlt.TIERLEVEL, 0) as TIERLEVEL
            from [ax].[RETAILLOYALTYCARD] rlc
            inner join [ax].[RETAILLOYALTYCARDTIER] rlct
            on rlct.LOYALTYCARD = rlc.RECID
            left join [ax].[RETAILLOYALTYTIER] rlt
            on rlct.LOYALTYTIER = rlt.RECID
            where rlc.CARDNUMBER = @nvc_LoyaltyCardNumber
                and (rlct.VALIDFROM is NULL or @dt_ChannelLocalDate >= rlct.VALIDFROM)
                and (rlct.VALIDTO is NULL or @dt_ChannelLocalDate <= rlct.VALIDTO)
        ) ValidLoyaltyCardTier
        where ValidLoyaltyCardTier.Ordinal = 1
    ) ActiveLoyaltyCardTier
    inner join [ax].[RETAILLOYALTYSCHEME] rls
        on rls.AFFILIATION = ActiveLoyaltyCardTier.AFFILIATION
    inner join [ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] rlsce
        on rlsce.LOYALTYSCHEME = rls.RECID
    inner join [ax].[RETAILCHANNELTABLE] rct
        on rct.OMOPERATINGUNITID = rlsce.OMOPERATINGUNIT
    inner join [ax].[RETAILLOYALTYEARNSCHEMELINE] rlesl
        on rlesl.LOYALTYSCHEME = rls.RECID
        and (rlesl.LOYALTYTIER = ActiveLoyaltyCardTier.LOYALTYTIER or rlesl.LOYALTYTIER = 0)
    inner join [ax].[RETAILLOYALTYREWARDPOINT] rlrp
        on rlrp.RECID = rlesl.TOREWARDPOINT
    left outer join [ax].[RETAILGROUPMEMBERLINE] rgml
        on rgml.RECID = rlesl.FROMACTIVITYRETAILGROUPMEMBERLINE
    where rct.RECID = @bi_ChannelId
        and (rlesl.VALIDFROM is NULL or @dt_ChannelLocalDate >= rlesl.VALIDFROM)
        and (rlesl.VALIDTO is NULL or @dt_ChannelLocalDate <= rlesl.VALIDTO)
    ORDER BY [rlesl].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[INSERTSHIFTACCOUNTLINE]...';


GO

CREATE PROCEDURE [crt].[INSERTSHIFTACCOUNTLINE]
    @TVP_SHIFTACCOUNTLINETABLETYPE       [crt].[SHIFTACCOUNTLINETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].[RETAILPOSBATCHACCOUNTTRANS]
    (
        [BATCHID],
        [CHANNEL],
        [STOREID],
        [TERMINALID],
		[ACCOUNTNUM],
		[ACCOUNTTYPE],
		[AMOUNT],
		[DATAAREAID]
    )
    SELECT
        [SHIFTID],
        [CHANNEL],
        [STOREID],
        [TERMINALID],
		[INCOMEEXEPENSEACCOUNT],
		[ACCOUNTTYPE],
		[AMOUNT],
		[DATAAREAID]
    FROM @TVP_SHIFTACCOUNTLINETABLETYPE;


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTCUSTOMERACCOUNTDEPOSITTRANSACTION]...';


GO

CREATE PROCEDURE [crt].[INSERTCUSTOMERACCOUNTDEPOSITTRANSACTION]
    @TVP_CUSTOMERACCOUNTDEPOSITTRANS         [crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSTABLETYPE]    READONLY,
    @d_BusinessDate                          DATE
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    INSERT INTO [ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS]
    (
            [TRANSACTIONID]
            ,[RECEIPTID]
            ,[COMMENT]
            ,[CUSTACCOUNT]
            ,[STORE]
            ,[TERMINAL]
            ,[STAFF]
            ,[TRANSACTIONSTATUS]
            ,[AMOUNT]
            ,[TRANSDATE]
            ,[TRANSTIME]
            ,[DATAAREAID]
            ,[CHANNEL]
            ,[BUSINESSDATE]
    )
     SELECT
            [TRANSACTIONID]
            ,[RECEIPTID]
            ,[COMMENT]
            ,[CUSTACCOUNT]
            ,[STORE]
            ,[TERMINAL]
            ,[STAFF]
            ,[TRANSACTIONSTATUS]
            ,[AMOUNT]
            ,[TRANSDATE]
            ,[TRANSTIME]
            ,[DATAAREAID]
            ,[CHANNEL]
            ,@d_BusinessDate
    FROM @TVP_CUSTOMERACCOUNTDEPOSITTRANS AS SOURCE;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[SAVETRANSFERORDERLINES]...';


GO

CREATE PROCEDURE [crt].[SAVETRANSFERORDERLINES]
    @TVP_TRANSFEREORDERLINES         [crt].[TRANSFERORDERLINETABLETYPE]    READONLY,
	@nvc_OrderId					 NVARCHAR(50)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

	--Delete product line operation is NOT SUPPORTED since no scenario of removal product lines on end client.

    -- Perform Insert
    MERGE INTO [crt].TRANSFERORDERLINE
	USING @TVP_TRANSFEREORDERLINES AS SOURCE
	ON
		TRANSFERORDERLINE.ORDERID = @nvc_OrderId AND
		TRANSFERORDERLINE.RECID = SOURCE.RECID AND
		TRANSFERORDERLINE.ITEMID = SOURCE.ITEMID AND
		TRANSFERORDERLINE.CONFIGID = SOURCE.CONFIGID AND
		TRANSFERORDERLINE.INVENTCOLORID = SOURCE.INVENTCOLORID AND
		TRANSFERORDERLINE.INVENTSIZEID = SOURCE.INVENTSIZEID AND
		TRANSFERORDERLINE.INVENTSTYLEID = SOURCE.INVENTSTYLEID
	WHEN MATCHED THEN
        --Update existing product line rows
		UPDATE
		SET
			RECID = SOURCE.RECID,
			ORDERID = @nvc_OrderId,
			LINERECEIPTNUMBER = SOURCE.LINERECEIPTNUMBER,
			ITEMID = SOURCE.ITEMID,
			ITEMNAME = SOURCE.ITEMNAME,
			INVENTDIMID = SOURCE.INVENTDIMID,
			QUANTITYTRANSFERRED = SOURCE.QUANTITYTRANSFERRED,
			QUANTITYSHIPPED = SOURCE.QUANTITYSHIPPED,
			QUANTITYRECEIVED = SOURCE.QUANTITYRECEIVED,
			QUANTITYSHIPNOW = SOURCE.QUANTITYSHIPNOW,
			QUANTITYRECEIVENOW = SOURCE.QUANTITYRECEIVENOW,
			QUANTITYREMAINSHIP = SOURCE.QUANTITYREMAINSHIP,
			QUANTITYREMAINRECEIVE = SOURCE.QUANTITYREMAINRECEIVE,
			PURCHASEUNIT = SOURCE.PURCHASEUNIT,
			INVENTBATCHID = SOURCE.INVENTBATCHID,
			INVENTSITEID = SOURCE.INVENTSITEID,
			INVENTLOCATIONID = SOURCE.INVENTLOCATIONID,
			CONFIGID = SOURCE.CONFIGID,
			INVENTSERIALID = SOURCE.INVENTSERIALID,
			INVENTSIZEID = SOURCE.INVENTSIZEID,
			INVENTCOLORID = SOURCE.INVENTCOLORID,
			INVENTSTYLEID = SOURCE.INVENTSTYLEID,
			DELIVERYMETHOD = SOURCE.DELIVERYMETHOD
	WHEN NOT MATCHED THEN
		INSERT
        --Insert new product line rows that are added from end client.
    (
	[RECID],
    [ORDERID],
    [LINERECEIPTNUMBER],
    [ITEMID],
    [ITEMNAME],
	[INVENTDIMID],
    [QUANTITYTRANSFERRED],
	[QUANTITYSHIPPED],
	[QUANTITYRECEIVED],
    [QUANTITYSHIPNOW],
    [QUANTITYRECEIVENOW],
	[QUANTITYREMAINSHIP],
	[QUANTITYREMAINRECEIVE],
	[PURCHASEUNIT],
    [INVENTBATCHID],
	[INVENTSITEID],
	[INVENTLOCATIONID],
	[CONFIGID],
	[INVENTSERIALID],
	[INVENTSIZEID],
	[INVENTCOLORID],
	[INVENTSTYLEID],
    [DELIVERYMETHOD]
    )
    VALUES
	(
	SOURCE.[RECID],
    @nvc_OrderId,
    SOURCE.[LINERECEIPTNUMBER],
    SOURCE.[ITEMID],
    SOURCE.[ITEMNAME],
	SOURCE.[INVENTDIMID],
    SOURCE.[QUANTITYTRANSFERRED],
	SOURCE.[QUANTITYSHIPPED],
	SOURCE.[QUANTITYRECEIVED],
    SOURCE.[QUANTITYSHIPNOW],
    SOURCE.[QUANTITYRECEIVENOW],
	SOURCE.[QUANTITYREMAINSHIP],
	SOURCE.[QUANTITYREMAINRECEIVE],
	SOURCE.[PURCHASEUNIT],
    SOURCE.[INVENTBATCHID],
	SOURCE.[INVENTSITEID],
	SOURCE.[INVENTLOCATIONID],
	SOURCE.[CONFIGID],
	SOURCE.[INVENTSERIALID],
	SOURCE.[INVENTSIZEID],
	SOURCE.[INVENTCOLORID],
	SOURCE.[INVENTSTYLEID],
    SOURCE.[DELIVERYMETHOD]
    );


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETREFINERSBYTEXT]...';


GO

CREATE PROCEDURE [crt].[GETREFINERSBYTEXT]
(
    @tvp_QueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE READONLY,
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_Locale              NVARCHAR(7),
    @nvc_SearchText          NVARCHAR(1000)  -- 1000 because the size of the biggest column being looked up is [ax].ECORESPRODUCTTRANSLATION.DESCRIPTION of type NVARCHAR(1000)
)
AS
BEGIN
    DECLARE @tvp_ProductSearchResultIds [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId [crt].[RECORDIDTABLETYPE]

    INSERT INTO @tvp_DummyId VALUES (0)  -- Dummy id needed by GetProductRefiners function

    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT
        [sp].PRODUCTID AS RECID
    FROM [crt].GETPRODUCTIDSBYSEARCHTEXT(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 1000 /* @i_MaxTop - Retrieving only TOP 1000 products because retrieving more products will degrade performance */, @nvc_Locale, @nvc_SearchText) sp

    -- Adding variants so their refiners can also be used.
    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT
        [erdpv].RECID AS RECID
    FROM @tvp_ProductSearchResultIds prods
    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].PRODUCTMASTER = [prods].RECID
    WHERE EXISTS
        (
            SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
            WHERE [apv].PRODUCTID = [erdpv].RECID AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
        )

    SELECT
        [gpr].RECID,
        [gpr].KEYNAME,
        [gpr].[SOURCE],
        [gpr].DATATYPE,
        [gpr].DISPLAYOPTION,
        [gpr].DISPLAYTEMPLATE,
        [gpr].THRESHOLDVALUE
    FROM [crt].GETPRODUCTREFINERS(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @nvc_Locale, @tvp_ProductSearchResultIds, @tvp_DummyId) gpr
    ORDER BY [gpr].KEYNAME
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END
GO
PRINT N'Creating [crt].[UPDATERETURNQUANTITY]...';


GO

CREATE PROCEDURE [crt].[UPDATERETURNQUANTITY]
    @bi_ChannelId       BIGINT,
    @nvc_StoreNumber    NVARCHAR(10),
    @nvc_TerminalId     NVARCHAR(10),
    @nvc_TransactionId  NVARCHAR(44),
    @nu_LineNumber      NUMERIC(32,16),
    @nu_Quantity        NUMERIC(32,16)
AS
BEGIN
    SET NOCOUNT ON

    UPDATE [ax].[RETAILTRANSACTIONSALESTRANS]
    SET
        RETURNQTY = RETURNQTY + @nu_Quantity
    WHERE
        (CHANNEL = @bi_ChannelId OR STORE = @nvc_StoreNumber)
        AND TERMINALID = @nvc_TerminalId
        AND TRANSACTIONID = @nvc_TransactionId
        AND LINENUM = @nu_LineNumber;
END;
GO
PRINT N'Creating [crt].[CREATEUPDATEELECTRONICADDRESS]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATEELECTRONICADDRESS]
    @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE   [crt].CUSTOMERELECTRONICADDRESSTABLETYPE   READONLY
AS
BEGIN
    --METHODTYPE =
        --None = 0,
        --Phone = 1,
        --Email = 2,
        --URL = 3,
        --Telex = 4,
        --Fax = 5

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                       INT;
    DECLARE @i_TransactionIsOurs                INT;
    DECLARE @i_Error                            INT;
    DECLARE @i_Rowcount                         INT;
    DECLARE @dtt_ChangeDate                     DATETIME;
    DECLARE @tvp_CustomerElectronicAddressCusor [crt].CUSTOMERELECTRONICADDRESSTABLETYPE;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;
        SET @i_TransactionIsOurs = 1;
    END

    SET @dtt_ChangeDate = GETUTCDATE();

    -- UPSERT INTO LOGISTICSLOCATION
    MERGE INTO [ax].LOGISTICSLOCATION
    USING (SELECT DISTINCT LOGISTICSLOCATIONRECORDID, LOGISTICSLOCATIONID, PARENTLOCATION
	FROM @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE
	WHERE LOGISTICSLOCATIONRECORDID != 0) AS SOURCE
    ON [ax].LOGISTICSLOCATION.RECID = SOURCE.LOGISTICSLOCATIONRECORDID
        AND [ax].LOGISTICSLOCATION.LOCATIONID = SOURCE.LOGISTICSLOCATIONID
    WHEN NOT MATCHED THEN
        INSERT
        (
             RECID
            ,LOCATIONID
			,PARENTLOCATION
            ,ISPOSTALADDRESS
            ,MODIFIEDDATETIME
            ,CREATEDDATETIME
        )
        VALUES
        (
             SOURCE.LOGISTICSLOCATIONRECORDID
            ,SOURCE.LOGISTICSLOCATIONID
			,SOURCE.PARENTLOCATION
            ,0
            ,@dtt_ChangeDate
            ,@dtt_ChangeDate
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    -- UPSERT INTO DIRPARTYLOCATION
    MERGE INTO [ax].DIRPARTYLOCATION
    USING (select distinct DIRPARTYLOCATIONRECORDID, DIRPARTYRECORDID, LOGISTICSLOCATIONRECORDID 
		from @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE 
		where DIRPARTYLOCATIONRECORDID != 0 and PARENTLOCATION = 0) AS SOURCE
    ON [ax].DIRPARTYLOCATION.RECID = SOURCE.DIRPARTYLOCATIONRECORDID
    WHEN NOT MATCHED THEN
        INSERT
        (
             RECID
            ,PARTY
			,LOCATION
            ,ISPOSTALADDRESS
        )
        VALUES
        (
             SOURCE.DIRPARTYLOCATIONRECORDID
			,SOURCE.DIRPARTYRECORDID
            ,SOURCE.LOGISTICSLOCATIONRECORDID
            ,0
        );

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;


    --UPSERT INTO THE LOGISTICSELECTRONICADDRESS
    MERGE INTO [ax].LOGISTICSELECTRONICADDRESS
    USING @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE AS SOURCE
    ON
        [ax].LOGISTICSELECTRONICADDRESS.RECID = SOURCE.RECORDID
    WHEN MATCHED THEN
        UPDATE
        SET
             LOCATION               = SOURCE.LOGISTICSLOCATIONRECORDID
            ,LOCATOR                = SOURCE.LOCATOR
            ,DESCRIPTION            = SOURCE.LOCATIONDESCRIPTION
            ,COUNTRYREGIONCODE      = ''
            ,TYPE                   = SOURCE.METHODYTPE
            ,ISPRIMARY              = SOURCE.ISPRIMARY
            ,ISPRIVATE              = SOURCE.ISPRIVATE
            ,ISMOBILEPHONE          = SOURCE.ISMOBILEPHONE

    WHEN NOT MATCHED THEN
        INSERT
        (
             RECID
            ,LOCATION
            ,LOCATOR
            ,COUNTRYREGIONCODE
            ,TYPE
            ,ISPRIMARY
            ,ISPRIVATE
            ,ISMOBILEPHONE
            ,DESCRIPTION
        )
        VALUES
        (
             SOURCE.RECORDID
            ,SOURCE.LOGISTICSLOCATIONRECORDID
            ,SOURCE.LOCATOR
            ,''
            ,SOURCE.METHODYTPE
            ,SOURCE.ISPRIMARY
            ,SOURCE.ISPRIVATE
            ,SOURCE.ISMOBILEPHONE
            ,SOURCE.LOCATIONDESCRIPTION
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTAUDITLOG]...';


GO

CREATE PROCEDURE [crt].[INSERTAUDITLOG]
    @RETAILLOGID BIGINT,
    @DATE DATE,
    @CODEUNIT NVARCHAR(100),
    @LOGSTRING NTEXT,
    @LOGLEVEL INT,
    @STOREID NVARCHAR(10),
    @TERMINALID NVARCHAR(10),
    @DURATIONINMILLISEC INT,
    @DATAAREAID NVARCHAR(4)
AS
BEGIN

    SET NOCOUNT ON;

    --
    -- Insert audit log
    --
	INSERT INTO [ax].[RETAILLOG]
	(
		RETAILLOGID,
		LOGDATE,
		CODEUNIT,
		LOGSTRING,
		LOGLEVEL,
		STOREID,
		TERMINALID,
		DURATIONINMILLISEC,
		DATAAREAID
	)
	VALUES
	(
		@RETAILLOGID,
		@DATE,
		@CODEUNIT,
		@LOGSTRING,
		@LOGLEVEL,
		@STOREID,
		@TERMINALID,
		@DURATIONINMILLISEC,
		@DATAAREAID
	)
END
GO
PRINT N'Creating [crt].[RESERVEITEMS]...';


GO

-- Reserve items for available quantities.
-- Return success and commit the reservations if quantities available, or return error and rollback if out of stock.
CREATE PROCEDURE [crt].[RESERVEITEMS]
    @tvp_ItemReservations   [crt].ITEMRESERVATIONTABLETYPE    READONLY,
    @nvc_DataAreaId		    NVARCHAR(4)
AS
BEGIN
    SET NOCOUNT ON;

	-- storing current datetime in a variable to be used throughout the procedure.
	DECLARE @dt_Today DATETIME = GETUTCDATE();
    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    DECLARE @i_RequestedReservations    INT;
    DECLARE @i_GrantedReservations      INT;
    DECLARE @t_GrantedReservationIds    TABLE (RESERVATIONID UNIQUEIDENTIFIER PRIMARY KEY)
    DECLARE @i_RejectedReservations     INT;
    DECLARE @t_RejectedReservationIds   TABLE (RESERVATIONID UNIQUEIDENTIFIER PRIMARY KEY)

    SET @i_ReturnCode           = [crt].fn_kSuccess();
    SET @i_TransactionIsOurs    = 0;

    SELECT @i_RequestedReservations = COUNT(*) FROM @tvp_ItemReservations;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;
        SET @i_TransactionIsOurs = 1;
    END;

    -- Purge released or expired reservations.
    DELETE ITEMRESERVATION WHERE ISRELEASED = 1 OR EXPIREDATETIME < @dt_Today;

    SET @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    -- Try to insert reservations.
    INSERT ITEMRESERVATION(RESERVATIONID, INVENTAVAILABILITY, QUANTITY, EXPIREDATETIME, ISRELEASED)
        OUTPUT INSERTED.RESERVATIONID
        INTO @t_GrantedReservationIds
        SELECT ir.RESERVATIONID, riav.RECID, ir.QUANTITY, ir.EXPIREDATETIME, 0
        FROM @tvp_ItemReservations ir
        INNER JOIN RETAILINVENTAVAILABILITYVIEW riav ON ir.ITEMID = riav.ITEMID AND ir.INVENTDIMID = riav.INVENTDIMID AND riav.DATAAREAID = @nvc_DataAreaId
        WHERE riav.AVAILPHYSICAL >= ir.QUANTITY;

    SELECT @i_Error = @@ERROR, @i_GrantedReservations = @@ROWCOUNT;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_GrantedReservations < @i_RequestedReservations
    BEGIN
        SELECT ir.RESERVATIONID
        FROM @tvp_ItemReservations ir
        LEFT JOIN @t_GrantedReservationIds gri ON gri.RESERVATIONID = ir.RESERVATIONID
        WHERE gri.RESERVATIONID IS NULL;

        SET @i_ReturnCode = [crt].fn_kErrorDbItemOutOfStock();
        GOTO exit_label;
    END

    -- Check if two concurrent requests have overallocated items.
    -- It is possible but less likely both requests may rollback even though one of them could be satisfied.
    -- This is the tradeoff between optimistic concurrency control and pessimistic concurrency control.
    -- The caller is expected to double check item availability and retry if still available.
    INSERT @t_RejectedReservationIds(RESERVATIONID)
        SELECT RESERVATIONID
        FROM @tvp_ItemReservations ir
        JOIN
        (
            SELECT
                it.ITEMID
                ,id.INVENTDIMID
                ,ria.AVAILPHYSICAL - ISNULL(rs.QUANTITY, 0) AS AVAILPHYSICAL
            FROM [ax].RETAILINVENTAVAILABILITY ria
            INNER JOIN [ax].INVENTTABLE it ON it.RECID = ria.ITEMRECID AND it.DATAAREAID = @nvc_DataAreaId
            INNER JOIN [ax].INVENTDIM id on id.RECID = ria.INVENTDIMRECID AND id.DATAAREAID = @nvc_DataAreaId 
            LEFT JOIN
            (
                SELECT
                    INVENTAVAILABILITY
                    ,SUM(QUANTITY) AS QUANTITY
                FROM [crt].ITEMRESERVATION WITH(NOLOCK)   -- Including inserted but not yet committed reservations
                WHERE EXPIREDATETIME >= @dt_Today     -- Including released but not yet committed reservations
                GROUP BY INVENTAVAILABILITY
            ) rs ON rs.INVENTAVAILABILITY = ria.RECID
        ) a ON ir.ITEMID = a.ITEMID AND ir.INVENTDIMID = a.INVENTDIMID
        WHERE a.AVAILPHYSICAL < 0;

    SELECT @i_Error = @@ERROR, @i_RejectedReservations = @@ROWCOUNT;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_RejectedReservations > 0
    BEGIN
        SELECT RESERVATIONID FROM @t_RejectedReservationIds;
        SET @i_ReturnCode = [crt].fn_kErrorDbItemOutOfStock();
        GOTO exit_label;
    END

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;
        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETAFFECTEDTABLENAMESBYCDX]...';


GO

CREATE PROCEDURE [crt].[GETAFFECTEDTABLENAMESBYCDX]
    @affectedTableNamesXml XML
AS BEGIN
    SET NOCOUNT ON;
    
    DECLARE @tableNameList XML;
    DECLARE @hDoc INT;

    DECLARE @affectedTableNames TABLE
    (
        FULLTABLENAME NVARCHAR(50),  -- as defined in AX subjob table
        TABLEID   INT NULL,
        SCHEMANAME SYSNAME NULL,
        TABLENAME SYSNAME NULL
    );

    EXEC sp_xml_preparedocument @hDoc OUTPUT, @affectedTableNamesXml;

    INSERT INTO @affectedTableNames (FULLTABLENAME, TABLEID)
    SELECT TableName, OBJECT_ID(TableName, N'U')
    FROM OPENXML(@hDoc, 'RetailCdxDataSync/AffectedTables/Table', 1)
    WITH
    (
        TableName NVARCHAR(50) '@name'
    );

    UPDATE @affectedTableNames SET SCHEMANAME = sys.schemas.name, TABLENAME = sys.tables.name
    FROM @affectedTableNames AS t
      INNER JOIN sys.tables ON t.TABLEID = sys.tables.object_id
      INNER JOIN sys.schemas ON sys.tables.schema_id = sys.schemas.schema_id
    WHERE t.TABLEID IS NOT NULL;

    SELECT SCHEMANAME, TABLENAME FROM @affectedTableNames WHERE TABLEID IS NOT NULL;

END;
GO
PRINT N'Creating [crt].[PURGESALES]...';


GO
/**********************************************************************************
 *    DESCRIPTION:  Deletes rows from SalesTransaction table
 **********************************************************************************/


CREATE PROCEDURE [crt].PURGESALES
    @f_PurgeOrder       BIT     = 1
   ,@i_RetentionDays    INT     = 1         --must be >= 1
   ,@i_BatchSize        INT     = 10000     --must be >= 1 and <= 10000
   ,@i_WaitSeconds      INT     = 2         --must be >= 1 and < 60
   ,@i_WaitRows         INT     = 10000     --must be > batch size
AS BEGIN
    SET NOCOUNT ON;

    --capture datetimes:
    DECLARE @dt_CurrentDatetime         DATETIME;
    DECLARE @dt_RetentionDatetime       DATETIME;
    DECLARE @vc_ErrorHeader             VARCHAR(40);
    DECLARE @vc_Error                   VARCHAR(1000);
    DECLARE @vc_Success                 VARCHAR(1000);
    DECLARE @i_Error                    INT;
    DECLARE @i_Rowcount                 INT;
    DECLARE @i_ReturnCode               INT;
    DECLARE @bi_TableRowcount           BIGINT;
    DECLARE @bi_WaitTrigger             BIGINT;
    DECLARE @vc_WaitTime                VARCHAR(10);
    DECLARE @f_ExitLoop                 BIT;
    DECLARE @vc_TableName               VARCHAR(64);
    DECLARE @i_RowId                    INT;
    DECLARE @f_ExitInnerLoop            BIT;
    DECLARE @vc_InnerTableName          VARCHAR(64);
    DECLARE @i_InnerRowcount            INT;
    DECLARE @bi_InnerTableRowcount      BIGINT;
    DECLARE @bi_InnerWaitTrigger        BIGINT;
    DECLARE @t_TransactionList          TABLE
    (
        nvc_TransactionId   NVARCHAR(44) NOT NULL
    );


    SET @vc_ErrorHeader             = 'PurgeSales Hard Delete Handler: ';
    SET @bi_TableRowcount           = 0;
    SET @bi_WaitTrigger             = 0;
    SET @vc_Success                 = ''; --will be used for reporting the number of rows deleted.

    --protect against null being explicitly passed for the args
    SET @i_RetentionDays    = ISNULL(@i_RetentionDays, 1);
    SET @i_BatchSize        = ISNULL(@i_BatchSize, 500);
    SET @i_WaitSeconds      = ISNULL(@i_WaitSeconds, 2);
    SET @i_WaitRows         = ISNULL(@i_WaitRows, 2000);

    IF  @i_RetentionDays < 1 OR
        @i_BatchSize < 1 OR
        @i_BatchSize > 10000 OR
        @i_WaitSeconds < 1 OR
        @i_WaitSeconds > 59 OR
        @i_WaitRows < 1 OR
        @i_WaitRows < @i_BatchSize
    BEGIN
        SET @vc_Error = @vc_ErrorHeader + 'Invalid parameters passed, cannot execute.';
        GOTO exit_label;
    END;
    IF @@TRANCOUNT > 0
    BEGIN
        SET @vc_Error = @vc_ErrorHeader + 'Cannot call within a transaction!';
        GOTO exit_label;
    END;

    --set execution parameters
    SET @dt_CurrentDatetime         = GETUTCDATE();
    SET @dt_RetentionDatetime = DATEADD(DAY, -1 * @i_RetentionDays, @dt_CurrentDatetime);
    --handle single and double digit wait times:
    SET @vc_WaitTime = '00:00:' + RIGHT('0' + CONVERT(VARCHAR, @i_WaitSeconds), 2);

    SET @bi_TableRowcount = 0;
    SET @bi_WaitTrigger   = 0;
    SET @f_ExitLoop       = 0;

    --run deletes on this table
    WHILE (@f_ExitLoop = 0)
    BEGIN
        BEGIN TRANSACTION;

        DELETE FROM @t_TransactionList;

        IF (@f_PurgeOrder = 1)
        BEGIN
            SET @vc_TableName = 'SalesTransaction';

            WITH Limited (id)
            AS
            (
                SELECT TOP (@i_BatchSize) TRANSACTIONID
                FROM [crt].SALESTRANSACTION WITH (ROWLOCK, UPDLOCK, READPAST)
                WHERE
                    MODIFIEDDATETIME < @dt_RetentionDatetime
            )
            DELETE [crt].SALESTRANSACTION
            OUTPUT DELETED.TRANSACTIONID INTO @t_TransactionList
            FROM [crt].SALESTRANSACTION el
            INNER JOIN Limited l on l.id = el.TRANSACTIONID
            OPTION (MAXDOP 1);
        END
        ELSE
        BEGIN
            SET @vc_TableName = 'RETAILTRANSACTIONTABLE';
            INSERT INTO @t_TransactionList
                SELECT TOP (@i_BatchSize) TRANSACTIONID
                FROM [ax].RETAILTRANSACTIONTABLE WITH (ROWLOCK, UPDLOCK, READPAST)
                WHERE
                    MODIFIEDDATETIME < @dt_RetentionDatetime
        END
        SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

        IF @i_Error <> 0
        BEGIN
            ROLLBACK;
            SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_TableName +
                '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
            GOTO exit_label;
        END;


        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONTABLE';
        -- PK TRANSACTIONID
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONTABLE
            FROM [ax].RETAILTRANSACTIONTABLE el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONSALESTRANS';
        -- PK TRANSACTIONID
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONTABLE
            FROM [ax].RETAILTRANSACTIONTABLE el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RetailTransactionMarkupTrans';
        -- PK DATAAREAID,SALELINENUM,TRANSACTIONID,TERMINALID,STORE,MARKUPLINENUM,CHANNEL
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONMARKUPTRANS
            FROM [ax].RETAILTRANSACTIONMARKUPTRANS el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RetailTransactionTaxTrans';
        -- PK DATAAREAID,TERMINALID,STOREID,TRANSACTIONID,SALELINENUM,TAXCODE,CHANNEL
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONTAXTRANS
            FROM [ax].RETAILTRANSACTIONTAXTRANS el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RetailTransactionPaymentTrans';
        -- PK DATAAREAID,STORE,TERMINAL,TRANSACTIONID,LINENUM,CHANNEL
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONPAYMENTTRANS
            FROM [ax].RETAILTRANSACTIONPAYMENTTRANS el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RetailTransactionAttributeTrans';
        -- PK DATAAREAID,NAME,TRANSACTIONID,TERMINAL,STORE,CHANNEL
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONATTRIBUTETRANS
            FROM [ax].RETAILTRANSACTIONATTRIBUTETRANS el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONADDRESSTRANS';
        -- PK DATAAREAID,TRANSACTIONID,TERMINAL,STORE,SALELINENUM,CHANNEL
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONADDRESSTRANS
            FROM [ax].RETAILTRANSACTIONADDRESSTRANS el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        SET @bi_InnerTableRowcount = 0;
        SET @bi_InnerWaitTrigger   = 0;
        SET @f_ExitInnerLoop = 0;
        SET @vc_InnerTableName = 'RETAILTRANSACTIONDISCOUNTTRANS';
        -- PK DATAAREAID,STOREID,TERMINALID,TRANSACTIONID,SALELINENUM,PERIODICDISCOUNTOFFERID,CHANNEL
        WHILE (@f_ExitInnerLoop = 0)
        BEGIN

            DELETE [ax].RETAILTRANSACTIONDISCOUNTTRANS
            FROM [ax].RETAILTRANSACTIONDISCOUNTTRANS el
            INNER JOIN @t_TransactionList l on l.nvc_TransactionId = el.TRANSACTIONID
            OPTION (MAXDOP 1);

            SELECT @i_Error = @@ERROR, @i_InnerRowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                ROLLBACK;
                SET @vc_Error = @vc_ErrorHeader + 'Error deleting from table ' + @vc_InnerTableName +
                    '. @@ERROR value was ' + CONVERT(VARCHAR, @i_Error);
                GOTO exit_label;
            END;

            IF @i_InnerRowcount < @i_BatchSize
            BEGIN
                SET @f_ExitInnerLoop = 1;
            END;
            ELSE
            BEGIN
                IF @bi_InnerWaitTrigger <> @bi_InnerTableRowcount/@i_WaitRows
                BEGIN
                    WAITFOR DELAY @vc_WaitTime;
                END;
                SET @bi_InnerWaitTrigger = @bi_InnerTableRowcount/@i_WaitRows;
            END;
        END;

        COMMIT;
        --keep track of how many rows we've deleted from this table.
        SET @bi_TableRowcount = @bi_TableRowcount + @i_Rowcount;
        IF @i_Rowcount < @i_BatchSize
        BEGIN
            SET @f_ExitLoop = 1;
            SET @vc_Success =
                ' Job started deleting from ' + @vc_TableName +
                ' at ' + CONVERT(VARCHAR, @dt_CurrentDatetime, 109) +
                ' and ended at ' + CONVERT(VARCHAR, GETUTCDATE(), 109) +
                '. Deleted ' + convert(varchar, @bi_TableRowcount) + ' rows. ';
        END;
        ELSE
        BEGIN
            IF @bi_WaitTrigger <> @bi_TableRowcount/@i_WaitRows
            BEGIN
                WAITFOR DELAY @vc_WaitTime;
            END;
            SET @bi_WaitTrigger = @bi_TableRowcount/@i_WaitRows;
        END;
    END;

exit_label:
    IF @vc_Error IS NOT NULL
    BEGIN
        RAISERROR(@vc_Error, 16, 1);
    END;
    ELSE
    BEGIN
        RAISERROR(@vc_Success, 10, 1);
    END;
END;
GO
PRINT N'Creating [crt].[DELETEEXTERNALIDENTITYTOCUSTOMERMAPPING]...';


GO

CREATE PROCEDURE [crt].[DELETEEXTERNALIDENTITYTOCUSTOMERMAPPING]
    @nvc_ExternalIdentityId NVARCHAR(500),
    @nvc_Issuer NVARCHAR(500),
    @nvc_CustomerAccountNumber NVARCHAR(20),
    @nvc_DataAreaID NVARCHAR(4)

AS
BEGIN
    SET NOCOUNT ON

    DECLARE @bi_ProviderID BIGINT;
	DECLARE @i_ReturnCode INT;

    SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

    BEGIN TRANSACTION

	   SELECT @bi_ProviderID = RECID
            FROM ax.RETAILIDENTITYPROVIDER
            WHERE ISSUER = @nvc_Issuer

		DELETE ax.RETAILEXTERNALIDTOCUSTOMERMAP 
		WHERE EXTERNALIDENTITYID =  @nvc_ExternalIdentityId 
		AND PROVIDERID = @bi_ProviderID 
		AND CUSTOMERACCOUNTNUMBER = @nvc_CustomerAccountNumber
		AND DATAAREAID =  @nvc_DataAreaID

		IF @@ROWCOUNT=1
		    SET @i_ReturnCode = 0;
	    ELSE
			SET @i_ReturnCode = 1;

   COMMIT TRANSACTION

   RETURN  @i_ReturnCode;

END
GO
PRINT N'Creating [crt].[VALIDATECUSTOMERACCOUNTACTIVATIONREQUEST]...';


GO

CREATE PROCEDURE [crt].[VALIDATECUSTOMERACCOUNTACTIVATIONREQUEST]
    @nvc_EmailAddress        NVARCHAR(100),
    @nvc_ActivationToken    NVARCHAR(50)
AS
BEGIN
    IF EXISTS (SELECT * FROM [crt].[RETAILCUSTOMEREMAILACTIVATION]
                    WHERE
                        ACTIVATIONID = CAST(@nvc_ActivationToken AS UNIQUEIDENTIFIER) AND
                        EMAIL = @nvc_EmailAddress AND
                        STATUS = [crt].GETACTIVEACCOUNTACTIVATIONREQUESTSTATUS())
        RETURN 0;
    ELSE
        RETURN 1;
END;
GO
PRINT N'Creating [crt].[DELETEWISHLIST]...';


GO

CREATE PROCEDURE [crt].[DELETEWISHLIST]
    @tvp_WishList [crt].[WISHLISTTABLETYPE] READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_TransactionIsOurs    INT;
    DECLARE @i_RowCount             INT;
    DECLARE @i_Error                INT;


    -- Wish List table fields
    DECLARE @nvc_Id      NVARCHAR(44);

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode           = 0;
    SET @i_TransactionIsOurs    = 0;


IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

        UPDATE [crt].WISHLIST
        SET DELETEDDATETIME = GETUTCDATE(), MODIFIEDDATETIME = GETUTCDATE()
        FROM @tvp_WishList AS Source
        INNER JOIN [crt].WISHLIST Target ON Target.ID = Source.ID

        SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        -- If no rows were changed, there was a problem updating (mostly because of row version)
     ELSE IF (@i_RowCount = 0)
        BEGIN;
            SET @i_ReturnCode = [crt].fn_kErrorVersionMismatchError();
            GOTO exit_label;
        END;
     END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;
    RETURN @i_ReturnCode;
GO
PRINT N'Creating [crt].[GETDISTRICTS]...';


GO

CREATE PROCEDURE [crt].[GETDISTRICTS]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @CountryRegionId         NVARCHAR(10),
    @StateProvinceID         NVARCHAR(10) = NULL,
    @CountyId                NVARCHAR(10) = NULL,
    @City                    NVARCHAR(60) = NULL
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @StateProvinceIDIsNull BIT = CASE WHEN (@StateProvinceID IS NULL OR LEN(LTRIM(RTRIM(@StateProvinceID))) = 0) THEN 1 ELSE 0 END
    DECLARE @CountyIdIsNull BIT = CASE WHEN (@CountyId IS NULL OR LEN(LTRIM(RTRIM(@CountyId))) = 0) THEN 1 ELSE 0 END
    DECLARE @CityIsNull BIT = CASE WHEN (@City IS NULL OR LEN(LTRIM(RTRIM(@City))) = 0) THEN 1 ELSE 0 END
    DECLARE @isRUAddress BIT = CASE WHEN @CountryRegionId = N'RUS' THEN 1 ELSE 0 END
    
    IF @isRUAddress = 1 
        SELECT
            LDIST.NAME AS DISTRICTNAME
           ,LDIST.DESCRIPTION
           ,N'' AS CITYNAME
           ,LDIST.COUNTYID_RU AS COUNTYID
           ,LDIST.STATEID_RU AS STATEID
           ,LDIST.COUNTRYREGIONID_RU AS COUNTRYREGIONID
        FROM [ax].LOGISTICSADDRESSDISTRICT LDIST
        WHERE LDIST.COUNTRYREGIONID_RU = @CountryRegionId
            AND (@StateProvinceIDIsNull = 1 OR LDIST.STATEID_RU = @StateProvinceID)
            AND (@CountyIdIsNull = 1 OR LDIST.COUNTYID_RU = @CountyId)
            AND LDIST.CITY = 0 
            AND @CityIsNull = 1
        UNION ALL
        SELECT
            LDIST.NAME AS DISTRICTNAME
           ,LDIST.DESCRIPTION          
           ,LCITY.NAME AS CITYNAME
           ,LDIST.COUNTYID_RU AS COUNTYID
           ,LDIST.STATEID_RU AS STATEID
           ,LDIST.COUNTRYREGIONID_RU AS COUNTRYREGIONID        
        FROM [ax].LOGISTICSADDRESSDISTRICT LDIST
        INNER JOIN [ax].LOGISTICSADDRESSCITY LCITY ON LDIST.CITY = LCITY.RECID
        WHERE LDIST.COUNTRYREGIONID_RU = @CountryRegionId
            AND (@StateProvinceIDIsNull = 1 OR LDIST.STATEID_RU = @StateProvinceID)
            AND (@CountyIdIsNull = 1 OR LDIST.COUNTYID_RU = @CountyId)
            AND (@CityIsNull = 1 OR LCITY.NAME = @City)
        ORDER BY [LDIST].NAME
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
    ELSE
        SELECT
            LDIST.NAME AS DISTRICTNAME
           ,LDIST.DESCRIPTION
           ,LCITY.NAME AS CITYNAME
           ,LCITY.COUNTYID
           ,LCITY.STATEID
           ,LCITY.COUNTRYREGIONID
        FROM [ax].LOGISTICSADDRESSDISTRICT LDIST
        INNER JOIN [ax].LOGISTICSADDRESSCITY LCITY ON LDIST.CITY = LCITY.RECID
        WHERE
            LCITY.COUNTRYREGIONID = @CountryRegionId
            AND (@StateProvinceIDIsNull = 1 OR LCITY.STATEID = @StateProvinceID)
            AND (@CountyIdIsNull = 1 OR LCITY.COUNTYID = @CountyId)
            AND (@CityIsNull = 1 OR LCITY.NAME = @City)
        ORDER BY [LDIST].NAME
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[CREATEUPDATECUSTOMERAFFILIATION]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATECUSTOMERAFFILIATION]
    @CUSTOMERACCOUNTNUMBER              NVARCHAR(20) = '',
	@DATAAREAID                         NVARCHAR(10) ='',
    @TVP_CUSTOMERAFFILIATIONTABLETYPE   [crt].CUSTOMERAFFILIATIONTABLETYPE   READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                       INT;
    DECLARE @i_TransactionIsOurs                INT;
    DECLARE @i_Error                            INT;
    DECLARE @n_DataAreaId                       NVARCHAR(4);

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;
	IF LEN(@DATAAREAID) > 4
	BEGIN
		SET @n_DataAreaId = SUBSTRING(@DATAAREAID,1,4);
	END
	ELSE
	BEGIN
		SET @n_DataAreaId = SUBSTRING(@DATAAREAID,1,LEN(@DATAAREAID));
	END

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SET @i_TransactionIsOurs = 1;
    END

	-- Delete all the affiliations of the customer firstly.
	DELETE FROM  [ax].RETAILCUSTAFFILIATION
	WHERE [ax].RETAILCUSTAFFILIATION.CUSTACCOUNTNUM = @CUSTOMERACCOUNTNUMBER 
		AND [ax].RETAILCUSTAFFILIATION.DATAAREAID = @n_DataAreaId;

	-- Insert all the affiliations of the customer.
    INSERT INTO [ax].RETAILCUSTAFFILIATION (
		RECID,
		CUSTACCOUNTNUM,
		RETAILAFFILIATIONID,
		DATAAREAID)
	SELECT 
		RECID,
		CUSTACCOUNTNUM,
		RETAILAFFILIATIONID,
		@n_DataAreaId
	FROM @TVP_CUSTOMERAFFILIATIONTABLETYPE;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETSHIFTREQUIREDAMOUNTSPERTENDER]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTREQUIREDAMOUNTSPERTENDER]
	@bi_ChannelId						bigint,
	@nvc_TerminalId						nvarchar(10),
	@bi_ShiftId						bigint,
	@nvc_DataAreaId						nvarchar(4)
AS

BEGIN
	SET NOCOUNT ON;

	-- 1. Find the last tender declaration date time
	DECLARE @dtt_StartDateTime datetime;

	SELECT	@dtt_StartDateTime = MAX(RTT.CREATEDDATETIME)
	FROM	[ax].[RETAILTRANSACTIONTABLE] RTT
	WHERE	RTT.DATAAREAID = @nvc_DataAreaId 
			AND RTT.CHANNEL = @bi_ChannelId
			AND RTT.BATCHTERMINALID = @nvc_TerminalId
			AND RTT.BATCHID = @bi_ShiftId
			AND RTT.TYPE = 7 -- 7 for Tender declare operation

	IF (@dtt_StartDateTime IS NULL)
	BEGIN
		SET @dtt_StartDateTime = [crt].GETMINAXDATE();
	END

	-- 2. Retrieves the shift payment transaction summary per tender type
	DECLARE @tvp_ShiftTenderPaymentTransType as [crt].[SHIFTTENDERTRANSTYPE];

	INSERT INTO @tvp_ShiftTenderPaymentTransType
	SELECT	SUM(PTV.TENDEREDAMOUNT) AS TENDEREDAMOUNT,
			PTV.TENDERTYPEID,
			PTV.CURRENCY,
			SUM(PTV.TENDEREDAMOUNTCUR) AS TENDEREDAMOUNTCUR, 
			PTV.CARDTYPEID
	FROM	[crt].[SHIFTTENDERPAYMENTTRANSVIEW] PTV
	WHERE	PTV.COUNTINGREQUIRED = 1 
			AND PTV.CREATEDDATETIME > @dtt_StartDateTime 
			AND PTV.CHANNEL = @bi_ChannelId 
			AND PTV.BATCHTERMINALID = @nvc_TerminalId 
			AND PTV.BATCHID = @bi_ShiftId 
			AND PTV.DATAAREAID = @nvc_DataAreaId 
	GROUP BY PTV.TENDERTYPEID, PTV.CURRENCY, PTV.CARDTYPEID 
	ORDER BY PTV.TENDERTYPEID
	
	-- 3. Retrieves the shift bank drop transaction summary per tender type
	DECLARE @tvp_ShiftTenderBankDropTransType as [crt].[SHIFTTENDERTRANSTYPE];

	INSERT INTO @tvp_ShiftTenderBankDropTransType
	SELECT	SUM(BDTV.TENDEREDAMOUNT) * -1 AS TENDEREDAMOUNT,
			BDTV.TENDERTYPEID,
			BDTV.CURRENCY,
			SUM(BDTV.TENDEREDAMOUNTCUR) * -1 AS TENDEREDAMOUNTCUR, 
			BDTV.CARDTYPEID
	FROM	[crt].[SHIFTTENDERBANKDROPTRANSVIEW] BDTV
	WHERE	BDTV.COUNTINGREQUIRED = 1 
			AND BDTV.CREATEDDATETIME > @dtt_StartDateTime 
			AND BDTV.CHANNEL = @bi_ChannelId 
			AND BDTV.BATCHTERMINALID = @nvc_TerminalId 
			AND BDTV.BATCHID = @bi_ShiftId 
			AND BDTV.DATAAREAID = @nvc_DataAreaId 
	GROUP BY BDTV.TENDERTYPEID, BDTV.CURRENCY, BDTV.CARDTYPEID 
	ORDER BY BDTV.TENDERTYPEID
	
	-- 4. Retrieves the shift safe drop transaction summary per tender type
	DECLARE @tvp_ShiftTenderSafeDropTransType as [crt].[SHIFTTENDERTRANSTYPE];

	INSERT INTO @tvp_ShiftTenderSafeDropTransType
	SELECT	SUM(SDTV.TENDEREDAMOUNT) * -1 AS TENDEREDAMOUNT,
			SDTV.TENDERTYPEID,
			SDTV.CURRENCY,
			SUM(SDTV.TENDEREDAMOUNTCUR) * -1 AS TENDEREDAMOUNTCUR, 
			SDTV.CARDTYPEID
	FROM	[crt].[SHIFTTENDERSAFEDROPTRANSVIEW] SDTV
	WHERE	SDTV.COUNTINGREQUIRED = 1 
			AND SDTV.CREATEDDATETIME > @dtt_StartDateTime 
			AND SDTV.CHANNEL = @bi_ChannelId 
			AND SDTV.BATCHTERMINALID = @nvc_TerminalId 
			AND SDTV.BATCHID = @bi_ShiftId 
			AND SDTV.DATAAREAID = @nvc_DataAreaId 
	GROUP BY SDTV.TENDERTYPEID, SDTV.CURRENCY, SDTV.CARDTYPEID 
	ORDER BY SDTV.TENDERTYPEID

	-- 5. Aggregates the amount grouping by the tender type
	SELECT	SUM(T.TENDEREDAMOUNT) AS TENDEREDAMOUNT,
			T.TENDERTYPEID,
			T.CURRENCY,
			SUM(T.TENDEREDAMOUNTCUR) AS TENDEREDAMOUNTCUR,
			T.CARDTYPEID 
	FROM (
		SELECT	TENDEREDAMOUNT, TENDERTYPEID, CURRENCY, TENDEREDAMOUNTCUR, CARDTYPEID
		FROM	@tvp_ShiftTenderPaymentTransType
		UNION ALL
		SELECT	TENDEREDAMOUNT, TENDERTYPEID, CURRENCY, TENDEREDAMOUNTCUR, CARDTYPEID
		FROM	@tvp_ShiftTenderBankDropTransType
		UNION ALL
		SELECT	TENDEREDAMOUNT, TENDERTYPEID, CURRENCY, TENDEREDAMOUNTCUR, CARDTYPEID
		FROM	@tvp_ShiftTenderSafeDropTransType
	) T
	GROUP BY T.TENDERTYPEID, T.CURRENCY, T.CARDTYPEID
	ORDER BY T.TENDERTYPEID

END;
GO
PRINT N'Creating [crt].[DELETERETAILSTAFFLOGINLOG]...';


GO

CREATE PROCEDURE [crt].[DELETERETAILSTAFFLOGINLOG]     
     @CHANNELID nvarchar(10)
    ,@STAFFID   nvarchar(25)    
    ,@DATAAREAID nvarchar(4)
	,@RETURN_VALUE int output
AS
BEGIN
    SET NOCOUNT ON	
    DECLARE @i_Error INT;	
	SET @RETURN_VALUE = 1;
	DECLARE @allowMultipleLogin INT;	
	
	SET @allowMultipleLogin = (SELECT ALLOWMULTIPLELOGINS FROM [crt].EMPLOYEEPERMISSIONSVIEW WHERE STAFFID = @STAFFID)
	
	IF @allowMultipleLogin = 0
	BEGIN 
		DELETE FROM [crt].[RETAILSTAFFLOGINLOG]
		WHERE CHANNELID = @CHANNELID AND STAFFID = @STAFFID AND DATAAREAID = @DATAAREAID;
	
		SELECT @i_Error = @@ERROR;
		IF @i_Error <> 0
		BEGIN
			SET @RETURN_VALUE = @i_Error;        
		END;		
	END
END;
GO
PRINT N'Creating [crt].[DELETEEXPIREDSESSIONSINOFFLINE]...';


GO

CREATE PROCEDURE [crt].[DELETEEXPIREDSESSIONSINOFFLINE] 
    @int_RetentionDays INT
AS
BEGIN 	
	DECLARE @todayUTCDate DATETIME;
	SELECT @todayUTCDate = GETUTCDATE();
	
	--Delete upload session records with Uploaded status and uploaded date before retention day.
	DELETE [crt].[UPLOADSESSION] FROM [crt].[UPLOADSESSION] US
	WHERE US.DATEUPLOADED IS NOT NULL AND (US.STATUS = 2) AND @todayUTCDate >= DATEADD(D, @int_RetentionDays, ISNULL(US.DATEUPLOADED, 0))
	
	--Delete download session records with requested date before retention day.
	DELETE [crt].[DOWNLOADSESSION] FROM [crt].[DOWNLOADSESSION] DS
	WHERE @todayUTCDate >= DATEADD(D, @int_RetentionDays, DS.DATEREQUESTED)
			
END;
GO
PRINT N'Creating [crt].[GETCUSTOMERLOYALTYCARDS]...';


GO

CREATE PROCEDURE [crt].[GETCUSTOMERLOYALTYCARDS]
    @tvp_QueryResultSettings     [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_CustomerAccountNumber   NVARCHAR(20),
    @nvc_CustomerDataAreaId      NVARCHAR(4)
AS
BEGIN
    SET NOCOUNT ON

    select
        rlc.RECID,
        rlc.CARDNUMBER,
        rlc.CARDTENDERTYPE,
        rlc.PARTY,
        ct.ACCOUNTNUM as CUSTOMERACCOUNT
    from [ax].[RETAILLOYALTYCARD] rlc
    inner join [ax].[CUSTTABLE] ct
        on ct.PARTY = rlc.PARTY
    where ct.ACCOUNTNUM = @nvc_CustomerAccountNumber
        and ct.DATAAREAID = @nvc_CustomerDataAreaId
    ORDER BY [rlc].CARDNUMBER
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
END;
GO
PRINT N'Creating [crt].[GETCUSTOMERLOCALPENDINGDEPOSIT]...';


GO

CREATE PROCEDURE [crt].[GETCUSTOMERLOCALPENDINGDEPOSIT] 
    @nvc_AccountNumber     NVARCHAR(30),    
    @nvc_StoreId           NVARCHAR(10),    
    @i_LastCounter         INT,
    @nvc_DataAreaId        NVARCHAR(4),
    @d_Amount              DECIMAL(28,16) OUTPUT     
AS
BEGIN
    SET NOCOUNT ON   

    set @d_Amount = 0.0;

    SELECT @d_Amount = ISNULL(SUM([rtpt].[AMOUNTMST]), 0.0) 
    FROM [ax].RETAILTRANSACTIONPAYMENTTRANS [rtpt]
    INNER JOIN [ax].RETAILTRANSACTIONTABLE [rtt] ON [rtpt].STORE = [rtt].STORE AND [rtpt].TERMINAL = [rtt].TERMINAL AND [rtpt].TRANSACTIONID = [rtt].TRANSACTIONID
    INNER JOIN [ax].RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS [rtct] ON [rtct].STORE = [rtt].STORE AND [rtct].TERMINAL = [rtt].TERMINAL AND [rtct].TRANSACTIONID = [rtt].TRANSACTIONID
    WHERE [rtpt].STORE = @nvc_StoreId 
        AND [rtpt].DATAAREAID = @nvc_DataAreaId 
        AND [rtpt].TRANSACTIONSTATUS in (0) --Normal
        AND [rtt].ENTRYSTATUS in (0, 2, 3) --Normal, OnHold, Concluded
        AND [rtt].TYPE = 3 --Payment 
        AND [rtct].CUSTACCOUNT = @nvc_AccountNumber
        AND [rtpt].REPLICATIONCOUNTERFROMORIGIN > @i_LastCounter;
END;
GO
PRINT N'Creating [crt].[GETTILLLAYOUT]...';


GO

CREATE PROCEDURE [crt].[GETTILLLAYOUT]
	@tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
	@bi_ChannelId			 BIGINT,
	@bi_TerminalId			 BIGINT,
	@nvc_StaffId			 NVARCHAR(25)
AS
BEGIN

    SET NOCOUNT ON
	
	DECLARE @bi_DeviceTypeId	bigint
	DECLARE @nvc_TillLayoutId	nvarchar(10) = NULL

	-- Select device type
	SELECT @bi_DeviceTypeId = rd.TYPE 
	FROM ax.RETAILDEVICE AS rd
		INNER JOIN ax.RETAILTERMINALTABLE AS rtt ON rtt.TERMINALID = rd.TERMINAL
	WHERE rtt.RECID = @bi_TerminalId 

	-- Default to device type 0 (Enterprise POS)
	IF @@ROWCOUNT < 1
	BEGIN
		SELECT @bi_DeviceTypeId = rdt.RECID
		FROM ax.RETAILDEVICETYPES AS rdt
		WHERE rdt.TYPE = 0
	END;
	
	-- Select layout using staff id
	SELECT @nvc_TillLayoutId = rtl.LAYOUTID
	FROM ax.RETAILTILLLAYOUT AS rtl 
		INNER JOIN ax.RETAILTILLLAYOUTSTAFF AS rtls ON rtls.LAYOUTID = rtl.LAYOUTID
			INNER JOIN ax.RETAILSTAFFTABLE AS rts ON rts.RECID = rtls.STAFF
	WHERE rts.STAFFID = @nvc_StaffId AND 
		rtl.DEVICETYPE = @bi_DeviceTypeId

	-- Select layout using terminal id
	IF @@ROWCOUNT < 1 
	BEGIN
		SELECT @nvc_TillLayoutId = rtl.LAYOUTID
		FROM ax.RETAILTILLLAYOUT AS rtl 
				INNER JOIN ax.RETAILTERMINALTABLE AS rtt ON rtt.LAYOUTID = rtl.LAYOUTID
		WHERE rtt.RECID = @bi_TerminalId AND 
			rtl.DEVICETYPE = @bi_DeviceTypeId		

		-- Select layout using channel id
		IF @@ROWCOUNT < 1 
		BEGIN
			SELECT @nvc_TillLayoutId = rtl.LAYOUTID
			FROM ax.RETAILTILLLAYOUT AS rtl 
				INNER JOIN ax.RETAILTILLLAYOUTSTORE AS rtls ON rtls.LAYOUTID = rtl.LAYOUTID
					INNER JOIN ax.RETAILCHANNELTABLE AS rct ON rct.RECID = rtls.STORE
			WHERE rct.RECID = @bi_ChannelId AND 
			rtl.DEVICETYPE = @bi_DeviceTypeId
		END;
	END;

	SELECT 
		[NAME]
		,[WIDTH]
		,[HEIGHT]
		,[LAYOUTID]
		,[CUSTOMERLAYOUTID]
		,[TOTALID]
		,[RECEIPTID]
		,[LAYOUTXML]
		,[LAYOUTXMLPORTRAIT]
		,[CUSTOMERLAYOUTXML]
		,[TOTALSLAYOUTXML]
		,[CASHCHANGERLAYOUTXML]
		,[RECEIPTPAYMENTLAYOUTXML]
		,[RECEIPTITEMSLAYOUTXML]
		,[RECID]
		,[STARTSCREEN]
		,[DEVICETYPE]
		,[DEVICETYPERECID]
	FROM crt.RETAILTILLLAYOUTVIEW
	WHERE LAYOUTID = @nvc_TillLayoutId

	SELECT 
		[BUTTONGRIDID]
		,[ZONEID]
		,[ZONENAME]
	FROM crt.RETAILTILLLAYOUTBUTTONGRIDZONEVIEW
	WHERE LAYOUTID = @nvc_TillLayoutId

	SELECT 
		tillLayoutView.[PICTUREID]
		,tillLayoutView.[ZONEID]
		,tillLayoutView.[ZONENAME]
		,retailImages.PICTURE
	FROM crt.RETAILTILLLAYOUTIMAGEZONEVIEW AS tillLayoutView
		INNER JOIN ax.RETAILIMAGES AS retailImages
		ON tillLayoutView.[PICTUREID] = retailImages.PICTUREID
	WHERE LAYOUTID = @nvc_TillLayoutId

	SELECT 
		[REPORT]
		,[ZONEID]
		,[ZONENAME]
	FROM crt.RETAILTILLLAYOUTREPORTZONEVIEW
	WHERE LAYOUTID = @nvc_TillLayoutId

END;
GO
PRINT N'Creating [crt].[GETSHIFTTENDEREDAMOUNT]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTTENDEREDAMOUNT]
    @tvp_QueryResultSettings            [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                       bigint,
    @nvc_TerminalId                     nvarchar(10),
    @bi_ShiftId                         bigint
AS

BEGIN
    SET NOCOUNT ON;

    SELECT      PAYMENT.TENDERTYPE AS TENDERTYPEID,
                TENDER.NAME AS TENDERTYPENAME,
                PAYMENT.CURRENCY AS CURRENCY,
                TENDER.COUNTINGREQUIRED AS COUNTINGREQUIRED,
                PAYMENT.CHANGELINE AS CHANGELINE,
                SUM(PAYMENT.AMOUNTTENDERED) AS TENDEREDAMOUNT,
                SUM(PAYMENT.AMOUNTCUR) AS TENDEREDAMOUNTCUR,
                COUNT(*) AS COUNT

    FROM        [ax].[RETAILTRANSACTIONPAYMENTTRANS] AS PAYMENT

    INNER JOIN  [ax].[RETAILTRANSACTIONTABLE] AS TRANS
                ON TRANS.TRANSACTIONID = PAYMENT.TRANSACTIONID
                AND TRANS.CHANNEL = PAYMENT.CHANNEL
                AND TRANS.TERMINAL = PAYMENT.TERMINAL
                AND TRANS.DATAAREAID = PAYMENT.DATAAREAID

    INNER JOIN  [ax].[RETAILSTORETENDERTYPETABLE] AS TENDER 
                ON TENDER.TENDERTYPEID = PAYMENT.TENDERTYPE 
                AND TENDER.DATAAREAID = PAYMENT.DATAAREAID
                AND TENDER.CHANNEL = PAYMENT.CHANNEL

    INNER JOIN  [ax].[RETAILSTORETABLE] AS ST
                ON ST.RECID = TENDER.CHANNEL
                AND ST.STORENUMBER = PAYMENT.STORE
    
    WHERE       TRANS.CHANNEL = @bi_ChannelId 
                AND TRANS.BATCHTERMINALID = @nvc_TerminalId 
                AND TRANS.BATCHID = @bi_ShiftId
                AND PAYMENT.TRANSACTIONSTATUS = 0 -- Transaction status is normal
                AND (TRANS.TYPE = 2 OR TRANS.TYPE = 3 OR TRANS.TYPE = 15 OR TRANS.TYPE = 14 OR TRANS.TYPE = 19 OR TRANS.TYPE = 18) -- Transaction type Sales, Payment, SalesInvoice, SalesOrder, CustomerOrder, IncomeExpense resp
                GROUP BY PAYMENT.TENDERTYPE, TENDER.NAME, PAYMENT.CURRENCY, PAYMENT.CHANGELINE, TENDER.COUNTINGREQUIRED
    ORDER BY [PAYMENT].TENDERTYPE
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[DELETEEXPIREDSESSIONS]...';


GO

CREATE PROCEDURE [crt].[DELETEEXPIREDSESSIONS] 
    @int_RetentionDays INT
AS
BEGIN 	
	DECLARE @todayUTCDate DATETIME;
	SELECT @todayUTCDate = GETUTCDATE();
	
	DELETE [crt].[TABLEREPLICATIONLOG] FROM [crt].[TABLEREPLICATIONLOG] TRL 
	INNER JOIN [crt].[UPLOADSESSION] US ON TRL.UPLOADSESSIONID = US.ID
	WHERE US.DATEUPLOADED IS NOT NULL AND (US.STATUS = 1) AND @todayUTCDate >= DATEADD(D, @int_RetentionDays, ISNULL(US.DATEUPLOADED, 0))	
	
	DELETE [crt].[UPLOADSESSION] FROM [crt].[UPLOADSESSION] US
	WHERE US.DATEUPLOADED IS NOT NULL AND (US.STATUS = 1) AND @todayUTCDate >= DATEADD(D, @int_RetentionDays, ISNULL(US.DATEUPLOADED, 0))
	
	DELETE [crt].[DOWNLOADSESSION] FROM [crt].[DOWNLOADSESSION] DS
	WHERE (DS.STATUS = 4 OR DS.STATUS = 5) AND @todayUTCDate >= DATEADD(D, @int_RetentionDays, DS.DATEAPPLIED)
			
END;
GO
PRINT N'Creating [crt].[GETPRICEADJUSTMENTSFORITEMS]...';


GO

CREATE PROCEDURE [crt].[GETPRICEADJUSTMENTSFORITEMS]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT,
    @items                          [crt].[ITEMVARIANTINVENTDIMTABLETYPE] READONLY,
    @priceGroups                    [crt].[PRICEGROUPTABLETYPE] READONLY,
    @fromDate                       DATE,
    @toDate                         DATE
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @NoDate DATE = [crt].GETMINAXDATE();
    DECLARE @Never DATE = [crt].GETMAXAXDATE();
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = INVENTLOCATIONDATAAREAID from [ax].RETAILCHANNELTABLE where RECID = @bi_ChannelId

    -- fetch price group record ids or lookup if missing
    DECLARE @priceGroupRecIds TABLE (PRICEGROUP BIGINT);
    INSERT INTO @priceGroupRecIds (PRICEGROUP)
    SELECT (CASE(pa.PRICEGROUP)
        WHEN 0
        THEN pg.RECID
        ELSE pa.PRICEGROUP
        END)
    FROM @priceGroups AS pa
    INNER JOIN [ax].PRICEDISCGROUP pg ON pg.GROUPID = pa.GROUPID AND DATAAREAID = @nvc_DataAreaId

    -- resolve item Ids and dimensions into product and variant Ids
    DECLARE @itemIds TABLE (ITEMID nvarchar(20), VARIANTINVENTDIMID nvarchar(20), PRODUCT bigint, DISTINCTPRODUCTVARIANT bigint)
    INSERT INTO @itemIds
    SELECT
        it.ITEMID,
        it.VARIANTINVENTDIMID,
        ISNULL(i.PRODUCT,0),
        ISNULL(idc.DISTINCTPRODUCTVARIANT,0)
    FROM @items AS it
    LEFT JOIN [ax].INVENTTABLE i ON i.ITEMID = it.ITEMID AND i.DATAAREAID = @nvc_DataAreaId
    LEFT JOIN [ax].INVENTDIMCOMBINATION idc ON idc.ITEMID = it.ITEMID AND idc.INVENTDIMID = it.VARIANTINVENTDIMID AND idc.DATAAREAID = @nvc_DataAreaId

    DECLARE @itemAdjustments TABLE (OFFERID nvarchar(20), LINENUM numeric(32,16), ITEMID nvarchar(20), INVENTDIMID nvarchar(20))

    -- get adjustment and lines by RETAILGROUPMEMBERLINE.product.
    INSERT INTO @itemAdjustments
    SELECT promo.OFFERID,
        promoLine.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
	FROM [ax].RETAILPERIODICDISCOUNTLINE promoLine
    INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl ON promoLine.RETAILGROUPMEMBERLINE = rgl.RECID AND rgl.PRODUCT != 0 AND rgl.VARIANT = 0
    INNER JOIN @itemIds it ON rgl.PRODUCT = it.PRODUCT
    INNER JOIN [ax].RETAILPERIODICDISCOUNT promo ON promo.OFFERID = promoLine.OFFERID 
		AND promo.STATUS = 1
        AND promo.PERIODICDISCOUNTTYPE = 3 -- get only price adjustments
        AND (promo.VALIDFROM <= @fromDate OR promo.VALIDFROM <= @NoDate)
        AND (promo.VALIDTO >= @toDate OR promo.VALIDTO >= @Never)
		AND promo.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = promo.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE promoLine.DATAAREAID = @nvc_DataAreaId
        AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

	-- get adjustment and lines by RETAILGROUPMEMBERLINE.product and RETAILGROUPMEMBERLINE.variant.
	INSERT INTO @itemAdjustments
    SELECT promo.OFFERID,
        promoLine.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
	FROM [ax].RETAILPERIODICDISCOUNTLINE promoLine
    INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl WITH(INDEX([IX_RETAILGROUPMEMBERLINE_PVC])) ON promoLine.RETAILGROUPMEMBERLINE = rgl.RECID AND rgl.VARIANT != 0
    INNER JOIN @itemIds it ON rgl.VARIANT = it.DISTINCTPRODUCTVARIANT
    INNER JOIN [ax].RETAILPERIODICDISCOUNT promo ON promo.OFFERID = promoLine.OFFERID 
		AND promo.STATUS = 1
        AND promo.PERIODICDISCOUNTTYPE = 3 -- get only price adjustments
        AND (promo.VALIDFROM <= @fromDate OR promo.VALIDFROM <= @NoDate)
        AND (promo.VALIDTO >= @toDate OR promo.VALIDTO >= @Never)
        AND promo.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = promo.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE promoLine.DATAAREAID = @nvc_DataAreaId
        AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

	-- get adjustment and lines by RETAILGROUPMEMBERLINE.category, product only.
	INSERT INTO @itemAdjustments
	SELECT promo.OFFERID,
        promoLine.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
	FROM [ax].RETAILPERIODICDISCOUNTLINE promoLine
	INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl ON promoLine.RETAILGROUPMEMBERLINE = rgl.RECID AND rgl.PRODUCT = 0 AND rgl.VARIANT = 0 AND rgl.CATEGORY != 0
    INNER JOIN [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] rccl ON rccl.CATEGORY = rgl.CATEGORY
    INNER JOIN [ax].[ECORESPRODUCTCATEGORY] pc on pc.CATEGORY = rccl.CONTAINEDCATEGORY
    INNER JOIN @itemIds it ON pc.PRODUCT = it.PRODUCT
    INNER JOIN [ax].RETAILPERIODICDISCOUNT promo ON promo.OFFERID = promoLine.OFFERID 
		AND promo.STATUS = 1
        AND promo.PERIODICDISCOUNTTYPE = 3 -- get only price adjustments
        AND (promo.VALIDFROM <= @fromDate OR promo.VALIDFROM <= @NoDate)
        AND (promo.VALIDTO >= @toDate OR promo.VALIDTO >= @Never)
        AND promo.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = promo.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE promoLine.DATAAREAID = @nvc_DataAreaId
        AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

    -- get adjustment and lines by RETAILGROUPMEMBERLINE.category, variant only.
	INSERT INTO @itemAdjustments
	SELECT promo.OFFERID,
        promoLine.LINENUM,
        it.ITEMID,
        it.VARIANTINVENTDIMID AS INVENTDIMID
	FROM [ax].RETAILPERIODICDISCOUNTLINE promoLine
	INNER JOIN [ax].RETAILGROUPMEMBERLINE rgl ON promoLine.RETAILGROUPMEMBERLINE = rgl.RECID AND rgl.PRODUCT = 0 AND rgl.VARIANT = 0 AND rgl.CATEGORY != 0
    INNER JOIN [ax].[RETAILCATEGORYCONTAINMENTLOOKUP] rccl ON rccl.CATEGORY = rgl.CATEGORY
    INNER JOIN [crt].[RETAILSPECIALCATEGORYVARIANTVIEW] scv on scv.CATEGORY = rccl.CONTAINEDCATEGORY
    INNER JOIN @itemIds it ON scv.PRODUCT = it.DISTINCTPRODUCTVARIANT
    INNER JOIN [ax].RETAILPERIODICDISCOUNT promo ON promo.OFFERID = promoLine.OFFERID 
		AND promo.STATUS = 1
        AND promo.PERIODICDISCOUNTTYPE = 3 -- get only price adjustments
        AND (promo.VALIDFROM <= @fromDate OR promo.VALIDFROM <= @NoDate)
        AND (promo.VALIDTO >= @toDate OR promo.VALIDTO >= @Never)
        AND promo.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].RETAILDISCOUNTPRICEGROUP rdpg on rdpg.OFFERID = promo.OFFERID AND rdpg.DATAAREAID = @nvc_DataAreaId
    WHERE promoLine.DATAAREAID = @nvc_DataAreaId
        AND EXISTS (SELECT * FROM @priceGroupRecIds pg WHERE rdpg.PRICEDISCGROUP = pg.PRICEGROUP)

    SELECT DISTINCT
        promo.OFFERID,
        promo.VALIDFROM,
        promo.VALIDTO,
        promo.CONCURRENCYMODE,
        promo.DATEVALIDATIONTYPE,
        promo.VALIDATIONPERIODID,
        promo.CURRENCYCODE,
		promo.PRICINGPRIORITYNUMBER,
        promoOffer.DISCOUNTMETHOD,
        promoOffer.OFFERPRICE,
        promoOffer.DISCPCT,
        promoOffer.DISCAMOUNT,
        promoOffer.RECID,
        itema.ITEMID,
        itema.INVENTDIMID,
        uom.SYMBOL
    FROM [ax].RETAILPERIODICDISCOUNTLINE promoLine
    INNER JOIN [ax].RETAILPERIODICDISCOUNT promo ON promo.OFFERID = promoLine.OFFERID AND promo.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].RETAILDISCOUNTLINEOFFER promoOffer ON promoLine.RECID = promoOffer.RECID
    INNER JOIN @itemAdjustments itema on itema.OFFERID = promo.OFFERID and itema.LINENUM = promoLine.LINENUM
    LEFT JOIN [ax].UNITOFMEASURE uom ON uom.RECID = promoLine.UNITOFMEASURE
	WHERE promoLine.DATAAREAID = @nvc_DataAreaId
    ORDER BY [promo].OFFERID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
END;
GO
PRINT N'Creating [crt].[GETNOTEXISTINGLANGUAGES]...';


GO

CREATE PROCEDURE [crt].[GETNOTEXISTINGLANGUAGES]
    @bi_ChannelId BIGINT,
    @tvp_LanguageIds crt.LANGUAGEIDTABLETYPE READONLY

AS
BEGIN
    SET NOCOUNT ON

    SELECT
      LISTID, LANGUAGEID
    FROM [crt].[CATALOGLISTMAPPING]
	WHERE CHANNELID = @bi_ChannelId
	  AND LANGUAGEID NOT IN (SELECT LANGUAGEID FROM @tvp_LanguageIds)
    GROUP BY LISTID, LANGUAGEID

END;
GO
PRINT N'Creating [crt].[STORELISTINGMAP]...';


GO

CREATE PROCEDURE [crt].[STORELISTINGMAP]
    @bi_ChannelID BIGINT,
    @tvp_UpsertListingMap   [crt].[CATALOGLISTMAPPINGTABLETYPE] READONLY
AS
BEGIN

    SET NOCOUNT ON

	MERGE INTO [crt].[CATALOGLISTMAPPING] AS TARGETTABLE
	USING @tvp_UpsertListingMap AS SOURCETABLE
	ON 
		TARGETTABLE.LISTINGRECID = SOURCETABLE.PRODUCTID
		AND TARGETTABLE.LANGUAGEID = SOURCETABLE.LANGUAGEID
		AND TARGETTABLE.CHANNELID = @bi_ChannelID
		AND TARGETTABLE.CATALOGID = SOURCETABLE.CATALOGID
		
	WHEN MATCHED THEN
		UPDATE
        SET TARGETTABLE.LISTID = SOURCETABLE.TAG
        
	WHEN NOT MATCHED THEN
		INSERT (CHANNELID, CATALOGID, LISTINGRECID, LANGUAGEID, LISTID)
		VALUES (@bi_ChannelId, SOURCETABLE.CATALOGID, SOURCETABLE.PRODUCTID, SOURCETABLE.LANGUAGEID, SOURCETABLE.TAG);

    RETURN @@ERROR;
    
END;
GO
PRINT N'Creating [crt].[GETCUSTOMERLOCALPENDINGTENDERS]...';


GO

CREATE PROCEDURE [crt].[GETCUSTOMERLOCALPENDINGTENDERS] 
    @nvc_AccountNumber     NVARCHAR(30),    
    @nvc_StoreId           NVARCHAR(10),    
    @nvc_TenderTypeId      NVARCHAR(10),    
    @i_LastCounter         INT,
    @nvc_DataAreaId        NVARCHAR(4),
    @d_Amount              DECIMAL(28,16) OUTPUT
AS
BEGIN
    SET NOCOUNT ON   

    SET @d_Amount = 0.0;

    SELECT @d_Amount = ISNULL(SUM([rtpt].[AMOUNTMST]), 0.0)
    FROM [ax].RETAILTRANSACTIONPAYMENTTRANS [rtpt] 
    INNER JOIN [ax].RETAILTRANSACTIONTABLE [rtt] ON [rtpt].STORE = [rtt].STORE AND [rtpt].TERMINAL = [rtt].TERMINAL AND [rtpt].TRANSACTIONID = [rtt].TRANSACTIONID
    WHERE [rtpt].STORE = @nvc_StoreId 
      AND [rtpt].DATAAREAID = @nvc_DataAreaId 
      AND [rtpt].CARDORACCOUNT = @nvc_AccountNumber
      AND [rtpt].TENDERTYPE = @nvc_TenderTypeId
      AND [rtpt].TRANSACTIONSTATUS IN (0) -- Normal
      AND [rtt].ENTRYSTATUS IN (0, 2, 3) -- Normal, OnHold, Concluded
      AND [rtt].TYPE = 2 -- Sales
      AND [rtpt].REPLICATIONCOUNTERFROMORIGIN > @i_LastCounter 

END;
GO
PRINT N'Creating [crt].[CREATEUPDATEASYNCCUSTOMERADDRESS]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATEASYNCCUSTOMERADDRESS]
    @TVP_CUSTOMERTABLETYPE                    [crt].CUSTOMERTABLETYPE   READONLY,
    @TVP_CUSTOMERADDRESSTABLETYPE             [crt].CUSTOMERADDRESSTABLETYPE   READONLY,
    @nvc_DataAreaId                           NVARCHAR(10),
    @i_KeyId                                  INT             OUTPUT
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                       INT;
    DECLARE @i_TransactionIsOurs                INT;
    DECLARE @i_Error                            INT;
    DECLARE @i_SortOrder                        INT;
    DECLARE @i_PrimaryAddressCount              INT;
    DECLARE @dtt_ChangeDate                     DATETIME;
    DECLARE @nvc_CustomerAccount                NVARCHAR(38);
    DECLARE @nvc_CustomerName                   NVARCHAR(100);
    DECLARE @tvp_CustomerAddressCursor          [crt].CUSTOMERADDRESSTABLETYPE;
    DECLARE @tvp_KeyIdentity                    TABLE ([KEYIDENTITY] INT);

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SET @i_TransactionIsOurs = 1;

    END

    SET @dtt_ChangeDate = GETUTCDATE();

    SELECT @i_SortOrder = 0;
    SELECT @nvc_CustomerAccount   = (SELECT ACCOUNTNUMBER FROM @TVP_CUSTOMERTABLETYPE);
    SELECT @nvc_CustomerName      = (SELECT NAME FROM @TVP_CUSTOMERTABLETYPE);
    SELECT @i_PrimaryAddressCount = (SELECT COUNT(ISPRIMARY) FROM @TVP_CUSTOMERADDRESSTABLETYPE WHERE ISPRIMARY <> 0)

    IF @i_PrimaryAddressCount >= 1
    BEGIN
        -- RESET OLD FALG FOR MAKING POSTAL ADDDRESS PRIMARY
        UPDATE [ax].RETAILASYNCADDRESS 
        SET [MAKEPOSTALADDRESSPRIMARY]=0
        WHERE [CUSTACCOUNTASYNC]=@nvc_CustomerAccount
    END

   -- UPSERT INTO THE RETAILASYNCCUSTOMER
    MERGE INTO [ax].RETAILASYNCADDRESS
    USING @TVP_CUSTOMERADDRESSTABLETYPE AS SOURCE
    ON
        ([ax].RETAILASYNCADDRESS.REPLICATIONCOUNTERFROMORIGIN = SOURCE.RECORDID) -- We map the RecordId to the replication counter for Async Address
    WHEN MATCHED THEN
        UPDATE
        SET
            [CUSTNAME]         = @nvc_CustomerName
            ,[STREET]           = SOURCE.STREET
            ,[STATE]           = SOURCE.[STATE]
            ,[COUNTY]          = SOURCE.COUNTY
            --[PHONE]
            ,[ZIP]             = SOURCE.ZIPCODE
            --[EMAIL]
            --[URL]
            ,[TAXGROUP]        = SOURCE.TAXGROUP
            ,[CITY]            = SOURCE.CITY
            ,[COUNTRY]         = SOURCE.THREELETTERISOREGIONNAME
            ,[STREETNUMBER]    = SOURCE.STREETNUMBER
            ,[DISTRICTNAME]             = SOURCE.DISTRICTNAME
            ,[BUILDINGCOMPLIMENT]       = SOURCE.BUILDINGCOMPLIMENT
            ,[MAKEPOSTALADDRESSPRIMARY] = SOURCE.ISPRIMARY
            ,[ROLE]                     = SOURCE.ADDRESSTYPE
    WHEN NOT MATCHED THEN
        INSERT
        (
            [ADDRESSID]
            ,[ONLINEADDRESSCREATED]
            ,[CUSTACCOUNTASYNC]
            ,[CUSTACCOUNT]
            ,[CUSTNAME]
            ,[STREET]
            ,[STATE]
            ,[COUNTY]
            --[PHONE] [nvarchar](20) NOT NULL,
            ,[ZIP]
            --[EMAIL] [nvarchar](255) NOT NULL,
            --[URL] [nvarchar](255) NOT NULL,
            ,[TAXGROUP]
            ,[CITY]
            ,[COUNTRY]
            ,[STREETNUMBER]
            ,[DISTRICTNAME]
            ,[BUILDINGCOMPLIMENT]
            ,[MAKEPOSTALADDRESSPRIMARY]
            ,[ROLE]
            --[REPLICATIONCOUNTERFROMORIGIN] [int] IDENTITY(1,1) NOT NULL,
            ,[DATAAREAID]
            --[ROWVERSION] [timestamp] NOT NULL,
        )
        VALUES
        (
		    (SELECT CONVERT(char(255), Newid()) AS 'char') -- [ADDRESSID] [nvarchar](38) NOT NULL
            ,0 -- ONLINECUSTCREATED (FALSE)
            ,@nvc_CustomerAccount -- CUSTACCOUNTASYNC 
            ,'' -- CUSTACCOUNT (intentially blank - will be configured in AX during P-Job)
            ,@nvc_CustomerName --[CUSTNAME] [nvarchar](100) NOT NULL,
            ,SOURCE.STREET --[STREET] [nvarchar](250) NOT NULL,
            ,SOURCE.[STATE] --[STATE] [nvarchar](10) NOT NULL,
            ,SOURCE.COUNTY --[COUNTY] [nvarchar](10) NOT NULL,
            --[PHONE] [nvarchar](20) NOT NULL,
            ,SOURCE.ZIPCODE --[ZIP] [nvarchar](10) NOT NULL,
            --[EMAIL] [nvarchar](255) NOT NULL,
            --[URL] [nvarchar](255) NOT NULL,
            ,SOURCE.TAXGROUP --[TAXGROUP] [nvarchar](10) NOT NULL,
            ,SOURCE.CITY --[CITY] [nvarchar](60) NOT NULL,
            ,SOURCE.THREELETTERISOREGIONNAME  --[COUNTRY] [nvarchar](10) NOT NULL,
            ,SOURCE.STREETNUMBER --[STREETNUMBER] [nvarchar](20) NOT NULL,
            ,SOURCE.DISTRICTNAME --[DISTRICTNAME] [nvarchar](60) NOT NULL,
            ,SOURCE.BUILDINGCOMPLIMENT --[BUILDINGCOMPLIMENT] [nvarchar](60) NOT NULL,
            ,SOURCE.ISPRIMARY --[MAKEPOSTALADDRESSPRIMARY] [int] NOT NULL,
            ,SOURCE.ADDRESSTYPE --[ROLE] [int] NOT NULL,
            --[REPLICATIONCOUNTERFROMORIGIN] [int] IDENTITY(1,1) NOT NULL,
            ,@nvc_DataAreaId          
            --[ROWVERSION] [timestamp] NOT NULL,
        )
            OUTPUT INSERTED.[REPLICATIONCOUNTERFROMORIGIN] INTO @tvp_KeyIdentity
        ;        

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;
    
    SELECT TOP 1 @i_KeyId = CAST([KEYIDENTITY] AS INT) FROM @tvp_KeyIdentity;    

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTSAFETENDERTRANS]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [INSERTSAFETENDERTRANS] inserts tender transactions into AX.[RETAILTRANSACTIONSAFETENDERTRANS].
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[INSERTSAFETENDERTRANS]
    @bi_channelId                   BIGINT,
    @TVP_TenderDropTransTable       [crt].[TENDERDROPTRANSTYPE]    READONLY,
    @d_BusinessDate                 DATE
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].[RETAILTRANSACTIONSAFETENDERTRANS]
           (
            [AMOUNTCUR]
           ,[AMOUNTCURPOS]
           ,[AMOUNTMST]
           ,[AMOUNTMSTPOS]
           ,[AMOUNTTENDERED]
           ,[AMOUNTTENDEREDPOS]
           ,[CARDORACCOUNT]
           ,[CARDTYPEID]
           ,[CHANNEL]
           ,[CURRENCY]
           ,[EXCHRATE]
           ,[EXCHRATEMST]
           ,[LINENUM]
           ,[QTY]
           ,[REPLICATED]
           ,[SHIFT]
           ,[SHIFTDATE]
           ,[STAFF]
           ,[STATEMENTCODE]
           ,[STATUSTYPE]
           ,[STORE]
           ,[TENDERTYPE]
           ,[TERMINAL]
           ,[TRANSACTIONID]
           ,[TRANSACTIONSTATUS]
           ,[TRANSDATE]
           ,[TRANSTIME]
           ,[DATAAREAID]
           ,[BUSINESSDATE])
     SELECT
           [AMOUNTCUR]
           ,[AMOUNTCURPOS]
           ,[AMOUNTMST]
           ,[AMOUNTMSTPOS]
           ,[AMOUNTTENDERED]
           ,[AMOUNTTENDEREDPOS]
           ,[CARDORACCOUNT]
           ,[CARDTYPEID]
           ,@bi_channelId
           ,[CURRENCY]
           ,[EXCHRATE]
           ,[EXCHRATEMST]
           ,[LINENUM]
           ,[QTY]
           ,[REPLICATED]
           ,[SHIFT]
           ,[SHIFTDATE]
           ,[STAFF]
           ,[STATEMENTCODE]
           ,[STATUSTYPE]
           ,[STORE]
           ,[TENDERTYPE]
           ,[TERMINAL]
           ,[TRANSACTIONID]
           ,[TRANSACTIONSTATUS]
           ,[TRANSDATE]
           ,[TRANSTIME]
           ,[DATAAREAID]
           ,@d_BusinessDate
           FROM @TVP_TenderDropTransTable AS Source

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;
        
        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[DELETESHIFTUSERSSTAGING]...';


GO

CREATE PROCEDURE [crt].[DELETESHIFTUSERSSTAGING]
    @bi_ChannelId       [BIGINT],
    @nvc_TerminalId     [NVARCHAR](10),
    @bi_ShiftId         [BIGINT],
    @rv_RowVersion      [ROWVERSION]
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_TransactionIsOurs    INT;
    DECLARE @i_RowCount             INT;
    DECLARE @i_Error                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    DELETE FROM [crt].RETAILSHIFTUSERSSTAGINGTABLE
    WHERE
        CHANNEL = @bi_ChannelId AND
        ORIGINALTERMINALID = @nvc_TerminalId AND
        SHIFTID = @bi_ShiftId

     SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

     IF @i_Error <> 0
     BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
     END;

     -- If no rows were changed, there was a problem updating (mostly because of row version)
     IF (@i_RowCount = 0)
     BEGIN;
        SET @i_ReturnCode = [crt].fn_kErrorVersionMismatchError();
        GOTO exit_label;
     END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[SAVESALESTRANSACTIONS]...';


GO

CREATE PROCEDURE [crt].[SAVESALESTRANSACTIONS]
    @tvp_SalesTransaction       [crt].[SALESTRANSACTIONTABLETYPE]    READONLY,
    @b_IgnoreRowVersionCheck    BIT
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_TransactionIsOurs    INT;
    DECLARE @i_RowIndex             INT;
    DECLARE @i_RowCount             INT;
    DECLARE @i_Error                INT;
    DECLARE @dtt_ChangeDate         DATETIME;

    -- Sales transaction table fields
    DECLARE @nvc_TransactionId      NVARCHAR(44);
    DECLARE @nvc_TerminalId         NVARCHAR(10);
    DECLARE @nvc_CustomerId         NVARCHAR(38);
    DECLARE @nvc_Name               NVARCHAR(128);
    DECLARE @i_ByteLength           INT;
    DECLARE @vb_TransactionData     VARBINARY(MAX);
    DECLARE @rv_RowVersion          ROWVERSION;
    DECLARE @b_IsSuspended          BIT;
    DECLARE @i_Type                 INT;
    DECLARE @nvc_Comment            NVARCHAR(60);
    DECLARE @bi_ChannelId           BIGINT;
    DECLARE @nvc_Staff              NVARCHAR(25);
    DECLARE @nu_Amount              NUMERIC(32, 16);

    DECLARE @t_SalesTransactionIdTable    TABLE
    (
        i_RowIndex          INT             PRIMARY KEY IDENTITY(0,1)
        ,nvc_TransactionId  NVARCHAR(44)    NOT NULL
    );

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode           = 0;
    SET @i_TransactionIsOurs    = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Sort transactions by ID
    INSERT @t_SalesTransactionIdTable
    (
        nvc_TransactionId
    )
    SELECT
        Source.TRANSACTIONID
    FROM @tvp_SalesTransaction AS Source
    ORDER BY Source.TRANSACTIONID;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    SET @dtt_ChangeDate = GETUTCDATE();
    SET @i_RowIndex     = 0;

    -- Foreach transaction, do the upsert
    WHILE (1 = 1)
    BEGIN
        SELECT
            @nvc_TransactionId      = Source.TRANSACTIONID
            ,@bi_ChannelId          = Source.CHANNELID
            ,@nvc_TerminalId        = Source.TERMINALID
            ,@nvc_CustomerId        = Source.CUSTOMERID
            ,@nvc_Name              = Source.NAME
            ,@i_ByteLength          = Source.BYTELENGTH
            ,@vb_TransactionData    = Source.TRANSACTIONDATA
            ,@rv_RowVersion         = CAST(Source.ROWVERSION AS ROWVERSION)
            ,@b_IsSuspended         = Source.ISSUSPENDED
            ,@i_Type                = Source.TYPE
            ,@nvc_Comment           = Source.COMMENT
            ,@nvc_Staff             = Source.STAFF
            ,@nu_Amount             = Source.AMOUNT
        FROM @tvp_SalesTransaction Source
        INNER JOIN @t_SalesTransactionIdTable Sorted
            ON Source.TRANSACTIONID = Sorted.nvc_TransactionId
        WHERE
            Sorted.i_RowIndex = @i_RowIndex;

        SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        IF @i_Rowcount = 0
        BEGIN
            BREAK;
        END;

        -- Verifies whether the transaction already exists on DB
        SELECT
            @i_Rowcount = COUNT(TRANSACTIONID)
        FROM SALESTRANSACTION Target WITH (NOLOCK)
        WHERE
            Target.TRANSACTIONID = @nvc_TransactionId
            AND Target.DELETEDDATETIME IS NULL;

        -- If it does not exist, this is an insert
        IF (@i_RowCount = 0)
        BEGIN
            INSERT INTO [crt].SALESTRANSACTION
            (
                TRANSACTIONID
                ,CHANNELID
                ,TERMINALID
                ,CUSTOMERID
                ,NAME
                ,BYTELENGTH
                ,TRANSACTIONDATA
                ,CREATEDDATETIME
                ,ISSUSPENDED
                ,TYPE
                ,MODIFIEDDATETIME
                ,COMMENT
                ,STAFF
                ,AMOUNT
            )
            VALUES
            (
                @nvc_TransactionId
                ,@bi_ChannelId
                ,@nvc_TerminalId
                ,@nvc_CustomerId
                ,@nvc_Name
                ,@i_ByteLength
                ,@vb_TransactionData
                ,@dtt_ChangeDate
                ,@b_IsSuspended
                ,@i_Type
                ,@dtt_ChangeDate
                ,@nvc_Comment
                ,@nvc_Staff
                ,@nu_Amount
            );

            SELECT @i_Error = @@ERROR;
            IF @i_Error <> 0
            BEGIN
                SET @i_ReturnCode = @i_Error;
                GOTO exit_label;
            END;
        END;
        -- This is an update
        ELSE IF (@i_RowCount = 1)
        BEGIN
            UPDATE [crt].SALESTRANSACTION
            SET
                 TRANSACTIONID      = @nvc_TransactionId
                ,CHANNELID          = @bi_ChannelId
                ,TERMINALID         = @nvc_TerminalId
                ,CUSTOMERID         = @nvc_CustomerId
                ,NAME               = @nvc_Name
                ,BYTELENGTH         = @i_ByteLength
                ,TRANSACTIONDATA    = @vb_TransactionData
                ,MODIFIEDDATETIME   = @dtt_ChangeDate
                ,ISSUSPENDED        = @b_IsSuspended
                ,TYPE                = @i_Type
                ,COMMENT            = @nvc_Comment
                ,STAFF                = @nvc_Staff
                ,AMOUNT                = @nu_Amount
            WHERE
                TRANSACTIONID = @nvc_TransactionId
                AND (ROWVERSION = @rv_RowVersion OR @b_IgnoreRowVersionCheck = 1)

            SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @i_ReturnCode = @i_Error;
                GOTO exit_label;
            END;

            -- If no rows were changed, there was a problem updating (mostly because of row version)
            IF (@i_RowCount = 0)
            BEGIN;
                SET @i_ReturnCode = [crt].fn_kErrorVersionMismatchError();
                GOTO exit_label;
            END;
        END;

        SET @i_RowIndex = @i_RowIndex + 1; --so we eventually exit the loop
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETZIPCODES]...';


GO

CREATE PROCEDURE [crt].[GETZIPCODES]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @CountryRegionId    NVARCHAR(10),
    @StateProvinceID    NVARCHAR(10) = NULL,
    @CountyId           NVARCHAR(10) = NULL,
    @City               NVARCHAR(60) = NULL,
    @District           NVARCHAR(60) = NULL
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @StateProvinceIDIsNull BIT = CASE WHEN (@StateProvinceID IS NULL OR LEN(LTRIM(RTRIM(@StateProvinceID))) = 0) THEN 1 ELSE 0 END
    DECLARE @CountyIdIsNull BIT = CASE WHEN (@CountyId IS NULL OR LEN(LTRIM(RTRIM(@CountyId))) = 0) THEN 1 ELSE 0 END
    DECLARE @CityIsNull BIT = CASE WHEN (@City IS NULL OR LEN(LTRIM(RTRIM(@City))) = 0) THEN 1 ELSE 0 END
    DECLARE @DistrictIsNull BIT = CASE WHEN (@District IS NULL OR LEN(LTRIM(RTRIM(@District))) = 0) THEN 1 ELSE 0 END

    SELECT
         LZIP.ZIPCODE
        ,LZIP.STREETNAME
        ,LZIP.TIMEZONE
        ,LZIP.CITY AS CITYNAME
        ,LZIP.CITYALIAS
        ,LZIP.COUNTY AS COUNTYID
        ,LZIP.DISTRICTNAME
        ,LZIP.STATE AS STATEID
        ,LZIP.COUNTRYREGIONID
    FROM [ax].LOGISTICSADDRESSZIPCODE LZIP
    WHERE
        LZIP.COUNTRYREGIONID = @CountryRegionId
        AND (@StateProvinceIDIsNull = 1 OR LZIP.STATE = @StateProvinceID)
        AND (@CountyIdIsNull = 1 OR LZIP.COUNTY = @CountyId)
        AND (@CityIsNull = 1 OR LZIP.CITY = @City)
        AND (@DistrictIsNull = 1 OR LZIP.DISTRICTNAME = @District)
    ORDER BY [LZIP].COUNTRYREGIONID, [LZIP].ZIPCODE
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETITEMSBYPRODUCTIDS]...';


GO

CREATE PROCEDURE [crt].[GETITEMSBYPRODUCTIDS]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @tvp_ProductIds             [crt].[RECORDIDTABLETYPE]   READONLY
AS
BEGIN
    SET NOCOUNT ON

    -- Get the data area for the specified channel identifier.
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = rct.INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId;

    DECLARE @nvc_DefaultLanguageId NVARCHAR(7);
    SELECT @nvc_DefaultLanguageId = clv.LANGUAGEID FROM [crt].CHANNELLANGUAGESVIEW clv WHERE clv.CHANNEL = @bi_ChannelId AND clv.ISDEFAULT = 1

    -- We sort by priority to ensure that the fallback languages are consistent.
    DECLARE @nvc_NotDefaultLanguageId NVARCHAR(7);
    SELECT TOP 1 @nvc_NotDefaultLanguageId = clv.LANGUAGEID FROM [crt].CHANNELLANGUAGESVIEW clv WHERE clv.CHANNEL = @bi_ChannelId AND clv.ISDEFAULT = 0 ORDER BY clv.[PRIORITY]

    -- Retrieve the item data.
    SELECT DISTINCT
        it.[RECID],
        it.[ITEMID],
        COALESCE(erpt.[NAME], erpt2.[NAME]) AS [NAME],
        COALESCE(erpt.[DESCRIPTION], erpt2.[DESCRIPTION]) AS [DESCRIPTION],
        itm.[PRICE],
        itm.[UNITID],
        it.[PRODUCT],
        itm.[MARKUPGROUPID],
        itm.[MARKUP],
        itm.[ALLOCATEMARKUP],
        itm.[PRICEQTY],
        itm.[LINEDISC],
        itm.[MULTILINEDISC],
        itm.[ENDDISC],
        rit.[NODISCOUNTALLOWED],
        itm.[TAXITEMGROUPID] AS 'ITEMTAXGROUPID',
        iitm.[UNITID] AS 'INVENTUNITID'
    FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0/*b_IsForwardLooking*/, 1/*b_SkipVariantExpansion*/, 1/*b_ProductIdsPassed*/, @tvp_ProductIds) ap
    INNER JOIN [ax].INVENTTABLE it ON it.PRODUCT = ap.PRODUCTID AND it.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].INVENTTABLEMODULE itm ON itm.MODULETYPE = 2 AND itm.ITEMID = it.ITEMID AND itm.DATAAREAID = it.DATAAREAID
    INNER JOIN [ax].INVENTTABLEMODULE iitm ON iitm.MODULETYPE = 0 AND iitm.ITEMID = it.ITEMID AND iitm.DATAAREAID = it.DATAAREAID
    LEFT JOIN [ax].ECORESPRODUCTTRANSLATION erpt ON erpt.PRODUCT = it.PRODUCT AND erpt.LANGUAGEID = @nvc_DefaultLanguageId
    LEFT JOIN [ax].ECORESPRODUCTTRANSLATION erpt2 ON erpt2.PRODUCT = it.PRODUCT AND erpt2.LANGUAGEID = @nvc_NotDefaultLanguageId
    INNER JOIN [ax].RETAILINVENTTABLE rit ON it.ITEMID = rit.ITEMID AND rit.DATAAREAID = it.DATAAREAID
    ORDER BY [it].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETPRICETRADEAGREEMENTS]...';


GO

CREATE PROCEDURE [crt].[GETPRICETRADEAGREEMENTS]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @ItemIds                    [crt].[STRINGIDTABLETYPE] READONLY,
    @PriceGroups                [crt].[PRICEACCOUNTRELATIONSTABLETYPE] READONLY,
    @Customer                   nvarchar(20),
    @MinDate                    DATE,
    @MaxDate                    DATE,
    @nvc_CurrencyCode           NVARCHAR(3)
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @NoDate DATE = [crt].GETMINAXDATE();

    SELECT
        ta.RECID,
        ta.ITEMCODE,
        ta.ACCOUNTCODE,
        ta.ITEMRELATION,
        ta.ACCOUNTRELATION,
        ta.QUANTITYAMOUNTFROM,
        ta.QUANTITYAMOUNTTO,
        ta.FROMDATE,
        ta.TODATE,
        ta.AMOUNT,
        ta.CURRENCY,
        ta.PERCENT1,
        ta.PERCENT2,
        ta.SEARCHAGAIN,
        ta.PRICEUNIT,
        ta.RELATION,
        ta.UNITID,
        ta.MARKUP,
        ta.ALLOCATEMARKUP,
        ta.INVENTDIMID,
        ta.MAXIMUMRETAILPRICE_IN AS MAXIMUMRETAILPRICEINDIA,
        invdim.CONFIGID,
        invdim.INVENTCOLORID,
        invdim.INVENTSIZEID,
        invdim.INVENTSTYLEID
    FROM [ax].PRICEDISCTABLE ta
    INNER JOIN [ax].RETAILCHANNELTABLE AS c
        ON c.INVENTLOCATIONDATAAREAID = ta.DATAAREAID AND c.RECID = @bi_ChannelId
    LEFT JOIN [ax].INVENTDIM invdim ON ta.INVENTDIMID = invdim.INVENTDIMID AND invdim.DATAAREAID = c.INVENTLOCATIONDATAAREAID
    WHERE
        -- and item/group relation matches
	    ta.ITEMRELATION in (SELECT i.STRINGID FROM @ItemIds i) AND ta.ITEMCODE = 0

        -- agreement is of price sales
        AND ta.RELATION = 4
        AND ta.CURRENCY = @nvc_CurrencyCode 

        -- and currently active
        AND ((ta.FROMDATE <= @MinDate OR ta.FROMDATE <= @NoDate)
                AND (ta.TODATE >= @MaxDate OR ta.TODATE <= @NoDate))

        -- and customer/group relation matches
        AND
        (
         -- account code is group and relation is in the price groups
         ((ta.ACCOUNTCODE = 1) AND
            (ta.ACCOUNTRELATION IN (SELECT ar.ACCOUNTRELATION FROM @PriceGroups ar)))
         OR
         -- or account code is customer and customer is on the agreement
         ((ta.ACCOUNTCODE = 0) AND (ta.ACCOUNTRELATION = @Customer))
         OR
         -- or account code is ALL customers
         ((ta.ACCOUNTCODE = 2))
        )

        -- and warehouse is either for all or for current channel
        AND
        (
         invdim.INVENTLOCATIONID = '' OR (invdim.INVENTLOCATIONID = c.INVENTLOCATION)
        )
    ORDER BY [ta].ITEMRELATION
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETTAXCODEINTERVALS]...';


GO

CREATE PROCEDURE [crt].[GETTAXCODEINTERVALS]
    @bi_ChannelId       BIGINT,
    @nvc_SalesTaxGroup  NVARCHAR(10),
    @nvc_ItemTaxGroup   NVARCHAR(10),
    @dt_TransactionDate DATE
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ReturnCode       INT;
    DECLARE @i_Error            INT;
    DECLARE @dt_NoDateBoundary  DATE;
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = INVENTLOCATIONDATAAREAID from [ax].RETAILCHANNELTABLE where RECID = @bi_ChannelId

    SET @dt_NoDateBoundary = [crt].GETMINAXDATE();

    SELECT DISTINCT
        toi.TAXITEMGROUP,
        toi.TAXCODE,
        ISNULL(td.TAXVALUE, 0.0) AS TAXVALUE,
        ISNULL(td.TAXLIMITMIN, 0.0) AS TAXLIMITMIN,
        ISNULL(td.TAXLIMITMAX, 0.0) AS TAXLIMITMAX,
        tgd.EXEMPTTAX,
        tgh.TAXGROUPROUNDING,
        tt.TAXCURRENCYCODE,
        tt.TAXINCLUDEINTAX,
        tt.TAXBASE,
        tt.TAXLIMITBASE,
        tt.TAXCALCMETHOD,
        tt.TAXONTAX,
        tt.TAXUNIT,
        tt.TAXROUNDOFF,
        tt.TAXROUNDOFFTYPE,
        ISNULL(tcl.TAXMAX,0) AS TAXMAX,
        ISNULL(tcl.TAXMIN,0) AS TAXMIN
    FROM [ax].TAXGROUPHEADING tgh
    INNER JOIN [ax].TAXGROUPDATA tgd ON tgh.TAXGROUP = tgd.TAXGROUP AND tgh.DATAAREAID = tgd.DATAAREAID
    INNER JOIN [ax].TAXONITEM toi ON tgd.TAXCODE = toi.TAXCODE AND tgd.DATAAREAID = toi.DATAAREAID
    INNER JOIN [ax].TAXDATA td ON toi.TAXCODE = td.TAXCODE AND toi.DATAAREAID = td.DATAAREAID
    INNER JOIN [ax].TAXTABLE tt ON tt.TAXCODE = td.TAXCODE AND tt.DATAAREAID = td.DATAAREAID
    LEFT JOIN [ax].TAXCOLLECTLIMIT tcl ON
        tcl.TAXCODE = td.TAXCODE
        AND (tcl.TAXFROMDATE IS NULL
            OR @dt_TransactionDate >= tcl.TAXFROMDATE
            OR tcl.TAXFROMDATE = @dt_NoDateBoundary)
        AND (tcl.TAXTODATE IS NULL
            OR @dt_TransactionDate < DATEADD(d, 1, tcl.TAXTODATE)
            OR tcl.TAXTODATE = @dt_NoDateBoundary)
    WHERE
        tgh.DATAAREAID = @nvc_DataAreaId
        AND toi.TAXITEMGROUP = @nvc_ItemTaxGroup
        AND tgh.TAXGROUP = @nvc_SalesTaxGroup
        AND ((@dt_TransactionDate >= td.TAXFROMDATE OR td.TAXFROMDATE = @dt_NoDateBoundary)
        AND (@dt_TransactionDate < DATEADD(d, 1, td.TAXTODATE) OR td.TAXTODATE = @dt_NoDateBoundary))

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

exit_label:

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTSHIFTTENDERLINE]...';


GO

CREATE PROCEDURE [crt].[INSERTSHIFTTENDERLINE]
    @TVP_SHIFTTENDERLINETABLETYPE       [crt].[SHIFTTENDERLINETABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILPOSBATCHTENDERTRANS
    (
        [ADDTOTENDERAMOUNT],
        [ADDTOTENDERAMOUNTCUR],
        [BANKDROPAMOUNT],
        [BANKDROPAMOUNTCUR],
        [BATCHID],
        [CARDTYPEID],
        [CHANGEAMOUNT],
        [CHANGEAMOUNTCUR],
        [CHANNEL],
        [COUNT],
        [COUNTINGREQUIRED],
        [CURRENCY],
        [DECLARETENDERAMOUNT],
        [DECLARETENDERAMOUNTCUR],
        [REMOVETENDERAMOUNT],
        [REMOVETENDERAMOUNTCUR],
        [SAFEDROPAMOUNT],
        [SAFEDROPAMOUNTCUR],
        [STARTINGAMOUNT],
        [STARTINGAMOUNTCUR],
        [STOREID],
        [TENDEREDAMOUNT],
        [TENDEREDAMOUNTCUR],
        [TENDERTYPEID],
        [TERMINALID],
        [DATAAREAID]
    )
    SELECT
        [ADDTOTENDERAMOUNT],
        [ADDTOTENDERAMOUNTCUR],
        [BANKDROPAMOUNT],
        [BANKDROPAMOUNTCUR],
        [SHIFTID],
        [CARDTYPEID],
        [CHANGEAMOUNT],
        [CHANGEAMOUNTCUR],
        [CHANNEL],
        [COUNT],
        [COUNTINGREQUIRED],
        [CURRENCY],
        [DECLARETENDERAMOUNT],
        [DECLARETENDERAMOUNTCUR],
        [REMOVETENDERAMOUNT],
        [REMOVETENDERAMOUNTCUR],
        [SAFEDROPAMOUNT],
        [SAFEDROPAMOUNTCUR],
        [STARTINGAMOUNT],
        [STARTINGAMOUNTCUR],
        [STOREID],
        [TENDEREDAMOUNT],
        [TENDEREDAMOUNTCUR],
        [TENDERTYPEID],
        [TERMINALID],
        [DATAAREAID]
    FROM @TVP_SHIFTTENDERLINETABLETYPE;


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETREFINERSBYCATEGORYID]...';


GO

CREATE PROCEDURE [crt].[GETREFINERSBYCATEGORYID]
(
    @tvp_QueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE READONLY,
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_Locale              NVARCHAR(7),
    @bi_CategoryId           BIGINT
)
AS
BEGIN
    DECLARE @tvp_ProductSearchResultIds [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId [crt].[RECORDIDTABLETYPE]

    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT TOP 1000  -- Retrieving only TOP 1000 products because retrieving more products will degrade performance.
        [prods].PRODUCTID AS RECID
    FROM [crt].GETPRODUCTIDSBYCATEGORYID(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @bi_CategoryId) prods

    -- Adding variants so their refiners can also be used.
    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT
        [erdpv].RECID AS RECID
    FROM @tvp_ProductSearchResultIds prods
    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].PRODUCTMASTER = [prods].RECID
    WHERE EXISTS
        (
            SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
            WHERE [apv].PRODUCTID = [erdpv].RECID AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
        )

    SELECT
        [gpr].RECID,
        [gpr].KEYNAME,
        [gpr].[SOURCE],
        [gpr].DATATYPE,
        [gpr].DISPLAYOPTION,
        [gpr].DISPLAYTEMPLATE,
        [gpr].THRESHOLDVALUE
    FROM [crt].GETPRODUCTREFINERS(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @nvc_Locale, @tvp_ProductSearchResultIds, @tvp_DummyId) gpr
    ORDER BY [gpr].KEYNAME
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END
GO
PRINT N'Creating [crt].[UPDATEEMPLOYEEPASSWORD_V2]...';


GO
CREATE PROCEDURE [crt].[UPDATEEMPLOYEEPASSWORD_V2]
    @nvc_StaffId        nvarchar(25),
    @nvc_PasswordHash   nvarchar(128),
    @nvc_PasswordSalt   nvarchar(128),
    @nvc_PasswordHashAlgorithm nvarchar(25),
    @dt_PasswordLastChangedDateTime datetime,
    @i_PasswordLastUpdatedOperation int,
    @nvc_ChangePasswordAtNextLogOn bit
AS
BEGIN
    SET NOCOUNT ON

    UPDATE [ax].[RETAILSTAFFTABLE] SET
        [PASSWORDSALT] = @nvc_PasswordSalt,
        [PASSWORDDATA] = @nvc_PasswordHash,
        [PASSWORDHASHALGORITHM] = @nvc_PasswordHashAlgorithm,
        [PASSWORDLASTCHANGEDDATETIME] = @dt_PasswordLastChangedDateTime,
        [CHANGEPASSWORD] = @nvc_ChangePasswordAtNextLogOn,
        [PASSWORDLASTUPDATEDOPERATION] = @i_PasswordLastUpdatedOperation
    WHERE
        STAFFID = @nvc_StaffId
END;
GO
PRINT N'Creating [crt].[GETDOWNLOADINGDATA]...';


GO

CREATE PROCEDURE [crt].[GETDOWNLOADINGDATA]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId            BIGINT,
    @vc_dataGroupName        VARCHAR(128)
AS
BEGIN

    SET NOCOUNT ON

    ---
    -- The following code sample demonstrates how to construct downloading dataset based on specified group name.
    --
    -- NOTE: it is always a good practice to get data from view(s) to avoid future migration pain.
    ---

    -- Convert the input parameter to upper case.
    DECLARE @convertedName VARCHAR(128)
    SET @convertedName = UPPER(@vc_dataGroupName)

    -- Return all data in 'PRICING' group
    IF (@convertedName = 'PRICING')
    BEGIN
        SELECT
            [RECID],
            [PRICEGROUP],
            [GROUPID],
            [CHANNELID]
        FROM [crt].PRICEGROUPSVIEW WITH(NOLOCK)

        SELECT
            [RECID],
            [SALESPRICEACCOUNTITEM],
            [SALESPRICEGROUPITEM],
            [SALESPRICEALLITEM],
            [SALESLINEACCOUNTITEM],
            [SALESLINEACCOUNTGROUP],
            [SALESLINEACCOUNTALL],
            [SALESLINEGROUPITEM],
            [SALESLINEGROUPGROUP],
            [SALESLINEGROUPALL],
            [SALESLINEALLITEM],
            [SALESLINEALLGROUP],
            [SALESLINEALLALL],
            [SALESMULTILNACCOUNTGROUP],
            [SALESMULTILNACCOUNTALL],
            [SALESMULTILNGROUPGROUP],
            [SALESMULTILNGROUPALL],
            [SALESMULTILNALLGROUP],
            [SALESMULTILNALLALL],
            [SALESENDACCOUNTALL],
            [SALESENDGROUPALL],
            [SALESENDALLALL]
        FROM [crt].PRICEPARAMETERSVIEW WITH(NOLOCK)

        RETURN
    END

    -- Return all data in 'TAX' group
    IF (@convertedName = 'TAX')
    BEGIN
        SELECT
            [RECID],
            [TAXCODE],
            [TAXFROMDATE],
            [TAXMAX],
            [TAXMIN],
            [TAXTODATE],
            [DATAAREAID],
            [ROWVERSION]
        FROM [ax].TAXCOLLECTLIMIT WITH(NOLOCK)

        SELECT
            [RECID],
            [SALESTAXFORMTYPES_IN],
            [TAXCODE],
            [TAXFROMDATE],
            [TAXLIMITMAX],
            [TAXLIMITMIN],
            [TAXREDUCTIONPCT_BR],
            [TAXTODATE],
            [TAXVALUE],
            [VATEXEMPTPCT],
            [DATAAREAID],
            [ROWVERSION]
        FROM [ax].TAXDATA WITH(NOLOCK)

        SELECT
            [RECID],
            [EXEMPTTAX],
            [TAXATIONCODETABLE_BR],
            [TAXCODE],
            [TAXGROUP],
            [USETAX],
            [DATAAREAID],
            [ROWVERSION]
        FROM [ax].TAXGROUPDATA WITH(NOLOCK)

        SELECT
            [RECID],
            [SEARCHFIELD1],
            [SEARCHFIELD2],
            [TAXGROUP],
            [TAXGROUPNAME],
            [TAXGROUPROUNDING],
            [TAXGROUPSETUP],
            [TAXPRINTDETAIL],
            [TAXREVERSEONCASHDISC],
            [DATAAREAID],
            [ROWVERSION]
        FROM [ax].TAXGROUPHEADING WITH(NOLOCK)

        SELECT
            [RECID],
            [ABATEMENTPERCENT_IN],
            [EXEMPTTAX_BR],
            [TAXATIONCODETABLE_BR],
            [TAXCODE],
            [TAXITEMGROUP],
            [WITHOUTTAXCREDIT_BR],
            [DATAAREAID],
            [ROWVERSION]
        FROM [ax].TAXONITEM WITH(NOLOCK)

        SELECT
            [RECID],
            [CUSTOMSPRACTICE_FI],
            [INCLUDEDTAX_BR],
            [NEGATIVETAX],
            [NOTEUSALESLIST],
            [PAYMENTTAXCODE],
            [PRINTCODE],
            [REPFIELDBASEINCOMING],
            [REPFIELDBASEINCOMINGCREDITNOTE],
            [REPFIELDBASEOUTGOING],
            [REPFIELDBASEOUTGOINGCREDITNOTE],
            [REPFIELDBASEUSETAX],
            [REPFIELDBASEUSETAXCREDITNOTE],
            [REPFIELDBASEUSETAXOFFSET],
            [REPFIELDBASEUSETAXOFFSETCREDITNOTE],
            [REPFIELDTAXFREEBUY],
            [REPFIELDTAXFREEBUYCREDITNOTE],
            [REPFIELDTAXFREESALES],
            [REPFIELDTAXFREESALESCREDITNOTE],
            [REPFIELDTAXINCOMING],
            [REPFIELDTAXINCOMINGCREDITNOTE],
            [REPFIELDTAXOUTGOING],
            [REPFIELDTAXOUTGOINGCREDITNOTE],
            [REPFIELDUSETAX],
            [REPFIELDUSETAXCREDITNOTE],
            [REPFIELDUSETAXOFFSET],
            [REPFIELDUSETAXOFFSETCREDITNOTE],
            [RETAINEDTAX_BR],
            [REVENUECODE_BR],
            [TAXACCOUNTGROUP],
            [TAXATIONCODETABLE_BR],
            [TAXBASE],
            [TAXBORDERNUMREQ_FI],
            [TAXCALCMETHOD],
            [TAXCODE],
            [TAXCOMPONENTTABLE_IN],
            [TAXCOUNTRYREGIONTYPE],
            [TAXCURRENCYCODE],
            [TAXINCLUDEINTAX],
            [TAXJURISDICTIONCODE],
            [TAXLIMITBASE],
            [TAXNAME],
            [TAXONTAX],
            [TAXPACKAGINGSORT],
            [TAXPACKAGINGTAX],
            [TAXPERIOD],
            [TAXPURCHASETAX],
            [TAXROUNDOFF],
            [TAXROUNDOFFTYPE],
            [TAXSUBSTITUTION_BR],
            [TAXTYPE_BR],
            [TAXTYPE_IN],
            [TAXTYPE_SG],
            [TAXUNIT],
            [TAXWRITESELECTION],
            [UNREALIZEDTAX],
            [DATAAREAID],
            [ROWVERSION]
        FROM [ax].TAXTABLE WITH(NOLOCK)

        RETURN
    END
END;
GO
PRINT N'Creating [crt].[GETREFINERVALUESFORKEYWORDSEARCH]...';


GO

CREATE PROCEDURE [crt].[GETREFINERVALUESFORKEYWORDSEARCH]
(
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @nvc_SearchCondition        NVARCHAR(4000),
    @nvc_LanguageId             NVARCHAR(7),
    @nvc_Locale                 NVARCHAR(7)
)
AS
BEGIN
    DECLARE @tvp_ProductIds [crt].RECORDIDTABLETYPE
    DECLARE @tvp_DummyId    [crt].RECORDIDTABLETYPE
    DECLARE @tvp_Refiners   [crt].PRODUCTREFINERTABLETYPE
    DECLARE @tvp_Settings   [crt].QUERYRESULTSETTINGSTABLETYPE

    -- No paging while retrieving product ids because refiners are calculated over the entire span of result set
    INSERT INTO @tvp_Settings VALUES(0, 0, 0, '', 0)

    -- Insert dummy record to satisfy API contract
    INSERT INTO @tvp_DummyId VALUES (0)

    -- Get product ids matching keyword search criteria
    INSERT INTO @tvp_ProductIds(RECID)
    SELECT RECID
    FROM [crt].[FINDPRODUCTSBYKEYWORD](@tvp_Settings, @bi_ChannelId, @dt_ChannelDate, @nvc_SearchCondition, @nvc_LanguageId)

    -- Get refiner information
    INSERT INTO @tvp_Refiners
    OUTPUT inserted.RECID, inserted.SOURCE, inserted.KEYNAME, inserted.DATATYPE, inserted.DISPLAYOPTION, inserted.DISPLAYTEMPLATE, inserted.THRESHOLDVALUE
    SELECT
        [gpr].RECID,
        [gpr].SOURCE,
        [gpr].KEYNAME,
        [gpr].DATATYPE,
        [gpr].DISPLAYOPTION,
        [gpr].DISPLAYTEMPLATE,
        [gpr].THRESHOLDVALUE
    FROM [crt].GETPRODUCTREFINERS(@bi_ChannelId, 0 /* @bi_CatalogId */, @dt_ChannelDate, @nvc_Locale, @tvp_ProductIds, @tvp_DummyId) gpr

    -- Get refiner values using product ids
    SELECT
        [gprv].RECID,
        [gprv].REFINERSOURCE,
        [gprv].DATATYPE,
        [gprv].VALUE,
        [gprv].UNIT
    FROM [crt].GETPRODUCTREFINERVALUES(@bi_ChannelId, 0 /* @bi_CatalogId */, @dt_ChannelDate, @nvc_Locale, @tvp_ProductIds, @tvp_Refiners, @tvp_DummyId) gprv
END;
GO
PRINT N'Creating [crt].[GETLISTINGSBYCOMPOSITEIDS]...';


GO

CREATE PROCEDURE [crt].[GETLISTINGSBYCOMPOSITEIDS]
    @bi_ChannelId BIGINT,
    @bi_CatalogId BIGINT,
	@tvp_ProductIds [crt].[RECORDIDLANGUAGETABLETYPE] READONLY

AS
BEGIN
    SET NOCOUNT ON

	SELECT c.LISTINGRECID, c.LANGUAGEID, c.LISTID
	FROM [crt].[CATALOGLISTMAPPING] AS C
	INNER JOIN @tvp_ProductIds ids on ids.RECID = C.LISTINGRECID AND ids.LANGUAGEID = c.LANGUAGEID
	WHERE CHANNELID = @bi_ChannelId
	AND CATALOGID = @bi_CatalogId

END;
GO
PRINT N'Creating [crt].[GETREFINERVALUESBYCATEGORYID]...';


GO

CREATE PROCEDURE [crt].[GETREFINERVALUESBYCATEGORYID]
(
    @tvp_QueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE READONLY,
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_Locale              NVARCHAR(7),
    @bi_CategoryId           BIGINT,
    @bi_RefinerId            BIGINT,
    @i_RefinerSource         INT
)
AS
BEGIN
    DECLARE @tvp_ProductSearchResultIds [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId                [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_Refiners               [crt].[PRODUCTREFINERTABLETYPE]

    INSERT INTO @tvp_Refiners VALUES (@bi_RefinerId, @i_RefinerSource, NULL, 0, 0, 0, NULL)
    
    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT
        [prods].PRODUCTID AS RECID
    FROM [crt].GETPRODUCTIDSBYCATEGORYID(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @bi_CategoryId) prods

    -- Adding variants so their refiners can also be used.
    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT
        [erdpv].RECID AS RECID
    FROM @tvp_ProductSearchResultIds prods
    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].PRODUCTMASTER = [prods].RECID
    WHERE EXISTS
        (
            SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
            WHERE [apv].PRODUCTID = [erdpv].RECID AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
        )

    IF @i_RefinerSource = 1  -- Attribute refiner
    BEGIN
        DECLARE @tvp_ProductAttributes [crt].[PRODUCTATTRIBUTEVALUETABLETYPE]
        INSERT INTO @tvp_ProductAttributes
        SELECT
            [gpav].ATTRIBUTE,
            [gpav].BOOLEANVALUE,
            [gpav].CURRENCYCODE,
            [gpav].CURRENCYVALUE,
            [gpav].DATETIMEVALUE,
            [gpav].DATETIMEVALUETZID,
            [gpav].FLOATUNITSYMBOL,
            [gpav].FLOATVALUE,
            [gpav].INTUNITSYMBOL,
            [gpav].INTVALUE,
            [gpav].TEXTVALUE,
            [gpav].LANGUAGE,
            [gpav].TRANSLATION
        FROM [crt].GETPRODUCTATTRIBUTEVALUES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, @tvp_ProductSearchResultIds, @tvp_DummyId) AS gpav
        INNER JOIN @tvp_Refiners refiners ON [refiners].SOURCE = 1  /* Attribute refiners */ AND [refiners].RECID = [gpav].ATTRIBUTE

        SELECT
            [gprv].RECID,
            [gprv].REFINERSOURCE,
            [gprv].DATATYPE,
            [gprv].LEFTBOUNDVALUE,
            [gprv].RIGHTBOUNDVALUE,
            [gprv].UNIT
        FROM [crt].CONVERTATTRIBUTEVALUESTOREFINERVALUES(@bi_ChannelId, @nvc_Locale, @bi_RefinerId, @i_RefinerSource, @tvp_ProductAttributes) gprv
        ORDER BY 4  -- LEFTBOUNDVALUE
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
    END
    ELSE IF @i_RefinerSource = 2  -- Category refiner
    BEGIN
        SELECT DISTINCT
            0 AS RECID,
            2 AS REFINERSOURCE,  -- Category
            5 AS DATATYPE,  -- Category is always string datatype
            CASE
                WHEN [rperct].LANGUAGEID = @nvc_Locale THEN [rperct].FRIENDLYNAME
                ELSE [rperct].SEARCHTEXT
            END AS LEFTBOUNDVALUE,
            CASE
                WHEN [rperct].LANGUAGEID = @nvc_Locale THEN [rperct].FRIENDLYNAME
                ELSE [rperct].SEARCHTEXT
            END AS RIGHTBOUNDVALUE,
            NULL AS UNIT
        FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_ProductIdsPassed */, @tvp_ProductSearchResultIds, 0 /* @b_CategoryIdsPassed */, @tvp_DummyId) gpc
        INNER JOIN [ax].RETAILPUBECORESCATEGORYTRANSLATION rperct ON [rperct].CATEGORY = [gpc].CATEGORY
        ORDER BY 4  -- LEFTBOUNDVALUE
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
    END
    ELSE IF @i_RefinerSource = 3  -- Price refiner
    BEGIN
        SELECT
            0 AS RECID,
            3 AS REFINERSOURCE,  -- Price
            1 AS DATATYPE,  -- Currency
            CONVERT(nvarchar(1999), MIN(PRICE)) LEFTBOUNDVALUE,
            CONVERT(nvarchar(1999), MAX(PRICE)) RIGHTBOUNDVALUE,
            [rct].CURRENCY AS UNIT
        FROM [crt].[GETREFINERPRICES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductSearchResultIds) grp
        INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
        GROUP BY [rct].CURRENCY
        ORDER BY 4  -- LEFTBOUNDVALUE
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
    END

END
GO
PRINT N'Creating [crt].[UPSERTOFFLINETRANSACTIONS]...';


GO

-- Dynamically upserts transaction xml data into database
CREATE PROCEDURE [crt].[UPSERTOFFLINETRANSACTIONS]
    @offlineTransactions XML
AS
BEGIN
BEGIN TRANSACTION;

DECLARE tbl_cursor CURSOR
FOR
    SELECT DISTINCT r.value('fn:local-name(.)', 'nvarchar(50)') AS t
    FROM @offlineTransactions.nodes('//OfflineTransactions/*') AS records(r);

OPEN tbl_cursor;
DECLARE @name nvarchar(50);
DECLARE @cmd nvarchar(max);
FETCH NEXT FROM tbl_cursor INTO @name;
WHILE (@@FETCH_STATUS <> -1)
    BEGIN;
        DECLARE @tblName nvarchar(50);
        DECLARE @schemaName nvarchar(10);
        DECLARE @dividerPos int = CHARINDEX('_', @name);

        SET @tblName = STUFF(@name, 1, @dividerPos, '');
        SET @schemaName = STUFF(@name, @dividerPos, LEN(@name), '');

        SET @cmd = crt.GETMERGEQUERY(@tblName, @schemaName);
        DECLARE @param nvarchar(50) = '@offlineTransactions XML';
        EXECUTE sp_executesql @cmd, @param, @offlineTransactions;
        FETCH NEXT FROM tbl_cursor INTO @name;
    END;
CLOSE tbl_cursor;
DEALLOCATE tbl_cursor;

COMMIT TRANSACTION;
END;
GO
PRINT N'Creating [crt].[INSERTCUSTOMERORDERTRANSACTION]...';


GO

CREATE PROCEDURE [crt].[INSERTCUSTOMERORDERTRANSACTION]
    @bi_channelId           BIGINT,
    @TVP_CUSTOMERORDERTRANS [crt].[CUSTOMERORDERTRANSACTIONTABLETYPE]          READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [crt].CUSTOMERORDERTRANSACTION
    (
	[CHANNEL],
	[STORE],
	[TERMINAL],
	[TRANSACTIONID],
	[DATAAREAID],
	[CANCELLATIONCHARGE],
	[DEPOSITOVERRIDE],
	[REQUIREDDEPOSIT],
	[CALCULATEDDEPOSIT],
	[PREPAYMENTPAID],
	[PREPAYMENTINVOICED],
	[QUOTEEXPIRATIONDATE],
	[CUSTOMERORDERTYPE],
	[CUSTOMERORDERMODE]
    )
    SELECT
	@bi_channelId,
	[STORE],
	[TERMINAL],
	[TRANSACTIONID],
	[DATAAREAID],
	[CANCELLATIONCHARGE],
	[DEPOSITOVERRIDE],
	[REQUIREDDEPOSIT],
	[CALCULATEDDEPOSIT],
	[PREPAYMENTPAID],
	[PREPAYMENTINVOICED],
	[QUOTEEXPIRATIONDATE],
	[CUSTOMERORDERTYPE],
	[CUSTOMERORDERMODE]
    FROM @TVP_CUSTOMERORDERTRANS AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETRECEIPTHEADERTAXINFOINDIA]...';


GO

CREATE PROCEDURE [crt].[GETRECEIPTHEADERTAXINFOINDIA]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT
AS
BEGIN

SET NOCOUNT ON

DECLARE @i_IsPrimary            INT;
SET @i_IsPrimary = 1

SELECT
    vatrn.[REGISTRATIONNUMBER] AS [VALUEADDEDTAXTINNUMBER],
    vatrn.[REGISTRATIONNUMBER] AS [CENTRALSALESTAXTINNUMBER],
    stcrn.[REGISTRATIONNUMBER] AS [SERVICETAXNUMBER],
    eccn.[REGISTRATIONNUMBER] AS [EXCISETAXNUMBER]
FROM [ax].RETAILCHANNELTABLE rct
LEFT OUTER JOIN [ax].INVENTLOCATION il ON rct.INVENTLOCATIONDATAAREAID = il.DATAAREAID AND rct.INVENTLOCATION = il.INVENTLOCATIONID
    LEFT OUTER JOIN [ax].INVENTLOCATIONLOGISTICSLOCATION illl ON il.RECID = illl.INVENTLOCATION AND illl.ISPRIMARY = @i_IsPrimary
        INNER JOIN [ax].LOGISTICSLOCATION ll ON illl.LOCATION = ll.RECID
            LEFT OUTER JOIN [ax].TAXINFORMATION_IN ti_IN ON ll.RECID = ti_IN.REGISTRATIONLOCATION AND ti_IN.ISPRIMARY = @i_IsPrimary
                LEFT OUTER JOIN [ax].TAXREGISTRATIONNUMBERS_IN vatrn ON ti_IN.TIN = vatrn.RECID
                LEFT OUTER JOIN [ax].TAXREGISTRATIONNUMBERS_IN stcrn ON ti_IN.STCREGISTRATIONNUMBERTABLE = stcrn.RECID
                LEFT OUTER JOIN [ax].TAXREGISTRATIONNUMBERS_IN eccn ON ti_IN.ECCNUMBER = eccn.RECID
WHERE (rct.RECID = @bi_ChannelId)
ORDER BY [rct].RECID
OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETLOCALIZEDREPORTSTRINGS]...';


GO

CREATE PROCEDURE [crt].[GETLOCALIZEDREPORTSTRINGS]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId       BIGINT,
    @nvc_LocaleCode     NVARCHAR(10)
AS
BEGIN
    SET NOCOUNT ON
    DECLARE @ORDERBY    NVARCHAR(60);
    DECLARE @ASCENDING  BIT;
    DECLARE @SKIP       BIGINT;
    DECLARE @TOP        BIGINT;

    SELECT @SKIP = [SKIP], @TOP = [TOP], @ORDERBY = ORDERBY
    FROM @tvp_QueryResultSettings

    SELECT
        STRINGID,
        STRINGVALUE
    FROM [crt].RETAILREPORTLOCALIZEDSTRINGVIEW WITH (NOLOCK)
    WHERE LOCALECODE = @nvc_LocaleCode
	ORDER BY 
	CASE 
	    WHEN @ORDERBY='STRINGVALUE' THEN STRINGVALUE
	    ELSE STRINGID 
    END
	OFFSET @SKIP ROWS
	FETCH NEXT @TOP ROWS ONLY
END
GO
PRINT N'Creating [crt].[GETREPORTCONFIGURATION]...';


GO

CREATE PROCEDURE [crt].[GETREPORTCONFIGURATION]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId           BIGINT,
    @nvc_UserId            NVARCHAR(25)
AS
BEGIN
    SET NOCOUNT ON

--Get the reports based on job permission group.
SELECT DISTINCT
    RCP.REPORTID AS REPORTID,
    RCP.REPORTDEFINITIONXML AS REPORTDEFINITIONXML,
	RST.STAFFID
    FROM [ax].HCMWORKER HW WITH (NOLOCK)
	INNER JOIN [ax].HCMPOSITIONWORKERASSIGNMENT PWA WITH (NOLOCK) ON PWA.WORKER = HW.RECID
	INNER JOIN [ax].HCMPOSITION POS WITH (NOLOCK) ON POS.RECID = PWA.POSITION
	INNER JOIN [ax].HCMPOSITIONDETAIL PD WITH (NOLOCK) ON PD.POSITION = POS.RECID
	INNER JOIN [ax].HCMJOB HJ WITH (NOLOCK) ON HJ.RECID = PD.JOB
	INNER JOIN [ax].RETAILJOBPOSPERMISSIONGROUP JP WITH (NOLOCK) ON JP.JOB = HJ.RECID
	INNER JOIN [ax].RETAILPOSPERMISSIONGROUP PG WITH (NOLOCK) ON PG.RECID = JP.RETAILPOSPERMISSIONGROUP
	INNER JOIN [crt].RETAILCHANNELREPORTVIEW RCP WITH (NOLOCK) ON RCP.POSPERMISSIONGROUPID = PG.POSPERMISSIONGROUPID
	INNER JOIN [ax].RETAILSTAFFTABLE RST WITH (NOLOCK) ON RST.STAFFID = HW.PERSONNELNUMBER
    WHERE RST.STAFFID = @nvc_UserId
union

--Get the reports based on override permission group if any.
SELECT DISTINCT
    RCP.REPORTID AS REPORTID,
    RCP.REPORTDEFINITIONXML AS REPORTDEFINITIONXML,
	RST.STAFFID
	FROM [ax].HCMWORKER HW WITH (NOLOCK)
	INNER JOIN [ax].HCMPOSITIONWORKERASSIGNMENT PWA WITH (NOLOCK) ON PWA.WORKER = HW.RECID
	INNER JOIN [ax].HCMPOSITION POS WITH (NOLOCK) ON POS.RECID = PWA.POSITION
	INNER JOIN [ax].RETAILPOSITIONPOSPERMISSION RPOS WITH (NOLOCK)  ON RPOS.POSITION = POS.RECID 
	INNER JOIN [ax].RETAILPOSPERMISSIONGROUP PG WITH (NOLOCK) ON PG.RECID = RPOS.POSPERMISSIONGROUP
	INNER JOIN [crt].RETAILCHANNELREPORTVIEW RCP WITH (NOLOCK) ON RCP.POSPERMISSIONGROUPID = PG.POSPERMISSIONGROUPID
	INNER JOIN [ax].RETAILSTAFFTABLE RST WITH (NOLOCK) ON RST.STAFFID = HW.PERSONNELNUMBER
    WHERE RST.STAFFID = @nvc_UserId

END;
GO
PRINT N'Creating [crt].[CREATEUPDATECUSTOMERADDRESS]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATECUSTOMERADDRESS]
    @nvc_DataAreaId NVARCHAR(10),
    @TVP_CUSTOMERADDRESSTABLETYPE   [crt].CUSTOMERADDRESSTABLETYPE   READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                       INT;
    DECLARE @i_TransactionIsOurs                INT;
    DECLARE @i_Error                            INT;
    DECLARE @i_Rowcount                         INT;
    DECLARE @i_SortOrder                        INT;
    DECLARE @i_AddressCount                     INT;
    DECLARE @dtt_ChangeDateTime                 DATETIME;
    DECLARE @dtt_NeverExpiresDateTime           DATETIME;
    DECLARE @bi_IdToDelete                      BIGINT;
    DECLARE @i_DeactivateFlag                   INT;
    DECLARE @bi_logisticsPostalAddressRecId     BIGINT;
    DECLARE @bi_dirPartyLocationRecId           BIGINT;
    DECLARE @nvc_TaxGroup                       NVARCHAR(10);
    DECLARE @tvp_CustomerAddressCursor           [crt].CUSTOMERADDRESSTABLETYPE;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SET @i_TransactionIsOurs = 1;

    END

    SET @dtt_ChangeDateTime = GETUTCDATE();
    SET @dtt_NeverExpiresDateTime = [crt].GETMAXAXDATETIME();

    SELECT @i_SortOrder = 0;
    SELECT @i_AddressCount = (SELECT COUNT(ADDRESSTYPE) FROM @TVP_CUSTOMERADDRESSTABLETYPE)

    WHILE @i_SortOrder < @i_AddressCount
    BEGIN
        SELECT @i_SortOrder = @i_SortOrder + 1;

        DELETE FROM @tvp_CustomerAddressCursor;
        INSERT @tvp_CustomerAddressCursor 
		SELECT
			 RECORDID                           
			,ADDRESSTYPE                         
			,NAME                               
			,FULLADDRESS                        
			,STREETNUMBER                       
			,STREET                             
			,POSTBOX                            
			,BUILDINGCOMPLIMENT                 
			,CITY                               
			,COUNTY                             
			,DISTRICTNAME                       
			,[STATE]                            
			,ZIPCODE                            
			,THREELETTERISOREGIONNAME           
			,ISPRIMARY                          
			,ISPRIVATE                          
			,DIRPARTYRECORDID                   
			,DIRPARTYLOCATIONRECORDID           
			,DIRPARTYLOCATIONROLERECORDID       
			,LOCATIONDESCRIPTION                
			,LOCATOR                            
			,LOGISTICSLOCATIONID                
			,LOGISTICSLOCATIONRECORDID          
			,TAXGROUP                           
			,DEACTIVATE                         
			,SORTORDER
			,EXPIRERECORDID                          
			,LOGISTICSLOCATIONROLERECORDID      
			,LOGISTICSLOCATIONEXTRECORDID       
		FROM @TVP_CUSTOMERADDRESSTABLETYPE WHERE SORTORDER = @i_SortOrder;

        SELECT @i_DeactivateFlag = SOURCE.DEACTIVATE FROM @tvp_CustomerAddressCursor AS SOURCE

        -- WE ARE NOT DEACTIVATING THIS ADDRESS
        IF (@i_DeactivateFlag = 0)
        BEGIN
            -- DELETE THE LOCATIONEXTENSIONS ASSOCIATED WITH THIS LOCATION
            SELECT @bi_IdToDelete = SOURCE.LOGISTICSLOCATIONRECORDID FROM @tvp_CustomerAddressCursor SOURCE;
            DELETE FROM [ax].LOGISTICSLOCATIONEXT WHERE LOCATION = @bi_IdToDelete;

            -- UPSERT INTO LOGISTICSLOCATIONEXT
            SELECT @nvc_TaxGroup = COALESCE(TAXGROUP,'') FROM @tvp_CustomerAddressCursor;

            IF (@nvc_TaxGroup <> '')
            BEGIN
                IF (EXISTS (SELECT RECORDID FROM @tvp_CustomerAddressCursor WHERE LOGISTICSLOCATIONEXTRECORDID > 0))
                BEGIN
                    MERGE INTO [ax].LOGISTICSLOCATIONEXT
                    USING @tvp_CustomerAddressCursor AS SOURCE
                    ON
                        [ax].LOGISTICSLOCATIONEXT.RECID = SOURCE.LOGISTICSLOCATIONEXTRECORDID
                    WHEN MATCHED THEN
                        UPDATE
                        SET
                             LOCATION               = SOURCE.LOGISTICSLOCATIONRECORDID
                            ,TAXGROUP               = SOURCE.TAXGROUP

                    WHEN NOT MATCHED THEN
                        INSERT
                        (
                            RECID
                            ,LOCATION
                            ,TAXGROUP
                            ,DATAAREAID
                        )
                        VALUES
                        (
                            SOURCE.LOGISTICSLOCATIONEXTRECORDID
                            ,SOURCE.LOGISTICSLOCATIONRECORDID
                            ,SOURCE.TAXGROUP
                            ,@nvc_DataAreaId
                        );

                    SELECT @i_Error = @@ERROR;
                    IF @i_Error <> 0
                    BEGIN
                        SET @i_ReturnCode = @i_Error;
                        GOTO exit_label;
                    END;
                END;
            END;

            IF (EXISTS (SELECT RECORDID FROM @tvp_CustomerAddressCursor WHERE LOGISTICSLOCATIONRECORDID > 0))
            BEGIN
                -- UPSERT INTO LOGISTICSLOCATION
                MERGE INTO [ax].LOGISTICSLOCATION
                USING (SELECT DISTINCT LOGISTICSLOCATIONRECORDID, LOGISTICSLOCATIONID, NAME 
						FROM @tvp_CustomerAddressCursor
						WHERE LOGISTICSLOCATIONRECORDID > 0) AS SOURCE
                ON
                    [ax].LOGISTICSLOCATION.RECID = SOURCE.LOGISTICSLOCATIONRECORDID

                WHEN MATCHED THEN
                    UPDATE
                    SET
                         ISPOSTALADDRESS            = 1
                        ,DESCRIPTION                = SOURCE.NAME
                        ,MODIFIEDDATETIME            = @dtt_ChangeDateTime

                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        RECID
                        ,LOCATIONID
                        ,DESCRIPTION
                        ,ISPOSTALADDRESS
                        ,MODIFIEDDATETIME
                        ,CREATEDDATETIME
                    )
                    VALUES
                    (
                        SOURCE.LOGISTICSLOCATIONRECORDID
                        ,SOURCE.LOGISTICSLOCATIONID
                        ,SOURCE.NAME
                        ,1
                        ,@dtt_ChangeDateTime
                        ,@dtt_ChangeDateTime
                    );

                SELECT @i_Error = @@ERROR;
                IF @i_Error <> 0
                BEGIN
                    SET @i_ReturnCode = @i_Error;
                    GOTO exit_label;
                END;
            END;

            IF (EXISTS (SELECT SOURCE.RECORDID FROM @tvp_CustomerAddressCursor AS SOURCE WHERE SOURCE.RECORDID>0 AND SOURCE.LOGISTICSLOCATIONRECORDID>0))
            BEGIN

                --EXPIRE ANY ADDRESSES THAT GOT UPDATED

                MERGE INTO [ax].LOGISTICSPOSTALADDRESS
                USING @tvp_CustomerAddressCursor AS SOURCE
                ON
                    [ax].LOGISTICSPOSTALADDRESS.RECID = SOURCE.EXPIRERECORDID
                    AND [ax].LOGISTICSPOSTALADDRESS.RECID != SOURCE.RECORDID
                WHEN MATCHED THEN
                UPDATE
                SET
                    MODIFIEDDATETIME    = @dtt_ChangeDateTime
                    ,VALIDTO            = DATEADD(S, -1, @dtt_ChangeDateTime);

                --INSERT INTO LOGISTICSPOSTALADDRESS
                MERGE INTO [ax].LOGISTICSPOSTALADDRESS
                USING @tvp_CustomerAddressCursor AS SOURCE
                ON
                    [ax].LOGISTICSPOSTALADDRESS.RECID = SOURCE.RECORDID
                WHEN MATCHED THEN
                UPDATE
                SET
                         ADDRESS = SOURCE.FULLADDRESS
                        ,STREET = SOURCE.STREET
                        ,CITY = SOURCE.CITY
                        ,COUNTY = SOURCE.COUNTY
                        ,[STATE] = SOURCE.[STATE]
                        ,COUNTRYREGIONID = SOURCE.THREELETTERISOREGIONNAME
                        ,ZIPCODE = SOURCE.ZIPCODE
                        ,BUILDINGCOMPLIMENT = SOURCE.BUILDINGCOMPLIMENT
                        ,STREETNUMBER = SOURCE.STREETNUMBER
                        ,DISTRICTNAME = SOURCE.DISTRICTNAME
                        ,POSTBOX = SOURCE.POSTBOX
                        ,ISPRIVATE = SOURCE.ISPRIVATE
                        ,MODIFIEDDATETIME    = @dtt_ChangeDateTime

                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        RECID
                        ,LOCATION
                        ,ADDRESS
                        ,STREET
                        ,CITY
                        ,COUNTY
                        ,[STATE]
                        ,COUNTRYREGIONID
                        ,ZIPCODE
                        ,BUILDINGCOMPLIMENT
                        ,STREETNUMBER
                        ,DISTRICTNAME
                        ,POSTBOX
                        ,ISPRIVATE
                        ,MODIFIEDDATETIME
                        ,VALIDFROM
                        ,VALIDTO
                    )
                  VALUES
                    (
                        SOURCE.RECORDID
                        ,SOURCE.LOGISTICSLOCATIONRECORDID
                        ,SOURCE.FULLADDRESS
                        ,SOURCE.STREET
                        ,SOURCE.CITY
                        ,SOURCE.COUNTY
                        ,SOURCE.[STATE]
                        ,SOURCE.THREELETTERISOREGIONNAME
                        ,SOURCE.ZIPCODE
                        ,SOURCE.BUILDINGCOMPLIMENT
                        ,SOURCE.STREETNUMBER
                        ,SOURCE.DISTRICTNAME
                        ,SOURCE.POSTBOX
                        ,0
                        ,@dtt_ChangeDateTime
                        ,@dtt_ChangeDateTime
                        ,@dtt_NeverExpiresDateTime
                    );

                SELECT @i_Error = @@ERROR;
                IF @i_Error <> 0
                BEGIN
                    SET @i_ReturnCode = @i_Error;
                    GOTO exit_label;
                END;
            END;

            IF (EXISTS (SELECT RECORDID FROM @tvp_CustomerAddressCursor WHERE DIRPARTYLOCATIONRECORDID > 0))
            BEGIN
                -- UPSERT INTO THE DIRPARTYLOCATION
                MERGE INTO [ax].DIRPARTYLOCATION
                USING (SELECT DISTINCT DIRPARTYLOCATIONRECORDID, DIRPARTYRECORDID, LOGISTICSLOCATIONRECORDID, ISPRIMARY 
						FROM @tvp_CustomerAddressCursor
						WHERE DIRPARTYLOCATIONRECORDID != 0) AS SOURCE
                ON
                    [ax].DIRPARTYLOCATION.RECID = SOURCE.DIRPARTYLOCATIONRECORDID
                WHEN MATCHED THEN
                    UPDATE
                    SET
                         PARTY              = SOURCE.DIRPARTYRECORDID
                        ,LOCATION           = SOURCE.LOGISTICSLOCATIONRECORDID
                        ,ISPOSTALADDRESS    = 1 -- ALWAYS TRUE
                        ,ISPRIMARY          = SOURCE.ISPRIMARY
                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        RECID
                        ,PARTY
                        ,LOCATION
                        ,ISPOSTALADDRESS
                        ,ISPRIMARY
                    )
                    VALUES
                    (
                        SOURCE.DIRPARTYLOCATIONRECORDID
                        ,SOURCE.DIRPARTYRECORDID
                        ,SOURCE.LOGISTICSLOCATIONRECORDID
                        ,1
                        ,SOURCE.ISPRIMARY
                    );

                SELECT @i_Error = @@ERROR;
                IF @i_Error <> 0
                BEGIN
                    SET @i_ReturnCode = @i_Error;
                    GOTO exit_label;
                END;
            END;

            IF (EXISTS (SELECT SOURCE.RECORDID FROM @tvp_CustomerAddressCursor AS SOURCE WHERE SOURCE.DIRPARTYLOCATIONROLERECORDID>0))
            BEGIN
                -- UPSERT INTO THE DIR PARTY LOCATION ROLE
                MERGE INTO [ax].DIRPARTYLOCATIONROLE
                USING @tvp_CustomerAddressCursor AS SOURCE
                ON
                    [ax].DIRPARTYLOCATIONROLE.RECID = SOURCE.DIRPARTYLOCATIONROLERECORDID
                WHEN MATCHED THEN
                    UPDATE
                    SET
                         PARTYLOCATION      = SOURCE.DIRPARTYLOCATIONRECORDID
                        ,LOCATIONROLE       = SOURCE.LOGISTICSLOCATIONROLERECORDID

                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        RECID
                        ,PARTYLOCATION
                        ,LOCATIONROLE
                    )
                    VALUES
                    (
                        SOURCE.DIRPARTYLOCATIONROLERECORDID
                        ,SOURCE.DIRPARTYLOCATIONRECORDID
                        ,SOURCE.LOGISTICSLOCATIONROLERECORDID
                    );

                SELECT @i_Error = @@ERROR;
                IF @i_Error <> 0
                BEGIN
                    SET @i_ReturnCode = @i_Error;
                    GOTO exit_label;
                END;
            END;

        END
        ELSE
        BEGIN
            -- DEACTIVATE THIS ADDRESS IF DEACTIVATE == 1
            SELECT
                @bi_logisticsPostalAddressRecId = SOURCE.RECORDID
                --@bi_dirPartyLocationRecId = SOURCE.DIRPARTYLOCATIONRECORDID
            FROM @tvp_CustomerAddressCursor AS SOURCE

            UPDATE [ax].LOGISTICSPOSTALADDRESS SET VALIDTO=@dtt_ChangeDateTime WHERE RECID=@bi_logisticsPostalAddressRecId;

            SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;
            IF @i_Error <> 0
            BEGIN
                SET @i_ReturnCode = @i_Error;
                GOTO exit_label;
            END;
            IF @i_Rowcount = 0
            BEGIN
                SET @i_ReturnCode = -1;
                GOTO exit_label;
            END;
        END;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[CREATEUPDATERETAILSTOCKCOUNTJOURNALS]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATERETAILSTOCKCOUNTJOURNALS]
    @bi_ChannelId                   BIGINT,
    @TVP_RetailStockCountJournal    [crt].[RETAILSTOCKCOUNTJOURNALSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;


    -- UPSERT INTO THE RETAILSTOCKCOUNTJOURNALS
    MERGE INTO [crt].[RETAILSTOCKCOUNTJOURNALS]
    USING @TVP_RetailStockCountJournal AS SOURCE
    ON
        RETAILSTOCKCOUNTJOURNALS.JOURNALID = SOURCE.JOURNALID
    WHEN MATCHED THEN
        UPDATE
        SET
            RECID = SOURCE.RECID,
            DESCRIPTION = SOURCE.DESCRIPTION
    WHEN NOT MATCHED THEN
        INSERT
        (
            [RECID],
            [JOURNALID],
            [DESCRIPTION]
        )
        VALUES
        (
            SOURCE.RECID,
            SOURCE.JOURNALID,
            SOURCE.DESCRIPTION
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;


    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETRETAILINCOMEEXPENSEACCOUNTS]...';


GO

/**************************************************************************************************************************************
    GETRETAILINCOMEEXPENSEACCOUNTS retrieves the income and expense account numbers for the given storeId, dataareaid and accounttype.
***************************************************************************************************************************************/

CREATE PROCEDURE [crt].[GETRETAILINCOMEEXPENSEACCOUNTS]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_StoreId		NVARCHAR(10),
    @nvc_DataAreaId		NVARCHAR(4),
	@i_AccountType		INT
AS
BEGIN

    SET NOCOUNT ON

    SELECT
        RIEA.ACCOUNTNUM AS 'AccountNumber'
	   ,RIEA.NAME AS 'AccountName'
	   ,RIEA.NAMEALIAS AS 'AccountNameAlias'
	   ,RIEA.MESSAGELINE1
	   ,RIEA.MESSAGELINE2
	   ,RIEA.SLIPTEXT1
	   ,RIEA.SLIPTEXT2
	   ,RIEA.ACCOUNTTYPE
    FROM [ax].RETAILINCOMEEXPENSEACCOUNTTABLE RIEA
    WHERE
        RIEA.DATAAREAID=@nvc_DataAreaId AND RIEA.STOREID=@nvc_StoreId AND RIEA.ACCOUNTTYPE = @i_AccountType

END;
GO
PRINT N'Creating [crt].[UPSERTSHIFTUSERSSTAGING]...';


GO

CREATE PROCEDURE [crt].[UPSERTSHIFTUSERSSTAGING]
    @TVP_SHIFTTABLETYPE     [crt].[SHIFTTABLETYPE] READONLY
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_RowCount             INT;
    DECLARE @i_Error                INT;

    DECLARE @bi_ChannelId           [BIGINT];
    DECLARE @nvc_TerminalId         [NVARCHAR](10);
    DECLARE @bi_ShiftId             [BIGINT];
    DECLARE @rv_RowVersion          ROWVERSION;

    DECLARE @tvp_TempShiftTable     TABLE
    (
        [CHANNEL] [bigint] NOT NULL,
        [TERMINALID] [nvarchar](10) NOT NULL,
        [ORIGINALTERMINALID] [nvarchar](10) NOT NULL,
        [SHIFTID] [bigint] NOT NULL,
        [STAFFID] [nvarchar](25) NOT NULL,
        [DATAAREAID] [nvarchar](4) NOT NULL
    );

    -- gets all non-opened shifts and delete them from used shift staging table
    INSERT INTO @tvp_TempShiftTable
        SELECT [CHANNEL], [CURRENTTERMINALID], [TERMINALID], [SHIFTID], ISNULL([CURRENTSTAFFID], [STAFFID]), [DATAAREAID]
        FROM @TVP_SHIFTTABLETYPE WHERE ISNULL([STATUS], 1) <> 1;

    SELECT @i_RowCount = COUNT([SHIFTID]) FROM @tvp_TempShiftTable;

    IF (@i_RowCount > 0)
    BEGIN
        SET @i_RowCount = 0;

        -- delete shifts
        SELECT @bi_ChannelId = [CHANNEL], @nvc_TerminalId = [ORIGINALTERMINALID], @bi_ShiftId = [SHIFTID]
        FROM @tvp_TempShiftTable

        EXEC @i_Error = [crt].[DELETESHIFTUSERSSTAGING] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, @rv_RowVersion;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            RETURN @i_ReturnCode;
        END;
    END;

    -- clears temp shift table
    DELETE FROM @tvp_TempShiftTable;

    -- gets all remaining shifts
    INSERT INTO @tvp_TempShiftTable
        SELECT [CHANNEL], [CURRENTTERMINALID], [TERMINALID], [SHIFTID], ISNULL([CURRENTSTAFFID], [STAFFID]), [DATAAREAID]
        FROM @TVP_SHIFTTABLETYPE WHERE ISNULL([STATUS], 0) = 1;

    SELECT @i_RowCount = COUNT([SHIFTID]) FROM @tvp_TempShiftTable;

    IF (@i_RowCount > 0)
    BEGIN
        -- upserts into used shifts staging table
        MERGE [crt].[RETAILSHIFTUSERSSTAGINGTABLE]
        USING @tvp_TempShiftTable AS SOURCE
        ON
            RETAILSHIFTUSERSSTAGINGTABLE.[SHIFTID] = SOURCE.[SHIFTID] AND
            RETAILSHIFTUSERSSTAGINGTABLE.[CHANNEL] = SOURCE.[CHANNEL] AND
            RETAILSHIFTUSERSSTAGINGTABLE.[STAFFID] = SOURCE.[STAFFID] AND
            RETAILSHIFTUSERSSTAGINGTABLE.[ORIGINALTERMINALID] = SOURCE.[ORIGINALTERMINALID] AND
            RETAILSHIFTUSERSSTAGINGTABLE.[TERMINALID] = SOURCE.[TERMINALID] AND
            RETAILSHIFTUSERSSTAGINGTABLE.[DATAAREAID] = SOURCE.[DATAAREAID]
        WHEN MATCHED THEN
        UPDATE SET
            [TERMINALID]                        = SOURCE.[TERMINALID],
            [STAFFID]                           = SOURCE.[STAFFID]
        WHEN NOT MATCHED THEN
        INSERT
        (
            CHANNEL
            ,TERMINALID
            ,ORIGINALTERMINALID
            ,SHIFTID
            ,STAFFID
            ,DATAAREAID
        )
        VALUES
        (
            SOURCE.[CHANNEL]
            ,SOURCE.[TERMINALID]
            ,SOURCE.[ORIGINALTERMINALID]
            ,SOURCE.[SHIFTID]
            ,SOURCE.[STAFFID]
            ,SOURCE.[DATAAREAID]
        );

        SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            RETURN @i_ReturnCode;
        END;
    END;
    ELSE
    BEGIN
        SET @i_RowCount = -1;
    END;

    -- If no rows were changed, there was a problem updating (mostly because of row version)
    IF (@i_RowCount = 0)
    BEGIN
        SET @i_ReturnCode = [crt].fn_kErrorVersionMismatchError();
        RETURN @i_ReturnCode;
    END;

END;
GO
PRINT N'Creating [crt].[CREATEUPDATERETAILSTOCKCOUNT]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATERETAILSTOCKCOUNT]
    @bi_ChannelId                   BIGINT,
    @TVP_RetailStockCount           [crt].[RETAILSTOCKCOUNTTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;


    -- UPSERT INTO THE RETAILSTOCKCOUNT
    MERGE INTO [crt].[RETAILSTOCKCOUNT]
    USING @TVP_RetailStockCount AS SOURCE
    ON
        (
            SOURCE.[RECID] > 0 AND
            RETAILSTOCKCOUNT.[RECID] = SOURCE.[RECID]
        ) OR
        (
            SOURCE.[RECID] = 0 AND
            RETAILSTOCKCOUNT.[JOURNALID] = SOURCE.[JOURNALID] AND
            RETAILSTOCKCOUNT.[ITEMID] = SOURCE.[ITEMID] AND
            (SOURCE.[INVENTSIZEID] IS NULL OR RETAILSTOCKCOUNT.[INVENTSIZEID] = SOURCE.[INVENTSIZEID]) AND
            (SOURCE.[INVENTCOLORID] IS NULL OR RETAILSTOCKCOUNT.[INVENTCOLORID] = SOURCE.[INVENTCOLORID]) AND
            (SOURCE.[INVENTSTYLEID] IS NULL OR RETAILSTOCKCOUNT.[INVENTSTYLEID] = SOURCE.[INVENTSTYLEID]) AND
            (SOURCE.[CONFIGID] IS NULL OR RETAILSTOCKCOUNT.[CONFIGID] = SOURCE.[CONFIGID])
        )
    WHEN MATCHED THEN
        UPDATE
        SET
            OPERATIONTYPE = SOURCE.[OPERATIONTYPE]
            ,ITEMNAME = SOURCE.[ITEMNAME]
            ,COUNTED = SOURCE.[COUNTED]
            ,QUANTITY = SOURCE.[QUANTITY]
            ,UNIT = SOURCE.[UNIT]
            ,USERID = SOURCE.[USERID]
            ,TERMINALID = SOURCE.[TERMINALID]
            ,COUNTDATE = SOURCE.[COUNTDATE]
            ,STATUS = SOURCE.[STATUS]
            ,INVENTSIZEID = SOURCE.[INVENTSIZEID]
            ,INVENTCOLORID = SOURCE.[INVENTCOLORID]
            ,INVENTSTYLEID = SOURCE.[INVENTSTYLEID]
            ,CONFIGID = SOURCE.[CONFIGID]
            ,TRACKINGGUID = SOURCE.[TRACKINGGUID]

    WHEN NOT MATCHED THEN
        INSERT
        (
            [RECID],
            [JOURNALID],
            [OPERATIONTYPE],
            [ITEMID],
            [ITEMNAME],
            [COUNTED],
            [QUANTITY],
            [UNIT],
            [USERID],
            [TERMINALID],
            [COUNTDATE],
            [STATUS],
            [INVENTSIZEID],
            [INVENTCOLORID],
            [INVENTSTYLEID],
            [CONFIGID],
            [TRACKINGGUID]
        )
        VALUES
        (
            SOURCE.[RECID],
            SOURCE.[JOURNALID],
            SOURCE.[OPERATIONTYPE],
            SOURCE.[ITEMID],
            SOURCE.[ITEMNAME],
            SOURCE.[COUNTED],
            SOURCE.[QUANTITY],
            SOURCE.[UNIT],
            SOURCE.[USERID],
            SOURCE.[TERMINALID],
            SOURCE.[COUNTDATE],
            SOURCE.[STATUS],
            SOURCE.[INVENTSIZEID],
            SOURCE.[INVENTCOLORID],
            SOURCE.[INVENTSTYLEID],
            SOURCE.[CONFIGID],
            SOURCE.[TRACKINGGUID]
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETLINKEDPRODUCTS]...';


GO

CREATE PROCEDURE [crt].[GETLINKEDPRODUCTS]
    @tvp_QueryResultSettings                    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId       BIGINT,
    @dt_ChannelDate     DATE,
    @tvp_ProductIds     [crt].[RECORDIDTABLETYPE]    READONLY
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @tvp_NormalizedProductIds crt.RECORDIDTABLETYPE
    DECLARE @tvp_LinkedProductIds crt.RECORDIDTABLETYPE

    -- Retrieve the data area for the current channel identifier.
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId

    -- Normalize all input identifiers. That means standalone, product master and variant
    -- identifiers all return the parent product as the lookup identifer.
    INSERT @tvp_NormalizedProductIds (RECID)
    SELECT DISTINCT
        COALESCE(pv2.PRODUCTMASTER, pv.PRODUCTMASTER, ids.RECID) AS 'LOOKUPID'
    FROM @tvp_ProductIds ids
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [ids].RECID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [ids].RECID

    INSERT @tvp_LinkedProductIds (RECID)
    -- Retrieve incoming product identifiers (left side).
    SELECT RECID
    FROM @tvp_NormalizedProductIds
    UNION
    -- Retrieve linked product identifiers (right side).
    SELECT lit.PRODUCT
    FROM @tvp_NormalizedProductIds ids
    INNER JOIN [ax].INVENTTABLE it ON it.PRODUCT = ids.RECID AND it.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].RETAILINVENTLINKEDITEM rili ON rili.ITEMID = it.ITEMID and rili.DATAAREAID = it.DATAAREAID
    INNER JOIN [ax].INVENTTABLE lit ON lit.ITEMID = rili.LINKEDITEMID AND lit.DATAAREAID = rili.DATAAREAID

    -- Retrieve filtered identifiers by assortment.
    SELECT DISTINCT ap.PRODUCTID AS 'PRODUCT', lit.PRODUCT AS 'LINKEDPRODUCT', rili.QTY
    FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0/*b_IsForwardLooking*/, 0/*b_SkipVariantExpansion*/, 1/*b_ProductIdsPassed*/, @tvp_LinkedProductIds) ap
    INNER JOIN [ax].RETAILINVENTLINKEDITEM rili ON rili.ITEMID = ap.ITEMID AND rili.DATAAREAID = @nvc_DataAreaId
    INNER JOIN [ax].INVENTTABLE lit ON lit.ITEMID = rili.LINKEDITEMID AND lit.DATAAREAID = rili.DATAAREAID
    WHERE ap.ISREMOTE = 0 -- Exclude remote products

END;
GO
PRINT N'Creating [crt].[INSERTLOYALTYREWARDPOINTTRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTLOYALTYREWARDPOINTTRANS]
    @bi_ChannelId           BIGINT,
	@TVP_RewardPointTrans   [crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSTABLETYPE] READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS]
    (
		[AFFILIATION],
		[CARDNUMBER],
		[CHANNEL],
		[CUSTACCOUNT],
		[ENTRYDATE],
		[ENTRYTIME],
		[ENTRYTYPE],
		[EXPIRATIONDATE],
		[LINENUM],
		[LOYALTYTIER],
		[RECEIPTID],
		[REWARDPOINT],
		[REWARDPOINTAMOUNTQTY],
		[STAFFID],
		[STOREID],
		[TERMINALID],
		[TRANSACTIONID],
		[DATAAREAID]
    )
    SELECT
        [AFFILIATION],
		[CARDNUMBER],
		@bi_ChannelId,
		[CUSTACCOUNT],
		[ENTRYDATE],
		[ENTRYTIME],
		[ENTRYTYPE],
		[EXPIRATIONDATE],
		[LINENUM],
		[LOYALTYTIER],
		[RECEIPTID],
		[REWARDPOINT],
		[REWARDPOINTAMOUNTQTY],
		[STAFFID],
		[STOREID],
		[TERMINALID],
		[TRANSACTIONID],
		[DATAAREAID]
    FROM @TVP_RewardPointTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTPAYMENTTRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTPAYMENTTRANS]
    @bi_channelId           BIGINT,
    @TVP_PaymentTrans       [crt].[RETAILTRANSACTIONPAYMENTTRANSTABLETYPE]    READONLY,
    @d_BusinessDate     DATE
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;
    
    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

        -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONPAYMENTTRANS
    (
        [AMOUNTCUR]
        ,[CURRENCY]
        ,[EXCHRATE]
        ,[AMOUNTTENDERED]
        ,[EXCHRATEMST]
        ,[AMOUNTMST]
        ,[DATAAREAID]
        ,[LINENUM]
        ,[PAYMENTCARDTOKEN]
        ,[PAYMENTAUTHORIZATION]
        ,[ISPAYMENTCAPTURED]
        ,[STORE]
        ,[TENDERTYPE]
        ,[TERMINAL]
        ,[STAFF]
        ,[TRANSACTIONID]
        ,[CHANGELINE]
        ,[SIGCAPDATA]
        ,[TRANSACTIONSTATUS]
        ,[RECEIPTID]
        ,[GIFTCARDID]
        ,[ISPREPAYMENT]
        ,[LOYALTYCARDID]
        ,[CARDORACCOUNT]
        ,[CARDTYPEID]
        ,[CREDITVOUCHERID]
        ,[TRANSDATE]
        ,[TRANSTIME]
        ,[QTY]
        ,[CHANNEL]
        ,[BUSINESSDATE]
    )
    SELECT
        [AMOUNTCUR]
        ,[TENDERCUR]
        ,[EXCHRATECUR] * 100.00 -- ePOS behavior
        ,[AMOUNTTENDERED]
        ,[EXCHRATEMST] * 100.00 -- ePOS behavior
        ,[AMOUNTMST]
        ,[DATAAREAID]
        ,[LINENUM]
        ,[PAYMENTCARDTOKEN]
        ,[PAYMENTAUTHORIZATION]
        ,[ISPAYMENTCAPTURED]
        ,[STORE]
        ,[TENDERTYPE]
        ,[TERMINAL]
        ,[STAFF]
        ,[TRANSACTIONID]
        ,[CHANGELINE]
        ,[SIGCAPDATA]
        ,[TRANSACTIONSTATUS]
        ,[RECEIPTID]
        ,[GIFTCARDID]
        ,[ISPREPAYMENT]
        ,[LOYALTYCARDID]
        ,[CARDORACCOUNT]
        ,[CARDTYPEID]
        ,[CREDITVOUCHERID]
        ,CAST([TRANSDATE] AS DATE)
        ,[TRANSTIME]
        ,1.0
        ,@bi_channelId
        ,@d_BusinessDate
    FROM @TVP_PaymentTrans AS Source;


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
    IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[POPULATEMERGEDASSORTMENTRULES]...';


GO
CREATE PROCEDURE [crt].[POPULATEMERGEDASSORTMENTRULES]
AS BEGIN

    DECLARE @i_Sequence BIGINT;
    DECLARE @bi_AssortmentId BIGINT;
    DECLARE @bi_ProductId BIGINT;
    DECLARE @bi_VariantId BIGINT;
    DECLARE @b_LineType INT;
    DECLARE @dt_ValidFrom DATE;
    DECLARE @dt_ValidTo DATE;

    -- Create a temporary table to merge any overlapping dates.
    DECLARE @tbl_WorkingSet TABLE (
        ASSORTMENTID BIGINT NOT NULL,
        PRODUCTID BIGINT NOT NULL,
        VARIANTID BIGINT NOT NULL,
        ITEMID NVARCHAR(20) NOT NULL,
        LINETYPE INT NOT NULL,
        VALIDFROM DATE NOT NULL,
        VALIDTO DATE NOT NULL,
        SEQUENCE BIGINT
    )

    -- Create a temporary table with result set.
    DECLARE @tbl_MergedAssortmentRules TABLE (
        ASSORTMENTID BIGINT NOT NULL,
        PRODUCTID BIGINT NOT NULL,
        VARIANTID BIGINT NOT NULL,
        LINETYPE INT NOT NULL,
        VALIDFROM DATE NOT NULL,
        VALIDTO DATE NOT NULL
    )
    
    INSERT @tbl_WorkingSet (ASSORTMENTID, PRODUCTID, ITEMID, VARIANTID, LINETYPE, VALIDFROM, VALIDTO, SEQUENCE)
    SELECT ral.ASSORTMENTID, ral.PRODUCTID, it.ITEMID, ral.VARIANTID, ral.LINETYPE, ral.VALIDFROM, ral.VALIDTO, NULL
    FROM [ax].RETAILASSORTMENTLOOKUP ral
    INNER JOIN [ax].INVENTTABLE it ON it.PRODUCT = ral.PRODUCTID
    ORDER BY ral.PRODUCTID, ral.VARIANTID, it.ITEMID, ral.LINETYPE, ral.VALIDFROM

    SELECT TOP 1
        @bi_AssortmentId = ASSORTMENTID,
        @i_Sequence = 0,
        @bi_ProductId = PRODUCTID,
        @bi_VariantId = VARIANTID,
        @b_LineType = LINETYPE,
        @dt_ValidFrom = VALIDFROM,
        @dt_ValidTo = VALIDTO
    FROM @tbl_WorkingSet
    ORDER BY ASSORTMENTID, PRODUCTID, VARIANTID, ITEMID, LINETYPE, VALIDFROM

    UPDATE @tbl_WorkingSet
    SET @bi_AssortmentId = ASSORTMENTID,
        @i_Sequence =
        CASE
            WHEN VALIDFROM > @dt_ValidTo THEN @i_Sequence + 1
            WHEN PRODUCTID > @bi_ProductId AND VARIANTID > @bi_VariantId THEN @i_Sequence + 1
            ELSE @i_Sequence
        END,
        @dt_ValidFrom =
        CASE
            WHEN VALIDTO > @dt_ValidTo THEN VALIDFROM
            WHEN PRODUCTID > @bi_ProductId AND VARIANTID > @bi_VariantId THEN VALIDFROM
            ELSE @dt_ValidFrom
        END,
        @dt_ValidTo =
        CASE
            WHEN VALIDTO > @dt_ValidTo THEN VALIDTO
            WHEN PRODUCTID > @bi_ProductId AND VARIANTID > @bi_VariantId THEN VALIDTO
            ELSE @dt_ValidTo
        END,
        SEQUENCE = @i_Sequence,
        @bi_ProductId = PRODUCTID,
        @bi_VariantId = VARIANTID

    INSERT INTO @tbl_MergedAssortmentRules (ASSORTMENTID, PRODUCTID, VARIANTID, LINETYPE, VALIDFROM, VALIDTO)
    SELECT ASSORTMENTID, PRODUCTID, VARIANTID, LINETYPE, MIN(VALIDFROM) AS VALIDFROM, MAX(VALIDTO) AS VALIDTO
    FROM @tbl_WorkingSet
    GROUP BY ASSORTMENTID, PRODUCTID, VARIANTID, ITEMID, LINETYPE, SEQUENCE
    ORDER BY SEQUENCE

    MERGE #MERGEDASSORTMENTRULES target
    USING
    (
        SELECT ASSORTMENTID, PRODUCTID, VARIANTID, LINETYPE, VALIDFROM, VALIDTO
        FROM @tbl_MergedAssortmentRules
    ) source
    ON [source].ASSORTMENTID = [target].ASSORTMENTID AND [source].PRODUCTID = [target].PRODUCTID AND [source].VARIANTID = [target].VARIANTID AND [source].LINETYPE = [target].LINETYPE
    WHEN NOT MATCHED BY TARGET
        THEN INSERT (ASSORTMENTID, PRODUCTID, VARIANTID, LINETYPE, VALIDFROM, VALIDTO) VALUES ([source].ASSORTMENTID, [source].PRODUCTID, [source].VARIANTID, [source].LINETYPE, [source].VALIDFROM, [source].VALIDTO)
    WHEN NOT MATCHED BY SOURCE
        THEN DELETE
    WHEN MATCHED AND ([source].VALIDFROM != [target].VALIDFROM OR [source].VALIDTO != [target].VALIDTO)
        THEN UPDATE SET [target].VALIDFROM = [source].VALIDFROM, [target].VALIDTO = [source].VALIDTO;
END;
GO
PRINT N'Creating [crt].[GETCURRENTSHIFTNONSALETENDERS]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    GETCURRENTSHIFTNONSALETENDERS gets the current shift's non sale tender transactions.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[GETCURRENTSHIFTNONSALETENDERS]
    @nvc_TransactionType    NVARCHAR(10),
    @bi_ChannelId           BIGINT,
    @nvc_TenderType         NVARCHAR(10),
    @nvc_BatchTerminalId    NVARCHAR(10),
    @bi_BatchId             BIGINT,
    @nvc_TransactionId      NVARCHAR(44)
AS
BEGIN

    SET NOCOUNT ON

    SELECT 
        V.AMOUNT,
        V.AMOUNTCUR,
        V.TRANSACTIONID,
        V.CURRENCY,
        V.TENDERCUR,
        V.TYPE,
        V.BATCHID,
        V.BATCHTERMINALID,
        V.STAFF,
        V.TERMINAL,
        V.DESCRIPTION,
        V.TENDERTYPE,
        V.CREATEDDATETIME,
        V.STORE
    FROM [crt].[NONSALESTRANSACTIONSVIEW] V
    WHERE V.TYPE = @nvc_TransactionType 
    AND V.TENDERTYPE = @nvc_TenderType 
    AND V.CHANNEL = @bi_ChannelId 
    AND V.BATCHTERMINALID = @nvc_BatchTerminalId 
    AND V.BATCHID = @bi_BatchId 
    AND (V.TRANSACTIONID = @nvc_TransactionId OR (@nvc_TransactionId IS NULL OR @nvc_TransactionId = ''))
END;
GO
PRINT N'Creating [crt].[GETACTIVEORFUTURELOYALTYCARDTIERS]...';


GO

CREATE PROCEDURE [crt].[GETACTIVEORFUTURELOYALTYCARDTIERS]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_LoyaltyCardNumber          NVARCHAR(30),
    @bi_LoyaltyGroupRecordId        BIGINT,
    @dt_ChannelLocalDate            DATE,
    @b_retrieveFutureCardTiers      BIT
    
AS
BEGIN
    SET NOCOUNT ON

    -- Declare a table variable to store active or future card tiers.
    DECLARE @ActiveOrFutureCardTiers TABLE
    (
        [RECID] [bigint] PRIMARY KEY,
        [LOYALTYTIER] [bigint],
        [TIERID] [nvarchar](64),
        [VALIDFROM] [date],
        [VALIDTO] [date]
    )

    -- Find all active card tiers.
    -- If multiple such entries are found for the same card tier, pick the one expires the latest.
    insert into @ActiveOrFutureCardTiers
        select
            ActiveCardTiers.RECID,
            ActiveCardTiers.LOYALTYTIER,
            ActiveCardTiers.TIERID,
            ActiveCardTiers.VALIDFROM,
            ActiveCardTiers.VALIDTO
        from
        (
            select
                ROW_NUMBER() OVER (PARTITION BY rlt.TIERID ORDER BY rlct.VALIDTO DESC) Ordinal,
                rlct.RECID,
                rlt.RECID as LOYALTYTIER,
                rlt.TIERID,
                rlct.VALIDFROM,
                rlct.VALIDTO
            from [ax].[RETAILLOYALTYCARDTIER] rlct
            inner join [ax].[RETAILLOYALTYCARD] rlc
                on rlc.RECID = rlct.LOYALTYCARD
            inner join [ax].[RETAILLOYALTYTIER] rlt
                on rlt.RECID = rlct.LOYALTYTIER
            where rlc.CARDNUMBER = @nvc_LoyaltyCardNumber
                and rlct.AFFILIATION = @bi_LoyaltyGroupRecordId
                and rlct.LOYALTYTIER != 0
                and (rlct.VALIDFROM is NULL or rlct.VALIDFROM <= @dt_ChannelLocalDate)
                and (rlct.VALIDTO is NULL or rlct.VALIDTO >= @dt_ChannelLocalDate)
        ) ActiveCardTiers
        where ActiveCardTiers.Ordinal = 1

    -- find all the card tiers which are not active now but will be in the future.
    -- If multiple such entries are found for the same card tier, pick the one takes effect the earliest.
    IF (@b_retrieveFutureCardTiers = 1)
    BEGIN
    insert into @ActiveOrFutureCardTiers
        select
            FutureCardTiers.RECID,
            FutureCardTiers.LOYALTYTIER,
            FutureCardTiers.TIERID,
            FutureCardTiers.VALIDFROM,
            FutureCardTiers.VALIDTO
        from
        (
            select
                ROW_NUMBER() OVER (PARTITION BY rlt.TIERID ORDER BY rlct.VALIDFROM ASC) Ordinal,
                rlct.RECID,
                rlt.RECID as LOYALTYTIER,
                rlt.TIERID,
                rlct.VALIDFROM,
                rlct.VALIDTO
            from [ax].[RETAILLOYALTYCARDTIER] rlct
            inner join [ax].[RETAILLOYALTYCARD] rlc
                on rlc.RECID = rlct.LOYALTYCARD
            inner join [ax].[RETAILLOYALTYTIER] rlt
                on rlt.RECID = rlct.LOYALTYTIER
            where rlc.CARDNUMBER = @nvc_LoyaltyCardNumber
                and rlct.AFFILIATION = @bi_LoyaltyGroupRecordId
                and rlct.LOYALTYTIER != 0
                and rlct.VALIDFROM > @dt_ChannelLocalDate
        ) FutureCardTiers
        where FutureCardTiers.Ordinal = 1
            and FutureCardTiers.TIERID not in 
            (select TIERID from @ActiveOrFutureCardTiers)
    END

    select 
        [RECID],
        [LOYALTYTIER],
        [TIERID],
        [VALIDFROM],
        [VALIDTO]
    from @ActiveOrFutureCardTiers afct
    ORDER BY [afct].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[INSERTPUBLISHSTATUSFORCURRENTSHIPMENTPAGE]...';


GO

CREATE PROCEDURE [crt].[INSERTPUBLISHSTATUSFORCURRENTSHIPMENTPAGE]
    @bi_ChannelId               BIGINT,
    @tvp_ShipmentPublishStatus  [crt].[RETAILSHIPMENTPUBLISHINGSTATUSTABLETYPE] READONLY
AS
BEGIN
    SET NOCOUNT ON

    MERGE [crt].RETAILSHIPMENTPUBLISHINGSTATUS AS TARGET
    USING @tvp_ShipmentPublishStatus AS SOURCE
    ON
        TARGET.CHANNELID = @bi_ChannelId
        AND TARGET.SALESID = SOURCE.SALESID
        AND TARGET.PACKINGSLIPID = SOURCE.PACKINGSLIPID
    WHEN MATCHED THEN
        UPDATE
        SET PUBLISHSTATUS = SOURCE.PUBLISHSTATUS,
            CHANNELBATCHID = SOURCE.CHANNELBATCHID,
            CHANNELREFID = SOURCE.CHANNELREFID,
            PUBLISHMESSAGE = SOURCE.PUBLISHMESSAGE
    WHEN NOT MATCHED THEN
        INSERT
        (
            [CHANNELID],
            [SALESID],
            [PACKINGSLIPID],
            [PUBLISHSTATUS],
            [CHANNELBATCHID],
            [CHANNELREFID],
            [PUBLISHMESSAGE]
        )
        VALUES
        (
            @bi_ChannelId,
            SOURCE.[SALESID],
            SOURCE.[PACKINGSLIPID],
            SOURCE.[PUBLISHSTATUS],
            SOURCE.[CHANNELBATCHID],
            SOURCE.[CHANNELREFID],
            SOURCE.[PUBLISHMESSAGE]
        );
END;
GO
PRINT N'Creating [crt].[GETCUSTOMERBYEXTERNALIDENTITY]...';


GO

CREATE PROCEDURE [crt].[GETCUSTOMERBYEXTERNALIDENTITY]
    @nvc_ExternalIdentityId  NVARCHAR(500),
    @nvc_Issuer NVARCHAR(500),
    @nvc_DataAreaId NVARCHAR(4),
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
    
AS
BEGIN
    SET NOCOUNT ON
    SELECT CUSTOMERACCOUNTNUMBER, 
    ISACTIVATED,
    (
    SELECT PERMISSIONNAME + ','
    FROM ax.RETAILPERMISSIONSEX
    ORDER BY LEN(PERMISSIONNAME)
    FOR XML PATH('') 
    ) AS PERMISSIONS
    FROM ax.RETAILEXTERNALIDTOCUSTOMERMAP AS map
        JOIN ax.RETAILIDENTITYPROVIDER ip ON ip.RECID = map.PROVIDERID
        RIGHT OUTER JOIN ax.RETAILPERMISSIONSGROUP pg on pg.PERMISSIONGROUPID = 1
        JOIN ax.RETAILPERMISSIONSEX px ON pg.PERMISSIONID = px.PERMISSIONID
    WHERE map.EXTERNALIDENTITYID = @nvc_ExternalIdentityId
      AND ip.ISSUER = @nvc_Issuer
      AND map.DATAAREAID = @nvc_DataAreaId

END;
GO
PRINT N'Creating [crt].[GETREPORTCONFIGBYID]...';


GO

CREATE PROCEDURE [crt].[GETREPORTCONFIGBYID]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @nvc_ReportId               NVARCHAR(100),
    @nvc_UserId                 NVARCHAR(25)
AS
BEGIN
    SET NOCOUNT ON

   -- Paging is disabled for reports which is why @tvp_QueryResultSettings remains unused.
	--Get the reports based on job permission group.
	SELECT
        RCP.REPORTID AS REPORTID,
        RCP.POSPERMISSIONGROUPID AS ROLEALLOWED,
        RCP.REPORTDEFINITIONXML AS REPORTDEFINITIONXML,
		RST.STAFFID
	FROM [ax].HCMWORKER HW WITH (NOLOCK)
	INNER JOIN [ax].HCMPOSITIONWORKERASSIGNMENT PWA WITH (NOLOCK) ON PWA.WORKER = HW.RECID
	INNER JOIN [ax].HCMPOSITION POS WITH (NOLOCK) ON POS.RECID = PWA.POSITION
	INNER JOIN [ax].HCMPOSITIONDETAIL PD WITH (NOLOCK) ON PD.POSITION = POS.RECID
	INNER JOIN [ax].HCMJOB HJ WITH (NOLOCK) ON HJ.RECID = PD.JOB
	INNER JOIN [ax].RETAILJOBPOSPERMISSIONGROUP JP WITH (NOLOCK) ON JP.JOB = HJ.RECID
	INNER JOIN [ax].RETAILPOSPERMISSIONGROUP PG WITH (NOLOCK) ON PG.RECID = JP.RETAILPOSPERMISSIONGROUP
	INNER JOIN [crt].RETAILCHANNELREPORTVIEW RCP WITH (NOLOCK) ON RCP.POSPERMISSIONGROUPID = PG.POSPERMISSIONGROUPID
	INNER JOIN [ax].RETAILSTAFFTABLE RST WITH (NOLOCK) ON RST.STAFFID = HW.PERSONNELNUMBER
	WHERE RCP.REPORTID = @nvc_ReportId AND RST.STAFFID = @nvc_UserId

UNION

    --Get the reports based on override permission group.
	SELECT
        RCP.REPORTID AS REPORTID,
        RCP.POSPERMISSIONGROUPID AS ROLEALLOWED,
        RCP.REPORTDEFINITIONXML AS REPORTDEFINITIONXML,
		RST.STAFFID
	FROM [ax].HCMWORKER HW WITH (NOLOCK)
	INNER JOIN [ax].HCMPOSITIONWORKERASSIGNMENT PWA WITH (NOLOCK) ON PWA.WORKER = HW.RECID
	INNER JOIN [ax].HCMPOSITION POS WITH (NOLOCK) ON POS.RECID = PWA.POSITION
	INNER JOIN [ax].RETAILPOSITIONPOSPERMISSION RPOS WITH (NOLOCK)  ON RPOS.POSITION = POS.RECID 
	INNER JOIN [ax].RETAILPOSPERMISSIONGROUP PG WITH (NOLOCK) ON PG.RECID = RPOS.POSPERMISSIONGROUP
	INNER JOIN [crt].RETAILCHANNELREPORTVIEW RCP WITH (NOLOCK) ON RCP.POSPERMISSIONGROUPID = PG.POSPERMISSIONGROUPID
	INNER JOIN [ax].RETAILSTAFFTABLE RST WITH (NOLOCK) ON RST.STAFFID = HW.PERSONNELNUMBER
	WHERE RCP.REPORTID = @nvc_ReportId AND RST.STAFFID = @nvc_UserId

END;
GO
PRINT N'Creating [crt].[GETPRODUCTCATALOGS]...';


GO

CREATE PROCEDURE [crt].[GETPRODUCTCATALOGS]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT,
    @dt_ChannelDate                 DATE,
    @tvp_ProductIds                 [crt].[RECORDIDTABLETYPE]    READONLY
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @tvp_Catalogs crt.RECORDIDTABLETYPE

    INSERT @tvp_Catalogs(RECID) 
        SELECT pccv.[CATALOG]
        FROM [crt].GETPUBCATALOGCURRENT(@bi_ChannelId, @dt_ChannelDate) pccv

    SELECT
        rpcp.[PRODUCT],
        rpcp.[CATALOG]
    FROM @tvp_Catalogs pccv
    INNER JOIN [ax].RETAILPUBCATALOGPRODUCT rpcp ON pccv.RECID = rpcp.[CATALOG]
    INNER JOIN @tvp_ProductIds ids ON rpcp.[PRODUCT] = ids.RECID
    ORDER BY [rpcp].PRODUCT
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[INSERTPUBLISHSTATUSFORCURRENTLISTINGPAGE]...';


GO

CREATE PROCEDURE [crt].[INSERTPUBLISHSTATUSFORCURRENTLISTINGPAGE]
    @tvp_ListingPublishStatus	[crt].[LISTINGPUBLISHSTATUSTABLETYPE] READONLY
AS
BEGIN
    SET NOCOUNT ON
        INSERT INTO [ax].RETAILLISTINGSTATUSLOG
        (
            [ACTIONSTATUS],
            [APPLIEDACTION],
            [CATALOG],
            [CHANNEL],
            [CHANNELLISTINGID],
            [LISTINGMODIFIEDDATETIME],
            [LISTINGMODIFIEDDATETIMETZID],
            [PRODUCT],
            [PROCESSED],
            [STATUSDATETIME],
            [STATUSDATETIMETZID],
            [STATUSMESSAGE],
            [CHANNELBATCHID],
            [CHANNELSTATE],
            [LANGUAGEID]
        )
       SELECT	SOURCE.[ACTIONSTATUS],
            SOURCE.[APPLIEDACTION],
            SOURCE.[CATALOG],
            SOURCE.[CHANNEL],
            SOURCE.[CHANNELLISTINGID],
            SOURCE.[LISTINGMODIFIEDDATETIME],
            SOURCE.[LISTINGMODIFIEDDATETIMETZID],
            SOURCE.[PRODUCT],
            SOURCE.[PROCESSED],
            SOURCE.[STATUSDATETIME],
            SOURCE.[STATUSDATETIMETZID],
            SOURCE.[STATUSMESSAGE],
            SOURCE.[CHANNELBATCHID],
            SOURCE.[CHANNELSTATE],
            SOURCE.[LANGUAGEID]
            FROM @tvp_ListingPublishStatus AS SOURCE
END;
GO
PRINT N'Creating [crt].[DELETELISTINGSBYCOMPOSITEIDS]...';


GO

CREATE PROCEDURE [crt].[DELETELISTINGSBYCOMPOSITEIDS]
    @bi_ChannelId BIGINT,
    @bi_CatalogId BIGINT,
	@tvp_ProductIds [crt].[RECORDIDLANGUAGETABLETYPE] READONLY

AS
BEGIN
    SET NOCOUNT ON

    DELETE C
    FROM [crt].[CATALOGLISTMAPPING] AS C
	INNER JOIN @tvp_ProductIds ids on ids.RECID = C.LISTINGRECID AND ids.LANGUAGEID = c.LANGUAGEID
	WHERE CHANNELID = @bi_ChannelId
	  AND CATALOGID = @bi_CatalogId

END;
GO
PRINT N'Creating [crt].[INSERTRETAILSTAFFLOGINLOG]...';


GO
CREATE PROCEDURE [crt].[INSERTRETAILSTAFFLOGINLOG]
     @TERMINALID nvarchar(10)
    ,@CHANNELID nvarchar(10)
    ,@STAFFID   nvarchar(25)    
    ,@DATAAREAID nvarchar(4)
    ,@RETURN_VALUE int output							-- for backwards compatibility, do not use on new code
    ,@CREATEONLYIFNOSESSION bit = NULL					-- if true, only creates a new record if there are no other sessions for the @STAFFID. Default value: true
    ,@OPENSESSIONOTHERTERMINALID nvarchar(10) output	-- a terminal id, different from @TERMINALID, in which the @STAFFID has an open session    
AS
BEGIN
    SET NOCOUNT ON
	BEGIN TRANSACTION;
	
	IF @CREATEONLYIFNOSESSION IS NULL
	BEGIN
		SET @CREATEONLYIFNOSESSION = 1
	END
		
	-- gets the first terminal ID for which the user has a session that is not the terminalId we want the create the session for
	-- this means that if we found a record, the user has a session open in another terminal
    SET @OPENSESSIONOTHERTERMINALID = (SELECT TOP 1 TERMINALID FROM [crt].[RETAILSTAFFLOGINLOG]
        WHERE
            STAFFID = @STAFFID
            AND DATAAREAID = @DATAAREAID	-- a session open on another legal entity is allowed
            AND TERMINALID <> @TERMINALID)

    SET @RETURN_VALUE = (SELECT CASE WHEN @OPENSESSIONOTHERTERMINALID IS NULL THEN 1 ELSE 0 END)
            
	IF
	(		
		(
			-- we can create a new session if we are allowed to create a session even when there are other active sessions
			@CREATEONLYIFNOSESSION = 0
			-- or there is no other active session
			OR @OPENSESSIONOTHERTERMINALID IS NULL
		)
		-- but do not create a session again if it already exists for @TERMINALID
		AND NOT EXISTS
		(
			SELECT 1 FROM [crt].[RETAILSTAFFLOGINLOG]
			WHERE
				CHANNELID = @CHANNELID
				AND STAFFID = @STAFFID
				AND DATAAREAID = @DATAAREAID
				AND TERMINALID = @TERMINALID
		)
	)
	BEGIN
		INSERT INTO [crt].[RETAILSTAFFLOGINLOG]
		(
			[CHANNELID],
			[TERMINALID],
			[STAFFID],			
			[DATAAREAID],
			[CREATEDDATETIME]						
		)
		VALUES
		(
			@CHANNELID,
			@TERMINALID,
			@STAFFID,
			@DATAAREAID,
			GETDATE()
		)
	END
	COMMIT TRANSACTION;
END;
GO
PRINT N'Creating [crt].[GETLOYALTYGROUPSBYLOYALTYCARD]...';


GO

CREATE PROCEDURE [crt].[GETLOYALTYGROUPSBYLOYALTYCARD]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_LoyaltyCardNumber          NVARCHAR(30),
    @nvc_Locale                     NVARCHAR(7) = 'en-us'
AS
BEGIN
    SET NOCOUNT ON

    -- Select all RetailAffiliation which are associated with the loyalty card
    select
        ra.RECID,
        ra.NAME,
        rat.DESCRIPTION
    from [ax].[RETAILAFFILIATION] ra
    left join [ax].[RETAILAFFILIATIONTRANSLATION] rat
        on rat.AFFILIATION = ra.RECID
        and rat.LANGUAGEID = @nvc_Locale
    where ra.RECID in
    (
        select
            rlct.AFFILIATION
        from [ax].[RETAILLOYALTYCARD] rlc
        inner join [ax].[RETAILLOYALTYCARDTIER] rlct
            on rlct.LOYALTYCARD = rlc.RECID
        where rlc.CARDNUMBER = @nvc_LoyaltyCardNumber
        group by rlct.AFFILIATION
    )
    ORDER BY [ra].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[POPULATEPRODUCTCATEGORYRULES]...';


GO

CREATE PROCEDURE [crt].[POPULATEPRODUCTCATEGORYRULES]
AS BEGIN
    MERGE [crt].PRODUCTCATEGORYRULES target
    USING
    (
        -- @bi_CatalogId = 0: Shared categories
        SELECT
            [ncpc].CHANNELID,
            0 AS CATALOGID,
            [ncpc].CATEGORYID AS CATEGORYID,
            [ncpc].PRODUCTID AS PRODUCTID,
            null AS VALIDFROM,
            null AS VALIDTO
        FROM [crt].NONCATALOGPRODUCTCATEGORYVIEW ncpc
        INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON [rprct].ORIGINID = [ncpc].CHANNELID
        WHERE [rprct].CATEGORYHIERARCHY = [ncpc].CATEGORYHIERARCHY

        UNION

        -- @bi_CatalogId = 0: Catalog specific categories
        SELECT
            [ccpc].CHANNELID,
            [ccpc].CATALOGID,
            [ccpc].CATEGORYID,
            [ccpc].PRODUCTID,
            [ccpc].VALIDFROM,
            [ccpc].VALIDTO
        FROM [crt].CATALOGCHANNELPRODUCTCATEGORYVIEW ccpc
        WHERE [ccpc].INCLUDEEXCLUDETYPE = 1  -- Include

        UNION

        -- @bi_CatalogId != 0: Inherited categories
        SELECT
            [ncpc].CHANNELID,
            [rpcp].CATALOG AS CATALOGID,
            [ncpc].CATEGORYID,
            [ncpc].PRODUCTID,
            [rpc].VALIDFROM,
            [rpc].VALIDTO
        FROM [crt].NONCATALOGPRODUCTCATEGORYVIEW ncpc
        INNER JOIN [ax].RETAILPUBCATALOGPRODUCT rpcp ON [rpcp].PRODUCT = [ncpc].PRODUCTID
        INNER JOIN [ax].RETAILPUBRETAILCHANNELTABLE rprct ON [rprct].ORIGINID = [ncpc].CHANNELID
        INNER JOIN [crt].CATALOGPRODUCTCATEGORYVIEW cpc ON [cpc].CATALOG = [rpcp].CATALOG AND [cpc].PRODUCT = [rpcp].PRODUCT AND [cpc].CATEGORY = [ncpc].CATEGORYID AND [cpc].INCLUDEEXCLUDETYPE = 1  -- Include
        INNER JOIN [ax].RETAILPUBCATALOG rpc ON [rpc].ORIGIN = [cpc].CATALOG
        WHERE [rprct].CATEGORYHIERARCHY = [ncpc].CATEGORYHIERARCHY AND [rpcp].USEHIERARCHY = 1
            AND EXISTS(
                SELECT 1
                FROM [ax].[RETAILPUBCATALOG]
                WHERE ORIGIN = [rpcp].CATALOG AND ENABLESNAPSHOT = 0
            )

        UNION

        -- @bi_CatalogId != 0: Catalog specific categories
        SELECT
            [ccpc].CHANNELID,
            [ccpc].CATALOGID,
            [ccpc].CATEGORYID,
            [ccpc].PRODUCTID,
            [ccpc].VALIDFROM,
            [ccpc].VALIDTO
        FROM [crt].CATALOGCHANNELPRODUCTCATEGORYVIEW ccpc
        WHERE [ccpc].INCLUDEEXCLUDETYPE = 1  -- Include
    ) source
    ON [source].CHANNELID = [target].CHANNELID AND [source].CATALOGID = [target].CATALOGID AND [source].CATEGORYID = [target].CATEGORYID AND [source].PRODUCTID = [target].PRODUCTID
    WHEN NOT MATCHED BY TARGET
        THEN INSERT (CHANNELID, CATALOGID, CATEGORYID, PRODUCTID, VALIDFROM, VALIDTO) VALUES ([source].CHANNELID, [source].CATALOGID, [source].CATEGORYID, [source].PRODUCTID, [source].VALIDFROM, [source].VALIDTO)
    WHEN NOT MATCHED BY SOURCE
        THEN DELETE
    WHEN MATCHED AND ([source].VALIDFROM != [target].VALIDFROM OR [source].VALIDTO != [target].VALIDTO)
        THEN UPDATE SET [target].VALIDFROM = [source].VALIDFROM, [target].VALIDTO = [source].VALIDTO;
END;
GO
PRINT N'Creating [crt].[STORECATALOGDEFINITION]...';


GO

CREATE PROCEDURE [crt].[STORECATALOGDEFINITION]
    @bi_ChannelId BIGINT,
    @tvp_CatalogDefinition  [crt].[CATALOGDEFINITIONTABLETYPE] READONLY
	
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION storeCatalogDefinition;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- drop and repopulate the catalog definition table
    DELETE FROM [crt].[CATALOGDEFINITION]
	WHERE CHANNELID = @bi_ChannelId

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    INSERT [crt].[CATALOGDEFINITION] (CHANNELID, LISTID, ATTRIBUTERECID, ATTRIBUTEKEYNAME, LISTGROUPID)
        SELECT
            @bi_ChannelId,
			catDef.LISTID,
            catDef.ATTRIBUTERECID,
            catDef.ATTRIBUTEKEYNAME,
            catDef.LISTGROUPID
        FROM @tvp_CatalogDefinition AS catDef

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION storeCatalogDefinition;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION storeCatalogDefinition;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[DELETESTOCKCOUNTJOURNALS]...';


GO

CREATE PROCEDURE [crt].[DELETESTOCKCOUNTJOURNALS]
    @bi_ChannelId       BIGINT,
    @tvp_JournalIds     [crt].[STRINGIDTABLETYPE]	READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Delete the stock count journal from Journal table.
    DELETE RSCJ 
	FROM [crt].[RETAILSTOCKCOUNTJOURNALS] RSCJ 
	INNER JOIN @tvp_JournalIds TVPJI 
		ON RSCJ.JOURNALID = TVPJI.STRINGID

    -- Delete all the transactions from RetailStockCount table.
    DELETE RSC 
	FROM [crt].[RETAILSTOCKCOUNT] RSC 
	INNER JOIN @tvp_JournalIds TVPJI 
		ON RSC.JOURNALID = TVPJI.STRINGID

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
    SET NOCOUNT OFF
END;
GO
PRINT N'Creating [crt].[GETFROMZIPCODE]...';


GO

CREATE PROCEDURE [crt].[GETFROMZIPCODE]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @CountryRegionId    NVARCHAR(10),
    @ZipCode            NVARCHAR(10)
AS
BEGIN
    SET NOCOUNT ON

    SELECT
        LZIP.ZIPCODE
       ,LZIP.STREETNAME
       ,LZIP.TIMEZONE
       ,CASE WHEN LZIP.CITY = N'' AND CITYRECID <> 0
       THEN LCITY.NAME
       ELSE LZIP.CITY        
      END CITYNAME
       ,LZIP.CITYALIAS
       ,LZIP.COUNTY AS COUNTYID
       ,CASE WHEN LZIP.DISTRICTNAME = N'' AND LZIP.DISTRICT <> 0
      THEN LDISTR.NAME       
      ELSE LZIP.DISTRICTNAME
        END DISTRICTNAME
       ,LZIP.STATE AS STATEID
       ,LZIP.COUNTRYREGIONID
    FROM [ax].LOGISTICSADDRESSZIPCODE LZIP
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSCITY LCITY ON LZIP.CITYRECID = LCITY.RECID
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSDISTRICT LDISTR ON LZIP.DISTRICT = LDISTR.RECID
      WHERE
          LZIP.COUNTRYREGIONID = @CountryRegionId
          AND LZIP.ZIPCODE = @ZipCode
    ORDER BY [LZIP].DISTRICT
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[DELETETRANSFERORDERLINES]...';


GO

CREATE PROCEDURE [crt].[DELETETRANSFERORDERLINES]
    @nvc_OrderId     NVARCHAR(50)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Delete the transfer order lines from table.
    DELETE FROM [crt].[TRANSFERORDERLINE] WHERE ORDERID = @nvc_OrderId

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
    SET NOCOUNT OFF
END;
GO
PRINT N'Creating [crt].[SAVEPRODUCTDATA]...';


GO

CREATE PROCEDURE [crt].[SAVEPRODUCTDATA]
    @bi_ChannelId       BIGINT,
    @xml_ProductData    XML
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    DECLARE @nvc_DataAreaId             NVARCHAR(4);
 
    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Resolve the data area from the specified channel identifier.
    SELECT @nvc_DataAreaId = rct.[INVENTLOCATIONDATAAREAID] FROM [ax].RETAILCHANNELTABLE rct WHERE [rct].RECID = @bi_ChannelId

	-- Generated stats: 59 distinct tables spanning 61 unique paths.

	-- InventTable
	PRINT 'Upserting into [ax].INVENTTABLE ..'
	MERGE [ax].INVENTTABLE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(Product)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [PRODUCT],
			CASE T.c.value('(ABCContributionMargin)[1]', 'NVARCHAR(4000)')
				WHEN 'None' THEN 0
				WHEN 'A' THEN 1
				WHEN 'B' THEN 2
				WHEN 'C' THEN 3
				ELSE 0
			END AS [ABCCONTRIBUTIONMARGIN],
			CASE T.c.value('(ABCRevenue)[1]', 'NVARCHAR(4000)')
				WHEN 'None' THEN 0
				WHEN 'A' THEN 1
				WHEN 'B' THEN 2
				WHEN 'C' THEN 3
				ELSE 0
			END AS [ABCREVENUE],
			CASE T.c.value('(ABCTieUp)[1]', 'NVARCHAR(4000)')
				WHEN 'None' THEN 0
				WHEN 'A' THEN 1
				WHEN 'B' THEN 2
				WHEN 'C' THEN 3
				ELSE 0
			END AS [ABCTIEUP],
			CASE T.c.value('(ABCValue)[1]', 'NVARCHAR(4000)')
				WHEN 'None' THEN 0
				WHEN 'A' THEN 1
				WHEN 'B' THEN 2
				WHEN 'C' THEN 3
				ELSE 0
			END AS [ABCVALUE],
			ISNULL(T.c.value('(AltItemId)[1]', 'NVARCHAR(20)'), '') AS [ALTITEMID],
			ISNULL(T.c.value('(ApproxTaxValue_BR)[1]', 'NUMERIC(32, 16)'), '0') AS [APPROXTAXVALUE_BR],
			ISNULL(T.c.value('(BatchNumGroupId)[1]', 'NVARCHAR(10)'), '') AS [BATCHNUMGROUPID],
			CASE T.c.value('(CostModel)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [COSTMODEL],
			ISNULL(T.c.value('(Density)[1]', 'NUMERIC(32, 16)'), '0') AS [DENSITY],
			ISNULL(T.c.value('(Depth)[1]', 'NUMERIC(32, 16)'), '0') AS [DEPTH],
			ISNULL(T.c.value('(ExceptionCode_BR)[1]', 'NVARCHAR(10)'), '') AS [EXCEPTIONCODE_BR],
			ISNULL(T.c.value('(grossDepth)[1]', 'NUMERIC(32, 16)'), '0') AS [GROSSDEPTH],
			ISNULL(T.c.value('(grossHeight)[1]', 'NUMERIC(32, 16)'), '0') AS [GROSSHEIGHT],
			ISNULL(T.c.value('(grossWidth)[1]', 'NUMERIC(32, 16)'), '0') AS [GROSSWIDTH],
			ISNULL(T.c.value('(Height)[1]', 'NUMERIC(32, 16)'), '0') AS [HEIGHT],
			ISNULL(T.c.value('(InventProductType_BR)[1]', 'NVARCHAR(10)'), '') AS [INVENTPRODUCTTYPE_BR],
			ISNULL(T.c.value('(ItemBuyerGroupId)[1]', 'NVARCHAR(10)'), '') AS [ITEMBUYERGROUPID],
			CASE T.c.value('(ItemDimCostPrice)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [ITEMDIMCOSTPRICE],
			ISNULL(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), '') AS [ITEMID],
			CASE T.c.value('(ItemType)[1]', 'NVARCHAR(4000)')
				WHEN 'Item' THEN 0
				WHEN 'DEL_BOM' THEN 1
				WHEN 'Service' THEN 2
				WHEN 'DEL_Formula' THEN 3
				WHEN 'DEL_Asset_RU' THEN 4
				ELSE 0
			END AS [ITEMTYPE],
			ISNULL(T.c.value('(NameAlias)[1]', 'NVARCHAR(20)'), '') AS [NAMEALIAS],
			ISNULL(T.c.value('(NetWeight)[1]', 'NUMERIC(32, 16)'), '0') AS [NETWEIGHT],
			ISNULL(T.c.value('(PrimaryVendorId)[1]', 'NVARCHAR(20)'), '') AS [PRIMARYVENDORID],
			ISNULL(T.c.value('(ProdGroupId)[1]', 'NVARCHAR(10)'), '') AS [PRODGROUPID],
			ISNULL(T.c.value('(ProdPoolId)[1]', 'NVARCHAR(10)'), '') AS [PRODPOOLID],
			ISNULL(T.c.value('(projCategoryId)[1]', 'NVARCHAR(30)'), '') AS [PROJCATEGORYID],
			ISNULL(T.c.value('(PropertyId)[1]', 'NVARCHAR(10)'), '') AS [PROPERTYID],
			CASE T.c.value('(PurchModel)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [PURCHMODEL],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(ReqGroupId)[1]', 'NVARCHAR(10)'), '') AS [REQGROUPID],
			ISNULL(T.c.value('(SalesContributionRatio)[1]', 'NUMERIC(32, 16)'), '0') AS [SALESCONTRIBUTIONRATIO],
			CASE T.c.value('(SalesModel)[1]', 'NVARCHAR(4000)')
				WHEN 'None' THEN 0
				WHEN 'Contributionratio' THEN 1
				WHEN 'PercentMarkup' THEN 2
				ELSE 0
			END AS [SALESMODEL],
			ISNULL(T.c.value('(SalesPercentMarkup)[1]', 'NUMERIC(32, 16)'), '0') AS [SALESPERCENTMARKUP],
			CASE T.c.value('(SalesPriceModelBasic)[1]', 'NVARCHAR(4000)')
				WHEN 'PurchPrice' THEN 0
				WHEN 'CostPrice' THEN 1
				ELSE 0
			END AS [SALESPRICEMODELBASIC],
			ISNULL(T.c.value('(SerialNumGroupId)[1]', 'NVARCHAR(10)'), '') AS [SERIALNUMGROUPID],
			ISNULL(T.c.value('(sortCode)[1]', 'INT'), '0') AS [SORTCODE],
			ISNULL(T.c.value('(TaraWeight)[1]', 'NUMERIC(32, 16)'), '0') AS [TARAWEIGHT],
			CASE T.c.value('(TaxationOrigin_BR)[1]', 'NVARCHAR(4000)')
				WHEN 'National' THEN 0
				WHEN 'DirectImport' THEN 1
				WHEN 'Import' THEN 2
				WHEN 'NationalImportContent' THEN 3
				WHEN 'LegalAdjusts' THEN 4
				WHEN 'NationalLessThan40ImportContent' THEN 5
				WHEN 'ImportNoSimilar' THEN 6
				WHEN 'ImportAcquiredInRegion' THEN 7
				WHEN 'NationalGreaterThan70ImportContent' THEN 8
				ELSE 0
			END AS [TAXATIONORIGIN_BR],
			ISNULL(T.c.value('(TaxFiscalClassification_BR)[1]', 'NVARCHAR(10)'), '') AS [TAXFISCALCLASSIFICATION_BR],
			ISNULL(T.c.value('(TaxServiceCode_BR)[1]', 'NVARCHAR(10)'), '') AS [TAXSERVICECODE_BR],
			ISNULL(T.c.value('(UnitVolume)[1]', 'NUMERIC(32, 16)'), '0') AS [UNITVOLUME],
			CASE T.c.value('(UseAltItemId)[1]', 'NVARCHAR(4000)')
				WHEN 'Never' THEN 0
				WHEN 'InventWhen0' THEN 1
				WHEN 'Always' THEN 2
				ELSE 0
			END AS [USEALTITEMID],
			ISNULL(T.c.value('(Width)[1]', 'NUMERIC(32, 16)'), '0') AS [WIDTH],
			DATEDIFF(second, '00:00:00', T.c.value('(WMSPickingQtyTime)[1]', 'time')) AS [WMSPICKINGQTYTIME],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable') AS T(c)
	) AS source ([PRODUCT], [ABCCONTRIBUTIONMARGIN], [ABCREVENUE], [ABCTIEUP], [ABCVALUE], [ALTITEMID], [APPROXTAXVALUE_BR], [BATCHNUMGROUPID], [COSTMODEL], [DENSITY], [DEPTH], [EXCEPTIONCODE_BR], [GROSSDEPTH], [GROSSHEIGHT], [GROSSWIDTH], [HEIGHT], [INVENTPRODUCTTYPE_BR], [ITEMBUYERGROUPID], [ITEMDIMCOSTPRICE], [ITEMID], [ITEMTYPE], [NAMEALIAS], [NETWEIGHT], [PRIMARYVENDORID], [PRODGROUPID], [PRODPOOLID], [PROJCATEGORYID], [PROPERTYID], [PURCHMODEL], [RECID], [REQGROUPID], [SALESCONTRIBUTIONRATIO], [SALESMODEL], [SALESPERCENTMARKUP], [SALESPRICEMODELBASIC], [SERIALNUMGROUPID], [SORTCODE], [TARAWEIGHT], [TAXATIONORIGIN_BR], [TAXFISCALCLASSIFICATION_BR], [TAXSERVICECODE_BR], [UNITVOLUME], [USEALTITEMID], [WIDTH], [WMSPICKINGQTYTIME], [DATAAREAID])
	ON (target.[ITEMID] = source.[ITEMID] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([PRODUCT], [ABCCONTRIBUTIONMARGIN], [ABCREVENUE], [ABCTIEUP], [ABCVALUE], [ALTITEMID], [APPROXTAXVALUE_BR], [BATCHNUMGROUPID], [COSTMODEL], [DENSITY], [DEPTH], [EXCEPTIONCODE_BR], [GROSSDEPTH], [GROSSHEIGHT], [GROSSWIDTH], [HEIGHT], [INVENTPRODUCTTYPE_BR], [ITEMBUYERGROUPID], [ITEMDIMCOSTPRICE], [ITEMID], [ITEMTYPE], [NAMEALIAS], [NETWEIGHT], [PRIMARYVENDORID], [PRODGROUPID], [PRODPOOLID], [PROJCATEGORYID], [PROPERTYID], [PURCHMODEL], [RECID], [REQGROUPID], [SALESCONTRIBUTIONRATIO], [SALESMODEL], [SALESPERCENTMARKUP], [SALESPRICEMODELBASIC], [SERIALNUMGROUPID], [SORTCODE], [TARAWEIGHT], [TAXATIONORIGIN_BR], [TAXFISCALCLASSIFICATION_BR], [TAXSERVICECODE_BR], [UNITVOLUME], [USEALTITEMID], [WIDTH], [WMSPICKINGQTYTIME], [DATAAREAID])
		VALUES (source.[PRODUCT], source.[ABCCONTRIBUTIONMARGIN], source.[ABCREVENUE], source.[ABCTIEUP], source.[ABCVALUE], source.[ALTITEMID], source.[APPROXTAXVALUE_BR], source.[BATCHNUMGROUPID], source.[COSTMODEL], source.[DENSITY], source.[DEPTH], source.[EXCEPTIONCODE_BR], source.[GROSSDEPTH], source.[GROSSHEIGHT], source.[GROSSWIDTH], source.[HEIGHT], source.[INVENTPRODUCTTYPE_BR], source.[ITEMBUYERGROUPID], source.[ITEMDIMCOSTPRICE], source.[ITEMID], source.[ITEMTYPE], source.[NAMEALIAS], source.[NETWEIGHT], source.[PRIMARYVENDORID], source.[PRODGROUPID], source.[PRODPOOLID], source.[PROJCATEGORYID], source.[PROPERTYID], source.[PURCHMODEL], source.[RECID], source.[REQGROUPID], source.[SALESCONTRIBUTIONRATIO], source.[SALESMODEL], source.[SALESPERCENTMARKUP], source.[SALESPRICEMODELBASIC], source.[SERIALNUMGROUPID], source.[SORTCODE], source.[TARAWEIGHT], source.[TAXATIONORIGIN_BR], source.[TAXFISCALCLASSIFICATION_BR], source.[TAXSERVICECODE_BR], source.[UNITVOLUME], source.[USEALTITEMID], source.[WIDTH], source.[WMSPICKINGQTYTIME], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[PRODUCT] = source.[PRODUCT], target.[ABCCONTRIBUTIONMARGIN] = source.[ABCCONTRIBUTIONMARGIN], target.[ABCREVENUE] = source.[ABCREVENUE], target.[ABCTIEUP] = source.[ABCTIEUP], target.[ABCVALUE] = source.[ABCVALUE], target.[ALTITEMID] = source.[ALTITEMID], target.[APPROXTAXVALUE_BR] = source.[APPROXTAXVALUE_BR], target.[BATCHNUMGROUPID] = source.[BATCHNUMGROUPID], target.[COSTMODEL] = source.[COSTMODEL], target.[DENSITY] = source.[DENSITY], target.[DEPTH] = source.[DEPTH], target.[EXCEPTIONCODE_BR] = source.[EXCEPTIONCODE_BR], target.[GROSSDEPTH] = source.[GROSSDEPTH], target.[GROSSHEIGHT] = source.[GROSSHEIGHT], target.[GROSSWIDTH] = source.[GROSSWIDTH], target.[HEIGHT] = source.[HEIGHT], target.[INVENTPRODUCTTYPE_BR] = source.[INVENTPRODUCTTYPE_BR], target.[ITEMBUYERGROUPID] = source.[ITEMBUYERGROUPID], target.[ITEMDIMCOSTPRICE] = source.[ITEMDIMCOSTPRICE], target.[ITEMID] = source.[ITEMID], target.[ITEMTYPE] = source.[ITEMTYPE], target.[NAMEALIAS] = source.[NAMEALIAS], target.[NETWEIGHT] = source.[NETWEIGHT], target.[PRIMARYVENDORID] = source.[PRIMARYVENDORID], target.[PRODGROUPID] = source.[PRODGROUPID], target.[PRODPOOLID] = source.[PRODPOOLID], target.[PROJCATEGORYID] = source.[PROJCATEGORYID], target.[PROPERTYID] = source.[PROPERTYID], target.[PURCHMODEL] = source.[PURCHMODEL], target.[RECID] = source.[RECID], target.[REQGROUPID] = source.[REQGROUPID], target.[SALESCONTRIBUTIONRATIO] = source.[SALESCONTRIBUTIONRATIO], target.[SALESMODEL] = source.[SALESMODEL], target.[SALESPERCENTMARKUP] = source.[SALESPERCENTMARKUP], target.[SALESPRICEMODELBASIC] = source.[SALESPRICEMODELBASIC], target.[SERIALNUMGROUPID] = source.[SERIALNUMGROUPID], target.[SORTCODE] = source.[SORTCODE], target.[TARAWEIGHT] = source.[TARAWEIGHT], target.[TAXATIONORIGIN_BR] = source.[TAXATIONORIGIN_BR], target.[TAXFISCALCLASSIFICATION_BR] = source.[TAXFISCALCLASSIFICATION_BR], target.[TAXSERVICECODE_BR] = source.[TAXSERVICECODE_BR], target.[UNITVOLUME] = source.[UNITVOLUME], target.[USEALTITEMID] = source.[USEALTITEMID], target.[WIDTH] = source.[WIDTH], target.[WMSPICKINGQTYTIME] = source.[WMSPICKINGQTYTIME], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- DocuRef
	PRINT 'Upserting into [ax].DOCUREF ..'
	MERGE [ax].DOCUREF AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RefCompanyId)[1]', 'NVARCHAR(4)'), '') AS [REFCOMPANYID],
			ISNULL(T.c.value('(RefRecId)[1]', 'BIGINT'), '0') AS [REFRECID],
			ISNULL(T.c.value('(RefTableId)[1]', 'INT'), '0') AS [REFTABLEID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/DocuRef') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RefCompanyId)[1]', 'NVARCHAR(4)'), '') AS [REFCOMPANYID],
			ISNULL(T.c.value('(RefRecId)[1]', 'BIGINT'), '0') AS [REFRECID],
			ISNULL(T.c.value('(RefTableId)[1]', 'INT'), '0') AS [REFTABLEID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/DocuRef') AS T(c)
	) AS source ([RECID], [REFCOMPANYID], [REFRECID], [REFTABLEID])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [REFCOMPANYID], [REFRECID], [REFTABLEID])
		VALUES (source.[RECID], source.[REFCOMPANYID], source.[REFRECID], source.[REFTABLEID])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[REFCOMPANYID] = source.[REFCOMPANYID], target.[REFRECID] = source.[REFRECID], target.[REFTABLEID] = source.[REFTABLEID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductImage
	PRINT 'Upserting into [ax].ECORESPRODUCTIMAGE ..'
	MERGE [ax].ECORESPRODUCTIMAGE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			CASE T.c.value('(DefaultImage)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [DEFAULTIMAGE],
			ISNULL(T.c.value('(RefRecord)[1]', 'BIGINT'), '0') AS [REFRECORD],
			ISNULL(T.c.value('(MediumSize)[1]', 'varbinary(max)'), NULL) AS [MEDIUMSIZE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/DocuRef/EcoResProductImage') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			CASE T.c.value('(DefaultImage)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [DEFAULTIMAGE],
			ISNULL(T.c.value('(RefRecord)[1]', 'BIGINT'), '0') AS [REFRECORD],
			ISNULL(T.c.value('(MediumSize)[1]', 'varbinary(max)'), NULL) AS [MEDIUMSIZE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/DocuRef/EcoResProductImage') AS T(c)
	) AS source ([RECID], [DEFAULTIMAGE], [REFRECORD], [MEDIUMSIZE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [DEFAULTIMAGE], [REFRECORD], [MEDIUMSIZE])
		VALUES (source.[RECID], source.[DEFAULTIMAGE], source.[REFRECORD], source.[MEDIUMSIZE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[DEFAULTIMAGE] = source.[DEFAULTIMAGE], target.[REFRECORD] = source.[REFRECORD], target.[MEDIUMSIZE] = source.[MEDIUMSIZE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailInventTable
	PRINT 'Upserting into [ax].RETAILINVENTTABLE ..'
	MERGE [ax].RETAILINVENTTABLE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(itemId)[1]', 'NVARCHAR(20)'), T.c.value('(../ItemId)[1]', 'NVARCHAR(20)')) AS [ITEMID],
			ISNULL(T.c.value('(BarcodeSetupId)[1]', 'NVARCHAR(10)'), '') AS [BARCODESETUPID],
			ISNULL(T.c.value('(BaseComparisonUnitCode)[1]', 'NVARCHAR(10)'), '') AS [BASECOMPARISONUNITCODE],
			CASE T.c.value('(BlockedOnPOS)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [BLOCKEDONPOS],
			ISNULL(T.c.value('(DateBlocked)[1]', 'DATE'), '1900-01-01') AS [DATEBLOCKED],
			ISNULL(T.c.value('(DateToActivateItem)[1]', 'DATE'), '1900-01-01') AS [DATETOACTIVATEITEM],
			ISNULL(T.c.value('(DateToBeBlocked)[1]', 'DATE'), '1900-01-01') AS [DATETOBEBLOCKED],
			CASE T.c.value('(KeyingInPrice)[1]', 'NVARCHAR(4000)')
				WHEN 'NotMandatory' THEN 0
				WHEN 'NewPrice' THEN 1
				WHEN 'HigherEqual' THEN 2
				WHEN 'LowerEqual' THEN 3
				WHEN 'NoPrice' THEN 4
				ELSE 0
			END AS [KEYINGINPRICE],
			CASE T.c.value('(KeyingInQty)[1]', 'NVARCHAR(4000)')
				WHEN 'NotMandatory' THEN 0
				WHEN 'KeyIn' THEN 1
				WHEN 'NotKeyIn' THEN 2
				ELSE 0
			END AS [KEYINGINQTY],
			CASE T.c.value('(MustKeyInComment)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [MUSTKEYINCOMMENT],
			CASE T.c.value('(NoDiscountAllowed)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [NODISCOUNTALLOWED],
			CASE T.c.value('(PrintVariantsShelfLabels)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [PRINTVARIANTSSHELFLABELS],
			CASE T.c.value('(ProhibitReturn_RU)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [PROHIBITRETURN_RU],
			CASE T.c.value('(QtyBecomesNegative)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [QTYBECOMESNEGATIVE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			CASE T.c.value('(ScaleItem)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [SCALEITEM],
			CASE T.c.value('(UseEanStandardBarcode)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [USEEANSTANDARDBARCODE],
			CASE T.c.value('(ZeroPriceValid)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [ZEROPRICEVALID],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/RetailInventTable') AS T(c)
	) AS source ([ITEMID], [BARCODESETUPID], [BASECOMPARISONUNITCODE], [BLOCKEDONPOS], [DATEBLOCKED], [DATETOACTIVATEITEM], [DATETOBEBLOCKED], [KEYINGINPRICE], [KEYINGINQTY], [MUSTKEYINCOMMENT], [NODISCOUNTALLOWED], [PRINTVARIANTSSHELFLABELS], [PROHIBITRETURN_RU], [QTYBECOMESNEGATIVE], [RECID], [SCALEITEM], [USEEANSTANDARDBARCODE], [ZEROPRICEVALID], [DATAAREAID])
	ON (target.[ITEMID] = source.[ITEMID] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMID], [BARCODESETUPID], [BASECOMPARISONUNITCODE], [BLOCKEDONPOS], [DATEBLOCKED], [DATETOACTIVATEITEM], [DATETOBEBLOCKED], [KEYINGINPRICE], [KEYINGINQTY], [MUSTKEYINCOMMENT], [NODISCOUNTALLOWED], [PRINTVARIANTSSHELFLABELS], [PROHIBITRETURN_RU], [QTYBECOMESNEGATIVE], [RECID], [SCALEITEM], [USEEANSTANDARDBARCODE], [ZEROPRICEVALID], [DATAAREAID])
		VALUES (source.[ITEMID], source.[BARCODESETUPID], source.[BASECOMPARISONUNITCODE], source.[BLOCKEDONPOS], source.[DATEBLOCKED], source.[DATETOACTIVATEITEM], source.[DATETOBEBLOCKED], source.[KEYINGINPRICE], source.[KEYINGINQTY], source.[MUSTKEYINCOMMENT], source.[NODISCOUNTALLOWED], source.[PRINTVARIANTSSHELFLABELS], source.[PROHIBITRETURN_RU], source.[QTYBECOMESNEGATIVE], source.[RECID], source.[SCALEITEM], source.[USEEANSTANDARDBARCODE], source.[ZEROPRICEVALID], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMID] = source.[ITEMID], target.[BARCODESETUPID] = source.[BARCODESETUPID], target.[BASECOMPARISONUNITCODE] = source.[BASECOMPARISONUNITCODE], target.[BLOCKEDONPOS] = source.[BLOCKEDONPOS], target.[DATEBLOCKED] = source.[DATEBLOCKED], target.[DATETOACTIVATEITEM] = source.[DATETOACTIVATEITEM], target.[DATETOBEBLOCKED] = source.[DATETOBEBLOCKED], target.[KEYINGINPRICE] = source.[KEYINGINPRICE], target.[KEYINGINQTY] = source.[KEYINGINQTY], target.[MUSTKEYINCOMMENT] = source.[MUSTKEYINCOMMENT], target.[NODISCOUNTALLOWED] = source.[NODISCOUNTALLOWED], target.[PRINTVARIANTSSHELFLABELS] = source.[PRINTVARIANTSSHELFLABELS], target.[PROHIBITRETURN_RU] = source.[PROHIBITRETURN_RU], target.[QTYBECOMESNEGATIVE] = source.[QTYBECOMESNEGATIVE], target.[RECID] = source.[RECID], target.[SCALEITEM] = source.[SCALEITEM], target.[USEEANSTANDARDBARCODE] = source.[USEEANSTANDARDBARCODE], target.[ZEROPRICEVALID] = source.[ZEROPRICEVALID], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- InventDimCombination
	PRINT 'Upserting into [ax].INVENTDIMCOMBINATION ..'
	MERGE [ax].INVENTDIMCOMBINATION AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), T.c.value('(../ItemId)[1]', 'NVARCHAR(20)')) AS [ITEMID],
			ISNULL(T.c.value('(DistinctProductVariant)[1]', 'BIGINT'), '0') AS [DISTINCTPRODUCTVARIANT],
			ISNULL(T.c.value('(InventDimId)[1]', 'NVARCHAR(20)'), '') AS [INVENTDIMID],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RetailVariantId)[1]', 'NVARCHAR(10)'), '') AS [RETAILVARIANTID],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination') AS T(c)
	) AS source ([ITEMID], [DISTINCTPRODUCTVARIANT], [INVENTDIMID], [RECID], [RETAILVARIANTID], [DATAAREAID])
	ON (target.[ITEMID] = source.[ITEMID] AND target.[INVENTDIMID] = source.[INVENTDIMID] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMID], [DISTINCTPRODUCTVARIANT], [INVENTDIMID], [RECID], [RETAILVARIANTID], [DATAAREAID])
		VALUES (source.[ITEMID], source.[DISTINCTPRODUCTVARIANT], source.[INVENTDIMID], source.[RECID], source.[RETAILVARIANTID], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMID] = source.[ITEMID], target.[DISTINCTPRODUCTVARIANT] = source.[DISTINCTPRODUCTVARIANT], target.[INVENTDIMID] = source.[INVENTDIMID], target.[RECID] = source.[RECID], target.[RETAILVARIANTID] = source.[RETAILVARIANTID], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProduct
	PRINT 'Upserting into [ax].ECORESPRODUCT ..'
	MERGE [ax].ECORESPRODUCT AS target
	USING (
		SELECT DISTINCT
			ISNULL(T.c.value('(DisplayProductNumber)[1]', 'NVARCHAR(70)'), '') AS [DISPLAYPRODUCTNUMBER],
			CASE T.c.value('(ProductType)[1]', 'NVARCHAR(4000)')
				WHEN 'Item' THEN 0
				WHEN 'Service' THEN 1
				ELSE 0
			END AS [PRODUCTTYPE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(SearchName)[1]', 'NVARCHAR(20)'), '') AS [SEARCHNAME],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [INSTANCERELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct') AS T(c)
		UNION
		SELECT DISTINCT
			ISNULL(T.c.value('(DisplayProductNumber)[1]', 'NVARCHAR(70)'), '') AS [DISPLAYPRODUCTNUMBER],
			CASE T.c.value('(ProductType)[1]', 'NVARCHAR(4000)')
				WHEN 'Item' THEN 0
				WHEN 'Service' THEN 1
				ELSE 0
			END AS [PRODUCTTYPE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(SearchName)[1]', 'NVARCHAR(20)'), '') AS [SEARCHNAME],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [INSTANCERELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct') AS T(c)
	) AS source ([DISPLAYPRODUCTNUMBER], [PRODUCTTYPE], [RECID], [SEARCHNAME], [RELATIONTYPE], [INSTANCERELATIONTYPE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([DISPLAYPRODUCTNUMBER], [PRODUCTTYPE], [RECID], [SEARCHNAME], [RELATIONTYPE], [INSTANCERELATIONTYPE])
		VALUES (source.[DISPLAYPRODUCTNUMBER], source.[PRODUCTTYPE], source.[RECID], source.[SEARCHNAME], source.[RELATIONTYPE], source.[INSTANCERELATIONTYPE])
	WHEN MATCHED THEN
		UPDATE SET target.[DISPLAYPRODUCTNUMBER] = source.[DISPLAYPRODUCTNUMBER], target.[PRODUCTTYPE] = source.[PRODUCTTYPE], target.[RECID] = source.[RECID], target.[SEARCHNAME] = source.[SEARCHNAME], target.[RELATIONTYPE] = source.[RELATIONTYPE], target.[INSTANCERELATIONTYPE] = source.[INSTANCERELATIONTYPE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResDistinctProductVariant
	PRINT 'Upserting into [ax].ECORESDISTINCTPRODUCTVARIANT ..'
	MERGE [ax].ECORESDISTINCTPRODUCTVARIANT AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(ProductMaster)[1]', 'BIGINT'), '0') AS [PRODUCTMASTER]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResDistinctProductVariant') AS T(c)
	) AS source ([RECID], [PRODUCTMASTER])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [PRODUCTMASTER])
		VALUES (source.[RECID], source.[PRODUCTMASTER])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[PRODUCTMASTER] = source.[PRODUCTMASTER];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductCategory
	PRINT 'Upserting into [ax].ECORESPRODUCTCATEGORY ..'
	MERGE [ax].ECORESPRODUCTCATEGORY AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(CategoryHierarchy)[1]', 'BIGINT'), '0') AS [CATEGORYHIERARCHY],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductCategory') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(CategoryHierarchy)[1]', 'BIGINT'), '0') AS [CATEGORYHIERARCHY],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductCategory') AS T(c)
	) AS source ([RECID], [CATEGORYHIERARCHY], [CATEGORY], [PRODUCT])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [CATEGORYHIERARCHY], [CATEGORY], [PRODUCT])
		VALUES (source.[RECID], source.[CATEGORYHIERARCHY], source.[CATEGORY], source.[PRODUCT])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[CATEGORYHIERARCHY] = source.[CATEGORYHIERARCHY], target.[CATEGORY] = source.[CATEGORY], target.[PRODUCT] = source.[PRODUCT];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductInstanceValue
	PRINT 'Upserting into [ax].ECORESPRODUCTINSTANCEVALUE ..'
	MERGE [ax].ECORESPRODUCTINSTANCEVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue') AS T(c)
	) AS source ([RECID], [PRODUCT])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [PRODUCT])
		VALUES (source.[RECID], source.[PRODUCT])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[PRODUCT] = source.[PRODUCT];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResInstanceValue
	PRINT 'Upserting into [ax].ECORESINSTANCEVALUE ..'
	MERGE [ax].ECORESINSTANCEVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(InstanceRelationType)[1]', 'BIGINT'), '0') AS [INSTANCERELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(InstanceRelationType)[1]', 'BIGINT'), '0') AS [INSTANCERELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue') AS T(c)
	) AS source ([RECID], [INSTANCERELATIONTYPE], [RELATIONTYPE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [INSTANCERELATIONTYPE], [RELATIONTYPE])
		VALUES (source.[RECID], source.[INSTANCERELATIONTYPE], source.[RELATIONTYPE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[INSTANCERELATIONTYPE] = source.[INSTANCERELATIONTYPE], target.[RELATIONTYPE] = source.[RELATIONTYPE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResAttributeValue
	PRINT 'Upserting into [ax].ECORESATTRIBUTEVALUE ..'
	MERGE [ax].ECORESATTRIBUTEVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Value)[1]', 'BIGINT'), '0') AS [VALUE],
			ISNULL(T.c.value('(InstanceValue)[1]', 'BIGINT'), '0') AS [INSTANCEVALUE],
			ISNULL(T.c.value('(Attribute)[1]', 'BIGINT'), '0') AS [ATTRIBUTE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Value)[1]', 'BIGINT'), '0') AS [VALUE],
			ISNULL(T.c.value('(InstanceValue)[1]', 'BIGINT'), '0') AS [INSTANCEVALUE],
			ISNULL(T.c.value('(Attribute)[1]', 'BIGINT'), '0') AS [ATTRIBUTE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue') AS T(c)
	) AS source ([RECID], [VALUE], [INSTANCEVALUE], [ATTRIBUTE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [VALUE], [INSTANCEVALUE], [ATTRIBUTE])
		VALUES (source.[RECID], source.[VALUE], source.[INSTANCEVALUE], source.[ATTRIBUTE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[VALUE] = source.[VALUE], target.[INSTANCEVALUE] = source.[INSTANCEVALUE], target.[ATTRIBUTE] = source.[ATTRIBUTE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResValue
	PRINT 'Upserting into [ax].ECORESVALUE ..'
	MERGE [ax].ECORESVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(InstanceRelationType)[1]', 'BIGINT'), '0') AS [INSTANCERELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(InstanceRelationType)[1]', 'BIGINT'), '0') AS [INSTANCERELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue') AS T(c)
	) AS source ([RECID], [INSTANCERELATIONTYPE], [RELATIONTYPE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [INSTANCERELATIONTYPE], [RELATIONTYPE])
		VALUES (source.[RECID], source.[INSTANCERELATIONTYPE], source.[RELATIONTYPE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[INSTANCERELATIONTYPE] = source.[INSTANCERELATIONTYPE], target.[RELATIONTYPE] = source.[RELATIONTYPE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResBooleanValue
	PRINT 'Upserting into [ax].ECORESBOOLEANVALUE ..'
	MERGE [ax].ECORESBOOLEANVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			CASE T.c.value('(BooleanValue)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [BOOLEANVALUE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResBooleanValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			CASE T.c.value('(BooleanValue)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [BOOLEANVALUE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResBooleanValue') AS T(c)
	) AS source ([RECID], [BOOLEANVALUE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [BOOLEANVALUE])
		VALUES (source.[RECID], source.[BOOLEANVALUE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[BOOLEANVALUE] = source.[BOOLEANVALUE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResDateTimeValue
	PRINT 'Upserting into [ax].ECORESDATETIMEVALUE ..'
	MERGE [ax].ECORESDATETIMEVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(DateTimeValue)[1]', 'DATETIME'), '1900-01-01 00:00:00.000') AS [DATETIMEVALUE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResDateTimeValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(DateTimeValue)[1]', 'DATETIME'), '1900-01-01 00:00:00.000') AS [DATETIMEVALUE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResDateTimeValue') AS T(c)
	) AS source ([RECID], [DATETIMEVALUE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [DATETIMEVALUE])
		VALUES (source.[RECID], source.[DATETIMEVALUE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[DATETIMEVALUE] = source.[DATETIMEVALUE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResFloatValue
	PRINT 'Upserting into [ax].ECORESFLOATVALUE ..'
	MERGE [ax].ECORESFLOATVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(FloatValue)[1]', 'NUMERIC(32, 16)'), '0') AS [FLOATVALUE],
			ISNULL(T.c.value('(FloatUnitOfMeasure)[1]', 'BIGINT'), '0') AS [FLOATUNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResFloatValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(FloatValue)[1]', 'NUMERIC(32, 16)'), '0') AS [FLOATVALUE],
			ISNULL(T.c.value('(FloatUnitOfMeasure)[1]', 'BIGINT'), '0') AS [FLOATUNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResFloatValue') AS T(c)
	) AS source ([RECID], [FLOATVALUE], [FLOATUNITOFMEASURE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [FLOATVALUE], [FLOATUNITOFMEASURE])
		VALUES (source.[RECID], source.[FLOATVALUE], source.[FLOATUNITOFMEASURE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[FLOATVALUE] = source.[FLOATVALUE], target.[FLOATUNITOFMEASURE] = source.[FLOATUNITOFMEASURE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResIntValue
	PRINT 'Upserting into [ax].ECORESINTVALUE ..'
	MERGE [ax].ECORESINTVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(IntValue)[1]', 'INT'), '0') AS [INTVALUE],
			ISNULL(T.c.value('(IntUnitOfMeasure)[1]', 'BIGINT'), '0') AS [INTUNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResIntValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(IntValue)[1]', 'INT'), '0') AS [INTVALUE],
			ISNULL(T.c.value('(IntUnitOfMeasure)[1]', 'BIGINT'), '0') AS [INTUNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResIntValue') AS T(c)
	) AS source ([RECID], [INTVALUE], [INTUNITOFMEASURE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [INTVALUE], [INTUNITOFMEASURE])
		VALUES (source.[RECID], source.[INTVALUE], source.[INTUNITOFMEASURE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[INTVALUE] = source.[INTVALUE], target.[INTUNITOFMEASURE] = source.[INTUNITOFMEASURE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResTextValue
	PRINT 'Upserting into [ax].ECORESTEXTVALUE ..'
	MERGE [ax].ECORESTEXTVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(TextValue)[1]', 'NVARCHAR(1999)'), '') AS [TEXTVALUE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResTextValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(TextValue)[1]', 'NVARCHAR(1999)'), '') AS [TEXTVALUE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResTextValue') AS T(c)
	) AS source ([RECID], [TEXTVALUE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [TEXTVALUE])
		VALUES (source.[RECID], source.[TEXTVALUE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[TEXTVALUE] = source.[TEXTVALUE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResTextValueTranslation
	PRINT 'Upserting into [ax].ECORESTEXTVALUETRANSLATION ..'
	MERGE [ax].ECORESTEXTVALUETRANSLATION AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(TextValueTable)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [TEXTVALUETABLE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(TextValue)[1]', 'NVARCHAR(1999)'), '') AS [TEXTVALUE],
			ISNULL(T.c.value('(Language)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResTextValue/EcoResTextValueTranslation') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(TextValueTable)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [TEXTVALUETABLE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(TextValue)[1]', 'NVARCHAR(1999)'), '') AS [TEXTVALUE],
			ISNULL(T.c.value('(Language)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResTextValue/EcoResTextValueTranslation') AS T(c)
	) AS source ([TEXTVALUETABLE], [RECID], [TEXTVALUE], [LANGUAGE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([TEXTVALUETABLE], [RECID], [TEXTVALUE], [LANGUAGE])
		VALUES (source.[TEXTVALUETABLE], source.[RECID], source.[TEXTVALUE], source.[LANGUAGE])
	WHEN MATCHED THEN
		UPDATE SET target.[TEXTVALUETABLE] = source.[TEXTVALUETABLE], target.[RECID] = source.[RECID], target.[TEXTVALUE] = source.[TEXTVALUE], target.[LANGUAGE] = source.[LANGUAGE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResCurrencyValue
	PRINT 'Upserting into [ax].ECORESCURRENCYVALUE ..'
	MERGE [ax].ECORESCURRENCYVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(CurrencyValue)[1]', 'NUMERIC(32, 16)'), '0') AS [CURRENCYVALUE],
			ISNULL(T.c.value('(CurrencyCode)[1]', 'NVARCHAR(3)'), '') AS [CURRENCYCODE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResCurrencyValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(CurrencyValue)[1]', 'NUMERIC(32, 16)'), '0') AS [CURRENCYVALUE],
			ISNULL(T.c.value('(CurrencyCode)[1]', 'NVARCHAR(3)'), '') AS [CURRENCYCODE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResCurrencyValue') AS T(c)
	) AS source ([RECID], [CURRENCYVALUE], [CURRENCYCODE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [CURRENCYVALUE], [CURRENCYCODE])
		VALUES (source.[RECID], source.[CURRENCYVALUE], source.[CURRENCYCODE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[CURRENCYVALUE] = source.[CURRENCYVALUE], target.[CURRENCYCODE] = source.[CURRENCYCODE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResReferenceValue
	PRINT 'Upserting into [ax].ECORESREFERENCEVALUE ..'
	MERGE [ax].ECORESREFERENCEVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RefFieldId)[1]', 'INT'), '0') AS [REFFIELDID],
			ISNULL(T.c.value('(RefRecId)[1]', 'BIGINT'), '0') AS [REFRECID],
			ISNULL(T.c.value('(RefTableId)[1]', 'INT'), '0') AS [REFTABLEID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResReferenceValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RefFieldId)[1]', 'INT'), '0') AS [REFFIELDID],
			ISNULL(T.c.value('(RefRecId)[1]', 'BIGINT'), '0') AS [REFRECID],
			ISNULL(T.c.value('(RefTableId)[1]', 'INT'), '0') AS [REFTABLEID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductInstanceValue/EcoResInstanceValue/EcoResAttributeValue/EcoResValue/EcoResReferenceValue') AS T(c)
	) AS source ([RECID], [REFFIELDID], [REFRECID], [REFTABLEID])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [REFFIELDID], [REFRECID], [REFTABLEID])
		VALUES (source.[RECID], source.[REFFIELDID], source.[REFRECID], source.[REFTABLEID])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[REFFIELDID] = source.[REFFIELDID], target.[REFRECID] = source.[REFRECID], target.[REFTABLEID] = source.[REFTABLEID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResTrackingDimensionGroupProduct
	PRINT 'Upserting into [ax].ECORESTRACKINGDIMENSIONGROUPPRODUCT ..'
	MERGE [ax].ECORESTRACKINGDIMENSIONGROUPPRODUCT AS target
	USING (
		SELECT DISTINCT
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(TrackingDimensionGroup)[1]', 'BIGINT'), '0') AS [TRACKINGDIMENSIONGROUP]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResTrackingDimensionGroupProduct') AS T(c)
		UNION
		SELECT DISTINCT
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(TrackingDimensionGroup)[1]', 'BIGINT'), '0') AS [TRACKINGDIMENSIONGROUP]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResTrackingDimensionGroupProduct') AS T(c)
	) AS source ([PRODUCT], [RECID], [TRACKINGDIMENSIONGROUP])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([PRODUCT], [RECID], [TRACKINGDIMENSIONGROUP])
		VALUES (source.[PRODUCT], source.[RECID], source.[TRACKINGDIMENSIONGROUP])
	WHEN MATCHED THEN
		UPDATE SET target.[PRODUCT] = source.[PRODUCT], target.[RECID] = source.[RECID], target.[TRACKINGDIMENSIONGROUP] = source.[TRACKINGDIMENSIONGROUP];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductTranslation
	PRINT 'Upserting into [ax].ECORESPRODUCTTRANSLATION ..'
	MERGE [ax].ECORESPRODUCTTRANSLATION AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(Product)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [PRODUCT],
			ISNULL(T.c.value('(Description)[1]', 'NVARCHAR(1000)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(60)'), '') AS [NAME],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductTranslation') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(Product)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [PRODUCT],
			ISNULL(T.c.value('(Description)[1]', 'NVARCHAR(1000)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(60)'), '') AS [NAME],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductTranslation') AS T(c)
	) AS source ([PRODUCT], [DESCRIPTION], [LANGUAGEID], [NAME], [RECID])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([PRODUCT], [DESCRIPTION], [LANGUAGEID], [NAME], [RECID])
		VALUES (source.[PRODUCT], source.[DESCRIPTION], source.[LANGUAGEID], source.[NAME], source.[RECID])
	WHEN MATCHED THEN
		UPDATE SET target.[PRODUCT] = source.[PRODUCT], target.[DESCRIPTION] = source.[DESCRIPTION], target.[LANGUAGEID] = source.[LANGUAGEID], target.[NAME] = source.[NAME], target.[RECID] = source.[RECID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductVariantDimensionValue
	PRINT 'Upserting into [ax].ECORESPRODUCTVARIANTDIMENSIONVALUE ..'
	MERGE [ax].ECORESPRODUCTVARIANTDIMENSIONVALUE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(DistinctProductVariant)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [DISTINCTPRODUCTVARIANT],
			ISNULL(T.c.value('(ProductDimensionAttribute)[1]', 'BIGINT'), '0') AS [PRODUCTDIMENSIONATTRIBUTE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [INSTANCERELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductVariantDimensionValue') AS T(c)
	) AS source ([DISTINCTPRODUCTVARIANT], [PRODUCTDIMENSIONATTRIBUTE], [RECID], [RELATIONTYPE], [INSTANCERELATIONTYPE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([DISTINCTPRODUCTVARIANT], [PRODUCTDIMENSIONATTRIBUTE], [RECID], [RELATIONTYPE], [INSTANCERELATIONTYPE])
		VALUES (source.[DISTINCTPRODUCTVARIANT], source.[PRODUCTDIMENSIONATTRIBUTE], source.[RECID], source.[RELATIONTYPE], source.[INSTANCERELATIONTYPE])
	WHEN MATCHED THEN
		UPDATE SET target.[DISTINCTPRODUCTVARIANT] = source.[DISTINCTPRODUCTVARIANT], target.[PRODUCTDIMENSIONATTRIBUTE] = source.[PRODUCTDIMENSIONATTRIBUTE], target.[RECID] = source.[RECID], target.[RELATIONTYPE] = source.[RELATIONTYPE], target.[INSTANCERELATIONTYPE] = source.[INSTANCERELATIONTYPE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductVariantColor
	PRINT 'Upserting into [ax].ECORESPRODUCTVARIANTCOLOR ..'
	MERGE [ax].ECORESPRODUCTVARIANTCOLOR AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Color)[1]', 'BIGINT'), '0') AS [COLOR]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductVariantDimensionValue/EcoResProductVariantColor') AS T(c)
	) AS source ([RECID], [COLOR])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [COLOR])
		VALUES (source.[RECID], source.[COLOR])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[COLOR] = source.[COLOR];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductVariantConfiguration
	PRINT 'Upserting into [ax].ECORESPRODUCTVARIANTCONFIGURATION ..'
	MERGE [ax].ECORESPRODUCTVARIANTCONFIGURATION AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Configuration)[1]', 'BIGINT'), '0') AS [CONFIGURATION]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductVariantDimensionValue/EcoResProductVariantConfiguration') AS T(c)
	) AS source ([RECID], [CONFIGURATION])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [CONFIGURATION])
		VALUES (source.[RECID], source.[CONFIGURATION])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[CONFIGURATION] = source.[CONFIGURATION];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductVariantSize
	PRINT 'Upserting into [ax].ECORESPRODUCTVARIANTSIZE ..'
	MERGE [ax].ECORESPRODUCTVARIANTSIZE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Size)[1]', 'BIGINT'), '0') AS [SIZE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductVariantDimensionValue/EcoResProductVariantSize') AS T(c)
	) AS source ([RECID], [SIZE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [SIZE])
		VALUES (source.[RECID], source.[SIZE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[SIZE] = source.[SIZE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductVariantStyle
	PRINT 'Upserting into [ax].ECORESPRODUCTVARIANTSTYLE ..'
	MERGE [ax].ECORESPRODUCTVARIANTSTYLE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Style)[1]', 'BIGINT'), '0') AS [STYLE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/EcoResProductVariantDimensionValue/EcoResProductVariantStyle') AS T(c)
	) AS source ([RECID], [STYLE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [STYLE])
		VALUES (source.[RECID], source.[STYLE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[STYLE] = source.[STYLE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailGroupMemberLine
	PRINT 'Upserting into [ax].RETAILGROUPMEMBERLINE ..'
	MERGE [ax].RETAILGROUPMEMBERLINE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT],
			ISNULL(T.c.value('(Variant)[1]', 'BIGINT'), '0') AS [VARIANT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/RetailGroupMemberLine') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT],
			ISNULL(T.c.value('(Variant)[1]', 'BIGINT'), '0') AS [VARIANT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/RetailGroupMemberLine') AS T(c)
	) AS source ([RECID], [CATEGORY], [PRODUCT], [VARIANT])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [CATEGORY], [PRODUCT], [VARIANT])
		VALUES (source.[RECID], source.[CATEGORY], source.[PRODUCT], source.[VARIANT])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[CATEGORY] = source.[CATEGORY], target.[PRODUCT] = source.[PRODUCT], target.[VARIANT] = source.[VARIANT];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailSpecialCategoryMember
	PRINT 'Upserting into [ax].RETAILSPECIALCATEGORYMEMBER ..'
	MERGE [ax].RETAILSPECIALCATEGORYMEMBER AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(RetailGroupMember)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [RETAILGROUPMEMBER],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/RetailGroupMemberLine/RetailSpecialCategoryMember') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(RetailGroupMember)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [RETAILGROUPMEMBER],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/RetailGroupMemberLine/RetailSpecialCategoryMember') AS T(c)
	) AS source ([RETAILGROUPMEMBER], [RECID], [CATEGORY])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RETAILGROUPMEMBER], [RECID], [CATEGORY])
		VALUES (source.[RETAILGROUPMEMBER], source.[RECID], source.[CATEGORY])
	WHEN MATCHED THEN
		UPDATE SET target.[RETAILGROUPMEMBER] = source.[RETAILGROUPMEMBER], target.[RECID] = source.[RECID], target.[CATEGORY] = source.[CATEGORY];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailPubCatalogProduct
	PRINT 'Upserting into [ax].RETAILPUBCATALOGPRODUCT ..'
	MERGE [ax].RETAILPUBCATALOGPRODUCT AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(Catalog)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOG],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/RetailPubCatalogProduct') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(Catalog)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOG],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/RetailPubCatalogProduct') AS T(c)
	) AS source ([CATALOG], [RECID], [ORIGIN], [PRODUCT])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([CATALOG], [RECID], [ORIGIN], [PRODUCT])
		VALUES (source.[CATALOG], source.[RECID], source.[ORIGIN], source.[PRODUCT])
	WHEN MATCHED THEN
		UPDATE SET target.[CATALOG] = source.[CATALOG], target.[RECID] = source.[RECID], target.[ORIGIN] = source.[ORIGIN], target.[PRODUCT] = source.[PRODUCT];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailPubCatalogProductCategory
	PRINT 'Upserting into [ax].RETAILPUBCATALOGPRODUCTCATEGORY ..'
	MERGE [ax].RETAILPUBCATALOGPRODUCTCATEGORY AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(CatalogProduct)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOGPRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY],
			ISNULL(T.c.value('(CategoryHierarchy)[1]', 'BIGINT'), '0') AS [CATEGORYHIERARCHY],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/RetailPubCatalogProduct/RetailPubCatalogProductCategory') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(CatalogProduct)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOGPRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Category)[1]', 'BIGINT'), '0') AS [CATEGORY],
			ISNULL(T.c.value('(CategoryHierarchy)[1]', 'BIGINT'), '0') AS [CATEGORYHIERARCHY],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/RetailPubCatalogProduct/RetailPubCatalogProductCategory') AS T(c)
	) AS source ([CATALOGPRODUCT], [RECID], [CATEGORY], [CATEGORYHIERARCHY], [ORIGIN])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([CATALOGPRODUCT], [RECID], [CATEGORY], [CATEGORYHIERARCHY], [ORIGIN])
		VALUES (source.[CATALOGPRODUCT], source.[RECID], source.[CATEGORY], source.[CATEGORYHIERARCHY], source.[ORIGIN])
	WHEN MATCHED THEN
		UPDATE SET target.[CATALOGPRODUCT] = source.[CATALOGPRODUCT], target.[RECID] = source.[RECID], target.[CATEGORY] = source.[CATEGORY], target.[CATEGORYHIERARCHY] = source.[CATEGORYHIERARCHY], target.[ORIGIN] = source.[ORIGIN];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailPubCatalogProductRelation
	PRINT 'Upserting into [ax].RETAILPUBCATALOGPRODUCTRELATION ..'
	MERGE [ax].RETAILPUBCATALOGPRODUCTRELATION AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(CatalogProduct)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOGPRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN],
			ISNULL(T.c.value('(ProductRelationType)[1]', 'BIGINT'), '0') AS [PRODUCTRELATIONTYPE],
			ISNULL(T.c.value('(RelatedProduct)[1]', 'BIGINT'), '0') AS [RELATEDPRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/RetailPubCatalogProduct/RetailPubCatalogProductRelation') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(CatalogProduct)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOGPRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN],
			ISNULL(T.c.value('(ProductRelationType)[1]', 'BIGINT'), '0') AS [PRODUCTRELATIONTYPE],
			ISNULL(T.c.value('(RelatedProduct)[1]', 'BIGINT'), '0') AS [RELATEDPRODUCT]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/RetailPubCatalogProduct/RetailPubCatalogProductRelation') AS T(c)
	) AS source ([CATALOGPRODUCT], [RECID], [ORIGIN], [PRODUCTRELATIONTYPE], [RELATEDPRODUCT])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([CATALOGPRODUCT], [RECID], [ORIGIN], [PRODUCTRELATIONTYPE], [RELATEDPRODUCT])
		VALUES (source.[CATALOGPRODUCT], source.[RECID], source.[ORIGIN], source.[PRODUCTRELATIONTYPE], source.[RELATEDPRODUCT])
	WHEN MATCHED THEN
		UPDATE SET target.[CATALOGPRODUCT] = source.[CATALOGPRODUCT], target.[RECID] = source.[RECID], target.[ORIGIN] = source.[ORIGIN], target.[PRODUCTRELATIONTYPE] = source.[PRODUCTRELATIONTYPE], target.[RELATEDPRODUCT] = source.[RELATEDPRODUCT];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailPubCatalogProductRelationExclusion
	PRINT 'Upserting into [ax].RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION ..'
	MERGE [ax].RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(CatalogProduct)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOGPRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN],
			ISNULL(T.c.value('(ProductRelation)[1]', 'BIGINT'), '0') AS [PRODUCTRELATION]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/RetailPubCatalogProduct/RetailPubCatalogProductRelationExclusion') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(CatalogProduct)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CATALOGPRODUCT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Origin)[1]', 'BIGINT'), '0') AS [ORIGIN],
			ISNULL(T.c.value('(ProductRelation)[1]', 'BIGINT'), '0') AS [PRODUCTRELATION]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/RetailPubCatalogProduct/RetailPubCatalogProductRelationExclusion') AS T(c)
	) AS source ([CATALOGPRODUCT], [RECID], [ORIGIN], [PRODUCTRELATION])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([CATALOGPRODUCT], [RECID], [ORIGIN], [PRODUCTRELATION])
		VALUES (source.[CATALOGPRODUCT], source.[RECID], source.[ORIGIN], source.[PRODUCTRELATION])
	WHEN MATCHED THEN
		UPDATE SET target.[CATALOGPRODUCT] = source.[CATALOGPRODUCT], target.[RECID] = source.[RECID], target.[ORIGIN] = source.[ORIGIN], target.[PRODUCTRELATION] = source.[PRODUCTRELATION];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailPubProductAttributeValue
	PRINT 'Upserting into [ax].RETAILPUBPRODUCTATTRIBUTEVALUE ..'
	MERGE [ax].RETAILPUBPRODUCTATTRIBUTEVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Attribute)[1]', 'BIGINT'), '0') AS [ATTRIBUTE],
			ISNULL(T.c.value('(Catalog)[1]', 'BIGINT'), '0') AS [CATALOG],
			ISNULL(T.c.value('(DateTimeValue)[1]', 'DATETIME'), '1900-01-01 00:00:00.000') AS [DATETIMEVALUE],
			ISNULL(T.c.value('(FloatValue)[1]', 'NUMERIC(32, 16)'), '0') AS [FLOATVALUE],
			ISNULL(T.c.value('(InternalOrganization)[1]', 'BIGINT'), '0') AS [INTERNALORGANIZATION],
			ISNULL(T.c.value('(IntValue)[1]', 'INT'), '0') AS [INTVALUE],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT],
			ISNULL(T.c.value('(TextValue)[1]', 'NVARCHAR(1999)'), '') AS [TEXTVALUE],
			ISNULL(T.c.value('(UnitOfMeasure)[1]', 'BIGINT'), '0') AS [UNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/EcoResProduct/RetailPubProductAttributeValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Attribute)[1]', 'BIGINT'), '0') AS [ATTRIBUTE],
			ISNULL(T.c.value('(Catalog)[1]', 'BIGINT'), '0') AS [CATALOG],
			ISNULL(T.c.value('(DateTimeValue)[1]', 'DATETIME'), '1900-01-01 00:00:00.000') AS [DATETIMEVALUE],
			ISNULL(T.c.value('(FloatValue)[1]', 'NUMERIC(32, 16)'), '0') AS [FLOATVALUE],
			ISNULL(T.c.value('(InternalOrganization)[1]', 'BIGINT'), '0') AS [INTERNALORGANIZATION],
			ISNULL(T.c.value('(IntValue)[1]', 'INT'), '0') AS [INTVALUE],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Product)[1]', 'BIGINT'), '0') AS [PRODUCT],
			ISNULL(T.c.value('(TextValue)[1]', 'NVARCHAR(1999)'), '') AS [TEXTVALUE],
			ISNULL(T.c.value('(UnitOfMeasure)[1]', 'BIGINT'), '0') AS [UNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/RetailPubProductAttributeValue') AS T(c)
	) AS source ([RECID], [ATTRIBUTE], [CATALOG], [DATETIMEVALUE], [FLOATVALUE], [INTERNALORGANIZATION], [INTVALUE], [LANGUAGEID], [PRODUCT], [TEXTVALUE], [UNITOFMEASURE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [ATTRIBUTE], [CATALOG], [DATETIMEVALUE], [FLOATVALUE], [INTERNALORGANIZATION], [INTVALUE], [LANGUAGEID], [PRODUCT], [TEXTVALUE], [UNITOFMEASURE])
		VALUES (source.[RECID], source.[ATTRIBUTE], source.[CATALOG], source.[DATETIMEVALUE], source.[FLOATVALUE], source.[INTERNALORGANIZATION], source.[INTVALUE], source.[LANGUAGEID], source.[PRODUCT], source.[TEXTVALUE], source.[UNITOFMEASURE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[ATTRIBUTE] = source.[ATTRIBUTE], target.[CATALOG] = source.[CATALOG], target.[DATETIMEVALUE] = source.[DATETIMEVALUE], target.[FLOATVALUE] = source.[FLOATVALUE], target.[INTERNALORGANIZATION] = source.[INTERNALORGANIZATION], target.[INTVALUE] = source.[INTVALUE], target.[LANGUAGEID] = source.[LANGUAGEID], target.[PRODUCT] = source.[PRODUCT], target.[TEXTVALUE] = source.[TEXTVALUE], target.[UNITOFMEASURE] = source.[UNITOFMEASURE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailKitVariantComponent
	PRINT 'Upserting into [ax].RETAILKITVARIANTCOMPONENT ..'
	MERGE [ax].RETAILKITVARIANTCOMPONENT AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(KitVariant)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [KITVARIANT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Component)[1]', 'BIGINT'), '0') AS [COMPONENT],
			ISNULL(T.c.value('(ComponentRecId)[1]', 'BIGINT'), '0') AS [COMPONENTRECID],
			ISNULL(T.c.value('(Quantity)[1]', 'NUMERIC(32, 16)'), '0') AS [QUANTITY],
			ISNULL(T.c.value('(UnitOfMeasure)[1]', 'BIGINT'), '0') AS [UNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/RetailKitVariantComponent') AS T(c)
	) AS source ([KITVARIANT], [RECID], [COMPONENT], [COMPONENTRECID], [QUANTITY], [UNITOFMEASURE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([KITVARIANT], [RECID], [COMPONENT], [COMPONENTRECID], [QUANTITY], [UNITOFMEASURE])
		VALUES (source.[KITVARIANT], source.[RECID], source.[COMPONENT], source.[COMPONENTRECID], source.[QUANTITY], source.[UNITOFMEASURE])
	WHEN MATCHED THEN
		UPDATE SET target.[KITVARIANT] = source.[KITVARIANT], target.[RECID] = source.[RECID], target.[COMPONENT] = source.[COMPONENT], target.[COMPONENTRECID] = source.[COMPONENTRECID], target.[QUANTITY] = source.[QUANTITY], target.[UNITOFMEASURE] = source.[UNITOFMEASURE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- InventDim
	PRINT 'Upserting into [ax].INVENTDIM ..'
	MERGE [ax].INVENTDIM AS target
	USING (
		SELECT DISTINCT
			ISNULL(T.c.value('(ConfigId)[1]', 'NVARCHAR(10)'), '') AS [CONFIGID],
			ISNULL(T.c.value('(InventBatchId)[1]', 'NVARCHAR(20)'), '') AS [INVENTBATCHID],
			ISNULL(T.c.value('(InventColorId)[1]', 'NVARCHAR(10)'), '') AS [INVENTCOLORID],
			ISNULL(T.c.value('(inventDimId)[1]', 'NVARCHAR(20)'), '') AS [INVENTDIMID],
			ISNULL(T.c.value('(InventGTDId_RU)[1]', 'NVARCHAR(30)'), '') AS [INVENTGTDID_RU],
			ISNULL(T.c.value('(InventLocationId)[1]', 'NVARCHAR(10)'), '') AS [INVENTLOCATIONID],
			ISNULL(T.c.value('(InventOwnerId_RU)[1]', 'NVARCHAR(20)'), '') AS [INVENTOWNERID_RU],
			ISNULL(T.c.value('(InventProfileId_RU)[1]', 'NVARCHAR(10)'), '') AS [INVENTPROFILEID_RU],
			ISNULL(T.c.value('(InventSerialId)[1]', 'NVARCHAR(20)'), '') AS [INVENTSERIALID],
			ISNULL(T.c.value('(InventSiteId)[1]', 'NVARCHAR(10)'), '') AS [INVENTSITEID],
			ISNULL(T.c.value('(InventSizeId)[1]', 'NVARCHAR(10)'), '') AS [INVENTSIZEID],
			ISNULL(T.c.value('(InventStyleId)[1]', 'NVARCHAR(10)'), '') AS [INVENTSTYLEID],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(WMSLocationId)[1]', 'NVARCHAR(10)'), '') AS [WMSLOCATIONID],
			ISNULL(T.c.value('(WMSPalletId)[1]', 'NVARCHAR(18)'), '') AS [WMSPALLETID],
			ISNULL(T.c.value('(SHA1HashHex)[1]', 'NVARCHAR(40)'), '') AS [SHA1HASHHEX],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventDimCombination/InventDim') AS T(c)
	) AS source ([CONFIGID], [INVENTBATCHID], [INVENTCOLORID], [INVENTDIMID], [INVENTGTDID_RU], [INVENTLOCATIONID], [INVENTOWNERID_RU], [INVENTPROFILEID_RU], [INVENTSERIALID], [INVENTSITEID], [INVENTSIZEID], [INVENTSTYLEID], [RECID], [WMSLOCATIONID], [WMSPALLETID], [SHA1HASHHEX], [DATAAREAID])
	ON (target.[INVENTDIMID] = source.[INVENTDIMID] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([CONFIGID], [INVENTBATCHID], [INVENTCOLORID], [INVENTDIMID], [INVENTGTDID_RU], [INVENTLOCATIONID], [INVENTOWNERID_RU], [INVENTPROFILEID_RU], [INVENTSERIALID], [INVENTSITEID], [INVENTSIZEID], [INVENTSTYLEID], [RECID], [WMSLOCATIONID], [WMSPALLETID], [SHA1HASHHEX], [DATAAREAID])
		VALUES (source.[CONFIGID], source.[INVENTBATCHID], source.[INVENTCOLORID], source.[INVENTDIMID], source.[INVENTGTDID_RU], source.[INVENTLOCATIONID], source.[INVENTOWNERID_RU], source.[INVENTPROFILEID_RU], source.[INVENTSERIALID], source.[INVENTSITEID], source.[INVENTSIZEID], source.[INVENTSTYLEID], source.[RECID], source.[WMSLOCATIONID], source.[WMSPALLETID], source.[SHA1HASHHEX], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[CONFIGID] = source.[CONFIGID], target.[INVENTBATCHID] = source.[INVENTBATCHID], target.[INVENTCOLORID] = source.[INVENTCOLORID], target.[INVENTDIMID] = source.[INVENTDIMID], target.[INVENTGTDID_RU] = source.[INVENTGTDID_RU], target.[INVENTLOCATIONID] = source.[INVENTLOCATIONID], target.[INVENTOWNERID_RU] = source.[INVENTOWNERID_RU], target.[INVENTPROFILEID_RU] = source.[INVENTPROFILEID_RU], target.[INVENTSERIALID] = source.[INVENTSERIALID], target.[INVENTSITEID] = source.[INVENTSITEID], target.[INVENTSIZEID] = source.[INVENTSIZEID], target.[INVENTSTYLEID] = source.[INVENTSTYLEID], target.[RECID] = source.[RECID], target.[WMSLOCATIONID] = source.[WMSLOCATIONID], target.[WMSPALLETID] = source.[WMSPALLETID], target.[SHA1HASHHEX] = source.[SHA1HASHHEX], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- InventItemBarcode
	PRINT 'Upserting into [ax].INVENTITEMBARCODE ..'
	MERGE [ax].INVENTITEMBARCODE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(itemId)[1]', 'NVARCHAR(20)'), T.c.value('(../ItemId)[1]', 'NVARCHAR(20)')) AS [ITEMID],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(itemBarCode)[1]', 'NVARCHAR(80)'), '') AS [ITEMBARCODE],
			ISNULL(T.c.value('(inventDimId)[1]', 'NVARCHAR(20)'), '') AS [INVENTDIMID],
			ISNULL(T.c.value('(barcodeSetupId)[1]', 'NVARCHAR(10)'), '') AS [BARCODESETUPID],
			CASE T.c.value('(useForPrinting)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [USEFORPRINTING],
			CASE T.c.value('(useForInput)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [USEFORINPUT],
			ISNULL(T.c.value('(description)[1]', 'NVARCHAR(60)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(qty)[1]', 'NUMERIC(32, 16)'), '0') AS [QTY],
			ISNULL(T.c.value('(UnitID)[1]', 'NVARCHAR(10)'), '') AS [UNITID],
			ISNULL(T.c.value('(RetailVariantId)[1]', 'NVARCHAR(10)'), '') AS [RETAILVARIANTID],
			CASE T.c.value('(RetailShowForItem)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [RETAILSHOWFORITEM],
			CASE T.c.value('(Blocked)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [BLOCKED],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventItemBarcode') AS T(c)
	) AS source ([ITEMID], [RECID], [ITEMBARCODE], [INVENTDIMID], [BARCODESETUPID], [USEFORPRINTING], [USEFORINPUT], [DESCRIPTION], [QTY], [UNITID], [RETAILVARIANTID], [RETAILSHOWFORITEM], [BLOCKED], [DATAAREAID])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMID], [RECID], [ITEMBARCODE], [INVENTDIMID], [BARCODESETUPID], [USEFORPRINTING], [USEFORINPUT], [DESCRIPTION], [QTY], [UNITID], [RETAILVARIANTID], [RETAILSHOWFORITEM], [BLOCKED], [DATAAREAID])
		VALUES (source.[ITEMID], source.[RECID], source.[ITEMBARCODE], source.[INVENTDIMID], source.[BARCODESETUPID], source.[USEFORPRINTING], source.[USEFORINPUT], source.[DESCRIPTION], source.[QTY], source.[UNITID], source.[RETAILVARIANTID], source.[RETAILSHOWFORITEM], source.[BLOCKED], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMID] = source.[ITEMID], target.[RECID] = source.[RECID], target.[ITEMBARCODE] = source.[ITEMBARCODE], target.[INVENTDIMID] = source.[INVENTDIMID], target.[BARCODESETUPID] = source.[BARCODESETUPID], target.[USEFORPRINTING] = source.[USEFORPRINTING], target.[USEFORINPUT] = source.[USEFORINPUT], target.[DESCRIPTION] = source.[DESCRIPTION], target.[QTY] = source.[QTY], target.[UNITID] = source.[UNITID], target.[RETAILVARIANTID] = source.[RETAILVARIANTID], target.[RETAILSHOWFORITEM] = source.[RETAILSHOWFORITEM], target.[BLOCKED] = source.[BLOCKED], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- InventSerial
	PRINT 'Upserting into [ax].INVENTSERIAL ..'
	MERGE [ax].INVENTSERIAL AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), T.c.value('(../ItemId)[1]', 'NVARCHAR(20)')) AS [ITEMID],
			ISNULL(T.c.value('(Description)[1]', 'NVARCHAR(max)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(InventSerialId)[1]', 'NVARCHAR(20)'), '') AS [INVENTSERIALID],
			ISNULL(T.c.value('(ProdDate)[1]', 'DATE'), '1900-01-01') AS [PRODDATE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RFIDTagId)[1]', 'NVARCHAR(24)'), '') AS [RFIDTAGID],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventSerial') AS T(c)
	) AS source ([ITEMID], [DESCRIPTION], [INVENTSERIALID], [PRODDATE], [RECID], [RFIDTAGID], [DATAAREAID])
	ON (target.[ITEMID] = source.[ITEMID] AND target.[INVENTSERIALID] = source.[INVENTSERIALID] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMID], [DESCRIPTION], [INVENTSERIALID], [PRODDATE], [RECID], [RFIDTAGID], [DATAAREAID])
		VALUES (source.[ITEMID], source.[DESCRIPTION], source.[INVENTSERIALID], source.[PRODDATE], source.[RECID], source.[RFIDTAGID], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMID] = source.[ITEMID], target.[DESCRIPTION] = source.[DESCRIPTION], target.[INVENTSERIALID] = source.[INVENTSERIALID], target.[PRODDATE] = source.[PRODDATE], target.[RECID] = source.[RECID], target.[RFIDTAGID] = source.[RFIDTAGID], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailDlvModeProductExploded
	PRINT 'Upserting into [ax].RETAILDLVMODEPRODUCTEXPLODED ..'
	MERGE [ax].RETAILDLVMODEPRODUCTEXPLODED AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(DlvMode)[1]', 'BIGINT'), '0') AS [DLVMODE],
			ISNULL(T.c.value('(InventDim)[1]', 'NVARCHAR(20)'), '') AS [INVENTDIM],
			ISNULL(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), '') AS [ITEMID],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/RetailDlvModeProductExploded') AS T(c)
	) AS source ([RECID], [DLVMODE], [INVENTDIM], [ITEMID], [DATAAREAID])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [DLVMODE], [INVENTDIM], [ITEMID], [DATAAREAID])
		VALUES (source.[RECID], source.[DLVMODE], source.[INVENTDIM], source.[ITEMID], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[DLVMODE] = source.[DLVMODE], target.[INVENTDIM] = source.[INVENTDIM], target.[ITEMID] = source.[ITEMID], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailInventLinkedItem
	PRINT 'Upserting into [ax].RETAILINVENTLINKEDITEM ..'
	MERGE [ax].RETAILINVENTLINKEDITEM AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(itemId)[1]', 'NVARCHAR(20)'), '') AS [ITEMID],
			ISNULL(T.c.value('(unit)[1]', 'NVARCHAR(10)'), '') AS [UNIT],
			ISNULL(T.c.value('(linkedItemId)[1]', 'NVARCHAR(20)'), '') AS [LINKEDITEMID],
			ISNULL(T.c.value('(qty)[1]', 'NUMERIC(32, 16)'), '0') AS [QTY],
			CASE T.c.value('(blocked)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [BLOCKED],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/RetailInventLinkedItem') AS T(c)
	) AS source ([RECID], [ITEMID], [UNIT], [LINKEDITEMID], [QTY], [BLOCKED], [DATAAREAID])
	ON (target.[ITEMID] = source.[ITEMID] AND target.[UNIT] = source.[UNIT] AND target.[LINKEDITEMID] = source.[LINKEDITEMID] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [ITEMID], [UNIT], [LINKEDITEMID], [QTY], [BLOCKED], [DATAAREAID])
		VALUES (source.[RECID], source.[ITEMID], source.[UNIT], source.[LINKEDITEMID], source.[QTY], source.[BLOCKED], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[ITEMID] = source.[ITEMID], target.[UNIT] = source.[UNIT], target.[LINKEDITEMID] = source.[LINKEDITEMID], target.[QTY] = source.[QTY], target.[BLOCKED] = source.[BLOCKED], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- InventTableModule
	PRINT 'Upserting into [ax].INVENTTABLEMODULE ..'
	MERGE [ax].INVENTTABLEMODULE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), T.c.value('(../ItemId)[1]', 'NVARCHAR(20)')) AS [ITEMID],
			CASE T.c.value('(AllocateMarkup)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [ALLOCATEMARKUP],
			CASE T.c.value('(EndDisc)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [ENDDISC],
			CASE T.c.value('(InterCompanyBlocked)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [INTERCOMPANYBLOCKED],
			ISNULL(T.c.value('(LineDisc)[1]', 'NVARCHAR(10)'), '') AS [LINEDISC],
			ISNULL(T.c.value('(Markup)[1]', 'NUMERIC(32, 16)'), '0') AS [MARKUP],
			ISNULL(T.c.value('(MarkupGroupId)[1]', 'NVARCHAR(10)'), '') AS [MARKUPGROUPID],
			ISNULL(T.c.value('(MaximumRetailPrice_IN)[1]', 'NUMERIC(32, 16)'), '0') AS [MAXIMUMRETAILPRICE_IN],
			CASE T.c.value('(ModuleType)[1]', 'NVARCHAR(4000)')
				WHEN 'Invent' THEN 0
				WHEN 'Purch' THEN 1
				WHEN 'Sales' THEN 2
				ELSE 0
			END AS [MODULETYPE],
			ISNULL(T.c.value('(MultiLineDisc)[1]', 'NVARCHAR(10)'), '') AS [MULTILINEDISC],
			ISNULL(T.c.value('(OverDeliveryPct)[1]', 'NUMERIC(32, 16)'), '0') AS [OVERDELIVERYPCT],
			ISNULL(T.c.value('(Price)[1]', 'NUMERIC(32, 16)'), '0') AS [PRICE],
			ISNULL(T.c.value('(PriceDate)[1]', 'DATE'), '1900-01-01') AS [PRICEDATE],
			ISNULL(T.c.value('(PriceQty)[1]', 'NUMERIC(32, 16)'), '0') AS [PRICEQTY],
			ISNULL(T.c.value('(PriceUnit)[1]', 'NUMERIC(32, 16)'), '0') AS [PRICEUNIT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(SuppItemGroupId)[1]', 'NVARCHAR(10)'), '') AS [SUPPITEMGROUPID],
			ISNULL(T.c.value('(TaxItemGroupId)[1]', 'NVARCHAR(10)'), '') AS [TAXITEMGROUPID],
			ISNULL(T.c.value('(UnderDeliveryPct)[1]', 'NUMERIC(32, 16)'), '0') AS [UNDERDELIVERYPCT],
			ISNULL(T.c.value('(UnitId)[1]', 'NVARCHAR(10)'), '') AS [UNITID],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventTableModule') AS T(c)
	) AS source ([ITEMID], [ALLOCATEMARKUP], [ENDDISC], [INTERCOMPANYBLOCKED], [LINEDISC], [MARKUP], [MARKUPGROUPID], [MAXIMUMRETAILPRICE_IN], [MODULETYPE], [MULTILINEDISC], [OVERDELIVERYPCT], [PRICE], [PRICEDATE], [PRICEQTY], [PRICEUNIT], [RECID], [SUPPITEMGROUPID], [TAXITEMGROUPID], [UNDERDELIVERYPCT], [UNITID], [DATAAREAID])
	ON (target.[ITEMID] = source.[ITEMID] AND target.[MODULETYPE] = source.[MODULETYPE] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMID], [ALLOCATEMARKUP], [ENDDISC], [INTERCOMPANYBLOCKED], [LINEDISC], [MARKUP], [MARKUPGROUPID], [MAXIMUMRETAILPRICE_IN], [MODULETYPE], [MULTILINEDISC], [OVERDELIVERYPCT], [PRICE], [PRICEDATE], [PRICEQTY], [PRICEUNIT], [RECID], [SUPPITEMGROUPID], [TAXITEMGROUPID], [UNDERDELIVERYPCT], [UNITID], [DATAAREAID])
		VALUES (source.[ITEMID], source.[ALLOCATEMARKUP], source.[ENDDISC], source.[INTERCOMPANYBLOCKED], source.[LINEDISC], source.[MARKUP], source.[MARKUPGROUPID], source.[MAXIMUMRETAILPRICE_IN], source.[MODULETYPE], source.[MULTILINEDISC], source.[OVERDELIVERYPCT], source.[PRICE], source.[PRICEDATE], source.[PRICEQTY], source.[PRICEUNIT], source.[RECID], source.[SUPPITEMGROUPID], source.[TAXITEMGROUPID], source.[UNDERDELIVERYPCT], source.[UNITID], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMID] = source.[ITEMID], target.[ALLOCATEMARKUP] = source.[ALLOCATEMARKUP], target.[ENDDISC] = source.[ENDDISC], target.[INTERCOMPANYBLOCKED] = source.[INTERCOMPANYBLOCKED], target.[LINEDISC] = source.[LINEDISC], target.[MARKUP] = source.[MARKUP], target.[MARKUPGROUPID] = source.[MARKUPGROUPID], target.[MAXIMUMRETAILPRICE_IN] = source.[MAXIMUMRETAILPRICE_IN], target.[MODULETYPE] = source.[MODULETYPE], target.[MULTILINEDISC] = source.[MULTILINEDISC], target.[OVERDELIVERYPCT] = source.[OVERDELIVERYPCT], target.[PRICE] = source.[PRICE], target.[PRICEDATE] = source.[PRICEDATE], target.[PRICEQTY] = source.[PRICEQTY], target.[PRICEUNIT] = source.[PRICEUNIT], target.[RECID] = source.[RECID], target.[SUPPITEMGROUPID] = source.[SUPPITEMGROUPID], target.[TAXITEMGROUPID] = source.[TAXITEMGROUPID], target.[UNDERDELIVERYPCT] = source.[UNDERDELIVERYPCT], target.[UNITID] = source.[UNITID], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- InventItemSalesSetup
	PRINT 'Upserting into [ax].INVENTITEMSALESSETUP ..'
	MERGE [ax].INVENTITEMSALESSETUP AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), T.c.value('(../ItemId)[1]', 'NVARCHAR(20)')) AS [ITEMID],
			ISNULL(T.c.value('(InventDimId)[1]', 'NVARCHAR(20)'), '') AS [INVENTDIMID],
			ISNULL(T.c.value('(InventDimIdDefault)[1]', 'NVARCHAR(20)'), '') AS [INVENTDIMIDDEFAULT],
			CASE T.c.value('(MandatoryInventLocation)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [MANDATORYINVENTLOCATION],
			CASE T.c.value('(MandatoryInventSite)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [MANDATORYINVENTSITE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventItemSalesSetup') AS T(c)
	) AS source ([ITEMID], [INVENTDIMID], [INVENTDIMIDDEFAULT], [MANDATORYINVENTLOCATION], [MANDATORYINVENTSITE], [RECID], [DATAAREAID])
	ON (target.[ITEMID] = source.[ITEMID] AND target.[INVENTDIMID] = source.[INVENTDIMID] AND target.[DATAAREAID] = source.[DATAAREAID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMID], [INVENTDIMID], [INVENTDIMIDDEFAULT], [MANDATORYINVENTLOCATION], [MANDATORYINVENTSITE], [RECID], [DATAAREAID])
		VALUES (source.[ITEMID], source.[INVENTDIMID], source.[INVENTDIMIDDEFAULT], source.[MANDATORYINVENTLOCATION], source.[MANDATORYINVENTSITE], source.[RECID], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMID] = source.[ITEMID], target.[INVENTDIMID] = source.[INVENTDIMID], target.[INVENTDIMIDDEFAULT] = source.[INVENTDIMIDDEFAULT], target.[MANDATORYINVENTLOCATION] = source.[MANDATORYINVENTLOCATION], target.[MANDATORYINVENTSITE] = source.[MANDATORYINVENTSITE], target.[RECID] = source.[RECID], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResTrackingDimensionGroupItem
	PRINT 'Upserting into [ax].ECORESTRACKINGDIMENSIONGROUPITEM ..'
	MERGE [ax].ECORESTRACKINGDIMENSIONGROUPITEM AS target
	USING (
		SELECT DISTINCT
			ISNULL(T.c.value('(ItemDataAreaId)[1]', 'NVARCHAR(4)'), '') AS [ITEMDATAAREAID],
			ISNULL(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), '') AS [ITEMID],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(TrackingDimensionGroup)[1]', 'BIGINT'), '0') AS [TRACKINGDIMENSIONGROUP]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResTrackingDimensionGroupItem') AS T(c)
	) AS source ([ITEMDATAAREAID], [ITEMID], [RECID], [TRACKINGDIMENSIONGROUP])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMDATAAREAID], [ITEMID], [RECID], [TRACKINGDIMENSIONGROUP])
		VALUES (source.[ITEMDATAAREAID], source.[ITEMID], source.[RECID], source.[TRACKINGDIMENSIONGROUP])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMDATAAREAID] = source.[ITEMDATAAREAID], target.[ITEMID] = source.[ITEMID], target.[RECID] = source.[RECID], target.[TRACKINGDIMENSIONGROUP] = source.[TRACKINGDIMENSIONGROUP];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- InventItemGroupItem
	PRINT 'Upserting into [ax].INVENTITEMGROUPITEM ..'
	MERGE [ax].INVENTITEMGROUPITEM AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ItemDataAreaId)[1]', 'NVARCHAR(4)'), T.c.value('(../dataAreaId)[1]', 'NVARCHAR(4)')) AS [ITEMDATAAREAID],
			COALESCE(T.c.value('(ItemId)[1]', 'NVARCHAR(20)'), T.c.value('(../ItemId)[1]', 'NVARCHAR(20)')) AS [ITEMID],
			ISNULL(T.c.value('(ItemGroupDataAreaId)[1]', 'NVARCHAR(4)'), '') AS [ITEMGROUPDATAAREAID],
			ISNULL(T.c.value('(ItemGroupId)[1]', 'NVARCHAR(10)'), '') AS [ITEMGROUPID],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/InventItemGroupItem') AS T(c)
	) AS source ([ITEMDATAAREAID], [ITEMID], [ITEMGROUPDATAAREAID], [ITEMGROUPID], [RECID])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([ITEMDATAAREAID], [ITEMID], [ITEMGROUPDATAAREAID], [ITEMGROUPID], [RECID])
		VALUES (source.[ITEMDATAAREAID], source.[ITEMID], source.[ITEMGROUPDATAAREAID], source.[ITEMGROUPID], source.[RECID])
	WHEN MATCHED THEN
		UPDATE SET target.[ITEMDATAAREAID] = source.[ITEMDATAAREAID], target.[ITEMID] = source.[ITEMID], target.[ITEMGROUPDATAAREAID] = source.[ITEMGROUPDATAAREAID], target.[ITEMGROUPID] = source.[ITEMGROUPID], target.[RECID] = source.[RECID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailInventAvailability
	PRINT 'Upserting into [ax].RETAILINVENTAVAILABILITY ..'
	MERGE [ax].RETAILINVENTAVAILABILITY AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(AvailPhysical)[1]', 'NUMERIC(32, 16)'), '0') AS [AVAILPHYSICAL],
			ISNULL(T.c.value('(InventDimRecId)[1]', 'BIGINT'), '0') AS [INVENTDIMRECID],
			ISNULL(T.c.value('(ItemRecId)[1]', 'BIGINT'), '0') AS [ITEMRECID],
			ISNULL(T.c.value('(LastInventTrans)[1]', 'BIGINT'), '0') AS [LASTINVENTTRANS]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/RetailInventAvailability') AS T(c)
	) AS source ([RECID], [AVAILPHYSICAL], [INVENTDIMRECID], [ITEMRECID], [LASTINVENTTRANS])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [AVAILPHYSICAL], [INVENTDIMRECID], [ITEMRECID], [LASTINVENTTRANS])
		VALUES (source.[RECID], source.[AVAILPHYSICAL], source.[INVENTDIMRECID], source.[ITEMRECID], source.[LASTINVENTTRANS])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[AVAILPHYSICAL] = source.[AVAILPHYSICAL], target.[INVENTDIMRECID] = source.[INVENTDIMRECID], target.[ITEMRECID] = source.[ITEMRECID], target.[LASTINVENTTRANS] = source.[LASTINVENTTRANS];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductMasterColor
	PRINT 'Upserting into [ax].ECORESPRODUCTMASTERCOLOR ..'
	MERGE [ax].ECORESPRODUCTMASTERCOLOR AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ColorProductMaster)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [COLORPRODUCTMASTER],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Color)[1]', 'BIGINT'), '0') AS [COLOR]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterColor') AS T(c)
	) AS source ([COLORPRODUCTMASTER], [RECID], [COLOR])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([COLORPRODUCTMASTER], [RECID], [COLOR])
		VALUES (source.[COLORPRODUCTMASTER], source.[RECID], source.[COLOR])
	WHEN MATCHED THEN
		UPDATE SET target.[COLORPRODUCTMASTER] = source.[COLORPRODUCTMASTER], target.[RECID] = source.[RECID], target.[COLOR] = source.[COLOR];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductMasterDimensionValue
	PRINT 'Upserting into [ax].ECORESPRODUCTMASTERDIMENSIONVALUE ..'
	MERGE [ax].ECORESPRODUCTMASTERDIMENSIONVALUE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RetailDisplayOrder)[1]', 'NUMERIC(32, 16)'), '0') AS [RETAILDISPLAYORDER],
			ISNULL(T.c.value('(RetailWeight)[1]', 'INT'), '0') AS [RETAILWEIGHT],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [INSTANCERELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterColor/EcoResProductMasterDimensionValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RetailDisplayOrder)[1]', 'NUMERIC(32, 16)'), '0') AS [RETAILDISPLAYORDER],
			ISNULL(T.c.value('(RetailWeight)[1]', 'INT'), '0') AS [RETAILWEIGHT],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [INSTANCERELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterConfiguration/EcoResProductMasterDimensionValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RetailDisplayOrder)[1]', 'NUMERIC(32, 16)'), '0') AS [RETAILDISPLAYORDER],
			ISNULL(T.c.value('(RetailWeight)[1]', 'INT'), '0') AS [RETAILWEIGHT],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [INSTANCERELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterSize/EcoResProductMasterDimensionValue') AS T(c)
		UNION
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(RetailDisplayOrder)[1]', 'NUMERIC(32, 16)'), '0') AS [RETAILDISPLAYORDER],
			ISNULL(T.c.value('(RetailWeight)[1]', 'INT'), '0') AS [RETAILWEIGHT],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [RELATIONTYPE],
			ISNULL(T.c.value('(RelationType)[1]', 'BIGINT'), 0) AS [INSTANCERELATIONTYPE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterStyle/EcoResProductMasterDimensionValue') AS T(c)
	) AS source ([RECID], [RETAILDISPLAYORDER], [RETAILWEIGHT], [RELATIONTYPE], [INSTANCERELATIONTYPE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [RETAILDISPLAYORDER], [RETAILWEIGHT], [RELATIONTYPE], [INSTANCERELATIONTYPE])
		VALUES (source.[RECID], source.[RETAILDISPLAYORDER], source.[RETAILWEIGHT], source.[RELATIONTYPE], source.[INSTANCERELATIONTYPE])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[RETAILDISPLAYORDER] = source.[RETAILDISPLAYORDER], target.[RETAILWEIGHT] = source.[RETAILWEIGHT], target.[RELATIONTYPE] = source.[RELATIONTYPE], target.[INSTANCERELATIONTYPE] = source.[INSTANCERELATIONTYPE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductMasterDimValueTranslation
	PRINT 'Upserting into [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION ..'
	MERGE [ax].ECORESPRODUCTMASTERDIMVALUETRANSLATION AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ProductMasterDimensionValue)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [PRODUCTMASTERDIMENSIONVALUE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Description)[1]', 'NVARCHAR(1000)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(60)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterColor/EcoResProductMasterDimensionValue/EcoResProductMasterDimValueTranslation') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(ProductMasterDimensionValue)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [PRODUCTMASTERDIMENSIONVALUE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Description)[1]', 'NVARCHAR(1000)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(60)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterConfiguration/EcoResProductMasterDimensionValue/EcoResProductMasterDimValueTranslation') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(ProductMasterDimensionValue)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [PRODUCTMASTERDIMENSIONVALUE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Description)[1]', 'NVARCHAR(1000)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(60)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterSize/EcoResProductMasterDimensionValue/EcoResProductMasterDimValueTranslation') AS T(c)
		UNION
		SELECT DISTINCT
			COALESCE(T.c.value('(ProductMasterDimensionValue)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [PRODUCTMASTERDIMENSIONVALUE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Description)[1]', 'NVARCHAR(1000)'), '') AS [DESCRIPTION],
			ISNULL(T.c.value('(LanguageId)[1]', 'NVARCHAR(7)'), '') AS [LANGUAGEID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(60)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterStyle/EcoResProductMasterDimensionValue/EcoResProductMasterDimValueTranslation') AS T(c)
	) AS source ([PRODUCTMASTERDIMENSIONVALUE], [RECID], [DESCRIPTION], [LANGUAGEID], [NAME])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([PRODUCTMASTERDIMENSIONVALUE], [RECID], [DESCRIPTION], [LANGUAGEID], [NAME])
		VALUES (source.[PRODUCTMASTERDIMENSIONVALUE], source.[RECID], source.[DESCRIPTION], source.[LANGUAGEID], source.[NAME])
	WHEN MATCHED THEN
		UPDATE SET target.[PRODUCTMASTERDIMENSIONVALUE] = source.[PRODUCTMASTERDIMENSIONVALUE], target.[RECID] = source.[RECID], target.[DESCRIPTION] = source.[DESCRIPTION], target.[LANGUAGEID] = source.[LANGUAGEID], target.[NAME] = source.[NAME];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResColor
	PRINT 'Upserting into [ax].ECORESCOLOR ..'
	MERGE [ax].ECORESCOLOR AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(10)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterColor/EcoResColor') AS T(c)
	) AS source ([RECID], [NAME])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [NAME])
		VALUES (source.[RECID], source.[NAME])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[NAME] = source.[NAME];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductMasterConfiguration
	PRINT 'Upserting into [ax].ECORESPRODUCTMASTERCONFIGURATION ..'
	MERGE [ax].ECORESPRODUCTMASTERCONFIGURATION AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(ConfigProductMaster)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [CONFIGPRODUCTMASTER],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Configuration)[1]', 'BIGINT'), '0') AS [CONFIGURATION]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterConfiguration') AS T(c)
	) AS source ([CONFIGPRODUCTMASTER], [RECID], [CONFIGURATION])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([CONFIGPRODUCTMASTER], [RECID], [CONFIGURATION])
		VALUES (source.[CONFIGPRODUCTMASTER], source.[RECID], source.[CONFIGURATION])
	WHEN MATCHED THEN
		UPDATE SET target.[CONFIGPRODUCTMASTER] = source.[CONFIGPRODUCTMASTER], target.[RECID] = source.[RECID], target.[CONFIGURATION] = source.[CONFIGURATION];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResConfiguration
	PRINT 'Upserting into [ax].ECORESCONFIGURATION ..'
	MERGE [ax].ECORESCONFIGURATION AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(10)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterConfiguration/EcoResConfiguration') AS T(c)
	) AS source ([RECID], [NAME])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [NAME])
		VALUES (source.[RECID], source.[NAME])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[NAME] = source.[NAME];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductMasterSize
	PRINT 'Upserting into [ax].ECORESPRODUCTMASTERSIZE ..'
	MERGE [ax].ECORESPRODUCTMASTERSIZE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(SizeProductMaster)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [SIZEPRODUCTMASTER],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Size)[1]', 'BIGINT'), '0') AS [SIZE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterSize') AS T(c)
	) AS source ([SIZEPRODUCTMASTER], [RECID], [SIZE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([SIZEPRODUCTMASTER], [RECID], [SIZE])
		VALUES (source.[SIZEPRODUCTMASTER], source.[RECID], source.[SIZE])
	WHEN MATCHED THEN
		UPDATE SET target.[SIZEPRODUCTMASTER] = source.[SIZEPRODUCTMASTER], target.[RECID] = source.[RECID], target.[SIZE] = source.[SIZE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResSize
	PRINT 'Upserting into [ax].ECORESSIZE ..'
	MERGE [ax].ECORESSIZE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(10)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterSize/EcoResSize') AS T(c)
	) AS source ([RECID], [NAME])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [NAME])
		VALUES (source.[RECID], source.[NAME])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[NAME] = source.[NAME];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResProductMasterStyle
	PRINT 'Upserting into [ax].ECORESPRODUCTMASTERSTYLE ..'
	MERGE [ax].ECORESPRODUCTMASTERSTYLE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(StyleProductMaster)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [STYLEPRODUCTMASTER],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Style)[1]', 'BIGINT'), '0') AS [STYLE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterStyle') AS T(c)
	) AS source ([STYLEPRODUCTMASTER], [RECID], [STYLE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([STYLEPRODUCTMASTER], [RECID], [STYLE])
		VALUES (source.[STYLEPRODUCTMASTER], source.[RECID], source.[STYLE])
	WHEN MATCHED THEN
		UPDATE SET target.[STYLEPRODUCTMASTER] = source.[STYLEPRODUCTMASTER], target.[RECID] = source.[RECID], target.[STYLE] = source.[STYLE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- EcoResStyle
	PRINT 'Upserting into [ax].ECORESSTYLE ..'
	MERGE [ax].ECORESSTYLE AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Name)[1]', 'NVARCHAR(10)'), '') AS [NAME]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/EcoResProductMasterStyle/EcoResStyle') AS T(c)
	) AS source ([RECID], [NAME])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [NAME])
		VALUES (source.[RECID], source.[NAME])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[NAME] = source.[NAME];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailKit
	PRINT 'Upserting into [ax].RETAILKIT ..'
	MERGE [ax].RETAILKIT AS target
	USING (
		SELECT DISTINCT
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			CASE T.c.value('(DisassemblyAtRegisterAllowed)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [DISASSEMBLYATREGISTERALLOWED],
			CASE T.c.value('(DiscontinueKit)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [DISCONTINUEKIT],
			ISNULL(T.c.value('(ProductMaster)[1]', 'BIGINT'), '0') AS [PRODUCTMASTER],
			CASE T.c.value('(Status)[1]', 'NVARCHAR(4000)')
				WHEN 'Draft' THEN 0
				WHEN 'Approved' THEN 1
				ELSE 0
			END AS [STATUS]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/RetailKit') AS T(c)
	) AS source ([RECID], [DISASSEMBLYATREGISTERALLOWED], [DISCONTINUEKIT], [PRODUCTMASTER], [STATUS])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([RECID], [DISASSEMBLYATREGISTERALLOWED], [DISCONTINUEKIT], [PRODUCTMASTER], [STATUS])
		VALUES (source.[RECID], source.[DISASSEMBLYATREGISTERALLOWED], source.[DISCONTINUEKIT], source.[PRODUCTMASTER], source.[STATUS])
	WHEN MATCHED THEN
		UPDATE SET target.[RECID] = source.[RECID], target.[DISASSEMBLYATREGISTERALLOWED] = source.[DISASSEMBLYATREGISTERALLOWED], target.[DISCONTINUEKIT] = source.[DISCONTINUEKIT], target.[PRODUCTMASTER] = source.[PRODUCTMASTER], target.[STATUS] = source.[STATUS];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailKitComponent
	PRINT 'Upserting into [ax].RETAILKITCOMPONENT ..'
	MERGE [ax].RETAILKITCOMPONENT AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(Kit)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [KIT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Component)[1]', 'BIGINT'), '0') AS [COMPONENT],
			CASE T.c.value('(DoNotShowAtRegister)[1]', 'NVARCHAR(4000)')
				WHEN 'No' THEN 0
				WHEN 'Yes' THEN 1
				ELSE 0
			END AS [DONOTSHOWATREGISTER],
			ISNULL(T.c.value('(Quantity)[1]', 'NUMERIC(32, 16)'), '0') AS [QUANTITY],
			ISNULL(T.c.value('(UnitOfMeasure)[1]', 'BIGINT'), '0') AS [UNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/RetailKit/RetailKitComponent') AS T(c)
	) AS source ([KIT], [RECID], [COMPONENT], [DONOTSHOWATREGISTER], [QUANTITY], [UNITOFMEASURE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([KIT], [RECID], [COMPONENT], [DONOTSHOWATREGISTER], [QUANTITY], [UNITOFMEASURE])
		VALUES (source.[KIT], source.[RECID], source.[COMPONENT], source.[DONOTSHOWATREGISTER], source.[QUANTITY], source.[UNITOFMEASURE])
	WHEN MATCHED THEN
		UPDATE SET target.[KIT] = source.[KIT], target.[RECID] = source.[RECID], target.[COMPONENT] = source.[COMPONENT], target.[DONOTSHOWATREGISTER] = source.[DONOTSHOWATREGISTER], target.[QUANTITY] = source.[QUANTITY], target.[UNITOFMEASURE] = source.[UNITOFMEASURE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailKitComponentSubstitute
	PRINT 'Upserting into [ax].RETAILKITCOMPONENTSUBSTITUTE ..'
	MERGE [ax].RETAILKITCOMPONENTSUBSTITUTE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(KitComponent)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [KITCOMPONENT],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(Quantity)[1]', 'NUMERIC(32, 16)'), '0') AS [QUANTITY],
			ISNULL(T.c.value('(SubstituteProduct)[1]', 'BIGINT'), '0') AS [SUBSTITUTEPRODUCT],
			ISNULL(T.c.value('(UnitOfMeasure)[1]', 'BIGINT'), '0') AS [UNITOFMEASURE]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/RetailKit/RetailKitComponent/RetailKitComponentSubstitute') AS T(c)
	) AS source ([KITCOMPONENT], [RECID], [QUANTITY], [SUBSTITUTEPRODUCT], [UNITOFMEASURE])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([KITCOMPONENT], [RECID], [QUANTITY], [SUBSTITUTEPRODUCT], [UNITOFMEASURE])
		VALUES (source.[KITCOMPONENT], source.[RECID], source.[QUANTITY], source.[SUBSTITUTEPRODUCT], source.[UNITOFMEASURE])
	WHEN MATCHED THEN
		UPDATE SET target.[KITCOMPONENT] = source.[KITCOMPONENT], target.[RECID] = source.[RECID], target.[QUANTITY] = source.[QUANTITY], target.[SUBSTITUTEPRODUCT] = source.[SUBSTITUTEPRODUCT], target.[UNITOFMEASURE] = source.[UNITOFMEASURE];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

	-- RetailKitReleasedSubstituteCharge
	PRINT 'Upserting into [ax].RETAILKITRELEASEDSUBSTITUTECHARGE ..'
	MERGE [ax].RETAILKITRELEASEDSUBSTITUTECHARGE AS target
	USING (
		SELECT DISTINCT
			COALESCE(T.c.value('(KitComponentSubstitute)[1]', 'BIGINT'), T.c.value('(../RecId)[1]', 'BIGINT')) AS [KITCOMPONENTSUBSTITUTE],
			T.c.value('(RecId)[1]', 'BIGINT') AS [RECID],
			ISNULL(T.c.value('(SubstituteCharge)[1]', 'NUMERIC(32, 16)'), '0') AS [SUBSTITUTECHARGE],
			@nvc_DataAreaId AS [DATAAREAID]
		FROM @xml_ProductData.nodes('/RetailProductData/InventTable/EcoResProduct/EcoResProductMaster/RetailKit/RetailKitComponent/RetailKitComponentSubstitute/RetailKitReleasedSubstituteCharge') AS T(c)
	) AS source ([KITCOMPONENTSUBSTITUTE], [RECID], [SUBSTITUTECHARGE], [DATAAREAID])
	ON (target.[RECID] = source.[RECID])
	WHEN NOT MATCHED THEN
		INSERT ([KITCOMPONENTSUBSTITUTE], [RECID], [SUBSTITUTECHARGE], [DATAAREAID])
		VALUES (source.[KITCOMPONENTSUBSTITUTE], source.[RECID], source.[SUBSTITUTECHARGE], source.[DATAAREAID])
	WHEN MATCHED THEN
		UPDATE SET target.[KITCOMPONENTSUBSTITUTE] = source.[KITCOMPONENTSUBSTITUTE], target.[RECID] = source.[RECID], target.[SUBSTITUTECHARGE] = source.[SUBSTITUTECHARGE], target.[DATAAREAID] = source.[DATAAREAID];

	SELECT @i_Error = @@ERROR;
	IF @i_Error <> 0
	BEGIN
		SET @i_ReturnCode = @i_Error;
		GOTO exit_label;
	END;

    -- Add products to the temporary assortment
    MERGE [crt].TMPASSORTEDPRODUCTS AS target
    USING (
        SELECT
			@bi_ChannelId AS 'CHANNELID',
			T.c.value('(Product)[1]', 'BIGINT') AS 'PRODUCTID',
			T.c.value('(ItemId)[1]', 'NVARCHAR(20)') AS 'ITEMID',
			CAST(DATEADD(day, -1, GETUTCDATE()) AS DATE) AS 'VALIDFROM',
			CAST(DATEADD(day, 1, GETUTCDATE()) AS DATE) AS 'VALIDTO'
        FROM @xml_ProductData.nodes('/RetailProductData/InventTable') AS T(c)
    ) AS source ([CHANNELID], [PRODUCTID], [ITEMID], [VALIDFROM], [VALIDTO])
    ON (
        target.[CHANNELID] = source.[CHANNELID] AND
        target.[PRODUCTID] = source.[PRODUCTID] AND
		target.[ITEMID] = source.[ITEMID])
    WHEN NOT MATCHED THEN
        INSERT ([CHANNELID], [PRODUCTID], [ITEMID], [VALIDFROM], [VALIDTO])
        VALUES (source.[CHANNELID], source.[PRODUCTID], source.[ITEMID], source.[VALIDFROM], source.[VALIDTO])
    WHEN MATCHED THEN
        UPDATE SET
            target.[VALIDFROM] = source.[VALIDFROM],
            target.[VALIDTO] = source.[VALIDTO];

    SET @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

    PRINT 'Upsert completed successfully.'

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTLOYALTYCARD]...';


GO

CREATE PROCEDURE [crt].[INSERTLOYALTYCARD]
    @TVP_LOYALTYCARDTABLETYPE			[crt].[LOYALTYCARDTABLETYPE]            READONLY,
    @TVP_LOYALTYCARDTIERTABLETYPE		[crt].[LOYALTYCARDTIERTABLETYPE]        READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    --
    -- Insert loyalty card
    --

    -- Perform Insert
    INSERT INTO [ax].[RETAILLOYALTYCARD]
    (
        [RECID],
		[CARDNUMBER],
		[CARDTENDERTYPE],
		[PARTY]
    )
    SELECT
        [RECID],
		[CARDNUMBER],
		[CARDTENDERTYPE],
		[PARTY]
    FROM @TVP_LOYALTYCARDTABLETYPE;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    -- Insert loyalty card tier
    EXEC @i_Error = [crt].[INSERTLOYALTYCARDTIER] @TVP_LOYALTYCARDTIERTABLETYPE;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;


    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETAPPLYINTERSTATETAXINDIA]...';


GO

CREATE PROCEDURE [crt].[GETAPPLYINTERSTATETAXINDIA]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT
AS
BEGIN
    SET NOCOUNT ON;

    -- ChannelId is mandatory
    IF (@bi_ChannelId IS NULL)
    BEGIN
        RAISERROR (N'CHANNEL ID MANDATORY', 16, 1)
        RETURN;
    END

    SELECT
        rct_in.[ISAPPLYINTERSTATETAX] AS 'ISAPPLYINTERSTATETAX'
    FROM [ax].[RETAILCHANNELTABLE_IN] as rct_in
    INNER JOIN [ax].[RETAILCHANNELTABLE] as rct
        ON rct_in.[RETAILCHANNELTABLE] = rct.[RECID]
    WHERE rct.[RECID] = @bi_ChannelId
    ORDER BY [rct].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
END;
GO
PRINT N'Creating [crt].[INSERTSALESPROPERTIES]...';


GO

CREATE PROCEDURE [crt].[INSERTSALESPROPERTIES]
    @bi_channelId           BIGINT,
    @TVP_SALESPROPERTIES    [crt].[RETAILTRANSACTIONPROPERTIESTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [crt].[RETAILTRANSACTIONPROPERTIES]
    (
        [DATAAREAID],
        [CHANNEL],
        [STOREID],
        [TERMINALID],
        [TRANSACTIONID],
        [SALELINENUM],
        [NAME],
        [VALUE]
    )
    SELECT
        [DATAAREAID],
        @bi_channelId,
        [STOREID],
        [TERMINALID],
        [TRANSACTIONID],
        [SALELINENUM],
        [NAME],
        [VALUE]
    FROM @TVP_SALESPROPERTIES;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETSHIFTRANSACTIONS]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTRANSACTIONS]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   bigint,
    @nvc_TerminalId                 nvarchar(10),
    @bi_ShiftId                     bigint
AS

BEGIN
SET NOCOUNT ON;

WITH RETAILTRANS (VOIDTRANSACTION, NOSALETRANSACTION, CUSTOMERTRANSACTION, TRANSACTIONS, CREATEDDATETIME, SALESPAYMENTDIFFERENCE, STORE, BATCHID, BATCHTERMINALID)
AS
(
    SELECT  (CASE WHEN RT.ENTRYSTATUS = 1 THEN TRANSACTIONID ELSE NULL END) AS VOIDTRANSACTION, -- 1 indicates Voided Transaction status
            (CASE WHEN RT.TYPE = 9 THEN TRANSACTIONID ELSE NULL END) AS NOSALETRANSACTION,      -- 9 indicates Open Drawer Transaction Type
            (CASE WHEN (RT.ENTRYSTATUS = 0 OR (RT.TYPE = 19 AND RT.ENTRYSTATUS = 2)) AND RT.CUSTACCOUNT <> '' THEN TRANSACTIONID ELSE NULL END) AS CUSTOMERTRANSACTION, -- 2 indicates Posted Transaction status, 19 - indicates Customer order type, 0 indicates normal transaction
            RT.TRANSACTIONID AS TRANSACTIONS,
            RT.CREATEDDATETIME,
            (CASE WHEN RT.ENTRYSTATUS = 1 THEN 0 ELSE RT.SALESPAYMENTDIFFERENCE END) AS SALESPAYMENTDIFFERENCE, -- 1 indicates Voided Transaction status
            RT.STORE,
            RT.BATCHID,
            RT.BATCHTERMINALID

    FROM    [ax].[RETAILTRANSACTIONTABLE] RT 

    WHERE   RT.CHANNEL = @bi_ChannelId
            AND RT.BATCHTERMINALID = @nvc_TerminalId
            AND RT.BATCHID = @bi_ShiftId 
)

SELECT  TOP 1
        COUNT(RT.VOIDTRANSACTION) AS VOIDSCOUNT, 
        COUNT(RT.NOSALETRANSACTION) AS NOSALECOUNT, 
        COUNT(RT.CUSTOMERTRANSACTION) AS CUSTOMERSCOUNT, 
        COUNT(RT.TRANSACTIONS) AS TRANSACTIONSCOUNT, 
        MIN(RT.CREATEDDATETIME) AS STARTDATETIMEUTC, 
        SUM(RT.SALESPAYMENTDIFFERENCE) AS ROUNDEDAMOUNTTOTAL

FROM    RETAILTRANS RT

END;
GO
PRINT N'Creating [crt].[CREATEUPDATEDEVICE]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATEDEVICE]
    @dt_ActivatedDateTime                 datetime,
    @i_ActivationStatus                   int,
    @nvc_DeactivateComments               nvarchar(256),
    @dt_DeactivatedDateTime               datetime,
    @nvc_Description                      nvarchar(50),
    @nvc_DeviceId                         nvarchar(64),
    @nvc_Terminal                         nvarchar(10),
    @bi_TypeRecordId                      bigint,
    @nvc_DeviceTokenData                  nvarchar(128),
    @nvc_DeviceTokenSalt                  nvarchar(128),
    @nvc_DeviceTokenAlgorithm             nvarchar(25),
    @dt_DeviceTokenIssueTime              DATETIME,
    @i_UseInMemoryDeviceDataStorage       int,
    @bi_RecordId                          bigint
AS
BEGIN

    -- UPSERT INTO THE RETAILDEVICE
    MERGE INTO [ax].[RETAILDEVICE]
    USING (SELECT @dt_ActivatedDateTime, 
                  @i_ActivationStatus, 
                  @nvc_DeactivateComments, 
                  @dt_DeactivatedDateTime, 
                  @nvc_Description,
                  @nvc_DeviceId,
                  @nvc_Terminal,
                  @bi_TypeRecordId,
                  @nvc_DeviceTokenData,
                  @nvc_DeviceTokenSalt,
                  @nvc_DeviceTokenAlgorithm,
                  @dt_DeviceTokenIssueTime,
                  @i_UseInMemoryDeviceDataStorage,
                  @bi_RecordId
                  ) AS SOURCE 
                  (
                  [dt_ActivatedDateTime], 
                  [i_ActivationStatus], 
                  [nvc_DeactivateComments], 
                  [dt_DeactivatedDateTime], 
                  [nvc_Description],
                  [nvc_DeviceId],
                  [nvc_Terminal],
                  [bi_TypeRecordId],
                  [nvc_DeviceTokenData],
                  [nvc_DeviceTokenSalt],
                  [nvc_DeviceTokenAlgorithm],
                  [dt_DeviceTokenIssueTime],
                  [i_UseInMemoryDeviceDataStorage],
                  [bi_RecordId]
                  )
    ON
        [ax].[RETAILDEVICE].[RECID] = SOURCE.[bi_RecordId] 
    WHEN MATCHED THEN
        UPDATE
        SET
            [ACTIVATEDDATETIME] = SOURCE.[dt_ActivatedDateTime], 
            [ACTIVATIONSTATUS] = SOURCE.[i_ActivationStatus], 
            [DEACTIVATECOMMENTS] = SOURCE.[nvc_DeactivateComments], 
            [DEACTIVATEDDATETIME] = SOURCE.[dt_DeactivatedDateTime], 
            [DESCRIPTION] = SOURCE.[nvc_Description],
            [TERMINAL] = SOURCE.[nvc_Terminal],
            [TYPE] = SOURCE.[bi_TypeRecordId],
            [DEVICETOKENDATA] = SOURCE.[nvc_DeviceTokenData],
            [DEVICETOKENSALT] = SOURCE.[nvc_DeviceTokenSalt],
            [DEVICETOKENALGORITHM] = SOURCE.[nvc_DeviceTokenAlgorithm],
            [DEVICETOKENISSUETIME] = SOURCE.[dt_DeviceTokenIssueTime],
            [USEINMEMORYDEVICEDATASTORAGE] = SOURCE.[i_UseInMemoryDeviceDataStorage]
    WHEN NOT MATCHED THEN
        INSERT
        (
            [ACTIVATEDDATETIME], 
            [ACTIVATIONSTATUS],
            [DEACTIVATECOMMENTS],
            [DEACTIVATEDDATETIME],
            [DESCRIPTION],
            [DEVICEID],
            [TERMINAL],
            [TYPE],
            [DEVICETOKENDATA],
            [DEVICETOKENSALT],
            [DEVICETOKENALGORITHM],
            [DEVICETOKENISSUETIME],
            [USEINMEMORYDEVICEDATASTORAGE],
            [RECID]
        )
        VALUES
        (
            SOURCE.[dt_ActivatedDateTime], 
            SOURCE.[i_ActivationStatus],
            SOURCE.[nvc_DeactivateComments],
            SOURCE.[dt_DeactivatedDateTime],
            SOURCE.[nvc_Description],
            SOURCE.[nvc_DeviceId],
            SOURCE.[nvc_Terminal],
            SOURCE.[bi_TypeRecordId],
            SOURCE.[nvc_DeviceTokenData],
            SOURCE.[nvc_DeviceTokenSalt],
            SOURCE.[nvc_DeviceTokenAlgorithm],
            SOURCE.[dt_DeviceTokenIssueTime],
            SOURCE.[i_UseInMemoryDeviceDataStorage],
            SOURCE.[bi_RecordId]
        );
END;
GO
PRINT N'Creating [crt].[INSERTATTRIBUTETRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTATTRIBUTETRANS]
    @bi_channelId           BIGINT,
    @TVP_AttributeTrans     [crt].[RETAILTRANSACTIONATTRIBUTETRANSTABLETYPE]    READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONATTRIBUTETRANS
    (
        [DATAAREAID],
        [STORE],
        [TERMINAL],
        [TRANSACTIONID],
        [TEXTVALUE],
        [NAME],
        [CHANNEL]
    )
    SELECT
        [DATAAREAID],
        [STORE],
        [TERMINAL],
        [TRANSACTIONID],
        [TEXTVALUE],
        [NAME],
        @bi_channelId
    FROM @TVP_AttributeTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETREFINERVALUESBYTEXT]...';


GO

CREATE PROCEDURE [crt].[GETREFINERVALUESBYTEXT]
(
    @tvp_QueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE READONLY,
    @bi_ChannelId            BIGINT,
    @bi_CatalogId            BIGINT,
    @dt_ChannelDate          DATE,
    @nvc_Locale              NVARCHAR(7),
    @nvc_SearchText          NVARCHAR(1000),  -- 1000 because the size of the biggest column being looked up is [ax].ECORESPRODUCTTRANSLATION.DESCRIPTION of type NVARCHAR(1000)
    @bi_RefinerId            BIGINT,
    @i_RefinerSource         INT
)
AS
BEGIN
    DECLARE @tvp_ProductSearchResultIds [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId                [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_Refiners               [crt].[PRODUCTREFINERTABLETYPE]

    INSERT INTO @tvp_DummyId VALUES (0)  -- Dummy id needed by GetProductRefiners function
    INSERT INTO @tvp_Refiners VALUES (@bi_RefinerId, @i_RefinerSource, NULL, 0, 0, 0, NULL)

    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT
        [sp].PRODUCTID AS RECID
    FROM [crt].GETPRODUCTIDSBYSEARCHTEXT(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 1000 /* @i_MaxTop - Retrieving only TOP 1000 products because retrieving more products will degrade performance */, @nvc_Locale, @nvc_SearchText) sp

    -- Adding variants so their refiners can also be used.
    INSERT INTO @tvp_ProductSearchResultIds (RECID)
    SELECT
        [erdpv].RECID AS RECID
    FROM @tvp_ProductSearchResultIds prods
    INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT erdpv ON [erdpv].PRODUCTMASTER = [prods].RECID
    WHERE EXISTS
        (
            SELECT 1 FROM [crt].ASSORTEDPRODUCTSVIEW apv
            WHERE [apv].PRODUCTID = [erdpv].RECID AND [apv].CHANNELID = @bi_ChannelId AND @dt_ChannelDate BETWEEN [apv].VALIDFROM AND [apv].VALIDTO AND [apv].ISREMOTE = 0  -- Search is only supported in locally available channels
        )

    IF @i_RefinerSource = 1  -- Attribute refiner
    BEGIN
        DECLARE @tvp_ProductAttributes [crt].[PRODUCTATTRIBUTEVALUETABLETYPE]
        INSERT INTO @tvp_ProductAttributes
        SELECT
            [gpav].ATTRIBUTE,
            [gpav].BOOLEANVALUE,
            [gpav].CURRENCYCODE,
            [gpav].CURRENCYVALUE,
            [gpav].DATETIMEVALUE,
            [gpav].DATETIMEVALUETZID,
            [gpav].FLOATUNITSYMBOL,
            [gpav].FLOATVALUE,
            [gpav].INTUNITSYMBOL,
            [gpav].INTVALUE,
            [gpav].TEXTVALUE,
            [gpav].LANGUAGE,
            [gpav].TRANSLATION
        FROM [crt].GETPRODUCTATTRIBUTEVALUES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, @tvp_ProductSearchResultIds, @tvp_DummyId) AS gpav
        INNER JOIN @tvp_Refiners refiners ON [refiners].SOURCE = 1  /* Attribute refiners */ AND [refiners].RECID = [gpav].ATTRIBUTE

        SELECT
            [gprv].RECID,
            [gprv].REFINERSOURCE,
            [gprv].DATATYPE,
            [gprv].LEFTBOUNDVALUE,
            [gprv].RIGHTBOUNDVALUE,
            [gprv].UNIT
        FROM [crt].CONVERTATTRIBUTEVALUESTOREFINERVALUES(@bi_ChannelId, @nvc_Locale, @bi_RefinerId, @i_RefinerSource, @tvp_ProductAttributes) gprv
        ORDER BY 4  -- LEFTBOUNDVALUE
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
    END
    ELSE IF @i_RefinerSource = 2  -- Category refiner
    BEGIN
        SELECT DISTINCT
            0 AS RECID,
            2 AS REFINERSOURCE,  -- Category
            5 AS DATATYPE,  -- Category is always string datatype
            CASE
                WHEN [rperct].LANGUAGEID = @nvc_Locale THEN [rperct].FRIENDLYNAME
                ELSE [rperct].SEARCHTEXT
            END AS LEFTBOUNDVALUE,
            CASE
                WHEN [rperct].LANGUAGEID = @nvc_Locale THEN [rperct].FRIENDLYNAME
                ELSE [rperct].SEARCHTEXT
            END AS RIGHTBOUNDVALUE,
            NULL AS UNIT
        FROM [crt].GETPRODUCTCATEGORIES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_ProductIdsPassed */, @tvp_ProductSearchResultIds, 0 /* @b_CategoryIdsPassed */, @tvp_DummyId) gpc
        INNER JOIN [ax].RETAILPUBECORESCATEGORYTRANSLATION rperct ON [rperct].CATEGORY = [gpc].CATEGORY
        ORDER BY 4  -- LEFTBOUNDVALUE
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
    END
    ELSE IF @i_RefinerSource = 3  -- Price refiner
    BEGIN
        SELECT
            0 AS RECID,
            3 AS REFINERSOURCE,  -- Price
            1 AS DATATYPE,  -- Currency
            CONVERT(nvarchar(1999), MIN(PRICE)) LEFTBOUNDVALUE,
            CONVERT(nvarchar(1999), MAX(PRICE)) RIGHTBOUNDVALUE,
            [rct].CURRENCY AS UNIT
        FROM [crt].[GETREFINERPRICES](@bi_ChannelId, @dt_ChannelDate, @tvp_ProductSearchResultIds) grp
        INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].RECID = @bi_ChannelId
        GROUP BY [rct].CURRENCY
        ORDER BY 4  -- LEFTBOUNDVALUE
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
    END

END
GO
PRINT N'Creating [crt].[RESEEDUPLOADSESSIONIDENTITY]...';


GO

CREATE PROCEDURE [crt].[RESEEDUPLOADSESSIONIDENTITY]
    @bi_latestUploadSessionId BIGINT
AS
BEGIN 	
    BEGIN TRANSACTION;
    SET IDENTITY_INSERT [crt].[UPLOADSESSION] ON ;
	
    INSERT INTO [crt].[UPLOADSESSION] (ID, JOBID, STATUS, MESSAGE, UPLOADPATH, DATECREATED, DATEUPLOADED, FILESIZE, CHECKSUM)
    VALUES(@bi_latestUploadSessionId, '', 0, '', '', null, null, 0, '');
	
    DELETE FROM [crt].[UPLOADSESSION] WHERE ID = @bi_latestUploadSessionId;
	
    SET IDENTITY_INSERT [crt].[UPLOADSESSION] OFF;
    COMMIT TRANSACTION;
END;
GO
PRINT N'Creating [crt].[GETSHIFTTENDERDECLARATIONTRANS]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTTENDERDECLARATIONTRANS]
    @bi_ChannelId						bigint,
	@nvc_TerminalId						nvarchar(10),
	@bi_ShiftId							bigint,
	@i_TransactionType					int
AS

BEGIN
	SET NOCOUNT ON;

	DECLARE @TENDERDECLARATIONCALCTYPE as INT 
	SET @TENDERDECLARATIONCALCTYPE = [crt].[GETTENDERDECLARATIONCALCULATIONTYPE](@bi_ChannelId)

	IF (@TENDERDECLARATIONCALCTYPE = 0) -- Last
		BEGIN
				SELECT		TENDERDECLARATION.TENDERTYPE AS TENDERTYPEID, 
							TENDER.NAME AS TENDERTYPENAME,
							TENDERDECLARATION.CURRENCY, 
							TENDER.COUNTINGREQUIRED, 
							TENDERDECLARATION.AMOUNTTENDERED AS TENDEREDAMOUNT, 
							TENDERDECLARATION.AMOUNTCUR AS TENDEREDAMOUNTCUR,
							TRANS.TYPE AS TRANSACTIONTYPE

				FROM		[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TENDERDECLARATION

				INNER JOIN	[ax].[RETAILTRANSACTIONTABLE] AS TRANS
							ON TRANS.TRANSACTIONID = TENDERDECLARATION.TRANSACTIONID 
							AND TRANS.CHANNEL = TENDERDECLARATION.CHANNEL
							AND TRANS.TERMINAL = TENDERDECLARATION.TERMINAL 
							AND TRANS.DATAAREAID = TENDERDECLARATION.DATAAREAID 

				INNER JOIN	[ax].[RETAILSTORETENDERTYPETABLE] AS TENDER 
							ON TENDER.TENDERTYPEID = TENDERDECLARATION.TENDERTYPE 
							AND TENDER.DATAAREAID = TENDERDECLARATION.DATAAREAID 
							AND TENDER.CHANNEL = TENDERDECLARATION.CHANNEL

				INNER JOIN	[ax].[RETAILSTORETABLE] AS ST 
							ON ST.RECID = TENDER.CHANNEL 
							AND ST.RECID = TENDERDECLARATION.CHANNEL

				WHERE		TENDERDECLARATION.TRANSACTIONSTATUS = 0
							AND (TENDER.COUNTINGREQUIRED = 1 OR TENDER.TAKENTOBANK = 1 OR TENDER.TAKENTOSAFE = 1)
							AND TRANS.TRANSACTIONID = (
								SELECT	TOP 1 TTRANS.TRANSACTIONID
								FROM	[ax].[RETAILTRANSACTIONTABLE] TTRANS
								WHERE	TTRANS.CHANNEL = @bi_ChannelId
									AND	TTRANS.TYPE = @i_TransactionType
									AND	TTRANS.BATCHTERMINALID = @nvc_TerminalId
									AND	TTRANS.BATCHID = @bi_ShiftId
								ORDER BY TTRANS.CREATEDDATETIME DESC)

		END
	ELSE IF (@TENDERDECLARATIONCALCTYPE = 1) -- Sum
		BEGIN
				SELECT		TENDERDECLARATION.TENDERTYPE AS TENDERTYPEID, 
							TENDER.NAME AS TENDERTYPENAME,
							TENDERDECLARATION.CURRENCY, 
							TENDER.COUNTINGREQUIRED, 
							TENDERDECLARATION.AMOUNTTENDERED AS TENDEREDAMOUNT, 
							TENDERDECLARATION.AMOUNTCUR AS TENDEREDAMOUNTCUR,
							TRANS.TYPE AS TRANSACTIONTYPE

				FROM		[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TENDERDECLARATION

				INNER JOIN	[ax].[RETAILTRANSACTIONTABLE] AS TRANS
							ON TRANS.TRANSACTIONID = TENDERDECLARATION.TRANSACTIONID 
							AND TRANS.CHANNEL = TENDERDECLARATION.CHANNEL
							AND TRANS.TERMINAL = TENDERDECLARATION.TERMINAL 
							AND TRANS.DATAAREAID = TENDERDECLARATION.DATAAREAID 

				INNER JOIN	[ax].[RETAILSTORETENDERTYPETABLE] AS TENDER 
							ON TENDER.TENDERTYPEID = TENDERDECLARATION.TENDERTYPE 
							AND TENDER.DATAAREAID = TENDERDECLARATION.DATAAREAID 
							AND TENDER.CHANNEL = TENDERDECLARATION.CHANNEL

				INNER JOIN	[ax].[RETAILSTORETABLE] AS ST 
							ON ST.RECID = TENDER.CHANNEL 
							AND ST.RECID = TENDERDECLARATION.CHANNEL

				WHERE		TRANS.CHANNEL = @bi_ChannelId 
							AND TRANS.TYPE = @i_TransactionType
							AND TRANS.BATCHTERMINALID = @nvc_TerminalId
							AND TRANS.BATCHID = @bi_ShiftId 
							AND TENDERDECLARATION.TRANSACTIONSTATUS = 0
							AND (TENDER.COUNTINGREQUIRED = 1 OR TENDER.TAKENTOBANK = 1 OR TENDER.TAKENTOSAFE = 1)
		END
END;
GO
PRINT N'Creating [crt].[VERIFYPRODUCTSEXISTENCE]...';


GO

CREATE PROCEDURE [crt].[VERIFYPRODUCTSEXISTENCE]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT, -- The unique channel identifier (required).
    @bi_CatalogId                   BIGINT, -- The catalog identifier (optional).
    @dt_ChannelDate                 DATE,   -- The current date in the channel's time zone.
    @tvp_Ids                        [crt].[RECORDIDLANGUAGETABLETYPE] READONLY
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_Error                    INT;
    DECLARE @b_IsForwardLooking         BIT = 1;
    DECLARE @b_SkipVariantExpansion     BIT = 0;

    DECLARE @tvp_ExpandedWorkingIdSet       [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_LookupIds                  [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_ProductIdsNormalized       [crt].[RECORDIDSTABLETYPE]
    DECLARE @tvp_AssortedProductIds         [crt].[PRODUCTLOOKUPIDTABLETYPE]
    DECLARE @tvp_CatalogAssortedProductIds  [crt].[PRODUCTLOOKUPIDTABLETYPE]  

    DECLARE @tvp_FilteredRecIds             [crt].[RECORDIDTABLETYPE]
    DECLARE @tvp_DummyId                    [crt].[RECORDIDTABLETYPE]
    DECLARE @translatedResult [crt].[RECORDIDLANGUAGETABLETYPE] 

        -- Insert dummy record to satisfy API contract
    INSERT INTO @tvp_DummyId VALUES (0)
    
    -- initializes the return code; we'll return the number of data sets as the return code.
    SET @i_ReturnCode = 0;
    SET @bi_CatalogId = ISNULL(@bi_CatalogId, 0);

    -- Retrieve the data area for the current channel identifier.
    DECLARE @nvc_DataAreaId NVARCHAR(4);
    SELECT @nvc_DataAreaId = INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId

    -- Normalize all input identifiers. That means standalone, product master and variant
    -- identifiers all return the parent product as the lookup identifer. This is necessary
    -- because the input product identifiers can be any type of product (standalone, product
    -- master, variant, kit, etc).
    INSERT @tvp_ProductIdsNormalized (RECID, PARENTRECID)
    SELECT DISTINCT
        ids.RECID AS 'PRODUCTID',
        COALESCE(pv2.PRODUCTMASTER, pv.PRODUCTMASTER, ids.RECID) AS 'LOOKUPID'
    FROM @tvp_Ids ids
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [ids].RECID
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON [pv2].PRODUCTMASTER = [ids].RECID

    -- Retrieve the unique parent product identifiers.
    INSERT @tvp_LookupIds (RECID)
    SELECT DISTINCT PARENTRECID -- LOOKUPID
    FROM @tvp_ProductIdsNormalized

    -- Filter lookup identifiers by assortment and expand all product masters to their individually assorted variants if requested.
    INSERT @tvp_AssortedProductIds (LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO)
    SELECT
        ap.PRODUCTID,
        CASE
            WHEN ap.VARIANTID = 0 THEN ap.PRODUCTID
            ELSE ap.VARIANTID
        END AS 'VARIANTID',
        ap.ISREMOTE,
        ap.VALIDFROM,
        ap.VALIDTO
    FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, @b_IsForwardLooking, @b_SkipVariantExpansion, 1/*b_ProductIdsPassed*/, @tvp_LookupIds) ap
    
    -- Build the expanded working set
    IF (@bi_CatalogId = 0)
    BEGIN
        INSERT @tvp_CatalogAssortedProductIds (LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO)
        SELECT LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO
        FROM @tvp_AssortedProductIds

        INSERT @tvp_ExpandedWorkingIdSet (RECID)
        SELECT DISTINCT ap.PRODUCTID
        FROM @tvp_CatalogAssortedProductIds ap
    END
    ELSE
    BEGIN
        -- Filter out any products that are not in the specified catalog.
        WITH cte_CatalogProducts AS
        (
            SELECT
                ap.LOOKUPID,
                ap.PRODUCTID,
                ap.ISREMOTE,
                CASE
                    WHEN ap.VALIDFROM > pc.VALIDFROM THEN ap.VALIDFROM
                    ELSE pc.VALIDFROM
                END AS 'VALIDFROM',
                CASE
                    WHEN pc.VALIDTO < ap.VALIDTO THEN pc.VALIDTO
                    ELSE ap.VALIDTO
                END AS 'VALIDTO'
            FROM @tvp_AssortedProductIds ap
            INNER JOIN [ax].RETAILPUBCATALOGPRODUCT pcp ON pcp.PRODUCT = ap.LOOKUPID OR pcp.PRODUCT = ap.PRODUCTID
            INNER JOIN [ax].RETAILPUBCATALOG pc ON pc.ORIGIN = pcp.CATALOG
            INNER JOIN [crt].PUBCATALOGCHANNELVIEW ccv ON ccv.CATALOG = pcp.CATALOG
            WHERE ccv.CHANNEL = @bi_ChannelId AND ccv.CATALOG = @bi_CatalogId AND
                ((@b_IsForwardLooking = 0 AND @dt_ChannelDate BETWEEN ap.VALIDFROM AND ap.VALIDTO) OR
                    (@b_IsForwardLooking = 1 AND ap.VALIDTO >= @dt_ChannelDate))
        )
        INSERT @tvp_CatalogAssortedProductIds (LOOKUPID, PRODUCTID, ISREMOTE, VALIDFROM, VALIDTO)
        -- Retrieve the product masters that are either explicitly or implicitly part of the specified catalog.
        SELECT cp.LOOKUPID, cp.PRODUCTID, cp.ISREMOTE, cp.VALIDFROM, cp.VALIDTO
        FROM cte_CatalogProducts cp
        UNION
        -- Retrieve the product variants that are either explicitly or implicitly part of the specified catalog.
        SELECT cp.LOOKUPID, cp.LOOKUPID, cp.ISREMOTE, cp.VALIDFROM, cp.VALIDTO
        FROM cte_CatalogProducts cp

        INSERT @tvp_ExpandedWorkingIdSet (RECID)
        SELECT DISTINCT ids.PRODUCTID
        FROM @tvp_CatalogAssortedProductIds ids
    END

-- Filter out all product masters and any variants not requested.
    INSERT @tvp_FilteredRecIds (RECID)
        (
        SELECT DISTINCT cap.PRODUCTID
        FROM @tvp_CatalogAssortedProductIds cap
        INNER JOIN @tvp_Ids ids ON ids.RECID = cap.PRODUCTID
        LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON pv.RECID = cap.PRODUCTID
        LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv2 ON pv2.PRODUCTMASTER = cap.PRODUCTID
        WHERE ([pv].RECID IS NOT NULL) OR ([pv2].RECID IS NULL) -- Filter out product masters

        UNION 

        -- Adding Lookup id which can represent a master Id because the translation could also exist for master level and not necessary on variant only.
        SELECT DISTINCT LOOKUPID
        FROM @tvp_CatalogAssortedProductIds 
        )
    
    INSERT @translatedResult
    SELECT PRODUCT, LANGUAGE
    FROM crt.GETPRODUCTLANGUAGES(@bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @tvp_FilteredRecIds, @tvp_DummyId)
        
    SELECT [results].PRODUCTID, [results].LANGUAGEID
    FROM (
    -- 1. grabbing translations which were applied towards variants.
    SELECT sourceIDs.RECID AS PRODUCTID, sourceIDs.LANGUAGEID
    FROM @tvp_Ids sourceIDs
    JOIN @translatedResult translations ON sourceIDs.RECID = translations.RECID AND sourceIDs.LANGUAGEID = translations.LANGUAGEID

    UNION 

    -- 2. grabbing translations which were applied to variants through their masters
    SELECT ids.RECID AS PRODUCTID, ids.LANGUAGEID
    FROM @tvp_Ids ids
    JOIN @tvp_ProductIdsNormalized normalized ON normalized.RECID = ids.RECID 
    JOIN @translatedResult result ON normalized.PARENTRECID = result.RECID AND result.LANGUAGEID = ids.LANGUAGEID
    ) results
    ORDER BY [results].PRODUCTID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY
END
GO
PRINT N'Creating [crt].[GETSALESLINEDELIVERYOPTIONS]...';


GO

CREATE PROCEDURE [crt].[GETSALESLINEDELIVERYOPTIONS]
    @tvp_QueryResultSettings        [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                   BIGINT,
    @tvp_salesLineDeliveryOptions   [crt].[SALESLINEDELIVERYOPTIONSTABLETYPE]   READONLY
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @tvp_PagedCartLines [crt].STRINGIDTABLETYPE
    INSERT INTO @tvp_PagedCartLines
    SELECT DISTINCT [do].SALESLINEID
    FROM @tvp_salesLineDeliveryOptions do
    INNER JOIN [ax].RETAILDLVMODEPRODUCTEXPLODED DMProduct ON [DMProduct].ITEMID = [do].ITEMID AND ([DMProduct].INVENTDIM = '' OR [DMProduct].INVENTDIM = ISNULL(NULLIF([do].VARIANTINVENTDIMID,''),[DMProduct].INVENTDIM))
    INNER JOIN [ax].DLVMODE dm ON [dm].RECID = [DMProduct].DLVMODE
    INNER JOIN [ax].RETAILDLVMODECHANNELEXPLODED DMChannel ON [dm].RECID = [DMChannel].DLVMODE
    INNER JOIN [ax].RETAILCHANNELTABLE rct ON [rct].OMOPERATINGUNITID = [DMChannel].OMOPERATINGUNIT AND [rct].INVENTLOCATIONDATAAREAID = [DMProduct].DATAAREAID
    ORDER BY [do].SALESLINEID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

    SELECT DISTINCT SALESLINEID, RECID, CODE, TXT, MARKUPGROUP
    FROM @tvp_PagedCartLines cl
    INNER JOIN @tvp_salesLineDeliveryOptions sdo ON [sdo].SALESLINEID = [cl].STRINGID
    INNER JOIN [crt].DELIVERYMODESEXPLODEDVIEW dv ON [dv].CHANNELID = @bi_ChannelId
        AND [dv].COUNTRYREGION = [sdo].COUNTRYREGIONID
        AND [dv].STATE = [sdo].STATEID
        AND [dv].ITEMID = [sdo].ITEMID
        AND ([dv].INVENTDIM = '' OR [dv].INVENTDIM = ISNULL(NULLIF([sdo].VARIANTINVENTDIMID,''),[dv].INVENTDIM))
    ORDER BY [sdo].SALESLINEID

END;
GO
PRINT N'Creating [crt].[ISPRODUCTINCATEGORY]...';


GO

CREATE PROCEDURE [crt].[ISPRODUCTINCATEGORY]
    @PRODUCTRECID	BIGINT,
    @CATEGORYRECID	BIGINT
AS
BEGIN
SET NOCOUNT ON

DECLARE @i_ReturnCode INT;
SET @i_ReturnCode = 0;

IF EXISTS
(
	SELECT PRODUCT, CATEGORY 
	FROM [crt].[RETAILPRODUCTORVARIANTCATEGORYANCESTORSVIEW]
	WHERE PRODUCT = @PRODUCTRECID AND CATEGORY = @CATEGORYRECID
)
BEGIN
    SET @i_ReturnCode = 1 ;
END

RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETRELYINGPARTIESBYIDENTITYPROVIDER]...';


GO

CREATE PROCEDURE [crt].[GETRELYINGPARTIESBYIDENTITYPROVIDER]
    @bi_ProviderId BIGINT,
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
    
AS
BEGIN
    SET NOCOUNT ON
    SELECT RECID, CLIENTID, [TYPE], USERTYPE
    FROM ax.RETAILRELYINGPARTY
    WHERE PROVIDERID = @bi_ProviderId

END;
GO
PRINT N'Creating [crt].[SAVEWISHLISTS]...';


GO

CREATE PROCEDURE [crt].[SAVEWISHLISTS]
    @tvp_WishList [crt].[WISHLISTTABLETYPE] READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_TransactionIsOurs    INT;
    DECLARE @i_RowIndex             INT;
    DECLARE @i_RowCount             INT;
    DECLARE @i_Error                INT;
    DECLARE @dtt_ChangeDate         DATETIME;

    -- Wish List table fields
    DECLARE @nvc_Id      NVARCHAR(44);
    DECLARE @nvc_CustomerId         NVARCHAR(20);
    DECLARE @nvc_Name               NVARCHAR(128);
    DECLARE @vb_WishListData        VARBINARY(max);
    DECLARE @b_Favorite BIT;
    DECLARE @b_Recurring BIT;

    DECLARE @t_WishListIdTable    TABLE
    (
        i_RowIndex          INT             PRIMARY KEY IDENTITY(0,1)
        ,nvc_Id  NVARCHAR(44)    NOT NULL
    );

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode           = 0;
    SET @i_TransactionIsOurs    = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Sort Wish Lists by ID
    INSERT @t_WishListIdTable
    (
        nvc_Id
    )
    SELECT
        Source.ID
    FROM @tvp_WishList AS Source
    ORDER BY Source.ID;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    SET @dtt_ChangeDate = GETUTCDATE();
    SET @i_RowIndex     = 0;

    IF ((SELECT
        Source.FAVORITE
        FROM @tvp_WishList AS Source) = 1)
    BEGIN
        UPDATE [crt].WISHLIST
        SET FAVORITE = 0, MODIFIEDDATETIME = @dtt_ChangeDate
        WHERE FAVORITE = 1;
    END;

    -- Foreach transaction, do the upsert
    WHILE (1 = 1)
    BEGIN
        SELECT
            @nvc_Id             = Source.ID
            ,@nvc_CustomerId    = Source.CUSTOMERID
            ,@nvc_Name          = Source.NAME
            ,@vb_WishListData   = Source.WISHLISTDATA
            ,@b_Favorite        = Source.FAVORITE
            ,@b_Recurring       = Source.RECURRING

        FROM @tvp_WishList Source
        INNER JOIN @t_WishListIdTable Sorted
            ON Source.ID = Sorted.nvc_Id
        WHERE
            Sorted.i_RowIndex = @i_RowIndex;

        SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        IF @i_Rowcount = 0
        BEGIN
            BREAK;
        END;

        -- Verifies whether the wishlist already exists on DB
        SELECT
            @i_Rowcount = COUNT(ID)
        FROM WISHLIST Target WITH (NOLOCK)
        WHERE
            Target.ID = @nvc_Id
            AND Target.DELETEDDATETIME IS NULL;

        -- If it does not exist, this is an insert
        IF (@i_RowCount = 0)
        BEGIN
            INSERT INTO [crt].WISHLIST
            (
                ID
                ,CUSTOMERID
                ,NAME
                ,WISHLISTDATA
                ,CREATEDDATETIME
                ,MODIFIEDDATETIME
                ,FAVORITE
                ,RECURRING
            )
            VALUES
            (
                @nvc_Id
                ,@nvc_CustomerId
                ,@nvc_Name
                ,@vb_WishListData
                ,@dtt_ChangeDate
                ,@dtt_ChangeDate
                ,@b_Favorite
                ,@b_Recurring
            );

            SELECT @i_Error = @@ERROR;
            IF @i_Error <> 0
            BEGIN
                SET @i_ReturnCode = @i_Error;
                GOTO exit_label;
            END;
        END;
        -- This is an update
        ELSE IF (@i_RowCount = 1)
        BEGIN
            UPDATE [crt].WISHLIST
            SET
                 ID                 = @nvc_Id
                ,CUSTOMERID         = @nvc_CustomerId
                ,NAME               = @nvc_Name
                ,WISHLISTDATA       = @vb_WishListData
                ,MODIFIEDDATETIME   = @dtt_ChangeDate
                ,FAVORITE           = @b_Favorite
                ,RECURRING          = @b_Recurring
            WHERE
                ID = @nvc_Id;

            SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

            IF @i_Error <> 0
            BEGIN
                SET @i_ReturnCode = @i_Error;
                GOTO exit_label;
            END;

            -- If no rows were changed, there was a problem updating (mostly because of row version)
            IF (@i_RowCount = 0)
            BEGIN;
                SET @i_ReturnCode = [crt].fn_kErrorVersionMismatchError();
                GOTO exit_label;
            END;
         END;

        SET @i_RowIndex = @i_RowIndex + 1; --so we eventually exit the loop
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;


        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETCITIES]...';


GO

CREATE PROCEDURE [crt].[GETCITIES]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @CountryRegionId         NVARCHAR(10),
    @StateProvinceID         NVARCHAR(10) = NULL,
    @CountyId                NVARCHAR(10) = NULL
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @StateProvinceIDIsNull BIT = CASE WHEN (@StateProvinceID IS NULL OR LEN(LTRIM(RTRIM(@StateProvinceID))) = 0) THEN 1 ELSE 0 END
    DECLARE @CountyIdIsNull BIT = CASE WHEN (@CountyId IS NULL OR LEN(LTRIM(RTRIM(@CountyId))) = 0) THEN 1 ELSE 0 END
    
    SELECT
        LCITY.NAME AS CITYNAME
       ,LCITY.DESCRIPTION
       ,LCITY.COUNTYID
       ,LCITY.COUNTRYREGIONID
       ,LCITY.STATEID
    FROM [ax].LOGISTICSADDRESSCITY LCITY
    WHERE
        LCITY.COUNTRYREGIONID = @CountryRegionId
        AND (@StateProvinceIDIsNull = 1 OR LCITY.STATEID = @StateProvinceID)
        AND (@CountyIdIsNull = 1 OR LCITY.COUNTYID = @CountyId)
    ORDER BY [LCITY].RECID
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETAFFILIATIONLOYALTYTIERPRICEGROUPS]...';


GO

CREATE PROCEDURE [crt].[GETAFFILIATIONLOYALTYTIERPRICEGROUPS]
    @tvp_QueryResultSettings  [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId             BIGINT,
    @affiliationLoyaltyTiers  [crt].[AFFILIATIONLOYALTYTIERTABLETYPE] READONLY
AS
BEGIN
    SET NOCOUNT ON

    SELECT pdg.GROUPID
        , rapg.PRICEDISCGROUP AS 'PRICEGROUP'
		, pdg.RETAILPRICINGPRIORITYNUMBER
        , rapg.RECID
    FROM [ax].PRICEDISCGROUP pdg
    INNER JOIN [ax].RETAILAFFILIATIONPRICEGROUP rapg 
        ON rapg.PRICEDISCGROUP = pdg.RECID
    INNER JOIN @affiliationLoyaltyTiers alt
        ON rapg.RETAILAFFILIATION = alt.AFFILIATIONID AND (rapg.RETAILLOYALTYTIER = 0 OR rapg.RETAILLOYALTYTIER = alt.LOYALTYTIERID)
    INNER JOIN [ax].RETAILCHANNELTABLE AS c
        ON c.INVENTLOCATIONDATAAREAID = pdg.DATAAREAID AND c.RECID = @bi_ChannelId
    ORDER BY [pdg].MODULE, [pdg].TYPE, [pdg].GROUPID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[DELETEPURCHASEORDERLINES]...';


GO

CREATE PROCEDURE [crt].[DELETEPURCHASEORDERLINES]
    @nvc_OrderId     NVARCHAR(50)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Delete the purchase order line from table.
    DELETE FROM [crt].[PURCHASEORDERLINE] WHERE ORDERID = @nvc_OrderId

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
    SET NOCOUNT OFF
END;
GO
PRINT N'Creating [crt].[GETACTIVEEXCHANGERATE]...';


GO

CREATE PROCEDURE [crt].[GETACTIVEEXCHANGERATE]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @nvc_FromCurrency        NVARCHAR(3),
    @nvc_ToCurrency          NVARCHAR(3),
    @bi_ChannelId            BIGINT = NULL, -- [Deprecated] [Last used release = CTP-8]
    @dt_ActiveDate           DATE
AS
BEGIN
    SET NOCOUNT ON

    SELECT
        er.EXCHANGERATE,
        er.FROMCURRENCYCODE,
        er.TOCURRENCYCODE,
        er.RECID,
        er.VALIDFROM,
        er.VALIDTO
    FROM [crt].[EXCHANGERATEVIEW] AS er
    WHERE
        er.VALIDFROM <= @dt_ActiveDate
        AND er.VALIDTO >= @dt_ActiveDate
        AND ((er.FROMCURRENCYCODE = @nvc_FromCurrency AND er.TOCURRENCYCODE = @nvc_ToCurrency) OR
            (er.FROMCURRENCYCODE = @nvc_ToCurrency AND er.TOCURRENCYCODE = @nvc_FromCurrency))
    ORDER BY [er].RECID
    OFFSET (SELECT TOP 1 [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT TOP 1 [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETCUSTOMERBYACCOUNTNUMBER]...';


GO
CREATE PROCEDURE [crt].[GETCUSTOMERBYACCOUNTNUMBER]
		@nvc_DataAreaId NVARCHAR(4),

		-- CustTable.AccountNumber is NVARCHAR(20) but
		-- RETAILASYNCCUSTOMER.CustAccountAsync is NVARCHAR(38), so specifying the max of those 2.
		@nvc_CustomerAccount NVARCHAR(38)
AS

DECLARE @tbl_FoundCustomer TABLE
	(
	    ACCOUNTNUMBER NVARCHAR(38),
        RECID BIGINT,
		CREATEDDATETIME DATETIME,
        PARTY BIGINT,
        NAME NVARCHAR(100),
        PERSONNAMEID BIGINT,
        FIRSTNAME NVARCHAR(100),
        MIDDLENAME NVARCHAR(25),
        LASTNAME NVARCHAR(100),
        PARTYNUMBER NVARCHAR(40),
        CUSTOMERTYPE INT,
        PHONE NVARCHAR(255),
        PHONEEXT NVARCHAR(10),
        PHONERECORDID BIGINT,
        EMAIL NVARCHAR(255),
        EMAILRECORDID BIGINT,
        URL NVARCHAR(255),
        URLRECORDID BIGINT,
        CELLPHONE NVARCHAR(255),
        CELLPHONERECORDID BIGINT,
        RECEIPTEMAIL NVARCHAR(80),
        LANGUAGE NVARCHAR(7),
        DATAAREAID NVARCHAR(4),
		RECEIPTSETTINGS INT, 
        CURRENCY NVARCHAR(3),
        INVOICEACCOUNT NVARCHAR(20),
        CREDITMAX NUMERIC (32, 16),
        MARKUPGROUP NVARCHAR(10),
        PRICEGROUP NVARCHAR(10),
        CUSTGROUP NVARCHAR(10),
        BLOCKED INT,
        ORGID NVARCHAR(10),
        MULTILINEDISC NVARCHAR(10),
        USEPURCHREQUEST INT,
        LINEDISC NVARCHAR(10),
        INCLTAX INT,
        ENDDISC NVARCHAR(10),
        TAXGROUP NVARCHAR(10),
        CREDITRATING NVARCHAR(10),
        TAXLICENSENUM NVARCHAR(20),
        VATNUM NVARCHAR(20),
		OFFLINEIMAGE NVARCHAR(MAX),
        IDENTIFICATIONNUMBER NVARCHAR(50),
		[IMAGE] NVARCHAR(255),
		ISASYNCCUSTOMER INT
	)
		
	INSERT INTO @tbl_FoundCustomer
	
	SELECT
        ct.ACCOUNTNUM AS ACCOUNTNUMBER,
        ct.RECID,
        ct.CREATEDDATETIME,
        dpt.RECID AS PARTY,
        dpt.NAME,
        dpn.RECID AS PERSONNAMEID,
        dpn.FIRSTNAME,
        dpn.MIDDLENAME,
        dpn.LASTNAME,
        dpt.PARTYNUMBER,
        CASE
            WHEN dpn.RECID IS NULL THEN 2 -- Organization
            ELSE 1 -- Customer
        END AS CUSTOMERTYPE,
        '' PHONE,
        '' PHONEEXT,
        0 AS PHONERECORDID,
        '' AS EMAIL,
        0 AS EMAILRECORDID,
        '' AS URL,
        0 AS URLRECORDID,
        '' AS CELLPHONE,
        0 AS CELLPHONERECORDID,
        rct.RECEIPTEMAIL RECEIPTEMAIL,
        dpt.LANGUAGEID AS LANGUAGE,
        ct.DATAAREAID,
        rct.RECEIPTOPTION as RECEIPTSETTINGS,
        ct.CURRENCY,
        ct.INVOICEACCOUNT,
        ct.CREDITMAX,
        ct.MARKUPGROUP,
        ct.PRICEGROUP,
        ct.CUSTGROUP,
        ct.BLOCKED,
        ct.ORGID,
        ct.MULTILINEDISC,
        ct.USEPURCHREQUEST,
        ct.LINEDISC,
        ct.INCLTAX,
        ct.ENDDISC,
        ct.TAXGROUP,
        ct.CREDITRATING,
        ct.TAXLICENSENUM,
        ct.VATNUM,         
        CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("[rmr].[RESOURCEBLOB]")))', 'NVARCHAR(MAX)') AS OFFLINEIMAGE,
        ct.IDENTIFICATIONNUMBER,
        rmr.RESOURCEURL AS IMAGE,
        0 AS ISASYNCCUSTOMER
/* BEGIN SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this)
              , isnull(rcp.EMAILOPTIN, 0) as EMAILOPTIN
END SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this) */
    FROM [ax].CUSTTABLE ct
    JOIN [ax].DIRPARTYTABLE dpt ON ct.PARTY = dpt.RECID AND ct.ACCOUNTNUM = @nvc_CustomerAccount AND ct.DATAAREAID = @nvc_DataAreaId
    LEFT OUTER JOIN ax.RETAILCUSTTABLE rct ON ct.ACCOUNTNUM = rct.ACCOUNTNUM AND ct.DATAAREAID = rct.DATAAREAID
    LEFT OUTER JOIN ax.DIRPERSONNAME dpn ON dpt.RECID = dpn.PERSON AND (GETUTCDATE() BETWEEN dpn.VALIDFROM AND dpn.VALIDTO)
	
	LEFT OUTER JOIN [ax].RETAILMEDIAANDMASTERENTITYRELATION rmamer ON ct.RECID = rmamer.MASTERENTITYRECID 
               AND rmamer.ISDEFAULT = 1 AND rmamer.MASTERENTITYTYPE = 16  -- MasterEntityType = Customer.
    LEFT OUTER JOIN [ax].RETAILMEDIARESOURCE rmr ON rmamer.MEDIARESOURCEID = rmr.RESOURCEID


/* BEGIN SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this)
    LEFT OUTER JOIN [ax].RETAILCUSTPREFERENCE rcp ON ct.ACCOUNTNUM = rcp.ACCOUNTNUM
                   AND ct.DATAAREAID = rcp.DATAAREAID
END SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this) */

   IF (SELECT COUNT(*) FROM @tbl_FoundCustomer) > 0
		BEGIN

			DECLARE @bi_Party BIGINT;

			SELECT @bi_Party = Party
			FROM @tbl_FoundCustomer

			DECLARE @nvc_PHONE NVARCHAR(255);
			DECLARE @nvc_PHONEEXT NVARCHAR(10);
			DECLARE @bi_PHONERECORDID BIGINT;
			DECLARE @nvc_EMAIL NVARCHAR(255);
			DECLARE @bi_EMAILRECORDID BIGINT;
			DECLARE @nvc_URL NVARCHAR(255);
			DECLARE @bi_URLRECORDID BIGINT;
			DECLARE @nvc_CELLPHONE NVARCHAR(255);
			DECLARE @bi_CELLPHONERECORDID BIGINT;


			SELECT @nvc_PHONE = LOCATOR, @nvc_PHONEEXT = LOCATOREXTENSION, @bi_PHONERECORDID = RECORDID
			FROM [crt].[GETELECTRONICADDRESS](1, 1, 0, @bi_Party, NULL);

			SELECT @nvc_EMAIL = LOCATOR, @bi_EMAILRECORDID = RECORDID
			FROM [crt].[GETELECTRONICADDRESS](2, 1, 0, @bi_Party, NULL);

			SELECT @nvc_URL = LOCATOR, @bi_URLRECORDID = RECORDID
			FROM [crt].[GETELECTRONICADDRESS](3, 1, 0, @bi_Party, NULL);

			SELECT @nvc_CELLPHONE = LOCATOR, @bi_CELLPHONERECORDID = RECORDID
			FROM [crt].[GETELECTRONICADDRESS](1, 0, NULL, @bi_Party, 1);

			UPDATE @tbl_FoundCustomer
			SET PHONE = @nvc_PHONE, PHONEEXT = @nvc_PHONEEXT, PHONERECORDID = @bi_PHONERECORDID,
				EMAIL = @nvc_EMAIL, EMAILRECORDID = @bi_EMAILRECORDID,
				URL = @nvc_URL, URLRECORDID = @bi_URLRECORDID,
				CELLPHONE = @nvc_CELLPHONE, CELLPHONERECORDID = @bi_CELLPHONERECORDID
	   END
   ELSE
	   BEGIN
		   INSERT INTO @tbl_FoundCustomer
		   SELECT
				rac.CUSTACCOUNTASYNC AS ACCOUNTNUMBER,
				0 AS RECID,
				0 AS CREATEDDATETIME,
				0 AS  PARTY,
				rac.CUSTNAME AS NAME,
				0 AS PERSONNAMEID,
				rac.FIRSTNAME,
				rac.MIDDLENAME,
				rac.LASTNAME,
				'' AS PARTYNUMBER,
				rac.RELATIONSHIPTYPE AS CUSTOMERTYPE,
				rac.PHONE,
				rac.PHONEEXTENSION AS PHONEEXT,
				'' AS PHONERECORDID,
				rac.EMAIL,
				null AS EMAILRECORDID,
				rac.URL,
				'' AS URLRECORDID,
				rac.CELLULARPHONE AS CELLPHONE,
				'' AS CELLPHONERECORDID,
				rac.RECEIPTEMAIL AS  RECEIPTEMAIL,
				rac.LANGUAGEID AS LANGUAGE,
				rac.DATAAREAID,
				rac.RECEIPTOPTION AS RECEIPTSETTINGS,
				rac.CURRENCY,
				rac.INVOICEACCOUNT,
				rac.CREDITMAX,
				'' AS MARKUPGROUP,
				rac.PRICEGROUP,
				rac.CUSTGROUP,
				rac.BLOCKED,
				rac.ORGANIZATIONID AS ORGID,
				rac.MULTILINEDISC AS MULTILINEDISC,
				rac.USEPURCHREQUEST,
				rac.LINEDISC,
				0 AS INCLTAX,
				rac.ENDDISC,
				rac.TAXGROUP,
				'' AS CREDITRATING,
				'' AS TAXLICENSENUM,
				rac.VATNUM,         
				null AS OFFLINEIMAGE,
				rac.IDENTIFICATIONNUMBER,
				null AS IMAGE,
				1 AS ISASYNCCUSTOMER
		   FROM [ax].RETAILASYNCCUSTOMER rac
		   WHERE rac.CUSTACCOUNTASYNC = @nvc_CustomerAccount
	   END

   SELECT 
		ACCOUNTNUMBER,
        RECID,
		CREATEDDATETIME,
        PARTY,
        NAME,
        PERSONNAMEID,
        FIRSTNAME,
        MIDDLENAME,
        LASTNAME,
        PARTYNUMBER,
        CUSTOMERTYPE,
        PHONE,
        PHONEEXT,
        PHONERECORDID,
        EMAIL,
        EMAILRECORDID,
        URL,
        URLRECORDID,
        CELLPHONE,
        CELLPHONERECORDID,
        RECEIPTEMAIL,
        [LANGUAGE],
        DATAAREAID,
		RECEIPTSETTINGS, 
        CURRENCY,
        INVOICEACCOUNT,
        CREDITMAX,
        MARKUPGROUP,
        PRICEGROUP,
        CUSTGROUP,
        BLOCKED,
        ORGID,
        MULTILINEDISC,
        USEPURCHREQUEST,
        LINEDISC,
        INCLTAX,
        ENDDISC,
        TAXGROUP,
        CREDITRATING,
        TAXLICENSENUM,
        VATNUM,
		OFFLINEIMAGE,
        IDENTIFICATIONNUMBER,
		[IMAGE],
		ISASYNCCUSTOMER
   FROM @tbl_FoundCustomer
GO
PRINT N'Creating [crt].[MAPEXTERNALIDENTITYTOCUSTOMER]...';


GO

CREATE PROCEDURE [crt].[MAPEXTERNALIDENTITYTOCUSTOMER]
    @nvc_ExternalIdentityId NVARCHAR(500),
    @nvc_Issuer NVARCHAR(500),
    @nvc_CustomerAccountNumber NVARCHAR(20),
    @nvc_IsActivated INT,
    @nvc_DataAreaID NVARCHAR(4),
    @nvc_RecId BIGINT OUTPUT
 
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @bi_ProviderID BIGINT;
    DECLARE @bi_NewRecID BIGINT;

    SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

    BEGIN TRANSACTION

       SELECT @bi_ProviderID = RECID
            FROM ax.RETAILIDENTITYPROVIDER
            WHERE ISSUER = @nvc_Issuer

        UPDATE ax.RETAILEXTERNALIDTOCUSTOMERMAP 
        SET CUSTOMERACCOUNTNUMBER = @nvc_CustomerAccountNumber,
            ISACTIVATED = @nvc_IsActivated,
            @bi_NewRecID = RECID
        WHERE EXTERNALIDENTITYID =  @nvc_ExternalIdentityId 
        AND PROVIDERID = @bi_ProviderID 
        AND DATAAREAID =  @nvc_DataAreaID

        IF @@ROWCOUNT=0
        BEGIN
            SELECT @bi_NewRecID = ISNULL(MAX(RECID), 0)
            FROM ax.RETAILEXTERNALIDTOCUSTOMERMAP
            
            SET @bi_NewRecID = @bi_NewRecID + 1
            
            SELECT @bi_ProviderID = RECID
            FROM ax.RETAILIDENTITYPROVIDER
            WHERE ISSUER = @nvc_Issuer
            
            INSERT INTO ax.RETAILEXTERNALIDTOCUSTOMERMAP (RECID, EXTERNALIDENTITYID, PROVIDERID, CUSTOMERACCOUNTNUMBER, ISACTIVATED, DATAAREAID) 
            VALUES (@bi_NewRecId, @nvc_ExternalIdentityId, @bi_ProviderId, @nvc_CustomerAccountNumber, @nvc_IsActivated, @nvc_DataAreaID)
        END
        

   COMMIT TRANSACTION

     SET @nvc_RecId = @bi_NewRecID

END;
GO
PRINT N'Creating [crt].[INSERTINFOCODETRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTINFOCODETRANS]
    @bi_ChannelId           BIGINT,
    @TVP_InfoCodeTrans      [crt].[RETAILTRANSACTIONINFOCODETRANSTABLETYPE]    READONLY,
    @d_BusinessDate         DATE
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONINFOCODETRANS
    (
        [TRANSACTIONID],
        [LINENUM],
        [DATAAREAID],
        [TYPE],
        [INFOCODEID],
        [INFORMATION],
        [INFOAMOUNT],
        [TRANSDATE],
        [TRANSTIME],
        [STORE],
        [TERMINAL],
        [STAFF],
        [ITEMTENDER],
        [AMOUNT],
        [INPUTTYPE],
        [SUBINFOCODEID],
        [STATEMENTCODE],
        [SOURCECODE],
        [SOURCECODE2],
        [SOURCECODE3],
        [PARENTLINENUM],
        [CHANNEL],
        [BUSINESSDATE]
    )
    SELECT
        [TRANSACTIONID],
        [LINENUM],
        [DATAAREAID],
        [TYPE],
        [INFOCODEID],
        [INFORMATION],
        [INFOAMOUNT],
        CAST([TRANSDATE] AS DATE),
        [TRANSTIME],
        [STORE],
        [TERMINAL],
        [STAFF],
        [ITEMTENDER],
        [AMOUNT],
        [INPUTTYPE],
        [SUBINFOCODEID],
        [STATEMENTCODE],
        [SOURCECODE],
        [SOURCECODE2],
        [SOURCECODE3],
        [PARENTLINENUM],
        @bi_ChannelId,
        @d_BusinessDate
    FROM @TVP_InfoCodeTrans AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETLOYALTYCARD]...';


GO

CREATE PROCEDURE [crt].[GETLOYALTYCARD]
    @nvc_LoyaltyCardNumber			NVARCHAR(30),
	@nvc_CustomerDataAreaId			NVARCHAR(4)
AS
BEGIN
    SET NOCOUNT ON

    -- Select the loyalty card by loyalty card number.
	-- If the loyalty card is associated with a party, also try to find the customer number in the given company.
	SELECT
        rlc.RECID,
        rlc.CARDNUMBER,
        rlc.CARDTENDERTYPE,
		rlc.PARTY,
		COALESCE(dpt.PARTYNUMBER, '') AS PARTYNUMBER,
		COALESCE(ct.ACCOUNTNUM, '') AS CUSTOMERACCOUNT,
		COALESCE(ct.DATAAREAID, '') AS CUSTOMERDATAAREAID
    FROM [ax].[RETAILLOYALTYCARD] rlc
	LEFT OUTER JOIN [ax].[DIRPARTYTABLE] dpt
		on dpt.RECID = rlc.PARTY
	LEFT OUTER JOIN [ax].[CUSTTABLE] ct
		on ct.PARTY = rlc.PARTY
	    and ct.DATAAREAID = @nvc_CustomerDataAreaId
	WHERE rlc.CARDNUMBER = @nvc_LoyaltyCardNumber

END;
GO
PRINT N'Creating [crt].[GETADDRESSFORMATTING]...';


GO

-- Returns only active field (INACTIVE == 0) with proper formatting metadata
CREATE PROCEDURE [crt].[GETADDRESSFORMATTING]
    @nvc_CountryRegionId    NVARCHAR(10)
AS
BEGIN

    SET NOCOUNT ON

    SELECT
        LAFL.ELEMENT
       ,CAST(LAFL.LINENUM AS INT) AS LINEINDEX
       ,LAFL.DATAENTRYONLY
    FROM [ax].LOGISTICSADDRESSCOUNTRYREGION LACR
    INNER JOIN [ax].LOGISTICSADDRESSFORMATHEADING LAFH ON LACR.ADDRFORMAT = LAFH.ADDRFORMAT
    INNER JOIN [ax].LOGISTICSADDRESSFORMATLINES LAFL ON LAFH.ADDRFORMAT = LAFL.ADDRFORMAT
    WHERE
        LAFL.INACTIVE = 0
        AND LACR.COUNTRYREGIONID = @nvc_CountryRegionId
    ORDER BY LINEINDEX ASC

END;
GO
PRINT N'Creating [crt].[GETALLLISTINGSMAP]...';


GO

CREATE PROCEDURE [crt].[GETALLLISTINGSMAP]
    @bi_ChannelId BIGINT

AS
BEGIN
    SET NOCOUNT ON

    SELECT
        CATALOGID, 
		LISTINGRECID,
		LANGUAGEID,
        LISTID
    FROM [crt].[CATALOGLISTMAPPING]
	WHERE CHANNELID = @bi_ChannelId
	ORDER BY CATALOGID, LIstid

END;
GO
PRINT N'Creating [crt].[GETSTATEPROVINCES]...';


GO

CREATE PROCEDURE [crt].[GETSTATEPROVINCES]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @CountryRegionId    NVARCHAR(10)
AS
BEGIN

    SET NOCOUNT ON

    SELECT
        [LSTATE].COUNTRYREGIONID
       ,[LSTATE].STATEID
       ,[LSTATE].NAME AS STATENAME
    FROM [ax].LOGISTICSADDRESSSTATE LSTATE
    INNER JOIN [ax].LOGISTICSADDRESSCOUNTRYREGION LCNTRY ON LSTATE.COUNTRYREGIONID = LCNTRY.COUNTRYREGIONID
    WHERE LSTATE.COUNTRYREGIONID = @CountryRegionId
    ORDER BY [LSTATE].COUNTRYREGIONID, [LSTATE].STATEID
    OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
    FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY

END;
GO
PRINT N'Creating [crt].[GETHARDWARESTATIONS]...';


GO
CREATE PROCEDURE [crt].[GETHARDWARESTATIONS]
    @tvp_QueryResultSettings [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId           BIGINT -- The unique channel identifier (required).
AS
BEGIN

/*  // data level map for hardware station:
    //
    // data level           |   content
    // =====================|================================================================
    // hardware station     |   hardware profile ID, name, host name, port, EFT terminal ID
    // drawers              |   + drawer name, IP, port
    // pinters              |   + printer name, IP, port
    // pinpad               |   + pinpad name, IP, port
    // =====================|================================================================
*/

    SET NOCOUNT ON
    DECLARE @i_ReturnCode               INT;

    -- initializes the return code; we'll return the number of data sets as the return code.
    SET @i_ReturnCode = 0;

    -- Select hardware station (header)
    SELECT
        HARDWARESTATIONID,
        HARDWAREPROFILEID,
        HARDWARESTATIONNAME,
        HARDWARESTATIONDESCRIPTION,
        HARDWARESTATIONURL,
        EFTTERMINALID,
        HOSTNAME,
        RECID
    FROM [crt].[GETHARDWARESTATIONSVIEW]
        WHERE STORE = @bi_ChannelId
        ORDER BY RECID
        OFFSET (SELECT [SKIP] FROM @tvp_QueryResultSettings) ROWS
        FETCH NEXT (SELECT [TOP] FROM @tvp_QueryResultSettings) ROWS ONLY;

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- Select drawer configuration
    SELECT 
        rhc.RECID,
        rhp.DRAWERDEVICENAME as 'DEVICENAME',
        rhc.DRAWERIP as 'IPADDRESS',
        rhc.DRAWERPORT as 'PORT',
        rhc.STOREHARDWARESTATION as 'HARDWARESTATIONRECORDID'
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILSTOREHARDWARESTATIONTABLE] rshs ON rhc.STOREHARDWARESTATION = rshs.RECID
        INNER JOIN [AX].[RETAILHARDWARESTATION] rhs ON rshs.HARDWARESTATIONID = rhs.HARDWARESTATIONID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rhs.HARDWAREPROFILEID = rhp.PROFILEID
        WHERE rshs.STORE = @bi_ChannelId
        AND rhp.DRAWER = 4 -- Network
    UNION ALL
    SELECT
        rhc.RECID, 
        rhp.DRAWER2DEVICENAME as 'DEVICENAME',
        rhc.DRAWER2IP as 'IPADDRESS',
        rhc.DRAWER2PORT as 'PORT',
        rhc.STOREHARDWARESTATION as 'HARDWARESTATIONRECORDID'
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILSTOREHARDWARESTATIONTABLE] rshs ON rhc.STOREHARDWARESTATION = rshs.RECID
        INNER JOIN [AX].[RETAILHARDWARESTATION] rhs ON rshs.HARDWARESTATIONID = rhs.HARDWARESTATIONID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rhs.HARDWAREPROFILEID = rhp.PROFILEID
        WHERE rshs.STORE = @bi_ChannelId
        AND rhp.DRAWER2 = 4; -- Network

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- Select printer configuration
    SELECT 
        rhc.RECID, 
        rhp.PRINTERDEVICENAME as 'DEVICENAME',
        rhc.PRINTERIP as 'IPADDRESS',
        rhc.PRINTERPORT as 'PORT',
        rhc.STOREHARDWARESTATION as 'HARDWARESTATIONRECORDID'
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILSTOREHARDWARESTATIONTABLE] rshs ON rhc.STOREHARDWARESTATION = rshs.RECID
        INNER JOIN [AX].[RETAILHARDWARESTATION] rhs ON rshs.HARDWARESTATIONID = rhs.HARDWARESTATIONID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rhs.HARDWAREPROFILEID = rhp.PROFILEID
        WHERE rshs.STORE = @bi_ChannelId
        AND rhp.PRINTER = 4 -- Network
    UNION ALL
    SELECT
        rhc.RECID, 
        rhp.PRINTER2DEVICENAME as 'DEVICENAME',
        rhc.PRINTER2IP as 'IPADDRESS',
        rhc.PRINTER2PORT as 'PORT',
        rhc.STOREHARDWARESTATION as 'HARDWARESTATIONRECORDID'
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILSTOREHARDWARESTATIONTABLE] rshs ON rhc.STOREHARDWARESTATION = rshs.RECID
        INNER JOIN [AX].[RETAILHARDWARESTATION] rhs ON rshs.HARDWARESTATIONID = rhs.HARDWARESTATIONID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rhs.HARDWAREPROFILEID = rhp.PROFILEID
        WHERE rshs.STORE = @bi_ChannelId
        AND rhp.PRINTER = 4; -- Network

    SET @i_ReturnCode = @i_ReturnCode + 1;

    -- Select pinpad configuration
    SELECT
        rhc.RECID, 
        rhp.PINPADDEVICENAME as 'DEVICENAME',
        rhc.PINPADIP as 'IPADDRESS',
        rhc.PINPADPORT as 'PORT',
        rhc.STOREHARDWARESTATION as 'HARDWARESTATIONRECORDID'
    FROM [AX].[RETAILHARDWARECONFIGURATION] rhc
        INNER JOIN [AX].[RETAILSTOREHARDWARESTATIONTABLE] rshs ON rhc.STOREHARDWARESTATION = rshs.RECID
        INNER JOIN [AX].[RETAILHARDWARESTATION] rhs ON rshs.HARDWARESTATIONID = rhs.HARDWARESTATIONID
        INNER JOIN [AX].[RETAILHARDWAREPROFILE] rhp ON rhs.HARDWAREPROFILEID = rhp.PROFILEID
        WHERE rshs.STORE = @bi_ChannelId
        AND rhp.PINPAD = 3; -- Network

    SET @i_ReturnCode = @i_ReturnCode + 1;
    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETTAXREGIME]...';


GO

CREATE PROCEDURE [crt].[GETTAXREGIME]
    @nvc_COUNTRYREGIONID        NVARCHAR(10),
    @nvc_STATEID                NVARCHAR(10) = NULL,
    @nvc_COUNTYID               NVARCHAR(10) = NULL,
    @nvc_CITY                   NVARCHAR(60) = NULL,
    @nvc_DISTRICT               NVARCHAR(60) = NULL,
    @nvc_ZIPCODE                 NVARCHAR(10) = NULL
AS
BEGIN
    SET NOCOUNT ON
	
	DECLARE @nvc_COUNTRYREGIONNORMALIZED       NVARCHAR(10)
    SET  @nvc_COUNTRYREGIONNORMALIZED = N''
	
    -- CountryId is mandatory
    IF (@nvc_COUNTRYREGIONID IS NULL)
    BEGIN
        RAISERROR (N'COUNTRY/REGIONID MANDATORY', 16, 1)
        RETURN;
    END
	
	-- country region Id can be in either format. First need to normalize
	IF EXISTS(SELECT  1 FROM [ax].LOGISTICSADDRESSCOUNTRYREGION LCNTRY  WITH(NOLOCK) 
    WHERE COUNTRYREGIONID = @nvc_COUNTRYREGIONID)
    BEGIN
       -- three letter case
	   SELECT @nvc_COUNTRYREGIONNORMALIZED = @nvc_COUNTRYREGIONID
    END
    ELSE 
    BEGIN
	   -- two letter case
	   SELECT  @nvc_COUNTRYREGIONNORMALIZED = LCNTRY.COUNTRYREGIONID 		
			FROM [ax].LOGISTICSADDRESSCOUNTRYREGION LCNTRY  WHERE ISOCODE = @nvc_COUNTRYREGIONID
    END

    -- For Optional Columns, there is three possible state we can run into
    -- 1) a value is passed in (like @STATEPROVINCEID = 'WA' )--> For this case, only match is possible when @STATEPROVINCEID = STATEPROVINCEID
    -- 2) a value is NOT passed in (like @STATEPROVINCEID = NULL )--> For this case, we do have two sub-cases
    -- 2a) @STATEPROVINCEID = NULL and STATEPROVINCEID is also NULL --> This is a match
    -- 2b) @STATEPROVINCEID = NULL but STATEPROVINCEID != NULL, i.e. has a value in it --> This is no match. The data in the table is more complete than what it is passed
    SELECT
        RDFT.COUNTRYREGIONID,
        RDFT.STATEID,
        RDFT.COUNTYID,
        LCTY.NAME AS CITYNAME,
        LDST.NAME AS DISTRICTNAME,
        LZIP.ZIPCODE AS ZIPCODE,
        RDFT.TAXGROUPHEADING AS 'TAXGROUPNAME'
    FROM [ax].RETAILTAXFILTERS RDFT
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSCITY LCTY ON RDFT.CITY = LCTY.RECID
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSDISTRICT LDST ON RDFT.DISTRICT = LDST.RECID
    LEFT OUTER JOIN [ax].LOGISTICSADDRESSZIPCODE LZIP ON RDFT.ZIPCODE = LZIP.RECID
    WHERE
        RDFT.COUNTRYREGIONID = @nvc_COUNTRYREGIONNORMALIZED  -- this is mandatory
        AND (RDFT.STATEID = @nvc_STATEID OR (@nvc_STATEID IS NULL AND RDFT.STATEID = ''))
        AND (RDFT.COUNTYID = @nvc_COUNTYID OR (@nvc_COUNTYID IS NULL AND RDFT.COUNTYID = ''))
        AND (LCTY.NAME = @nvc_CITY OR ((@nvc_CITY IS NULL) AND RDFT.CITY = 0))
        AND (LDST.NAME = @nvc_DISTRICT OR ((@nvc_DISTRICT IS NULL)AND RDFT.DISTRICT = 0))
        AND (LZIP.ZIPCODE = @nvc_ZIPCODE  OR ((@nvc_ZIPCODE  IS NULL ) AND RDFT.ZIPCODE = 0))
END;
GO
PRINT N'Creating [crt].[GETLISTINGMAP]...';


GO

CREATE PROCEDURE [crt].[GETLISTINGMAP]
    @bi_ChannelId BIGINT,
    @tvp_ListingIds     [crt].[RECORDIDTABLETYPE] READONLY
    
AS
BEGIN
    SET NOCOUNT ON

    SELECT
        CATALOGID, 
		LISTINGRECID,
		LANGUAGEID,
        LISTID
    FROM [crt].[CATALOGLISTMAPPING]
    INNER JOIN @tvp_ListingIds listingIds ON listingIds.RECID = LISTINGRECID
	WHERE CHANNELID = @bi_ChannelId

END;
GO
PRINT N'Creating [crt].[INSERTSALESTRANS]...';


GO

CREATE PROCEDURE [crt].[INSERTSALESTRANS]
    @bi_ChannelId           BIGINT,
    @TVP_SALESTRANS         [crt].[RETAILTRANSACTIONSALESTRANSTABLETYPE]    READONLY,
    @d_BusinessDate         DATE
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Insert
    INSERT INTO [ax].RETAILTRANSACTIONSALESTRANS
    (
        [CUSTACCOUNT],
        [CREATEDDATETIME],
        [DATAAREAID],
        [DISCAMOUNT],
        [TOTALDISCAMOUNT],
        [TOTALDISCPCT],
        [LINEDSCAMOUNT],
        [PERIODICDISCAMOUNT],
        [PERIODICPERCENTAGEDISCOUNT],
        [LINEMANUALDISCOUNTAMOUNT],
        [LINEMANUALDISCOUNTPERCENTAGE],
        [DLVMODE],
        [INVENTDIMID],
        [INVENTLOCATIONID],
        [INVENTSERIALID],
        [INVENTSITEID],
        [ITEMID],
        [BARCODE],
        [LINENUM],
        [LISTINGID],
        [LOGISTICSPOSTALADDRESS],
        [NETAMOUNT],
        [NETAMOUNTINCLTAX],
        [PRICE],
        [PRICECHANGE],
        [ORIGINALPRICE],
        [QTY],
        [RECEIPTDATEREQUESTED],
        [SHIPPINGDATEREQUESTED],
        [STORE],
        [TAXAMOUNT],
        [TAXGROUP],
        [ORIGINALTAXGROUP],
        [TAXITEMGROUP],
        [ORIGINALTAXITEMGROUP],
        [TERMINALID],
        [STAFFID],
        [TRANSACTIONID],
        [UNIT],
        [VARIANTID],
        [RETURNNOSALE],
        [RETURNTRANSACTIONID],
        [RETURNLINENUM],
        [RETURNSTORE],
        [RETURNTERMINALID],
        [RECEIPTID],
        [TRANSDATE],
        [TRANSTIME],
        [TRANSACTIONSTATUS],
        [CHANNEL],
        [COMMENT],
        [GIFTCARD],
        [CATALOG],
        [ELECTRONICDELIVERYEMAIL],
        [ELECTRONICDELIVERYEMAILCONTENT],
        [FULFILLMENTSTOREID],
        [BUSINESSDATE]
    )
    SELECT
        [CUSTACCOUNT],
        [CREATEDDATETIME],
        [DATAAREAID],
        [DISCAMOUNT],
        [TOTALDISCAMOUNT],
        [TOTALDISCPCT],
        [LINEDSCAMOUNT],
        [PERIODICDISCAMOUNT],
        [PERIODICPERCENTAGEDISCOUNT],
        [LINEMANUALDISCOUNTAMOUNT],
        [LINEMANUALDISCOUNTPERCENTAGE],
        [DLVMODE],
        [INVENTDIMID],
        [INVENTLOCATIONID],
        [INVENTSERIALID],
        [INVENTSITEID],
        [ITEMID],
        [BARCODE],
        [LINENUM],
        [LISTINGID],
        [LOGISTICSPOSTALADDRESS],
        [NETAMOUNT],
        [NETAMOUNTINCLTAX],
        [PRICE],
        [PRICECHANGE],
        [ORIGINALPRICE],
        [QTY],
        CAST([RECEIPTDATEREQUESTED] AS DATE),
        CAST([SHIPPINGDATEREQUESTED] AS DATE),
        [STORE],
        [TAXAMOUNT],
        [TAXGROUP],
        [ORIGINALTAXGROUP],
        [TAXITEMGROUP],
        [ORIGINALTAXITEMGROUP],
        [TERMINALID],
        [STAFFID],
        [TRANSACTIONID],
        [UNIT],
        [VARIANTID],
        [RETURNNOSALE],
        [RETURNTRANSACTIONID],
        [RETURNLINENUM],
        [RETURNSTORE],
        [RETURNTERMINALID],
        [RECEIPTID],
        CAST([TRANSDATE] AS DATE),
        [TRANSTIME],
        [TRANSACTIONSTATUS],
        @bi_ChannelId,
        [COMMENT],
        [GIFTCARD],
        [CATALOG],
        [ELECTRONICDELIVERYEMAIL],
        [ELECTRONICDELIVERYEMAILCONTENT],
        [FULFILLMENTSTOREID],
        @d_BusinessDate
    FROM @TVP_SALESTRANS AS Source;


    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[SAVEPICKINGLISTLINES]...';


GO

CREATE PROCEDURE [crt].[SAVEPICKINGLISTLINES]
    @TVP_PICKINGLISTLINES         [crt].[PICKINGLISTLINETABLETYPE]    READONLY,
    @nvc_OrderId                    NVARCHAR(50)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Perform Delete of existing order rows
    DELETE FROM [crt].PICKINGLISTLINE WHERE ORDERID IN
    (
        SELECT PL.RECID
        FROM [crt].PICKINGLISTLINE PL
        LEFT JOIN @TVP_PICKINGLISTLINES TVP ON PL.ORDERID = @nvc_OrderId
        WHERE TVP.RECID IS NULL
    )

    -- Perform Insert
    MERGE INTO [crt].PICKINGLISTLINE
    USING @TVP_PICKINGLISTLINES AS SOURCE
    ON
        PICKINGLISTLINE.ORDERID = @nvc_OrderId AND
        PICKINGLISTLINE.RECID = SOURCE.RECID
    WHEN MATCHED THEN
        UPDATE
        SET
            RECID = SOURCE.RECID,
            ORDERID = @nvc_OrderId,
            ITEMID = SOURCE.ITEMID,
            ITEMNAME = SOURCE.ITEMNAME,
            INVENTDIMID = SOURCE.INVENTDIMID,
            PURCHASERECEIVEDNOW = SOURCE.PURCHASERECEIVEDNOW,
            INVENTBATCHID = SOURCE.INVENTBATCHID,
            INVENTSITEID = SOURCE.INVENTSITEID,
            INVENTLOCATIONID = SOURCE.INVENTLOCATIONID,
            CONFIGID = SOURCE.CONFIGID,
            INVENTSERIALID = SOURCE.INVENTSERIALID,
            INVENTSIZEID = SOURCE.INVENTSIZEID,
            INVENTCOLORID = SOURCE.INVENTCOLORID,
            INVENTSTYLEID = SOURCE.INVENTSTYLEID,
            DELIVERYMETHOD = SOURCE.DELIVERYMETHOD
    WHEN NOT MATCHED THEN
        INSERT
    (
        [RECID],
        [ORDERID],
        [ITEMID],
        [ITEMNAME],
        [INVENTDIMID],
        [PURCHASERECEIVEDNOW],
        [INVENTBATCHID],
        [INVENTSITEID],
        [INVENTLOCATIONID],
        [CONFIGID],
        [INVENTSERIALID],
        [INVENTSIZEID],
        [INVENTCOLORID],
        [INVENTSTYLEID],
        [DELIVERYMETHOD]
    )
    VALUES
    (
        SOURCE.[RECID],
        @nvc_OrderId,
        SOURCE.[ITEMID],
        SOURCE.[ITEMNAME],
        SOURCE.[INVENTDIMID],
        SOURCE.[PURCHASERECEIVEDNOW],
        SOURCE.[INVENTBATCHID],
        SOURCE.[INVENTSITEID],
        SOURCE.[INVENTLOCATIONID],
        SOURCE.[CONFIGID],
        SOURCE.[INVENTSERIALID],
        SOURCE.[INVENTSIZEID],
        SOURCE.[INVENTCOLORID],
        SOURCE.[INVENTSTYLEID],
        SOURCE.[DELIVERYMETHOD]
    );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTNONSALETENDER]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
	[crt].[INSERTNONSALETENDER] calls the corresponding stored procedures to insert into:
	Header record into RetailTransactionTable 
	Transaction lines into INSERTPAYMENTTRANS.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[INSERTNONSALETENDER]
    @bi_ChannelId           BIGINT,
    @TVP_TRANSACTION        [crt].[RETAILTRANSACTIONTABLETYPE]                  READONLY,
    @TVP_PAYMENTTRANS       [crt].[RETAILTRANSACTIONPAYMENTTRANSTABLETYPE]      READONLY,
    @TVP_REASONCODELINE     [crt].[RETAILTRANSACTIONINFOCODETRANSTABLETYPE]     READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    DECLARE @d_BusinessDate             DATE;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Get the BusinessDate from the transaction tvp.
    SET @d_BusinessDate = (SELECT BUSINESSDATE FROM @TVP_TRANSACTION);

    --
    -- Insert RetailTransactionTable
    --
    EXEC [crt].[INSERTTRANSACTION] @bi_ChannelId, @TVP_TRANSACTION;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionPaymentTrans
    --
    EXEC [crt].[INSERTPAYMENTTRANS] @bi_ChannelId, @TVP_PAYMENTTRANS, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RETAILTRANSACTIONINFOCODETRANS
    --
    EXEC [crt].[INSERTINFOCODETRANS] @bi_ChannelId, @TVP_REASONCODELINE, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

    --
    -- Get this newly created transaction
    --
    BEGIN 
        SELECT
            NSTV.AMOUNT,
            NSTV.AMOUNTCUR,
            NSTV.TRANSACTIONID,
            NSTV.CURRENCY,
            NSTV.TENDERCUR,
            NSTV.TYPE,
            NSTV.BATCHID,
            NSTV.BATCHTERMINALID,
            NSTV.STAFF,
            NSTV.TERMINAL,
            NSTV.DESCRIPTION,
            NSTV.TENDERTYPE,
            NSTV.CREATEDDATETIME,
            NSTV.STORE
        FROM @TVP_TRANSACTION T            
            INNER JOIN [crt].[NONSALESTRANSACTIONSVIEW] NSTV
            ON NSTV.TRANSACTIONID = T.TRANSACTIONID
            AND NSTV.TERMINAL = T.TERMINAL
            AND NSTV.BATCHID = T.BATCHID
            AND NSTV.TYPE = T.TYPE            
    END

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETPRODUCTSBYKEYWORD]...';


GO

CREATE PROCEDURE [crt].[GETPRODUCTSBYKEYWORD]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @i_DataLevel                INT,
    @b_IsForwardLooking         BIT,
    @b_SkipVariantExpansion     BIT,
    @nvc_SearchCondition        NVARCHAR(4000),
    @nvc_LanguageId             NVARCHAR(7),
    @tvp_RefinerValues          [crt].[PRODUCTREFINERVALUETABLETYPE] READONLY,
    @b_IsOnlineSearch           BIT
AS
BEGIN
    -- Paging gets performed in the first search operation. Hence, preventing paging from occuring again in the GETPRODUCTS call.
    DECLARE @tvp_NoPagingQueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE
    INSERT INTO @tvp_NoPagingQueryResultSettings VALUES (0, (SELECT TOP 1 [settings].[TOP] FROM @tvp_QueryResultSettings settings), 0, N'', 0)

    IF (EXISTS(SELECT * FROM @tvp_RefinerValues))
    BEGIN
        DECLARE @tvp_RefinedProductIds [crt].RECORDIDTABLETYPE
        
        -- Refinement requires at least data level 3 to be able to retrieve attribute values for filtering.
        IF @i_DataLevel < 3
        BEGIN
            SET @i_DataLevel = 3
        END
        
        INSERT INTO @tvp_RefinedProductIds
        SELECT RECID FROM [crt].[REFINEANDSEARCHPRODUCTSBYKEYWORD](@tvp_QueryResultSettings, @bi_ChannelId, @dt_ChannelDate, @nvc_SearchCondition, @nvc_LanguageId, @tvp_RefinerValues)

        EXEC [crt].GETPRODUCTS @tvp_NoPagingQueryResultSettings,@bi_ChannelId,0,@i_DataLevel,@dt_ChannelDate,@b_IsForwardLooking,0 /* @b_SkipVariantExpansion */,@tvp_RefinedProductIds,@b_IsOnlineSearch
    END
    ELSE
    BEGIN
        DECLARE @tvp_SearchedProductIds [crt].RECORDIDTABLETYPE

        INSERT INTO @tvp_SearchedProductIds
        SELECT RECID FROM [crt].[FINDPRODUCTSBYKEYWORD](@tvp_QueryResultSettings, @bi_ChannelId, @dt_ChannelDate, @nvc_SearchCondition, @nvc_LanguageId)

        EXEC [crt].GETPRODUCTS @tvp_NoPagingQueryResultSettings,@bi_ChannelId,0,@i_DataLevel,@dt_ChannelDate,@b_IsForwardLooking,@b_SkipVariantExpansion,@tvp_SearchedProductIds,@b_IsOnlineSearch
    END
END;
GO
PRINT N'Creating [crt].[GETPRODUCTSBYCATEGORY]...';


GO

CREATE PROCEDURE [crt].[GETPRODUCTSBYCATEGORY]
    @tvp_QueryResultSettings                    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId                               BIGINT,
    @bi_CatalogId                               BIGINT,
    @dt_ChannelDate                             DATE,
    @i_DataLevel                                INT,
    @b_IsForwardLooking                         BIT,
    @b_SkipVariantExpansion                     BIT,
    @b_IncludeProductsFromDescendantCategories  BIT,
    @nvc_LanguageId                             NVARCHAR(7),
    @tvp_CategoryIds                            [crt].[RECORDIDTABLETYPE] READONLY,
    @tvp_RefinerValues                          [crt].PRODUCTREFINERVALUETABLETYPE READONLY,
    @b_IsOnlineSearch                           BIT	
AS
BEGIN
    -- Paging gets performed in the first search operation. Hence, preventing paging from occuring again in the GETPRODUCTS call.
    DECLARE @tvp_NoPagingQueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE
    INSERT INTO @tvp_NoPagingQueryResultSettings VALUES (0, (SELECT TOP 1 [settings].[TOP] FROM @tvp_QueryResultSettings settings), 0, N'', 0)

    IF (EXISTS(SELECT * FROM @tvp_RefinerValues))
    BEGIN
        DECLARE @tvp_RefinedProductIds [crt].RECORDIDTABLETYPE
        
        -- Refinement requires at least data level 3 to be able to retrieve attribute values for filtering.
        IF @i_DataLevel < 3
        BEGIN
            SET @i_DataLevel = 3
        END

        INSERT INTO @tvp_RefinedProductIds
        SELECT RECID FROM [crt].[REFINEANDSEARCHPRODUCTSBYCATEGORY](@tvp_QueryResultSettings, @bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IncludeProductsFromDescendantCategories, @nvc_LanguageId, @tvp_CategoryIds, @tvp_RefinerValues)

        EXEC [crt].GETPRODUCTS @tvp_NoPagingQueryResultSettings, @bi_ChannelId,@bi_CatalogId,@i_DataLevel,@dt_ChannelDate,@b_IsForwardLooking, 0 /* @b_SkipVariantExpansion */,@tvp_RefinedProductIds,@b_IsOnlineSearch
    END
    ELSE
    BEGIN
        DECLARE @tvp_SearchedProductIds [crt].RECORDIDTABLETYPE

        INSERT INTO @tvp_SearchedProductIds
        SELECT RECID FROM [crt].SEARCHPRODUCTSBYCATEGORY(@tvp_QueryResultSettings, @bi_ChannelId, @bi_CatalogId, @dt_ChannelDate, @b_IncludeProductsFromDescendantCategories, @tvp_CategoryIds)

        EXEC [crt].GETPRODUCTS @tvp_NoPagingQueryResultSettings, @bi_ChannelId,@bi_CatalogId,@i_DataLevel,@dt_ChannelDate,@b_IsForwardLooking,@b_SkipVariantExpansion,@tvp_SearchedProductIds,@b_IsOnlineSearch
    END
END;
GO
PRINT N'Creating [crt].[INSERTSHIFT]...';


GO

CREATE PROCEDURE [crt].[INSERTSHIFT]
    @TVP_SHIFTTABLETYPE              [crt].[SHIFTTABLETYPE]                  READONLY,
    @TVP_SHIFTTENDERLINETABLETYPE    [crt].[SHIFTTENDERLINETABLETYPE]        READONLY,
	@TVP_SHIFTACCOUNTLINETABLETYPE    [crt].[SHIFTACCOUNTLINETYPE]		     READONLY,
    @RV_ROWVERSION                   ROWVERSION                              OUTPUT
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    DECLARE @tvp_RowVersion             TABLE ([ROWVERSION] BINARY(8));

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    --
    -- Insert Shift
    --

    -- Perform Insert
    INSERT INTO [ax].RETAILPOSBATCHTABLE
    (
        [BATCHID],
        [CHANNEL],
        [CLOSEDATE],
        [CLOSEDATETIMEUTC],
        [CLOSEDATETIMEUTCTZID],
        [CLOSETIME],
		[CLOSEDATTERMINAL],
        [CUSTOMERSCOUNT],
        [DISCOUNTTOTAL],
        [LOGONSCOUNT],
        [NOSALECOUNT],
        [PAIDTOACCOUNTTOTAL],
        [POSTED],
        [RETURNSTOTAL],
        [ROUNDEDAMOUNTTOTAL],
        [SALESCOUNT],
        [SALESTOTAL],
        [STAFFID],
        [STARTDATE],
        [STARTDATETIMEUTC],
        [STARTDATETIMEUTCTZID],
        [STARTTIME],
        [STATUS],
        [STOREID],
        [TAXTOTAL],
        [TERMINALID],
        [TRANSACTIONSCOUNT],
        [VOIDSCOUNT],
        [DATAAREAID]
    )
    OUTPUT INSERTED.[ROWVERSION] INTO @tvp_RowVersion
    SELECT
        [SHIFTID],
        [CHANNEL],
        [CLOSEDATE],
        [CLOSEDATETIMEUTC],
        [CLOSEDATETIMEUTCTZID],
        [CLOSETIME],
		[CLOSEDATTERMINAL],
        [CUSTOMERSCOUNT],
        [DISCOUNTTOTAL],
        [LOGONSCOUNT],
        [NOSALECOUNT],
        [PAIDTOACCOUNTTOTAL],
        [POSTED],
        [RETURNSTOTAL],
        [ROUNDEDAMOUNTTOTAL],
        [SALESCOUNT],
        [SALESTOTAL],
        [STAFFID],
        [STARTDATE],
        [STARTDATETIMEUTC],
        [STARTDATETIMEUTCTZID],
        [STARTTIME],
        [STATUS],
        [STOREID],
        [TAXTOTAL],
        [TERMINALID],
        [TRANSACTIONSCOUNT],
        [VOIDSCOUNT],
        [DATAAREAID]
    FROM @TVP_SHIFTTABLETYPE;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    SELECT TOP 1 @RV_ROWVERSION = CAST([ROWVERSION] AS ROWVERSION) FROM @tvp_RowVersion;

    -- Insert ShiftTenderLine
    EXEC @i_Error = [crt].[INSERTSHIFTTENDERLINE] @TVP_SHIFTTENDERLINETABLETYPE;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

	SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

	-- Insert ShiftTenderLine
    EXEC @i_Error = [crt].[INSERTSHIFTACCOUNTLINE] @TVP_SHIFTACCOUNTLINETABLETYPE;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[CREATEUPDATECUSTOMER]...';


GO

CREATE PROCEDURE [crt].[CREATEUPDATECUSTOMER]
    @TVP_CUSTOMERTABLETYPE                    [crt].CUSTOMERTABLETYPE   READONLY,
    @TVP_CUSTOMERADDRESSTABLETYPE             [crt].CUSTOMERADDRESSTABLETYPE   READONLY,
    @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE   [crt].CUSTOMERELECTRONICADDRESSTABLETYPE   READONLY,
    @TVP_EXTENSIONPROPERTIESTABLETYPE         [crt].EXTENSIONPROPERTIESTABLETYPE READONLY,
    @TVP_CUSTOMERAFFILIATIONTABLETYPE         [crt].CUSTOMERAFFILIATIONTABLETYPE READONLY,
    @TVP_ADDRESSBOOKPARTYTABLETYPE            [crt].ADDRESSBOOKPARTYTABLETYPE READONLY,
    @UPDATEADDRESSES                          BIT =1,
    @UPDATECUSTOMERAFFILIATION                BIT =1,
    @bi_ChannelId                             BIGINT,
    @nvc_DataAreaId                           NVARCHAR(4)
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                           INT;
    DECLARE @i_TransactionIsOurs                    INT;
    DECLARE @i_Error                                INT;
    DECLARE @dtt_ChangeDateTime                     DATETIME;
    DECLARE @dtt_MaxAxDateTime                      DATETIME;
    DECLARE @nvc_PrimaryEmail                       NVARCHAR(10);
    DECLARE @nvc_CustomerAccountNumber              NVARCHAR(20);

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    SET @dtt_ChangeDateTime = GETUTCDATE();
    SET @dtt_MaxAxDateTime = crt.GETMAXAXDATETIME(); -- Never expires

    -- UPSERT INTO THE DIRPARTYTABLE
    MERGE INTO [ax].DIRPARTYTABLE
    USING @TVP_CUSTOMERTABLETYPE AS SOURCE
    ON
        DIRPARTYTABLE.RECID = SOURCE.DIRPARTYRECORDID
    WHEN MATCHED THEN
        UPDATE
        SET
             NAME                   = SOURCE.NAME
            ,LANGUAGEID             = SOURCE.LANGUAGEID
            ,MODIFIEDDATETIME       = @dtt_ChangeDateTime

    WHEN NOT MATCHED THEN
        INSERT
        (
            RECID
            ,NAME
            ,PARTYNUMBER
            ,LANGUAGEID
            ,MODIFIEDDATETIME
            ,CREATEDDATETIME
        )
        VALUES
        (
            SOURCE.DIRPARTYRECORDID
            ,SOURCE.NAME
            ,SOURCE.PARTYNUMBER
            ,SOURCE.LANGUAGEID
            ,@dtt_ChangeDateTime
            ,@dtt_ChangeDateTime
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    -- UPSERT INTO THE DIRPERSONNAME
    MERGE INTO [ax].DIRPERSONNAME
    USING @TVP_CUSTOMERTABLETYPE AS SOURCE
    ON
        DIRPERSONNAME.RECID = SOURCE.PERSONNAMEID
    WHEN MATCHED THEN
        UPDATE
        SET
             FIRSTNAME             = SOURCE.FIRSTNAME
            ,MIDDLENAME            = SOURCE.MIDDLENAME
            ,LASTNAME              = SOURCE.LASTNAME
    WHEN NOT MATCHED AND SOURCE.INSTANCERELATIONTYPE = 1 THEN --only insert into DIRPERSONNAME if customer is a Person
        INSERT
        (
             RECID
            ,PERSON
            ,FIRSTNAME 
            ,MIDDLENAME
            ,LASTNAME
            ,VALIDFROM
            ,VALIDTO
        )
        VALUES
        (
             SOURCE.PERSONNAMEID
            ,SOURCE.DIRPARTYRECORDID
            ,SOURCE.FIRSTNAME
            ,SOURCE.MIDDLENAME
            ,SOURCE.LASTNAME
            ,@dtt_ChangeDateTime
            ,@dtt_MaxAxDateTime
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;


    -- UPSERT INTO THE CUSTTABLE
    MERGE INTO [ax].CUSTTABLE
    USING @TVP_CUSTOMERTABLETYPE AS SOURCE
    ON
        [ax].CUSTTABLE.ACCOUNTNUM = SOURCE.ACCOUNTNUMBER
    and [ax].CUSTTABLE.DATAAREAID = @nvc_DataAreaId
    WHEN MATCHED THEN
        UPDATE
        SET
            INVOICEACCOUNT         = SOURCE.INVOICEACCOUNT
            ,CUSTGROUP              = SOURCE.CUSTGROUP
            ,CURRENCY               = SOURCE.CURRENCY
            ,MULTILINEDISC          = SOURCE.MULTILINEDISCOUNTGROUP
            ,ENDDISC                = SOURCE.TOTALDISCOUNTGROUP
            ,LINEDISC               = SOURCE.LINEDISCOUNTGROUP
            ,PRICEGROUP             = SOURCE.PRICEGROUP
            ,TAXGROUP               = SOURCE.TAXGROUP
            ,VATNUM                 = SOURCE.VATNUM
            ,CREDITMAX              = SOURCE.CREDITLIMIT
            ,BLOCKED                = SOURCE.BLOCKED
            ,ORGID                  = SOURCE.ORGID
            ,MODIFIEDDATETIME       = @dtt_ChangeDateTime
    WHEN NOT MATCHED THEN
        INSERT
        (
            RECID
            ,ACCOUNTNUM
            ,INVOICEACCOUNT
            ,CUSTGROUP
            ,CURRENCY
            ,MULTILINEDISC
            ,ENDDISC
            ,LINEDISC
            ,PRICEGROUP
            ,TAXGROUP
            ,VATNUM
            ,CREDITMAX
            ,BLOCKED
            ,ORGID
            ,PARTY
            ,CREATEDDATETIME
            ,MODIFIEDDATETIME
            ,DATAAREAID
        )
        VALUES
        (
            SOURCE.RECORDID
            ,SOURCE.ACCOUNTNUMBER
            ,SOURCE.INVOICEACCOUNT
            ,SOURCE.CUSTGROUP
            ,SOURCE.CURRENCY
            ,SOURCE.MULTILINEDISCOUNTGROUP
            ,SOURCE.TOTALDISCOUNTGROUP
            ,SOURCE.LINEDISCOUNTGROUP
            ,SOURCE.PRICEGROUP
            ,SOURCE.TAXGROUP
            ,SOURCE.VATNUM
            ,SOURCE.CREDITLIMIT
            ,SOURCE.BLOCKED
            ,SOURCE.ORGID
            ,SOURCE.DIRPARTYRECORDID
            ,@dtt_ChangeDateTime
            ,@dtt_ChangeDateTime
            ,@nvc_DataAreaId
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    -- UPSERT INTO THE RETAILCUSTTABLE BASED ON ACCOUNTNUMBER
    MERGE INTO [ax].RETAILCUSTTABLE
    USING @TVP_CUSTOMERTABLETYPE AS SOURCE
    ON
        [ax].RETAILCUSTTABLE.ACCOUNTNUM = SOURCE.ACCOUNTNUMBER
    and [ax].RETAILCUSTTABLE.DATAAREAID = @nvc_DataAreaId
    WHEN MATCHED THEN
        UPDATE
        SET
             RECEIPTEMAIL            = SOURCE.RECEIPTEMAIL
            ,RECEIPTOPTION           = SOURCE.RECEIPTOPTION
            ,MODIFIEDDATETIME        = @dtt_ChangeDateTime

    WHEN NOT MATCHED THEN
        INSERT
        (
             RECID
            ,ACCOUNTNUM
            ,RECEIPTEMAIL
            ,RECEIPTOPTION
            ,MODIFIEDDATETIME
            ,DATAAREAID
        )
        VALUES
        (
             SOURCE.RETAILCUSTTABLERECORDID
            ,SOURCE.ACCOUNTNUMBER
            ,SOURCE.RECEIPTEMAIL
            ,SOURCE.RECEIPTOPTION
            ,@dtt_ChangeDateTime
            ,@nvc_DataAreaId
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    /* BEGIN SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this)
    MERGE INTO [ax].RETAILCUSTPREFERENCE
    USING (SELECT DISTINCT 
    tp.PARENTRECID, tp.PROPERTYVALUE as [EMAILOPTIN], ct.ACCOUNTNUM, ct.DATAAREAID 
    FROM @TVP_EXTENSIONPROPERTIESTABLETYPE tp
    JOIN [ax].CUSTTABLE ct on ct.RECID = tp.PARENTRECID
    WHERE tp.PARENTRECID <> 0 and tp.PROPERTYNAME = 'EMAILOPTIN') AS SOURCE
    ON [ax].RETAILCUSTPREFERENCE.RECID = SOURCE.PARENTRECID
    and [ax].RETAILCUSTPREFERENCE.DATAAREAID = SOURCE.DATAAREAID 
    and [ax].RETAILCUSTPREFERENCE.ACCOUNTNUM = SOURCE.ACCOUNTNUM 
    WHEN MATCHED THEN 
        UPDATE SET [EMAILOPTIN] = source.[EMAILOPTIN]
    WHEN NOT MATCHED THEN
        INSERT
        (
             RECID
            ,DATAAREAID
            ,EMAILOPTIN
            ,ACCOUNTNUM
        )
        VALUES
        (
            SOURCE.PARENTRECID
            ,SOURCE.DATAAREAID
            ,SOURCE.EMAILOPTIN
            ,SOURCE.ACCOUNTNUM
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;
END SDKSAMPLE_CUSTOMERPREFERENCES (do not remove this) */
    
   -- UPSERT INTO THE DIRADDRESSBOOKPARTY
    MERGE INTO [ax].DIRADDRESSBOOKPARTY
    USING @TVP_ADDRESSBOOKPARTYTABLETYPE AS SOURCE
    ON
        DIRADDRESSBOOKPARTY.RECID = SOURCE.RECORDID
    WHEN NOT MATCHED THEN
        INSERT
        (
             RECID
            ,ADDRESSBOOK
            ,PARTY
        )
        VALUES
        (
             SOURCE.RECORDID
            ,SOURCE.STOREADDRESSBOOK
            ,SOURCE.PARTY
        );

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF (@UPDATEADDRESSES = 1)
    BEGIN
        -- EXEC THE CUSTOMERADDRESSES SPROC
        EXEC @i_Error = [crt].CREATEUPDATECUSTOMERADDRESS @nvc_DataAreaId, @TVP_CUSTOMERADDRESSTABLETYPE;

        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        -- EXEC THE CUSTOMERELECTRONICADDRESSES SPROC
        EXEC @i_Error = [crt].[CREATEUPDATEELECTRONICADDRESS] @TVP_CUSTOMERELECTRONICADDRESSTABLETYPE;

        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;
    END;

    -- EXEC THE CUSTOMERAFFILIATION SPROC
    IF (@UPDATECUSTOMERAFFILIATION = 1)
    BEGIN
        SELECT TOP 1 @nvc_CustomerAccountNumber = ACCOUNTNUMBER FROM @TVP_CUSTOMERTABLETYPE;
        EXEC @i_Error = [crt].[CREATEUPDATECUSTOMERAFFILIATION] @nvc_CustomerAccountNumber, @nvc_DataAreaId, @TVP_CUSTOMERAFFILIATIONTABLETYPE;

        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;
    END

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[DELETELISTINGSBYCATALOGS]...';


GO

CREATE PROCEDURE [crt].[DELETELISTINGSBYCATALOGS]
    @bi_ChannelId BIGINT,
    @tvp_CatalogIds crt.RECORDIDTABLETYPE READONLY

AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ActionStatusDone INT = 3
    DECLARE @i_AppliedActionDeleted INT = 2
    DECLARE @notSetDateTime DATETIME = [crt].GETMINAXDATE()
    DECLARE @utcNow DATETIME = GETUTCDATE()
    DECLARE @tvp_ListingPublishStatus [crt].[LISTINGPUBLISHSTATUSTABLETYPE]
    DECLARE @i_ReturnCode INT;
    DECLARE @i_TransactionIsOurs INT;
    DECLARE @i_Error INT;

    INSERT INTO @tvp_ListingPublishStatus
    SELECT
        @i_ActionStatusDone,
        @i_AppliedActionDeleted,
        C.CATALOGID,
        @bi_ChannelId,
        CAST(C.LISTINGRECID AS NVARCHAR(50)),
        @notSetDateTime,
        0,
        C.LISTINGRECID,
        0,
        @utcNow,
        0,
        '',
        '',
        '',
        C.LANGUAGEID
    FROM [crt].[CATALOGLISTMAPPING] AS C
    INNER JOIN @tvp_CatalogIds IDS on IDS.RECID = C.CATALOGID
    WHERE CHANNELID = @bi_ChannelId


    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    EXEC crt.INSERTPUBLISHSTATUSFORCURRENTLISTINGPAGE @tvp_ListingPublishStatus
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    DELETE C
    FROM [crt].[CATALOGLISTMAPPING] AS C
    INNER JOIN @tvp_CatalogIds IDS on IDS.RECID = C.CATALOGID
    WHERE CHANNELID = @bi_ChannelId

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;

END;
GO
PRINT N'Creating [crt].[INSERTKITTRANSACTION]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
	[crt].[INSERTKITTRANSACTION] calls the corresponding stored procedures to insert into:
	Header record into RetailTransactionTable 
	Kit transaction lines into RETAILTRANSACTIONKITDISASSEMBLYTRANS.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[INSERTKITTRANSACTION]
    @bi_ChannelId					BIGINT,
    @tvp_Transaction				[crt].[RETAILTRANSACTIONTABLETYPE]      READONLY,	
    @tvp_kitTransaction				[crt].[ITEMLINETRANSACTIONTABLETYPE]	READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    --
    -- Insert RetailTransactionTable
    --
    EXEC [crt].[INSERTTRANSACTION] @bi_ChannelId, @tvp_Transaction;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionKitDisassembly
    --

	INSERT INTO [ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS]
           ([CHANNEL]
           ,[ITEMID]
           ,[LINENUM]
           ,[QTY]
           ,[STOREID]
           ,[TERMINALID]
           ,[TRANSACTIONID]
           ,[TRANSACTIONSTATUS]
           ,[VARIANTID]
           ,[DATAAREAID]
		   )   
			SELECT 
			 @bi_ChannelId
			,[ITEMID]
			,[LINENUM]
			,[QTY]
		    ,[STOREID]
		    ,[TERMINALID]
		    ,[TRANSACTIONID]
		    ,[TRANSACTIONSTATUS]
		    ,[VARIANTID]
		    ,[DATAAREAID]
    FROM @tvp_kitTransaction AS Source;

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;


    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETPRODUCTSBYITEMID]...';


GO

CREATE PROCEDURE [crt].[GETPRODUCTSBYITEMID]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @i_DataLevel                INT,
    @b_IsForwardLooking         BIT,
    @b_SkipVariantExpansion     BIT,
    @nvc_DataAreaId             NVARCHAR(4),
    @tvp_ItemIds                [crt].ITEMIDSEARCHTABLETYPE READONLY
AS
BEGIN
    -- Paging gets performed in the first search operation. Hence, preventing paging from occuring again in the GETPRODUCTS call.
    DECLARE @tvp_NoPagingQueryResultSettings [crt].QUERYRESULTSETTINGSTABLETYPE
    INSERT INTO @tvp_NoPagingQueryResultSettings VALUES (0, (SELECT TOP 1 [settings].[TOP] FROM @tvp_QueryResultSettings settings), 0, N'', 0)

    DECLARE @tvp_ProductIds crt.RECORDIDTABLETYPE
    DECLARE @tvp_SearchedIds [crt].RECORDIDTABLETYPE

    INSERT INTO @tvp_SearchedIds(RECID)
    -- Return only Master/Standalone product ids as required by paging and assortments
    SELECT DISTINCT COALESCE([pv].PRODUCTMASTER, [spi].RECID) AS RECID
    FROM [crt].SEARCHPRODUCTSBYITEMID(@nvc_DataAreaId, @tvp_ItemIds) spi
    LEFT OUTER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON [pv].RECID = [spi].RECID

    ;WITH ProductIdResult (RECID, ROWNUM)
    AS
    (
        SELECT DISTINCT
            [gap].PRODUCTID AS RECID,
            ROW_NUMBER() OVER (ORDER BY [gap].PRODUCTID) AS ROWNUM
        FROM [crt].GETASSORTEDPRODUCTS(@bi_ChannelId, @dt_ChannelDate, 0 /* @b_IsForwardLooking */, 1 /* @b_SkipVariantExpansion */, 1 /* @b_ProductIdsPassed */, @tvp_SearchedIds) gap
    )

    INSERT INTO @tvp_ProductIds
    SELECT DISTINCT
        RECID
    FROM ProductIdResult
    INNER JOIN @tvp_QueryResultSettings settings ON [settings].[TOP] = 0 OR ROWNUM BETWEEN ([settings].[SKIP] + 1) AND ([settings].[SKIP] + [settings].[TOP])

    INSERT INTO @tvp_ProductIds
    SELECT
        [idc].DISTINCTPRODUCTVARIANT
    FROM @tvp_ItemIds ids
    INNER JOIN [ax].INVENTDIMCOMBINATION idc ON [idc].ITEMID = [ids].ITEMID AND [idc].INVENTDIMID = [ids].INVENTDIMID AND [idc].DATAAREAID = @nvc_DataAreaId
    WHERE [ids].INVENTDIMID != ''

    exec [crt].GETPRODUCTS @tvp_NoPagingQueryResultSettings,@bi_ChannelId,0,@i_DataLevel,@dt_ChannelDate,@b_IsForwardLooking,@b_SkipVariantExpansion,@tvp_ProductIds,1
END;
GO
PRINT N'Creating [crt].[UPDATESHIFTSTAGING]...';


GO
CREATE PROCEDURE [crt].[UPDATESHIFTSTAGING]
    @TVP_SHIFTTABLETYPE     [crt].[SHIFTTABLETYPE] READONLY,
    @RV_ROWVERSION          ROWVERSION OUTPUT

AS
BEGIN
    SET NOCOUNT ON


     DECLARE @i_ReturnCode           INT;
     DECLARE @i_RowCount             INT;
     DECLARE @i_Error                INT;
     DECLARE @tvp_RowVersion         TABLE ([ROWVERSION] BINARY(8));

     -- UPDATE THE RETAILSHIFTSTAGINGTABLE
     UPDATE [crt].RETAILSHIFTSTAGINGTABLE
     SET
        STAFFID                = S.STAFFID,
        CURRENTSTAFFID         = S.CURRENTSTAFFID,
        [STATUS]               = S.[STATUS],
        CURRENTTERMINALID      = S.CURRENTTERMINALID,
        STATUSDATETIMEUTC      = S.STATUSDATETIMEUTC,
        CASHDRAWER             = S.CASHDRAWER,
        ISSHARED               = S.ISSHARED
     OUTPUT INSERTED.[ROWVERSION] INTO @tvp_RowVersion
     FROM (SELECT
        [CASHDRAWER],
        [CHANNEL],
        [CLOSEDATE],
        [CLOSEDATETIMEUTC],
        [CLOSEDATETIMEUTCTZID],
        [CLOSETIME],
        [CURRENTTERMINALID],
        [CUSTOMERSCOUNT],
        [DISCOUNTTOTAL],
        [LOGONSCOUNT],
        [NOSALECOUNT],
        [PAIDTOACCOUNTTOTAL],
        [POSTED],
        [RETURNSTOTAL],
        [ROUNDEDAMOUNTTOTAL],
        [SALESCOUNT],
        [SALESTOTAL],
        [SHIFTID],
        [STAFFID],
        [CURRENTSTAFFID],
        [STARTDATE],
        [STARTDATETIMEUTC],
        [STARTDATETIMEUTCTZID],
        [STARTTIME],
        [STATUS],
        [STATUSDATETIMEUTC],
        [STOREID],
        [TAXTOTAL],
        [TERMINALID],
        [TRANSACTIONSCOUNT],
        [VOIDSCOUNT],
        [ISSHARED],
        [DATAAREAID]
     FROM @TVP_SHIFTTABLETYPE) AS S
     WHERE
        [crt].RETAILSHIFTSTAGINGTABLE.CHANNEL = ISNULL(S.CHANNEL, 0) AND S.CHANNEL IS NOT NULL AND
        [crt].RETAILSHIFTSTAGINGTABLE.TERMINALID = ISNULL(S.TERMINALID, '') AND S.TERMINALID IS NOT NULL AND
        [crt].RETAILSHIFTSTAGINGTABLE.SHIFTID = ISNULL(S.SHIFTID, 0) AND S.SHIFTID IS NOT NULL AND
        [crt].RETAILSHIFTSTAGINGTABLE.ROWVERSION = @RV_ROWVERSION;

     SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

     IF @i_Error <> 0
     BEGIN
         SET @i_ReturnCode = @i_Error;
         RETURN @i_ReturnCode;
     END;

    -- upserts into used shifts staging table
    EXEC @i_Error = [crt].[UPSERTSHIFTUSERSSTAGING] @TVP_SHIFTTABLETYPE;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        RETURN @i_ReturnCode;
    END;

     SELECT TOP 1 @RV_ROWVERSION = CAST([ROWVERSION] AS ROWVERSION) FROM @tvp_RowVersion;

     -- If no rows were changed, there was a problem updating (mostly because of row version)
     IF (@i_RowCount = 0)
     BEGIN;
         SET @i_ReturnCode = [crt].fn_kErrorVersionMismatchError();
         RETURN @i_ReturnCode;
     END;

END;
GO
PRINT N'Creating [crt].[POPULATEPRODUCTASSORTMENTRULES]...';


GO
CREATE PROCEDURE [crt].[POPULATEPRODUCTASSORTMENTRULES]
AS
BEGIN

DECLARE @dt_StepStartDateTime DATETIME
DECLARE @dt_SprocStartDateTime DATETIME

SET @dt_StepStartDateTime = GETDATE()
SET @dt_SprocStartDateTime = @dt_StepStartDateTime

-- Creates the temporary table used to store the intermediate state of assortment rules
IF object_id(N'TempDb..#MERGEDASSORTMENTRULES') IS NULL BEGIN
    CREATE TABLE [#MERGEDASSORTMENTRULES]
    (
        ASSORTMENTID BIGINT NOT NULL,
        PRODUCTID BIGINT NOT NULL,
        VARIANTID BIGINT NOT NULL,
        LINETYPE INT NOT NULL,
        VALIDFROM DATE,
        VALIDTO DATE
    )
END

--This procedure will populate the temp table #MERGEDASSORTMENTRULES with the intermediate results
-- of the assortment calculation
EXEC [crt].POPULATEMERGEDASSORTMENTRULES;

-- PRINT 'Merging assortment date rules (ms): ' + CAST(DATEDIFF(ms, @dt_StepStartDateTime, GETDATE()) AS VARCHAR)
-- SET @dt_StepStartDateTime = GETDATE()

IF object_id(N'TempDb..#TMPASSORTMENTRESULT') IS NOT NULL BEGIN
    DROP TABLE #TMPASSORTMENTRESULT;
END;

WITH
    cte_MergedAssortmentRules AS
    (
        -- Merge all overlapping assortment rules.
        SELECT ASSORTMENTID, PRODUCTID, VARIANTID, LINETYPE, VALIDFROM, VALIDTO
        FROM #MERGEDASSORTMENTRULES ral
    ),

    cte_ExplicitlyExcludedProductsAndVariants AS
    (
        SELECT PRODUCTID, VARIANTID, VALIDFROM, VALIDTO
        FROM cte_MergedAssortmentRules
        WHERE LINETYPE = 0
    ),

    cte_Result AS
    (
        -- Retrieve implicitly included product variants for explicitly included product masters.
        SELECT
            ral.ASSORTMENTID AS ASSORTMENTID,
            pv.PRODUCTMASTER AS 'PRODUCTID',
            pv.RECID AS 'VARIANTID',
            dr.VALIDFROM,
            dr.VALIDTO
        FROM cte_MergedAssortmentRules ral
        INNER JOIN [ax].ECORESDISTINCTPRODUCTVARIANT pv ON pv.PRODUCTMASTER = ral.PRODUCTID -- Include variants only
        LEFT OUTER JOIN cte_ExplicitlyExcludedProductsAndVariants epv ON epv.PRODUCTID = ral.PRODUCTID AND (epv.VARIANTID = 0 OR epv.VARIANTID = pv.RECID)
            AND NOT (ral.VALIDFROM > epv.VALIDTO OR ral.VALIDTO < epv.VALIDFROM)
        CROSS APPLY [crt].GETINCLUDEDDATERANGES(ral.VALIDFROM, ral.VALIDTO, epv.VALIDFROM, epv.VALIDTO) dr
        WHERE ral.LINETYPE = 1 AND ral.VARIANTID = 0

        UNION ALL

        -- Retrieve explicitly included products and/or variants that have not been excluded.
        SELECT
            ral.ASSORTMENTID,
            ral.PRODUCTID,
            ral.VARIANTID,
            dr.VALIDFROM,
            dr.VALIDTO
        FROM cte_MergedAssortmentRules ral
        LEFT OUTER JOIN cte_ExplicitlyExcludedProductsAndVariants epv ON epv.PRODUCTID = ral.PRODUCTID AND (epv.VARIANTID = 0 OR epv.VARIANTID = ral.VARIANTID)
            AND NOT (ral.VALIDFROM > epv.VALIDTO OR ral.VALIDTO < epv.VALIDFROM)
        CROSS APPLY [crt].GETINCLUDEDDATERANGES(ral.VALIDFROM, ral.VALIDTO, epv.VALIDFROM, epv.VALIDTO) dr
        WHERE ral.LINETYPE = 1

        UNION

        -- Retrieve product masters that have been implicitly included by variant inclusions.
        SELECT
            ral.ASSORTMENTID AS ASSORTMENTID,
            ral.PRODUCTID AS 'PRODUCTID',
            0 AS 'VARIANTID',
            dr.VALIDFROM,
            dr.VALIDTO
        FROM cte_MergedAssortmentRules ral
        LEFT OUTER JOIN cte_ExplicitlyExcludedProductsAndVariants epv ON epv.PRODUCTID = ral.PRODUCTID AND (epv.VARIANTID = 0 OR epv.VARIANTID = ral.VARIANTID)
            AND NOT (ral.VALIDFROM > epv.VALIDTO OR ral.VALIDTO < epv.VALIDFROM)
        CROSS APPLY [crt].GETINCLUDEDDATERANGES(ral.VALIDFROM, ral.VALIDTO, epv.VALIDFROM, epv.VALIDTO) dr
        WHERE ral.LINETYPE = 1 AND ral.VARIANTID != 0
    )
    SELECT * INTO #TMPASSORTMENTRESULT FROM cte_Result

-- PRINT 'Merging assortment inclusion rules (ms): ' + CAST(DATEDIFF(ms, @dt_StepStartDateTime, GETDATE()) AS VARCHAR)
-- SET @dt_StepStartDateTime = GETDATE();

ALTER INDEX IX_LOCALPRODUCTASSORTMENTRULESVIEW
ON [crt].[LOCALPRODUCTASSORTMENTRULESVIEW] DISABLE;

DELETE FROM [crt].PRODUCTASSORTMENTRULES
INSERT INTO [crt].PRODUCTASSORTMENTRULES (ASSORTMENTID, PRODUCTID, VARIANTID, VALIDFROM, VALIDTO)
SELECT ASSORTMENTID, PRODUCTID, VARIANTID, VALIDFROM, VALIDTO FROM #TMPASSORTMENTRESULT;

ALTER INDEX IX_LOCALPRODUCTASSORTMENTRULESVIEW
ON [crt].[LOCALPRODUCTASSORTMENTRULESVIEW] REBUILD;

UPDATE STATISTICS [crt].PRODUCTASSORTMENTRULES;

-- PRINT 'Updating [crt].PRODUCTASSORTMENTRULES (ms): ' + CAST(DATEDIFF(ms, @dt_StepStartDateTime, GETDATE()) AS VARCHAR)
-- SET @dt_StepStartDateTime = GETDATE()

    -- Assortment V2 table
    TRUNCATE TABLE [crt].PRODUCTASSORTMENTRULES_V2;
    INSERT INTO [crt].PRODUCTASSORTMENTRULES_V2 (ASSORTMENTID, PRODUCTID, VALIDFROM, VALIDTO)
    SELECT ASSORTMENTID, CASE WHEN VARIANTID <> 0 THEN VARIANTID ELSE PRODUCTID END, VALIDFROM, VALIDTO FROM #TMPASSORTMENTRESULT;

    UPDATE STATISTICS [crt].PRODUCTASSORTMENTRULES_V2;

-- PRINT 'Updating [crt].PRODUCTASSORTMENTRULES_V2 (ms): ' + CAST(DATEDIFF(ms, @dt_StepStartDateTime, GETDATE()) AS VARCHAR)
-- PRINT 'Total time (ms): ' + CAST(DATEDIFF(ms, @dt_SprocStartDateTime, GETDATE()) AS VARCHAR)

END;
GO
PRINT N'Creating [crt].[GETCUSTOMERPENDINGTRANSACTIONSAMOUNT]...';


GO

CREATE PROCEDURE [crt].[GETCUSTOMERPENDINGTRANSACTIONSAMOUNT] 
    @nvc_AccountNumber     NVARCHAR(30),    
    @nvc_StoreId           NVARCHAR(10),    
    @nvc_PosOperation      INT,    
    @i_LastCounter         INT,
    @nvc_DataAreaId        NVARCHAR(4),
    @d_tenderAmount        DECIMAL(28,16) OUTPUT,
    @d_depositAmount       DECIMAL(28,16) OUTPUT
AS
BEGIN
    SET NOCOUNT ON
    DECLARE @TenderTypeId NVARCHAR(10)

    SELECT  @TenderTypeId = TENDERTYPEID
        FROM [ax].[RETAILSTORETENDERTYPETABLE] as [RSTTT]
            JOIN [ax].[RETAILSTORETABLE] AS [RS] ON [RS].RECID = [RSTTT].CHANNEL
        WHERE [RS].STORENUMBER = @nvc_StoreId AND DATAAREAID = @nvc_DataAreaId 
            AND [RSTTT].POSOPERATION = @nvc_PosOperation

    EXEC [crt].GETCUSTOMERLOCALPENDINGTENDERS @nvc_AccountNumber, @nvc_StoreId, @TenderTypeId, @i_LastCounter, @nvc_DataAreaId, @d_tenderAmount OUTPUT
    EXEC [crt].GETCUSTOMERLOCALPENDINGDEPOSIT @nvc_AccountNumber, @nvc_StoreId, @i_LastCounter, @nvc_DataAreaId, @d_depositAmount OUTPUT

END;
GO
PRINT N'Creating [crt].[DELETESHIFTSTAGING]...';


GO
CREATE PROCEDURE [crt].[DELETESHIFTSTAGING]
    @bi_ChannelId       [BIGINT],
    @nvc_TerminalId     [NVARCHAR](10),
    @bi_ShiftId         [BIGINT],
    @rv_RowVersion      [ROWVERSION]
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_TransactionIsOurs    INT;
    DECLARE @i_RowCount             INT;
    DECLARE @i_Error                INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    DELETE FROM [crt].RETAILSHIFTSTAGINGTABLE
    WHERE
        CHANNEL = @bi_ChannelId AND
        TERMINALID = @nvc_TerminalId AND
        SHIFTID = @bi_ShiftId

     SELECT @i_Error = @@ERROR, @i_Rowcount = @@ROWCOUNT;

     IF @i_Error <> 0
     BEGIN
         SET @i_ReturnCode = @i_Error;
         RETURN @i_ReturnCode;
     END;

     -- If no rows were changed, there was a problem updating (mostly because of row version)
     IF (@i_RowCount = 0)
     BEGIN;
         SET @i_ReturnCode = [crt].fn_kErrorVersionMismatchError();
         RETURN @i_ReturnCode;
     END;

    SELECT @i_RowCount = COUNT([SHIFTID]) FROM [crt].[RETAILSHIFTUSERSSTAGINGTABLE]
    WHERE
        CHANNEL = @bi_ChannelId AND
        ORIGINALTERMINALID = @nvc_TerminalId AND
        SHIFTID = @bi_ShiftId;

    -- delete shifts from users staging table if any
    -- if we are closing blind-closed shifts, they won't appear on staging table
    IF (@i_RowCount <> 0)
    BEGIN
        EXEC @i_Error = [crt].[DELETESHIFTUSERSSTAGING] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, @rv_RowVersion;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            RETURN @i_ReturnCode;
        END;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[GETITEMSBYITEMIDS]...';


GO

CREATE PROCEDURE [crt].[GETITEMSBYITEMIDS]
    @tvp_QueryResultSettings    [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY,
    @bi_ChannelId               BIGINT,
    @dt_ChannelDate             DATE,
    @tvp_ItemIds                [crt].[STRINGIDTABLETYPE]   READONLY
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @tvp_ProductIds [crt].RECORDIDTABLETYPE;
    DECLARE @nvc_DataAreaId NVARCHAR(4);

    -- Get the data area for the specified channel identifier.
    SELECT @nvc_DataAreaId = rct.INVENTLOCATIONDATAAREAID FROM [ax].RETAILCHANNELTABLE rct WHERE rct.RECID = @bi_ChannelId;

    -- Convert the ITEMIDs into PRODUCTIDs.
    INSERT INTO @tvp_ProductIds (RECID)
    SELECT it.PRODUCT
    FROM @tvp_ItemIds ids
    INNER JOIN [ax].INVENTTABLE it ON it.ITEMID = ids.STRINGID AND it.DATAAREAID = @nvc_DataAreaId

    -- Retrieve the items.
    exec [crt].GETITEMSBYPRODUCTIDS @tvp_QueryResultSettings, @bi_ChannelId, @dt_ChannelDate, @tvp_ProductIds

END;
GO
PRINT N'Creating [crt].[UPSERTSHIFTSTAGING]...';


GO
CREATE PROCEDURE [crt].[UPSERTSHIFTSTAGING]
    @TVP_SHIFTTABLETYPE [crt].[SHIFTTABLETYPE] READONLY,
    @RV_ROWVERSION      ROWVERSION             OUTPUT
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ReturnCode           INT;
    DECLARE @i_Error                INT;
    DECLARE @tvp_RowVersion         TABLE ([ROWVERSION] BINARY(8));

    -- upserts into shift staging table
    MERGE [crt].[RETAILSHIFTSTAGINGTABLE]
    USING @TVP_SHIFTTABLETYPE AS SOURCE
    ON
        RETAILSHIFTSTAGINGTABLE.[SHIFTID] = SOURCE.[SHIFTID] AND
        RETAILSHIFTSTAGINGTABLE.[STOREID] = SOURCE.[STOREID] AND
        RETAILSHIFTSTAGINGTABLE.[TERMINALID] = SOURCE.[TERMINALID] AND
        RETAILSHIFTSTAGINGTABLE.[DATAAREAID] = SOURCE.[DATAAREAID]
    WHEN MATCHED THEN
    UPDATE SET
        [CHANNEL]                           = SOURCE.[CHANNEL],
        [STOREID]                           = SOURCE.[STOREID],
        [TERMINALID]                        = SOURCE.[TERMINALID],
        [SHIFTID]                           = SOURCE.[SHIFTID],
        [STAFFID]                           = SOURCE.[STAFFID],
        [CURRENTSTAFFID]                    = SOURCE.[CURRENTSTAFFID],
        [STATUS]                            = SOURCE.[STATUS],
        [CURRENTTERMINALID]                 = SOURCE.[CURRENTTERMINALID],
        [STARTDATETIMEUTC]                  = SOURCE.[STARTDATETIMEUTC],
        [STATUSDATETIMEUTC]                 = SOURCE.[STATUSDATETIMEUTC],
        [DATAAREAID]                        = SOURCE.[DATAAREAID],
        [CASHDRAWER]                        = SOURCE.[CASHDRAWER],
        [ISSHARED]                          = SOURCE.[ISSHARED]
    WHEN NOT MATCHED THEN
    INSERT
    (
        CHANNEL
        ,STOREID
        ,TERMINALID
        ,SHIFTID
        ,STAFFID
        ,CURRENTSTAFFID
        ,[STATUS]
        ,CURRENTTERMINALID
        ,STARTDATETIMEUTC
        ,STATUSDATETIMEUTC
        ,DATAAREAID
        ,CASHDRAWER
        ,ISSHARED
    )
    VALUES
    (
        SOURCE.CHANNEL
        ,SOURCE.STOREID
        ,SOURCE.TERMINALID
        ,SOURCE.SHIFTID
        ,SOURCE.STAFFID
        ,SOURCE.CURRENTSTAFFID
        ,SOURCE.[STATUS]
        ,SOURCE.CURRENTTERMINALID
        ,SOURCE.STARTDATETIMEUTC
        ,SOURCE.STATUSDATETIMEUTC
        ,SOURCE.DATAAREAID
        ,SOURCE.CASHDRAWER
        ,SOURCE.ISSHARED
    )
    OUTPUT INSERTED.[ROWVERSION] INTO @tvp_RowVersion;

    SELECT @i_Error = @@ERROR;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        RETURN @i_ReturnCode;
    END;

    -- upserts into used shifts staging table
    EXEC @i_Error = [crt].[UPSERTSHIFTUSERSSTAGING] @TVP_SHIFTTABLETYPE;

    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        RETURN @i_ReturnCode;
    END;

    SELECT TOP 1 @RV_ROWVERSION = CAST([ROWVERSION] AS ROWVERSION) FROM @tvp_RowVersion;
END;
GO
PRINT N'Creating [crt].[RUNPOSTDATASYNCOPERATIONS]...';


GO

CREATE PROCEDURE [crt].[RUNPOSTDATASYNCOPERATIONS]
    @affectedTableNamesXml XML
AS BEGIN
    DECLARE @tableNameList XML;
    DECLARE @hDoc INT;

    DECLARE @affectedTableNames TABLE
    (
        TableName NVARCHAR(50),  -- as defined in AX subjob table
        TableId   INT
    );

    EXEC sp_xml_preparedocument @hDoc OUTPUT, @affectedTableNamesXml;

    INSERT INTO @affectedTableNames (TableName, TableId)
    SELECT TableName, OBJECT_ID(TableName)
    FROM OPENXML(@hDoc, 'RetailCdxDataSync/AffectedTables/Table', 1)
    WITH
    (
        TableName NVARCHAR(50) '@name'
    );

    -- Populate ax.CHANNELREFINABLEATTRIBUTE
    IF EXISTS (SELECT * FROM @affectedTableNames WHERE TableId = OBJECT_ID('[ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA]'))
    BEGIN
        EXEC [crt].[POPULATECHANNELREFINABLEATTRIBUTE];
    END;
    
    IF EXISTS
    (
        SELECT 1 FROM @affectedTableNames
        WHERE TableId IN
        (
            OBJECT_ID('[ax].[RETAILASSORTMENTLOOKUP]'),
            OBJECT_ID('[ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP]'),
            OBJECT_ID('[ax].[RETAILCHANNELTABLE]'),
            OBJECT_ID('[ax].[INVENTTABLE]'),
            OBJECT_ID('[ax].[ECORESDISTINCTPRODUCTVARIANT]')
        )
    )
    BEGIN
        EXEC [crt].POPULATEPRODUCTASSORTMENTRULES
    END;

    -- Force updating full text indexes to avoid prevent SQL Server from running a delayed index population in the background.
    DECLARE @sql_UpdateFullTextIndexes NVARCHAR(MAX)
    SET @sql_UpdateFullTextIndexes = ''

    SELECT
        @sql_UpdateFullTextIndexes = @sql_UpdateFullTextIndexes + ' ALTER FULLTEXT INDEX ON ' + [s].NAME + '.' + [t].NAME + ' START UPDATE POPULATION;'
    FROM sys.fulltext_indexes fti
    INNER JOIN sys.tables t ON [t].[object_id] = [fti].[object_id]
    INNER JOIN sys.schemas s ON [s].[schema_id] = [t].[schema_id]
    INNER JOIN @affectedTableNames atn ON [atn].TableId = [t].[object_id]
    -- Excludes the following full text index tables in upload job as Retail Server does not have permission.
    WHERE [atn].TableId NOT IN 
	(
	    OBJECT_ID('[ax].[RETAILASYNCCUSTOMER]'),
		OBJECT_ID('[ax].[RETAILASYNCADDRESS]'),
		OBJECT_ID('[ax].[RETAILTRANSACTIONADDRESSTRANS]')
	)

    SELECT @sql_UpdateFullTextIndexes

    EXEC(@sql_UpdateFullTextIndexes)

END;
GO
PRINT N'Creating [crt].[DELETELISTINGSBYLANGUAGES]...';


GO

CREATE PROCEDURE [crt].[DELETELISTINGSBYLANGUAGES]
    @bi_ChannelId BIGINT,
    @tvp_LanguageIds crt.LANGUAGEIDTABLETYPE READONLY

AS
BEGIN
    SET NOCOUNT ON

    DECLARE @i_ActionStatusDone INT = 3
    DECLARE @i_AppliedActionDeleted INT = 2
    DECLARE @notSetDateTime DATETIME = CAST('1901-01-01 00:00:00.000' AS DATETIME)
    DECLARE @utcNow DATETIME = GETUTCDATE()
    DECLARE @tvp_ListingPublishStatus [crt].[LISTINGPUBLISHSTATUSTABLETYPE]
    DECLARE @i_ReturnCode INT;
    DECLARE @i_TransactionIsOurs INT;
    DECLARE @i_Error INT;

    INSERT INTO @tvp_ListingPublishStatus
    SELECT
        @i_ActionStatusDone,
        @i_AppliedActionDeleted,
        c.CATALOGID,
        @bi_ChannelId,
        CAST(C.LISTINGRECID AS NVARCHAR(50)),
        @notSetDateTime,
        0,
        C.LISTINGRECID,
        0,
        @utcNow,
        0,
        '',
        '',
        '',
        C.LANGUAGEID
    FROM [crt].[CATALOGLISTMAPPING] AS C
    INNER JOIN @tvp_LanguageIds ids on ids.LANGUAGEID = C.LANGUAGEID
    WHERE CHANNELID = @bi_ChannelId


    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    EXEC crt.INSERTPUBLISHSTATUSFORCURRENTLISTINGPAGE @tvp_ListingPublishStatus
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    DELETE C
    FROM [crt].[CATALOGLISTMAPPING] AS C
    INNER JOIN @tvp_LanguageIds ids on ids.LANGUAGEID = C.LANGUAGEID
    WHERE CHANNELID = @bi_ChannelId

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;

END;
GO
PRINT N'Creating [crt].[GETSHIFTSALESDATA]...';


GO

CREATE PROCEDURE [crt].[GETSHIFTSALESDATA]
    @bi_ChannelId						bigint,
	@nvc_TerminalId						nvarchar(10),
	@bi_ShiftId							bigint,
	@i_TaxInclusive						int
AS

BEGIN
	SET NOCOUNT ON;

	DECLARE @SuspendedCount INT
	DECLARE @SalesTotal NUMERIC (32,16)
	DECLARE @ReturnsTotal NUMERIC (32,16)
	DECLARE @DiscountTotal NUMERIC (32,16)
	DECLARE @TaxTotal NUMERIC (32,16)
	DECLARE @SalesCount INT
	DECLARE @PaidToAccountTotal NUMERIC (32,16)

	-- Calculate the Suspended Sales transactions count.
	SELECT	@SuspendedCount = COUNT(*) 
	FROM	[crt].[SALESTRANSACTION] 
	WHERE	CHANNELID = @bi_ChannelId
            AND TERMINALID = @nvc_TerminalId
            AND ISSUSPENDED = 1
            AND DELETEDDATETIME IS NULL

	-- Calculate Paid to account total
	SELECT	@PaidToAccountTotal = CAST(SUM(AMOUNTTENDERED) AS NUMERIC(32,16)) 
	FROM	[ax].[RETAILTRANSACTIONPAYMENTTRANS] AS L 
			INNER JOIN [ax].[RETAILTRANSACTIONTABLE] AS H ON H.TRANSACTIONID = L.TRANSACTIONID 
					AND		H.STORE = L.STORE
					AND		H.TERMINAL = L.TERMINAL 
					AND		H.DATAAREAID = L.DATAAREAID
	WHERE	H.CHANNEL = @bi_ChannelId
			AND		H.TERMINAL = @nvc_TerminalId 
			AND		H.BATCHID = @bi_ShiftId 
			AND		TRANSACTIONSTATUS = 0 -- Normal transaction status
			AND		H.TYPE = 3 -- Payment transaction

	-- Calculate the retail transaction sales amount.
	SELECT	@SalesTotal = (-1 * (SUM(SALES.SALESAMOUNT) + CASE WHEN @i_TaxInclusive = 1 THEN SUM(SALES.SALESTAXAMOUNT) ELSE 0 END)) ,
			@ReturnsTotal = (SUM(SALES.RETURNAMOUNT) + CASE WHEN @i_TaxInclusive = 1 THEN SUM(SALES.RETURNTAXAMOUNT) ELSE 0 END),
			@DiscountTotal = SUM(SALES.DISCAMOUNT),
			-- Negate the tax amount as tax is saved as negative for sales and positive for returns
			@TaxTotal = (-1 * SUM(SALES.TAXAMOUNT)),
			@SalesCount = COUNT(DISTINCT SALES.TRANSACTIONID) 
	FROM	[crt].[RETAILTRANSACTIONSALESAMOUNTSVIEW] SALES
	WHERE	SALES.CHANNEL = @bi_ChannelId 
			AND SALES.BATCHTERMINALID = @nvc_TerminalId
			AND SALES.BATCHID = @bi_ShiftId
			-- Filter by 0 normal transaction status (usually sales transactions) (or) customer order with posted status (19 - customer order and 2 - posted transactions ie. invoiced).
			AND ((SALES.TRANSACTIONSTATUS = 0 AND SALES.ENTRYSTATUS = 0) OR (SALES.TYPE = 19 AND SALES.TRANSACTIONSTATUS = 2 AND SALES.ENTRYSTATUS = 2)) 

	-- Select all totals and statistics
	SELECT	@SalesTotal AS SALESTOTAL,
			@ReturnsTotal AS RETURNSTOTAL,
			@DiscountTotal AS DISCOUNTTOTAL,
			@TaxTotal AS TAXTOTAL,
			@PaidToAccountTotal AS PAIDTOACCOUNTTOTAL,
			@SalesCount AS SALESCOUNT,
			@SuspendedCount AS SUSPENDEDCOUNT

	-- Select all the Payment done for the current shift.
	DECLARE @tvp_ShiftTenderAmountTypeStartingAmount as [crt].[SHIFTTENDERAMOUNTTYPE]
	DECLARE @tvp_ShiftTenderAmountTypeFloatEntry as [crt].[SHIFTTENDERAMOUNTTYPE]
	DECLARE @tvp_ShiftTenderAmountTypeRemoveTender as [crt].[SHIFTTENDERAMOUNTTYPE]
	DECLARE @tvp_ShiftTenderAmountTypeSafeDrop as [crt].[SHIFTTENDERAMOUNTTYPE]
	DECLARE @tvp_ShiftTenderAmountTypeBankDrop as [crt].[SHIFTTENDERAMOUNTTYPE]
	DECLARE @tvp_ShiftTenderAmountTypeTenderDeclaration as [crt].[SHIFTTENDERAMOUNTTYPE]

	/************Transaction Type for different Daily Operations***************/
	-- TransactionType = 20 for Declare Start Amount operation
	-- TransactionType = 5 for Float Entry operation
	-- TransactionType = 4 for Remove Tender operation
	-- TransactionType = 17 for Safe drop operation
	-- TransactionType = 16 for Bank drop operation
	-- TransactionType = 7 for Tender declare operation
	/************Transaction Type for different Daily Operations***************/

	-- Get Starting shift tender total
	INSERT INTO @tvp_ShiftTenderAmountTypeStartingAmount EXEC [crt].[GETSHIFTTENDERPAYMENTTRANS] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, 20
	-- Get Float entry shift tender total
	INSERT INTO @tvp_ShiftTenderAmountTypeFloatEntry EXEC [crt].[GETSHIFTTENDERPAYMENTTRANS] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, 5
	-- Get tender removal shift tender total
	INSERT INTO @tvp_ShiftTenderAmountTypeRemoveTender EXEC [crt].[GETSHIFTTENDERPAYMENTTRANS] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, 4
	-- Get safe drop shift tender total
	INSERT INTO @tvp_ShiftTenderAmountTypeSafeDrop EXEC [crt].[GETSHIFTTENDERSAFEDROPTRANS] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, 17
	-- Get bank drop shift tender total
	INSERT INTO @tvp_ShiftTenderAmountTypeBankDrop EXEC [crt].[GETSHIFTTENDERBANKDROPTRANS] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, 16
	-- Get tender declaration shift tender total
	INSERT INTO @tvp_ShiftTenderAmountTypeTenderDeclaration EXEC [crt].[GETSHIFTTENDERDECLARATIONTRANS] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, 7

	DECLARE @tvp_ShiftTotalAmountTempTable as [crt].[SHIFTTENDERAMOUNTTYPE]

	-- Select the transactions cummulatively.

	INSERT INTO @tvp_ShiftTotalAmountTempTable 
	SELECT TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, CAST(SUM(TENDEREDAMOUNT) AS DECIMAL(32, 16)) AS TENDEREDAMOUNT, CAST(SUM(TENDEREDAMOUNTCUR) AS DECIMAL(32, 16)) AS TENDEREDAMOUNTCUR, 20 AS TRANSACTIONTYPE FROM @tvp_ShiftTenderAmountTypeStartingAmount
	GROUP BY TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED

	INSERT INTO @tvp_ShiftTotalAmountTempTable 
	SELECT TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, CAST(SUM(TENDEREDAMOUNT) AS DECIMAL(32, 16)) AS TENDEREDAMOUNT, CAST(SUM(TENDEREDAMOUNTCUR) AS DECIMAL(32, 16)) AS TENDEREDAMOUNTCUR, 5 AS TRANSACTIONTYPE FROM @tvp_ShiftTenderAmountTypeFloatEntry
	GROUP BY TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED

	INSERT INTO @tvp_ShiftTotalAmountTempTable 
	SELECT TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, - CAST(SUM(TENDEREDAMOUNT) AS DECIMAL(32, 16)) AS TENDEREDAMOUNT, - CAST(SUM(TENDEREDAMOUNTCUR) AS DECIMAL(32, 16)) AS TENDEREDAMOUNTCUR, 4 AS TRANSACTIONTYPE FROM @tvp_ShiftTenderAmountTypeRemoveTender
	GROUP BY TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED

	INSERT INTO @tvp_ShiftTotalAmountTempTable 
	SELECT TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, CAST(SUM(TENDEREDAMOUNT) AS DECIMAL(32, 16)) AS TENDEREDAMOUNT, CAST(SUM(TENDEREDAMOUNTCUR) AS DECIMAL(32, 16)) AS TENDEREDAMOUNTCUR, 17 AS TRANSACTIONTYPE FROM @tvp_ShiftTenderAmountTypeSafeDrop
	GROUP BY TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED

	INSERT INTO @tvp_ShiftTotalAmountTempTable 
	SELECT TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, CAST(SUM(TENDEREDAMOUNT) AS DECIMAL(32, 16)) AS TENDEREDAMOUNT, CAST(SUM(TENDEREDAMOUNTCUR) AS DECIMAL(32, 16)) AS TENDEREDAMOUNTCUR, 16 AS TRANSACTIONTYPE FROM @tvp_ShiftTenderAmountTypeBankDrop
	GROUP BY TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED

	INSERT INTO @tvp_ShiftTotalAmountTempTable 
	SELECT TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED, CAST(SUM(TENDEREDAMOUNT) AS DECIMAL(32, 16)) AS TENDEREDAMOUNT, CAST(SUM(TENDEREDAMOUNTCUR) AS DECIMAL(32, 16)) AS TENDEREDAMOUNTCUR, 7 AS TRANSACTIONTYPE FROM @tvp_ShiftTenderAmountTypeTenderDeclaration
	GROUP BY TENDERTYPEID, TENDERTYPENAME, CURRENCY, COUNTINGREQUIRED

	EXEC [crt].[GETSHIFTTOTALAMOUNT] @tvp_ShiftTotalAmountTempTable

	-- Select the sum of Income expense account group by Account type and Income Expense Account number.
	SELECT	L.INCOMEEXEPENSEACCOUNT, 
			L.ACCOUNTTYPE, 
			CASE	WHEN L.ACCOUNTTYPE = 0 THEN (-1.0 * SUM(L.AMOUNT)) -- Income account type = 0
				WHEN L.ACCOUNTTYPE = 1 THEN SUM(L.AMOUNT) END AS AMOUNT -- Expense account type = 1 
	FROM	[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] AS L 
			INNER JOIN [ax].[RETAILTRANSACTIONTABLE] AS H ON H.TRANSACTIONID = L.TRANSACTIONID 
					AND H.CHANNEL = L.CHANNEL
					AND H.TERMINAL = L.TERMINAL
					AND H.DATAAREAID = L.DATAAREAID 			
	WHERE   H.CHANNEL = @bi_ChannelId 
			AND H.BATCHTERMINALID = @nvc_TerminalId
			AND H.BATCHID = @bi_ShiftId 
			AND H.ENTRYSTATUS = 0 -- EntryStatus = Normal
			AND L.TRANSACTIONSTATUS = 0 -- TransactionStatus = Normal
			AND H.[TYPE] = 18 -- TransactionType = Income/ Expense
	GROUP BY L.ACCOUNTTYPE, L.INCOMEEXEPENSEACCOUNT
	ORDER BY L.INCOMEEXEPENSEACCOUNT

END;
GO
PRINT N'Creating [crt].[SAVECUSTOMERACCOUNTACTIVATIONREQUEST]...';


GO

CREATE PROCEDURE [crt].[SAVECUSTOMERACCOUNTACTIVATIONREQUEST]
    @nvc_EmailAddress            NVARCHAR(100),
    @nvc_ActivationToken        UNIQUEIDENTIFIER,
    @nvc_ExternalIdentityId        NVARCHAR(500),
    @nvc_ExternalIdentityIssuer NVARCHAR(500),
    @nvc_CustomerId                NVARCHAR(20),
    @nvc_DataAreaID                NVARCHAR(4)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @i_ReturnCode                       INT;
    DECLARE @i_TransactionIsOurs                INT;
    DECLARE @i_Error                            INT;
    DECLARE @bi_EXTERNALIDTOCUSTOMERMAPRECID    BIGINT;
    DECLARE @bit_PendingStatusCode              BIT;
	DECLARE @nvc_InsertedExternalIdentityId     NVARCHAR(500);
    DECLARE @bi_InsertedIdentityProviderRecId   BIGINT;
    DECLARE @nvc_InsertedCustomerAccountNumber  NVARCHAR(20);

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;
    SET @bi_EXTERNALIDTOCUSTOMERMAPRECID = -1;
    SET @bit_PendingStatusCode = [crt].GETACTIVEACCOUNTACTIVATIONREQUESTSTATUS();

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    EXEC [crt].[MAPEXTERNALIDENTITYTOCUSTOMER] @nvc_ExternalIdentityId, @nvc_ExternalIdentityIssuer, @nvc_CustomerId, @bit_PendingStatusCode, @nvc_DataAreaID, @bi_EXTERNALIDTOCUSTOMERMAPRECID OUTPUT
	
	SELECT 
	    @nvc_InsertedCustomerAccountNumber = CUSTOMERACCOUNTNUMBER,
		@nvc_InsertedExternalIdentityId = EXTERNALIDENTITYID,
		@bi_InsertedIdentityProviderRecId = PROVIDERID
	FROM [ax].[RETAILEXTERNALIDTOCUSTOMERMAP]
	WHERE RECID = @bi_EXTERNALIDTOCUSTOMERMAPRECID
    
    -- If there is existing request, update the request; otherwise, create a new request
    MERGE [crt].[RETAILCUSTOMEREMAILACTIVATION] AS target
    USING (SELECT @nvc_EmailAddress, @nvc_ActivationToken, @nvc_InsertedExternalIdentityId, @bi_InsertedIdentityProviderRecId, @nvc_InsertedCustomerAccountNumber) AS source (EMAIL, ACTIVATIONID, EXTERNALIDENTITYID, IDENTITYPROVIDERRECID, CUSTOMERACCOUNTNUMBER)
    ON (target.EMAIL = source.EMAIL AND target.ACTIVATIONID = source.ACTIVATIONID AND target.EXTERNALIDENTITYID = source.EXTERNALIDENTITYID AND target.IDENTITYPROVIDERRECID = source.IDENTITYPROVIDERRECID AND target.CUSTOMERACCOUNTNUMBER = source.CUSTOMERACCOUNTNUMBER AND  STATUS = @bit_PendingStatusCode)
    WHEN MATCHED THEN 
        UPDATE SET LASTMODIFIEDTIME = SYSUTCDATETIME()
    WHEN NOT MATCHED THEN    
        INSERT (EMAIL, ACTIVATIONID, LASTMODIFIEDTIME, STATUS, EXTERNALIDENTITYID, IDENTITYPROVIDERRECID, CUSTOMERACCOUNTNUMBER)
        VALUES (source.EMAIL, source.ACTIVATIONID, SYSUTCDATETIME(), [crt].GETACTIVEACCOUNTACTIVATIONREQUESTSTATUS(), source.EXTERNALIDENTITYID, source.IDENTITYPROVIDERRECID, source.CUSTOMERACCOUNTNUMBER);

    -- Delete all previous activation entries that map to the same external identity.
    DELETE [crt].[RETAILCUSTOMEREMAILACTIVATION]
    WHERE EXTERNALIDENTITYID = @nvc_InsertedExternalIdentityId
	AND IDENTITYPROVIDERRECID = @bi_InsertedIdentityProviderRecId
	AND CUSTOMERACCOUNTNUMBER = @nvc_InsertedCustomerAccountNumber
    AND ACTIVATIONID != @nvc_ActivationToken

    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTSALESORDER]...';


GO

CREATE PROCEDURE [crt].[INSERTSALESORDER]
    @bi_ChannelId                       BIGINT,
    @TVP_TRANSACTION                    [crt].[RETAILTRANSACTIONTABLETYPE]                  READONLY,
    @TVP_SALESTRANS                     [crt].[RETAILTRANSACTIONSALESTRANSTABLETYPE]        READONLY,
    @TVP_INCOMEEXPENSE                  [crt].[RETAILINCOMEEXPENSETABLETYPE]                READONLY,
    @TVP_MARKUPTRANS                    [crt].[RETAILTRANSACTIONMARKUPTRANSTABLETYPE]       READONLY,
    @TVP_PAYMENTTRANS                   [crt].[RETAILTRANSACTIONPAYMENTTRANSTABLETYPE]      READONLY,
    @TVP_TAXTRANS                       [crt].[RETAILTRANSACTIONTAXTRANSTABLETYPE]          READONLY,
    @TVP_ATTRIBUTETRANS                 [crt].[RETAILTRANSACTIONATTRIBUTETRANSTABLETYPE]    READONLY,
    @TVP_ADDRESSTRANS                   [crt].[RETAILTRANSACTIONADDRESSTRANSTABLETYPE]      READONLY,
    @TVP_DISCOUNTTRANS                  [crt].[RETAILTRANSACTIONDISCOUNTTRANSTABLETYPE]     READONLY,
    @TVP_INFOCODETRANS                  [crt].[RETAILTRANSACTIONINFOCODETRANSTABLETYPE]     READONLY,
    @TVP_SALESPROPERTIES                [crt].[RETAILTRANSACTIONPROPERTIESTABLETYPE]        READONLY,
    @TVP_REWARDPOINTTRANS               [crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSTABLETYPE] READONLY,
    @TVP_AFFILIATIONTRANS               [crt].[RETAILTRANSACTIONAFFILIATIONTRANSTABLETYPE]        READONLY,
    @TVP_CUSTOMERORDERTRANS             [crt].[CUSTOMERORDERTRANSACTIONTABLETYPE]           READONLY,
    @TVP_INVOICETRANS                   [crt].[RETAILTRANSACTIONORDERINVOICETRANSTABLETYPE] READONLY,
    @TVP_CUSTOMERACCOUNTDEPOSITTRANS    [crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSTABLETYPE] READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    DECLARE @d_BusinessDate             DATE;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;


    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Get the BusinessDate from the transaction tvp.
    SET @d_BusinessDate = (SELECT BUSINESSDATE FROM @TVP_TRANSACTION);

    --
    -- Insert RetailTransactionTable
    --
    EXEC [crt].[INSERTTRANSACTION] @bi_ChannelId, @TVP_TRANSACTION;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionSalesTrans
    --
    EXEC [crt].[INSERTSALESTRANS] @bi_ChannelId, @TVP_SALESTRANS, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    -- Insert RetailIncomeExpenseAccountTable 
    EXEC [crt].[INSERTINCOMEEXPENSETRANSACTION] @TVP_INCOMEEXPENSE, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionMarkupTrans
    --
    EXEC [crt].[INSERTMARKUPTRANS] @bi_ChannelId, @TVP_MARKUPTRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionTaxTrans
    --
    EXEC [crt].[INSERTTAXTRANS] @bi_ChannelId, @TVP_TAXTRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionPaymentTrans
    --
    EXEC [crt].[INSERTPAYMENTTRANS] @bi_ChannelId, @TVP_PAYMENTTRANS, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionAttributeTrans
    --
    EXEC [crt].[INSERTATTRIBUTETRANS] @bi_ChannelId, @TVP_ATTRIBUTETRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionAddressTrans
    --
    EXEC [crt].[INSERTADDRESSTRANS] @bi_ChannelId, @TVP_ADDRESSTRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionDiscountTrans
    --
    EXEC [crt].[INSERTDISCOUNTTRANS] @bi_ChannelId, @TVP_DISCOUNTTRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionInfocodeTrans
    --
    EXEC [crt].[INSERTINFOCODETRANS] @bi_ChannelId, @TVP_INFOCODETRANS, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionProperties
    --
    EXEC [crt].[INSERTSALESPROPERTIES] @bi_ChannelId, @TVP_SALESPROPERTIES;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionLoyaltyRewardPointTrans
    --
    EXEC [crt].[INSERTLOYALTYREWARDPOINTTRANS] @bi_ChannelId, @TVP_REWARDPOINTTRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionAffiliations
    --
    EXEC [crt].[INSERTAFFILIATIONTRANS] @bi_ChannelId, @TVP_AFFILIATIONTRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert CustomerOrderTransaction
    --
    EXEC [crt].[INSERTCUSTOMERORDERTRANSACTION] @bi_ChannelId, @TVP_CUSTOMERORDERTRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionOrderInvoiceTrans
    --
    EXEC [crt].[INSERTINVOICETRANS] @bi_ChannelId, @TVP_INVOICETRANS;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RetailTransactionCustomerAccountDepositTrans
    --
    EXEC [crt].[INSERTCUSTOMERACCOUNTDEPOSITTRANSACTION] @TVP_CUSTOMERACCOUNTDEPOSITTRANS, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Final error handling
    --
    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[INSERTTENDERDROPANDDECLARE]...';


GO

/******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    [crt].[INSERTTENDERDROPANDDECLARE] calls the corresponding stored procedures to insert into:
    Header record into RetailTransactionTable 
    Transaction lines into RETAILTRANSACTIONTENDERDECLARATIONTRANS, RETAILTRANSACTIONBANKEDTENDERTRANS and RETAILTRANSACTIONSAFETENDERTRANS.
******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******/

CREATE PROCEDURE [crt].[INSERTTENDERDROPANDDECLARE]
    @bi_ChannelId                    BIGINT,
    @tvp_Transaction                [crt].[RETAILTRANSACTIONTABLETYPE]      READONLY,
    @tvp_TenderDeclareTrans         [crt].[TENDERDECLARATIONTRANSTYPE]     READONLY,
    @tvp_TenderDropTrans            [crt].[TENDERDROPTRANSTYPE]      READONLY,
    @tvp_ReasonCodeLine             [crt].[RETAILTRANSACTIONINFOCODETRANSTABLETYPE]      READONLY
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;
    DECLARE @tvp_BankDropTrans          [crt].[TENDERDROPTRANSTYPE];
    DECLARE @tvp_SafeDropTrans          [crt].[TENDERDROPTRANSTYPE];
    DECLARE @d_BusinessDate             DATE;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    -- Get the BusinessDate from the transaction tvp.
    SET @d_BusinessDate = (SELECT BUSINESSDATE FROM @tvp_Transaction)

    --
    -- Insert RetailTransactionTable
    --
    EXEC [crt].[INSERTTRANSACTION] @bi_ChannelId, @tvp_Transaction;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RETAILTRANSACTIONTENDERDECLARATIONTRANS
    --
    EXEC [crt].[INSERTTENDERDECLARATION] @bi_ChannelId, @tvp_TenderDeclareTrans, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RETAILTRANSACTIONINFOCODETRANS
    --
    EXEC [crt].[INSERTINFOCODETRANS] @bi_ChannelId, @tvp_ReasonCodeLine, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RETAILTRANSACTIONBANKEDTENDERTRANS
    --

    -- Insert into table value by filtering type for BankDrop (16)

    INSERT INTO @tvp_BankDropTrans 
    SELECT    [TENDERTRANS].[AMOUNTCUR], 
            [TENDERTRANS].[AMOUNTCURPOS], 
            [TENDERTRANS].[AMOUNTMST], 
            [TENDERTRANS].[AMOUNTMSTPOS], 
            [TENDERTRANS].[AMOUNTTENDERED], 
            [TENDERTRANS].[AMOUNTTENDEREDPOS],
            ISNULL([TENDERTRANS].[TYPE],0), 
            [TENDERTRANS].[BANKBAGNO], 
            [TENDERTRANS].[CARDORACCOUNT], 
            [TENDERTRANS].[CARDTYPEID], 
            [TENDERTRANS].[CURRENCY], 
            [TENDERTRANS].[EXCHRATE], 
            [TENDERTRANS].[EXCHRATEMST], 
            [TENDERTRANS].[LINENUM], 
            [TENDERTRANS].[QTY],
            [TENDERTRANS].[REPLICATED], 
            [TENDERTRANS].[SHIFT], 
            [TENDERTRANS].[SHIFTDATE], 
            [TENDERTRANS].[STAFF], 
            [TENDERTRANS].[STATEMENTCODE], 
            [TENDERTRANS].[STATUSTYPE],
            [TENDERTRANS].[STORE], 
            [TENDERTRANS].[TENDERTYPE], 
            [TENDERTRANS].[TERMINAL], 
            [TENDERTRANS].[TRANSACTIONID], 
            [TENDERTRANS].[TRANSACTIONSTATUS], 
            [TENDERTRANS].[TRANSDATE], 
            [TENDERTRANS].[TRANSTIME],
            [TENDERTRANS].[DATAAREAID]
    FROM @tvp_TenderDropTrans AS TENDERTRANS WHERE ISNULL([TENDERTRANS].[TYPE],0) = 16
    
    EXEC [crt].[INSERTBANKEDTENDERTRANS] @bi_ChannelId, @tvp_BankDropTrans, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- Insert RETAILTRANSACTIONSAFETENDERTRANS
    --

    -- Insert into table value by filtering type for SafeDrop (17)

    INSERT INTO @tvp_SafeDropTrans 
    SELECT [TENDERTRANS].[AMOUNTCUR], 
            [TENDERTRANS].[AMOUNTCURPOS], 
            [TENDERTRANS].[AMOUNTMST], 
            [TENDERTRANS].[AMOUNTMSTPOS], 
            [TENDERTRANS].[AMOUNTTENDERED], 
            [TENDERTRANS].[AMOUNTTENDEREDPOS],
            ISNULL([TENDERTRANS].[TYPE],0), 
            [TENDERTRANS].[BANKBAGNO], 
            [TENDERTRANS].[CARDORACCOUNT], 
            [TENDERTRANS].[CARDTYPEID], 
            [TENDERTRANS].[CURRENCY], 
            [TENDERTRANS].[EXCHRATE], 
            [TENDERTRANS].[EXCHRATEMST], 
            [TENDERTRANS].[LINENUM], 
            [TENDERTRANS].[QTY],
            [TENDERTRANS].[REPLICATED], 
            [TENDERTRANS].[SHIFT], 
            [TENDERTRANS].[SHIFTDATE], 
            [TENDERTRANS].[STAFF], 
            [TENDERTRANS].[STATEMENTCODE], 
            [TENDERTRANS].[STATUSTYPE],
            [TENDERTRANS].[STORE], 
            [TENDERTRANS].[TENDERTYPE], 
            [TENDERTRANS].[TERMINAL], 
            [TENDERTRANS].[TRANSACTIONID], 
            [TENDERTRANS].[TRANSACTIONSTATUS], 
            [TENDERTRANS].[TRANSDATE], 
            [TENDERTRANS].[TRANSTIME],
            [TENDERTRANS].[DATAAREAID]
    FROM @tvp_TenderDropTrans AS TENDERTRANS WHERE ISNULL([TENDERTRANS].[TYPE],0) = 17

    EXEC [crt].[INSERTSAFETENDERTRANS] @bi_ChannelId, @tvp_SafeDropTrans, @d_BusinessDate;
    SELECT @i_Error = @@ERROR;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

    ---
    --- Get this newly created transaction
    ---
    SELECT 
        DDTV.TYPE, 
        DDTV.TRANSACTIONID, 
        DDTV.OPENDRAWER, 
        DDTV.STORE, 
        DDTV.TERMINAL, 
        DDTV.STAFF, 
        DDTV.BATCHID, 
        DDTV.BATCHTERMINALID, 
        DDTV.DESCRIPTION, 
        DDTV.CREATEDDATETIME,
        CAST (DDTV.CREATEDOFFLINE AS BIT) AS CREATEDOFFLINE
        FROM [crt].[DROPANDDECLARETRANSACTIONSVIEW] DDTV INNER JOIN @tvp_Transaction T
        ON DDTV.TRANSACTIONID = T.TRANSACTIONID
        
    ---
    --- Get tender details for this newly created transaction
    ---
    SELECT
        DDTV.TRANSACTIONID,
        DDTV.LINENUM,
        DDTV.AMOUNT,
        DDTV.FOREIGNCURRENCYAMOUNT,
        DDTV.CURRENCY,
        DDTV.BANKBAGNUMBER,
        DDTV.EXCHRATEMST,
        DDTV.AMOUNTMST,
        DDTV.TENDERTYPE,
        DDTV.EXCHRATE
        FROM [crt].[DROPANDDECLARETENDERSVIEW] DDTV INNER JOIN @tvp_Transaction T
        ON DDTV.TRANSACTIONID = T.TRANSACTIONID
        ORDER BY DDTV.TRANSACTIONID, DDTV.LINENUM

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating [crt].[DELETESHIFTSTAGINGANDINSERTSHIFT]...';


GO

CREATE PROCEDURE [crt].[DELETESHIFTSTAGINGANDINSERTSHIFT]
    @TVP_SHIFTTABLETYPE             [crt].[SHIFTTABLETYPE]                  READONLY,
    @TVP_SHIFTTENDERLINETABLETYPE   [crt].[SHIFTTENDERLINETABLETYPE]        READONLY,
    @TVP_SHIFTACCOUNTLINETABLETYPE  [crt].[SHIFTACCOUNTLINETYPE]            READONLY,
    @RV_ROWVERSION                  ROWVERSION                              OUTPUT
AS
BEGIN

    SET NOCOUNT ON;

    DECLARE @i_ReturnCode               INT;
    DECLARE @i_TransactionIsOurs        INT;
    DECLARE @i_Error                    INT;

    -- initializes the return code and assume the transaction is not ours by default
    SET @i_ReturnCode = 0;
    SET @i_TransactionIsOurs = 0;

    IF @@TRANCOUNT = 0
    BEGIN
        BEGIN TRANSACTION;

        SELECT @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 1;
    END;

    --
    -- DELETE ShiftStaging
    --
    DECLARE @bi_ChannelId           [BIGINT];
    DECLARE @nvc_TerminalId         [NVARCHAR](10);
    DECLARE @bi_ShiftId             [BIGINT];

    SELECT @bi_ChannelId = CHANNEL, @nvc_TerminalId = TERMINALID, @bi_ShiftId = SHIFTID
    FROM @TVP_SHIFTTABLETYPE

    EXEC @i_Error = [crt].[DELETESHIFTSTAGING] @bi_ChannelId, @nvc_TerminalId, @bi_ShiftId, @RV_ROWVERSION;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    --
    -- INSERT SHIFT
    --
    DECLARE @RV_NEWROWVERSION       ROWVERSION;

    EXEC @i_Error = [crt].[INSERTSHIFT] @TVP_SHIFTTABLETYPE, @TVP_SHIFTTENDERLINETABLETYPE, @TVP_SHIFTACCOUNTLINETABLETYPE, @RV_ROWVERSION = @RV_NEWROWVERSION OUTPUT;
    IF @i_Error <> 0
    BEGIN
        SET @i_ReturnCode = @i_Error;
        GOTO exit_label;
    END;

    -- RETURNS NEW ROWVERSION FROM SHIFT TABLE
    SELECT @RV_ROWVERSION = @RV_NEWROWVERSION


    IF @i_TransactionIsOurs = 1
    BEGIN
        COMMIT TRANSACTION;

        SET @i_Error = @@ERROR;
        IF @i_Error <> 0
        BEGIN
            SET @i_ReturnCode = @i_Error;
            GOTO exit_label;
        END;

        SET @i_TransactionIsOurs = 0;
    END;

exit_label:

    IF @i_TransactionIsOurs = 1
    BEGIN
        ROLLBACK TRANSACTION;
    END;

    RETURN @i_ReturnCode;
END;
GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE TO [db_executor];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[fn_kErrorDbItemOutOfStock] TO [UsersRole]
    AS [dbo];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATEGORYPRODUCTATTRIBUTEGROUPDEFAULTVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATEGORYPRODUCTATTRIBUTEGROUPDEFAULTVALUE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ATTRIBUTENAMETRANSLATIONSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ATTRIBUTENAMETRANSLATIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETUNITOFMEASURECONVERSIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ADDRESSBOOKPARTYTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ADDRESSBOOKPARTYTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SHIPPINGADAPTERCONFIGURATIONBYDELIVERYMODEIDVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPANDED] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTNONSALETENDER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTERMINALDEVICESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTSBYKEYWORD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTSBYKEYWORD] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONTAXTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DISCOUNTCODEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTLOOKUPIDTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTLOOKUPIDTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERPOSTALADDRESSESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SERIALIZEDITEMSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTTENDERPAYMENTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPDATEEMPLOYEEPASSWORD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETWAREHOUSEADDRESSINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTAXREGIMEINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTSBYCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTSBYCATEGORY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INFOSUBCODEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[POSTALADDRESSESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[CATALOGDEFINITIONTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[ISASYNCCUSTOMERID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSHIFT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTVARIANTDIMENSIONVALUES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTVARIANTDIMENSIONVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTILLLAYOUTBUTTONGRIDZONEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETMERGEQUERY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETESALESTRANSACTIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERSEARCHASYNC] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[SALESLINEDELIVERYOPTIONSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTRADEAGREEMENTS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTRADEAGREEMENTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILTRANSACTIONSALESTRANSQTYSUM] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TERMINALCASHDRAWERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TERMINALPAYMENTCONNECTORVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TERMINALPAYMENTCONNECTORVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RECEIPTINFOVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[COMPLETECUSTOMERACCOUNTACTIVATIONREQUEST] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DELIVERYMODESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGPRODUCTCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGPRODUCTCATEGORY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONAFFILIATIONTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INFOCODESETTINGSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETUNITOFMEASUREOPTIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGPRODUCTRELATIONEXCLUSIONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGPRODUCTRELATIONEXCLUSIONVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILDEVICESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCOUNTRYREGIONS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCOUNTRYREGIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TRANSACTIONPROPERTIESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHATTRIBUTEVALUECHANGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHATTRIBUTEVALUECHANGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETELECTRONICDELIVERYTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTINVOICETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIPTOADDRESSDELIVERYTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TAXPARAMETERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PICKINGLISTLINETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVEUSERCREDENTIALS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATEGORYPRODUCTATTRIBUTEVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATEGORYPRODUCTATTRIBUTEVALUE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETDEVICECONFIGURATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMQUANTITYTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCURRENCIESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCURRENCIESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTTAXTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SHIFTTENDERBANKDROPTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTBANKEDTENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETACTIVEACCOUNTACTIVATIONREQUESTSTATUS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATECUSTOMER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILINCOMEEXPENSETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMAVAILABILITYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLATESTNUMBERSEQUENCE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTLOYALTYCARDTIER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILGROUPMEMBERITEMSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGLISTMAPPING] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[crt].[CATALOGLISTMAPPING] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[KITCOMPONENTINFOTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[KITCOMPONENTINFOTYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SHIFTTENDERLINESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILPRODUCTORVARIANTCATEGORYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[POPULATECHANNELREFINABLEATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMLINETRANSACTIONTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMLINETRANSACTIONTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONMARKUPTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMPHYSICALDIMENSIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETDISCOUNTTRADEAGREEMENTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETKITCOMPONENTSINFO] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETKITCOMPONENTSINFO] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILKITLINEDEFINITION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILKITLINEDEFINITION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETEUSERCREDENTIALS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILINFOCODESTRANSLATED] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILINFOCODESTRANSLATED] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SEARCHPRODUCTSBYCATEGORYID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[fn_kErrorDbAuthorizationError] TO [UsersRole]
    AS [dbo];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERAFFILIATIONSBYCUSTOMERACCOUNT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETEPICKINGLISTLINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTTAXTRANSINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETHARDWARESTATIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRICEGROUPSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRICEGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GLOBALPRODUCTATTRIBUTEVALUEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GLOBALPRODUCTATTRIBUTEVALUEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTTENDERBANKDROPTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILDISCOUNTLINESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTVARIANTCATEGORYVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTVARIANTCATEGORYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TERMINALSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILSTOCKCOUNTJOURNALSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCLOSEDACCOUNTACTIVATIONREQUESTSTATUS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGSPUBLISHEDTOACTIVECHANNEL] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGSPUBLISHEDTOACTIVECHANNEL] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RECEIPTPROFILESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETUNITSOFMEASURE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSALESLINEDELIVERYPREFERENCES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMCHANNELTRADEAGREEMENTPRICEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMCHANNELTRADEAGREEMENTPRICEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETGLOBALCUSTOMERSBYPARTYID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTSEARCHRESULTSBYCATEGORYID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCATEGORYATTRIBUTEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCATEGORYATTRIBUTEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETITEMINVENTORYSETTINGS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILPRODUCTPRICINGINFOTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILPRODUCTPRICINGINFOTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[PURGESALESONTERMINAL] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETELISTINGSBYCATALOGS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETELISTINGSBYCATALOGS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETIDENTITYPROVIDER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILIMAGESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCONFIGURATIONVIEW_V2] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCONFIGURATIONVIEW_V2] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTTOTALAMOUNT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETACTIVESHIFT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[POPULATEPRODUCTCATALOGRULES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ATTRIBUTEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ATTRIBUTEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTKITTRANSACTION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTSBYITEMID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTSBYITEMID] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPROFILEPROPERTYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPROFILEPROPERTYVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILSPECIALCATEGORYVARIANTVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[STRINGIDTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[STRINGIDTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHCOMPOSITIONCHANGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHCOMPOSITIONCHANGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGLISTDEFINITIONVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGLISTDEFINITIONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPURCHASEHISTORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTINCOMEEXPENSETRANSACTION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONADDRESSTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPDATESHIFTSTAGING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCATALOGDEFINITION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCATALOGDEFINITION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETAFFILIATIONSBYAFFILIATIONTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTADDRESSTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[SALESTRANSACTIONTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[crt].[LOCALPRODUCTASSORTMENTRULESVIEW] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[LOCALPRODUCTASSORTMENTRULESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONDISCOUNTTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTAXCODEINTERVALSINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPDATEONLINECHANNELPUBLISHSTATUS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPDATEONLINECHANNELPUBLISHSTATUS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVARIANTSWITHCOMPONENTVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[crt].[PRODUCTASSORTMENTRULES_V2] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSHIFTSTAGING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ONLINECHANNELVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ONLINECHANNELVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELTENDERTYPEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELTENDERTYPEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILSTOCKCOUNTJOURNALSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[NONCATALOGPRODUCTCATEGORYVIEW] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCATEGORYPATH] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHPUBLISHEDATTRIBUTEVALUECHANGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHPUBLISHEDATTRIBUTEVALUECHANGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMRESERVATIONIDTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETEMPLOYEEIMAGEATTRIBUTEDEFAULTVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTTENDERDECLARATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTRELATIONS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTRELATIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[VERIFYUSERLOCKOUTPOLICY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERVALUESFORCATEGORYSEARCH] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERVALUESFORCATEGORYSEARCH] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETMULTIBUYLINEDISCOUNTBYQUANTITY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTDIMENSIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCOUNTIES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLOYALTYTIERS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILDISCOUNTTHRESHOLDTIERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTMARKUPTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETESTOCKCOUNTTRANSACTIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONPROPERTIESTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONPAYMENTTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTREFINERTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSBYSEARCHTEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTTENDERSAFEDROPTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETASSORTEDINVENTDIMCOMBINATIONFORITEM] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETASSORTEDINVENTDIMCOMBINATIONFORITEM] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EMPLOYEEPERMISSIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TRANSACTIONSERVICEPROFILEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TRANSACTIONSERVICEPROFILEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGDEFINITION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[crt].[CATALOGDEFINITION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[crt].[CATALOGDEFINITION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTATTRIBUTESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTATTRIBUTESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EMPLOYEESESSIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CARTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVECHANNELPROPERTY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVECHANNELPROPERTY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STAFFCREDENTIALSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[LOYALTYCARDTIERTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTSBYKEYWORD] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTSBYKEYWORD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONADDRESSTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTATTRIBUTESCONTAININGVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETACTIVELOYALTYCARDTIERS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[POPULATEPRODUCTASSORTMENTRULES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[POPULATEPRODUCTASSORTMENTRULES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETMERGEDASSORTMENTRULES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETMERGEDASSORTMENTRULES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONINFOCODETRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTMEDIABLOBS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTMEDIABLOBS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVEPURCHASEORDERLINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTAFFILIATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[LOYALTYCARDTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TAXINFORMATIONINDIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATEGORYPRICEADJUSTMENTSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERSEARCH] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INVENTDIMVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INVENTDIMVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETESHIFTSTAGINGANDINSERTSHIFT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[OPERATIONPERMISSIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMCHANNELBASEPRICEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMCHANNELBASEPRICEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERPENDINGTRANSACTIONSAMOUNT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTLANGUAGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTLANGUAGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCHANGEDPRODUCTIDS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCHANGEDPRODUCTIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[FORMULADESIGNERSINDIANVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRICEREFINERVALUES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRICEREFINERVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[LOGAUTHENTICATIONREQUEST] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[LOGAUTHENTICATIONREQUEST] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[TRANSFERORDERLINETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETNONCATALOGPRODUCTCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETNONCATALOGPRODUCTCATEGORY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETSALESORDER] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETSALESORDER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TAXREGISTRATIONNUMBERSINDIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ORGUNITSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ORGUNITSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONDISCOUNTTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTTRANSACTION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTSBYTEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETLINKEDPRODUCTRELATIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILSERVICECONFIGURATIONSETTINGSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PERSONNAMEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[RELEASEITEMS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[OFFLINEDATABASEPARTITIONSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[OFFLINEDATABASEPARTITIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTSBYIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETMAXAXDATE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLOYALTYREDEEMSCHEMELINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTDISCOUNTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATEASYNCCUSTOMER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[REFINEANDSEARCHPRODUCTSBYKEYWORD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRICEADJUSTMENTITEMSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PURCHASEORDERLINETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETITEMAVAILABLEQUANTITIESBYITEMS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[REFINEANDSEARCHPRODUCTSBYCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATEGORYPRODUCTATTRIBUTEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATEGORYPRODUCTATTRIBUTEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[KEYWORDSEARCHTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[KEYWORDSEARCHTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SALESTAXOVERRIDESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERPOSTALELECTRONICADDRESSESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETITEMAVAILABILITIESBYITEMS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[SHIFTACCOUNTLINETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETESHIFTSTAGING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILSTOCKCOUNTTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STOREADDRESSESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STOREADDRESSESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILKITLISTING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILKITLISTING] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGCHANNELPRODUCTRELATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGCHANNELPRODUCTRELATION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETRETAILDISCOUNTSFORITEMS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILPRICINGPARAMETERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILSTOCKCOUNTVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETUDTTCOLUMNS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETUDTTCOLUMNS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGPRODUCTCATEGORYVIEW] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETNEARBYSTORESFUNCTION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTREFINERS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[VALIDATEADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETNOTEXISTINGCATALOGS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETNOTEXISTINGCATALOGS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[fn_kSuccess] TO [UsersRole]
    AS [dbo];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTATTRIBUTEVALUES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTATTRIBUTEVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[crt].[DOWNLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[crt].[DOWNLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DOWNLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[crt].[DOWNLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCATALOGIMAGEATTRIBUTEDEFAULTVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILOFFLINEPRODUCTSBYCHANNELVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETURNORDERREASONCODESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPRODUCTATTRIBUTEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPRODUCTATTRIBUTEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILPRODUCTORVARIANTCATEGORYANCESTORSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILSTORETABLEINDIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTCATALOGRULESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGPRODUCTRELATIONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGPRODUCTRELATIONVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTILLLAYOUTVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERELECTRONICADDRESSESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONMARKUPTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLOYALTYEARNSCHEMELINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSHIFTACCOUNTLINE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETITEMSBYITEMIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETITEMSBYITEMIDS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTCUSTOMERACCOUNTDEPOSITTRANSACTION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONINCOMEEXPENSETRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONTAXTRANSINDIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[VALIDATIONPERIODVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[SHIFTTENDERAMOUNTTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILPERIODICDISCOUNTSFLATTENEDVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPICKUPDELIVERYTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMSMAXRETAILPRICESINDIAVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMSMAXRETAILPRICESINDIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPSERTSHIFTSTAGING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILOFFLINECUSTOMERSBYCHANNELVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILOFFLINECUSTOMERSBYCHANNELVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[RUNPOSTDATASYNCOPERATIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[RUNPOSTDATASYNCOPERATIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PICKINGLISTLINEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[LOGISTICSPOSTALADDRESSESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVETRANSFERORDERLINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERSBYTEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHCATEGORYCHANGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHCATEGORYCHANGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPDATERETURNQUANTITY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONSALESTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CARDTYPESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATEELECTRONICADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTILLLAYOUTZONESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTCATEGORYRULESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILMULTIBUYDISCOUNTLINESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[MARKUPAUTOCONFIGURATIONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[LISTINGPUBLISHSTATUSTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[LISTINGPUBLISHSTATUSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMRESERVATIONSUMVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RECORDIDSTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RECORDIDSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTSBYITEMID] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTSBYITEMID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHARGESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCOMPANYDEFAULTLOCATIONINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTCATEGORY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTAUDITLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTAUDITLOG] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[RESERVEITEMS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILDISCOUNTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CURRENCIESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CURRENCIESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSBYCATEGORYID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETAFFECTEDTABLENAMESBYCDX] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETAFFECTEDTABLENAMESBYCDX] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[PURGESALES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETALLBLANKINVENTDIMID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETEEXTERNALIDENTITYTOCUSTOMERMAPPING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERORDERTRANSACTION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CONVERTATTRIBUTEVALUESTOREFINERVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[VALIDATECUSTOMERACCOUNTACTIVATIONREQUEST] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETEWISHLIST] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETDISTRICTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETELISTINGSBYLANGUAGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETELISTINGSBYLANGUAGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[crt].[DOWNLOADSESSIONDATAFILEHISTORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DOWNLOADSESSIONDATAFILEHISTORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[crt].[DOWNLOADSESSIONDATAFILEHISTORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[crt].[DOWNLOADSESSIONDATAFILEHISTORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[crt].[DOWNLOADSESSIONDATAFILEHISTORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[crt].[DOWNLOADSESSIONDATAFILEHISTORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DOWNLOADSESSIONDATAFILEHISTORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATECUSTOMERAFFILIATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONAFFILIATIONTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILPRODUCTCATEGORYHIERARCHYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILPRODUCTCATEGORYHIERARCHYVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TAXINFORMATIONLEGALENTITIESINDIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TEXTVALUETRANSLATIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TEXTVALUETRANSLATIONSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTREQUIREDAMOUNTSPERTENDER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ORGUNITCONTACTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[OFFLINEDATABASEMETADATAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[OFFLINEDATABASEMETADATAVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONPAYMENTTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTATTRIBUTEMETADATAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTATTRIBUTEMETADATAVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTATTRIBUTEVALUETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONORDERINVOICETRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TRANSFERORDERLINEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DEVICECONFIGURATIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETERETAILSTAFFLOGINLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETINVENTLOCATIONDEFAULTLOCATIONINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTDIMENSIONVALUESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETASSORTEDINVENTITEM] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETASSORTEDINVENTITEM] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTSBYCATEGORY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SEARCHPRODUCTSBYCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTCATEGORIES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTCATEGORIES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBPRODUCTATTRIBUTECHANNELMETADATAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETEEXPIREDSESSIONSINOFFLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTIDENTITIESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTIDENTITIESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTATTRIBUTESCHEMAS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTATTRIBUTESCHEMAS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERLOYALTYCARDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERLOCALPENDINGDEPOSIT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DEFAULTTRANSACTIONSERVICEPROFILEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DEFAULTTRANSACTIONSERVICEPROFILEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETMEDIALOCATIONBYPRODUCTID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RECORDIDTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RECORDIDTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTILLLAYOUT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGCHANNELPRODUCTCATEGORYVIEW] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETITEMAVAILABILITIESBYITEMQUANTITIES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EMPLOYEEPERMISSIONSPOSITIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTATTRIBUTEVALUECOMBINATIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[EXTENSIONPROPERTIESTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[EXTENSIONPROPERTIESTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STOREVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STOREVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTTENDEREDAMOUNT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETEEXPIREDSESSIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILMIXANDMATCHLINEGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRICEADJUSTMENTSFORITEMS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRICEADJUSTMENTSFORITEMS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTSALESDATA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTBEHAVIORBYPRODUCTIDS_V2] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETINVENTSITEDEFAULTLOCATIONINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETMINAXDATE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTHEMEPALLETCOLORVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[UNITOFMEASUREVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTVARIANTNAMEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ITEMSPRICEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[LANGUAGEIDTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[LANGUAGEIDTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETNOTEXISTINGLANGUAGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETNOTEXISTINGLANGUAGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[STORELISTINGMAP] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[STORELISTINGMAP] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTMASTERDIMVALUETRANSLATION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTMASTERDIMVALUETRANSLATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTMEDIALOCATIONS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTMEDIALOCATIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONORDERINVOICETRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCUSTOMERSEARCHRESULTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERLOCALPENDINGTENDERS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[crt].[TABLEREPLICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[crt].[TABLEREPLICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TABLEREPLICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[crt].[TABLEREPLICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATEASYNCCUSTOMERADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[TENDERDROPTRANSTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[SHIFTTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSAFETENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SHIFTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[fn_kErrorDbCriticalError] TO [UsersRole]
    AS [dbo];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[HARDWAREPROFILECASHDRAWERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETITEMAVAILABILITY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETITEMAVAILABILITY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[UPLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[crt].[UPLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[crt].[UPLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[crt].[UPLOADSESSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RECEIPTPRINTERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETESHIFTUSERSSTAGING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PROVISIONINGMESSAGESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TAXCOMPONENTTABLEINDIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILDISCOUNTPRICEGROUPSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILDISCOUNTPRICEGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVECUSTOMERACCOUNTACTIVATIONREQUEST] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[CUSTOMERADDRESSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVESALESTRANSACTIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[BUTTONGRIDSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[BARCODEMASKSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[AFFILIATIONLOYALTYTIERTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[AFFILIATIONLOYALTYTIERTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETLIVEPRODUCTATTRIBUTEVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETLIVEPRODUCTATTRIBUTEVALUE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCUSTOMERGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETZIPCODES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETITEMSBYPRODUCTIDS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETITEMSBYPRODUCTIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONATTRIBUTETRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETINCLUDEDDATERANGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETINCLUDEDDATERANGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RECEIPTMASKVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRICETRADEAGREEMENTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRICETRADEAGREEMENTS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTAXCODEINTERVALS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETDEFAULTPRODUCTATTRIBUTEVALUE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETDEFAULTPRODUCTATTRIBUTEVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DROPANDDECLARETENDERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSHIFTTENDERLINE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVARIANTSWITHDIMENSIONVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTREFINERVALUES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONSALESTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCONFIGURATIONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCONFIGURATIONVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERSBYCATEGORYID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[REPLACEUNWANTEDCHARACTERS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPDATEEMPLOYEEPASSWORD_V2] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTRULESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTRULESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETDOWNLOADINGDATA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCATEGORYHIERARCHYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCATEGORYHIERARCHYVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBCATALOGCHANNELVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBCATALOGCHANNELVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[JOURNALTRANSACTIONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERVALUESFORKEYWORDSEARCH] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERVALUESFORKEYWORDSEARCH] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLISTINGSBYCOMPOSITEIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLISTINGSBYCOMPOSITEIDS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBCATALOGCURRENT] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBCATALOGCURRENT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INVENTITEMBARCODESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERVALUESBYCATEGORYID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELLANGUAGESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELLANGUAGESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPSERTOFFLINETRANSACTIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CONVERTITEMANDINVENTDIMIDSTOPRODUCTIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CONVERTITEMANDINVENTDIMIDSTOPRODUCTIDS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EMPLOYEESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTCUSTOMERORDERTRANSACTION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELCATEGORYHIERARCHYIMAGEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETRECEIPTHEADERTAXINFOINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRICEACCOUNTRELATIONSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRICEACCOUNTRELATIONSTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONSALESTRANSQTYSUMVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLOCALIZEDREPORTSTRINGS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREPORTCONFIGURATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATECUSTOMERADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STORAGELOOKUPVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STORAGELOOKUPVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTENDERDECLARATIONCALCULATIONTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONSALESAMOUNTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EMPLOYEEPASSWORDSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GLOBALCUSTOMERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[OFFLINELATESTDATABASEPARTITIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[OFFLINELATESTDATABASEPARTITIONSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATERETAILSTOCKCOUNTJOURNALS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATEGORYNAMETRANSLATIONSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATEGORYNAMETRANSLATIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETRETAILINCOMEEXPENSEACCOUNTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INFOCODEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[BARCODEMASKSEGMENTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBCATALOGATTRIBUTEINHERITED] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBCATALOGATTRIBUTEINHERITED] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[UPSERTSHIFTUSERSSTAGING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGCHANNELPRODUCTRELATIONEXCLUSION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGCHANNELPRODUCTRELATIONEXCLUSION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATERETAILSTOCKCOUNT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SALESTAXGROUPSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SALESTAXGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLINKEDPRODUCTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLINKEDPRODUCTS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPRICEGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPRICEGROUPSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTLOYALTYREWARDPOINTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCATEGORYIMAGEATTRIBUTEDEFAULTVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SALESPARAMETERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTPAYMENTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[REMOTEPRODUCTASSORTMENTRULESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGIDSASSOCIATEDTOPRODUCTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DROPANDDECLARETRANSACTIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[POPULATEMERGEDASSORTMENTRULES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[POPULATEMERGEDASSORTMENTRULES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBPRODUCTATTRIBUTEVALUEEXPLODEDVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PUBPRODUCTATTRIBUTEVALUEEXPLODEDVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTILLLAYOUTREPORTZONEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONTAXTRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[LOCALIZEDSTRINGSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCURRENTSHIFTNONSALETENDERS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERIMAGEATTRIBUTEDEFAULTVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETACTIVEORFUTURELOYALTYCARDTIERS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETMAXAXDATETIME] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STORESBYEMPLOYEEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[CUSTOMERAFFILIATIONTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DELIVERYMODESEXPLODEDVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TIMEZONEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TIMEZONEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETLINKEDPRODUCTRELATIONS_V2] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTPUBLISHSTATUSFORCURRENTSHIPMENTPAGE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTPUBLISHSTATUSFORCURRENTSHIPMENTPAGE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DEVICESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[BUTTONGRIDBUTTONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTILLLAYOUTIMAGEZONEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETASSORTEDPRODUCTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETASSORTEDPRODUCTS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[QUERYRESULTSETTINGSTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[QUERYRESULTSETTINGSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERBYEXTERNALIDENTITY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ATTRIBUTEDEFAULTVALUEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ATTRIBUTEDEFAULTVALUEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMVARIANTINVENTDIMTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMVARIANTINVENTDIMTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPROPERTIESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPROPERTIESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREPORTCONFIGBYID] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTCATALOGS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTCATALOGS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EMPLOYEELOGONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[AFFILIATIONPRICEGROUPSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[AFFILIATIONPRICEGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[CUSTOMERELECTRONICADDRESSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTPUBLISHSTATUSFORCURRENTLISTINGPAGE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTPUBLISHSTATUSFORCURRENTLISTINGPAGE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTRANSACTIONATTRIBUTETRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETELISTINGSBYCOMPOSITEIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETELISTINGSBYCOMPOSITEIDS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTRETAILSTAFFLOGINLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PAYMENTCONNECTORVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PAYMENTCONNECTORVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLOYALTYGROUPSBYLOYALTYCARD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBPRODUCTATTRIBUTEVALUE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBPRODUCTATTRIBUTEVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ORGUNITADDRESSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[HARDWAREPROFILEPRINTERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[LOYALTYTIERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRODUCTIDSTOUNITSOFMEASUREVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[POPULATEPRODUCTCATEGORYRULES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETMINAXDATETIME] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTINFOSOURCESCURRENTTIMESTAMPS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTINFOSOURCESCURRENTTIMESTAMPS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[STORECATALOGDEFINITION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[STORECATALOGDEFINITION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETESTOCKCOUNTJOURNALS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMRESERVATIONTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMWAREHOUSETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETFROMZIPCODE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SHIFTTENDERPAYMENTTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETETRANSFERORDERLINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVEPRODUCTDATA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILINVENTAVAILABILITYSALESORDERSUMVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTLOYALTYCARD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTDIMENSIONVALUESBYVARIANTPRODUCTIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVARIANTS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVARIANTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTSBYIDS_V2] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[HARDWAREPROFILESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INFOCODETABLESPECIFICVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILTILLLAYOUTBYCRITERIAVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETAPPLYINTERSTATETAXINDIA] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSALESPROPERTIES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBCATALOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBCATALOG] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONINFOCODETRANSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTRANSACTIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[TAXCODESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATEDEVICE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[CREATEUPDATEDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVARIANTSBYITEMIDANDINVENTDIMIDS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVARIANTSBYITEMIDANDINVENTDIMIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTREFINERVALUETABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTREFINERVALUETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSALESORDER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHPUBLISHEDCATALOGCHANGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHPUBLISHEDCATALOGCHANGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMUNITCONVERSIONTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EMPLOYEEPERMISSIONOVERRIDESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILTRANSACTIONTAXTRANSINDIATABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTCHANGETRACKINGANCHORSET] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRODUCTCHANGETRACKINGANCHORSET] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[SHIFTTENDERTRANSTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[CATALOGLISTMAPPINGTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTATTRIBUTETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELATTRIBUTEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETTEXTVALUETRANSLATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETTEXTVALUETRANSLATION] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTTENDERDROPANDDECLARE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETSTANDARDPRODUCTATTRIBUTEVALUE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETSTANDARDPRODUCTATTRIBUTEVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILINVENTAVAILABILITYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SHIFTACCOUNTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[REFINEPRODUCTS] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[REFINEPRODUCTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETREFINERVALUESBYTEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[RESEEDUPLOADSESSIONIDENTITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSHIFTTENDERDECLARATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPLODED] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPUBPRODUCTATTRIBUTEVALUEEXPLODED] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SHIFTTENDERSAFEDROPTRANSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILTRANSACTIONCATEGORIES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETSUPPORTEDLANGUAGEIDSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETSUPPORTEDLANGUAGEIDSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CUSTOMERSEARCHABLEFIELDSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STORECASHDECLARATIONVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[STORECASHDECLARATIONVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[VERIFYPRODUCTSEXISTENCE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[VERIFYPRODUCTSEXISTENCE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTBEHAVIORBYPRODUCTIDS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[SHIFTTENDERLINETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[CUSTOMERORDERTRANSACTIONTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETNEXTBATCHLISTINGPUBLISHSTATUSES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETITEMAVAILABILITIESBYITEMWAREHOUSES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTDIMENSIONVALUESBYVARIANTPRODUCTIDS_V2] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILINFOSUBCODESTRANSLATED] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILINFOSUBCODESTRANSLATED] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTRELATIONSHIPS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILAFFILIATIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[LISTINGPUBLISHSTATUSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSALESLINEDELIVERYOPTIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[ISPRODUCTINCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGPRICEGROUPSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATALOGPRICEGROUPSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETRELYINGPARTIESBYIDENTITYPROVIDER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVEWISHLISTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMIDSEARCHTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[ITEMIDSEARCHTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[SALESTAXOVERRIDEDETAILSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ATTRIBUTEMAPVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETEMPLOYEEBREAKCATEGORIESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[DEFAULTPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILINVENTAVAILABILITYSALESORDERSUM] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETEMPLOYEESBYSTOREVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCITIES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETLIVEPRODUCTATTRIBUTEVALUEEXPANDED] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETLIVEPRODUCTATTRIBUTEVALUEEXPANDED] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[MEDIAATTRIBUTESVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[MEDIAATTRIBUTESVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETREFINERPRICES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETREFINERPRICES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHTRANSLATIONCHANGES] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTIDSWITHTRANSLATIONCHANGES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETAFFILIATIONLOYALTYTIERPRICEGROUPS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PURCHASEORDERLINEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRICEGROUPTABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[PRICEGROUPTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RETAILSHIPMENTPUBLISHINGSTATUSTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[EXCHANGERATEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPRODUCTATTRIBUTEGROUPDEFAULTVALUEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[crt].[PRODUCTASSORTMENTRULES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRICEPARAMETERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[PRICEPARAMETERSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[DELETEPURCHASEORDERLINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILCHANNELREPORTVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILOFFLINEPENDINGTRANSACTIONCOUNTVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTSEARCHRESULTSBYTEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[WISHLISTTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETACTIVEEXCHANGERATE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETCUSTOMERBYACCOUNTNUMBER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ORDERHISTORYVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[INFOCODESPECIFICVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[MAPEXTERNALIDENTITYTOCUSTOMER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTINFOCODETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[CUSTOMERTABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLOYALTYCARD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[REFERENCEATTRIBUTEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[REFERENCEATTRIBUTEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETADDRESSFORMATTING] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ASSORTEDPRODUCTSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[ASSORTEDPRODUCTSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETALLLISTINGSMAP] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETALLLISTINGSMAP] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[fn_kErrorVersionMismatchError] TO [UsersRole]
    AS [dbo];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILREPORTLOCALIZEDSTRINGVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RECORDIDLANGUAGETABLETYPE] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[RECORDIDLANGUAGETABLETYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETSTATEPROVINCES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETHARDWARESTATIONS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILKITVARIANTMAP] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILKITVARIANTMAP] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETTAXREGIME] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[FINDPRODUCTSBYKEYWORD] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[FINDPRODUCTSBYKEYWORD] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON TYPE::[crt].[TENDERDECLARATIONTRANSTYPE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETPRODUCTIMAGEATTRIBUTEDEFAULTVALUE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[NONSALESTRANSACTIONSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLISTINGMAP] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[GETLISTINGMAP] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[INSERTSALESTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETRETAILINVENTAVAILABILITY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPROFILEVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CHANNELPROFILEVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[WAREHOUSEADDRESSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[HARDWAREPROFILESCANNERSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[CATEGORYITEMSVIEW] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETPRODUCTCOMPONENTS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGCHANNELPRODUCTCATEGORY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETCATALOGCHANNELPRODUCTCATEGORY] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[RETAILOFFLINESYNCSTATSVIEW] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT EXECUTE
    ON OBJECT::[crt].[SAVEPICKINGLISTLINES] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVALUEEXPANDED] TO [PublishersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[crt].[GETVALUEEXPANDED] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[COMPANYDEFAULTLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[COMPANYDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[COMPANYDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[COMPANYDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[COMPANYDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[HCMPOSITIONWORKERASSIGNMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMPOSITIONWORKERASSIGNMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[HCMPOSITIONWORKERASSIGNMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMPOSITIONWORKERASSIGNMENT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[HCMPOSITIONWORKERASSIGNMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILMEDIARESOURCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILMEDIARESOURCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIARESOURCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIARESOURCE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILMEDIARESOURCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTCANCEL_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[HCMPOSITIONDETAIL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMPOSITIONDETAIL] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[HCMPOSITIONDETAIL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[HCMPOSITIONDETAIL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMPOSITIONDETAIL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE_RU] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXGROUPHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXGROUPHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXGROUPHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXGROUPHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXGROUPHEADING] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERSTATUS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[UNITOFMEASURE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[UNITOFMEASURE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[UNITOFMEASURE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[UNITOFMEASURE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[UNITOFMEASURE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESATTRIBUTEDEFAULTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTEDEFAULTVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESATTRIBUTEDEFAULTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESATTRIBUTEDEFAULTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTEDEFAULTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXATIONCODESETUP_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXATIONCODESETUP_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXATIONCODESETUP_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXATIONCODESETUP_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXATIONCODESETUP_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCHANGERATETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[EXCHANGERATETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCHANGERATETYPE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[EXCHANGERATETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[EXCHANGERATETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILRECEIPTPROFILELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRECEIPTPROFILELINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRECEIPTPROFILELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILRECEIPTPROFILELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILRECEIPTPROFILELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTCATEGORY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKIT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTSITEDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTSITEDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITEDEFAULTLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITEDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTSITEDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRPERSONNAME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPERSONNAME] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DIRPERSONNAME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRPERSONNAME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPERSONNAME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTAFF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTAFF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTAFF] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTAFF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTAFF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBRETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBRETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILSTORETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBRETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[MARKUPAUTOTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[MARKUPAUTOTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[MARKUPAUTOTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[MARKUPAUTOTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[MARKUPAUTOTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFOCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFOCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFOCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMBARCODE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTITEMBARCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMBARCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTITEMBARCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTITEMBARCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPRICEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONMARKUPTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILASYNCADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORETABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETABLE_IN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORETABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORETABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONCUSTOMERACCOUNTDEPOSITTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOG] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYREDEEMSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYREDEEMSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYREDEEMSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYREDEEMSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYREDEEMSCHEMELINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKINDUSTRYMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYCARD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYCARD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYCARD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYCARD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[RETAILLOYALTYCARD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYCARD] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SALESPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SALESPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SALESPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SALESPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SALESPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROLB] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROLB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROLB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROLB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROLB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALRECEIPTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYLOCATIONROLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCHANNELATTRIBUTE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCHANNELATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCHANNELATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCHANNELATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCHANNELATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODETABLESPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFOCODETABLESPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFOCODETABLESPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODETABLESPECIFIC] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFOCODETABLESPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTLOCATIONDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTLOCATIONDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTLOCATIONDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATIONDEFAULTLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATIONDEFAULTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[FORMULADESIGNER_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[FORMULADESIGNER_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[FORMULADESIGNER_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[FORMULADESIGNER_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[FORMULADESIGNER_IN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELREPORT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELREPORT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELREPORT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELREPORT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELREPORT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCONFIGURATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCONNDATABASEPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCONNDATABASEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCONNDATABASEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCONNDATABASEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCONNDATABASEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEOFFER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTLINEOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTLINEOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROL] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKEYBOARDBUTTONCONTROL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONBANKEDTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILVISUALPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILVISUALPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILVISUALPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILVISUALPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILVISUALPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATIONEXCLUSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTAFFTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTAFFTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTAFFTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTAFFTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTAFFTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTENDERTYPECARDTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELTABLEEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELTABLEEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELTABLEEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELTABLEEXT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELTABLEEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCUSTTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTHEMEACCENTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTHEMEACCENTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTHEMEACCENTCOLOR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTHEMEACCENTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTHEMEACCENTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNELEXPLODED] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDEVICETYPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDEVICETYPES] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDEVICETYPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDEVICETYPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDEVICETYPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[EFDOCAUTHORITY_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[EFDOCAUTHORITY_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EFDOCAUTHORITY_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[EFDOCAUTHORITY_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EFDOCAUTHORITY_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTDIM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTDIM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTDIM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTDIM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTDIM] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITCOMPONENTSUBSTITUTE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKITCOMPONENTSUBSTITUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITCOMPONENTSUBSTITUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKITCOMPONENTSUBSTITUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKITCOMPONENTSUBSTITUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDRAWERPOOLDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDRAWERPOOLDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDRAWERPOOLDEVICE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDRAWERPOOLDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDRAWERPOOLDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSSTATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSSTATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSSTATE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSSTATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSSTATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTYPE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLANGUAGETEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLANGUAGETEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLANGUAGETEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLANGUAGETEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLANGUAGETEXT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SHIPCARRIERCOMPANYACCOUNTS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SHIPCARRIERCOMPANYACCOUNTS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SHIPCARRIERCOMPANYACCOUNTS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SHIPCARRIERCOMPANYACCOUNTS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SHIPCARRIERCOMPANYACCOUNTS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSTASKRECORDERPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSTASKRECORDERPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSTASKRECORDERPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[BRAZILPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[BRAZILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[BRAZILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[BRAZILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[BRAZILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTAFFEXTENDEDLOGON] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTAFFEXTENDEDLOGON] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTAFFEXTENDEDLOGON] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTAFFEXTENDEDLOGON] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTAFFEXTENDEDLOGON] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[CUSTPACKINGSLIPJOUR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTPACKINGSLIPJOUR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTPACKINGSLIPJOUR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CUSTPACKINGSLIPJOUR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CUSTPACKINGSLIPJOUR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAFFILIATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXINFORMATION_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXINFORMATION_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXINFORMATION_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXINFORMATION_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXINFORMATION_IN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILAFFILIATIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILAFFILIATIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILAFFILIATIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAFFILIATIONTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAFFILIATIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTRELATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTOREHARDWARESTATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTOREHARDWARESTATIONTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTOREHARDWARESTATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTOREHARDWARESTATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTOREHARDWARESTATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SHIPCARRIERTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SHIPCARRIERTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SHIPCARRIERTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SHIPCARRIERTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SHIPCARRIERTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELPAYMENTCONNECTORLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPAYMENTCONNECTORLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELPAYMENTCONNECTORLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPAYMENTCONNECTORLINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELPAYMENTCONNECTORLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSSERVICECONFIGURATIONSETTING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSSERVICECONFIGURATIONSETTING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSSERVICECONFIGURATIONSETTING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSSERVICECONFIGURATIONSETTING] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSSERVICECONFIGURATIONSETTING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLETRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTENDERTYPECARDNUMBERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTENDERTYPECARDNUMBERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTENDERTYPECARDNUMBERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTENDERTYPECARDNUMBERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTENDERTYPECARDNUMBERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSPOSTALADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCATEGORYCONTAINMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCATEGORYCONTAINMENTLOOKUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCATEGORYCONTAINMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCATEGORYCONTAINMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCATEGORYCONTAINMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSTASKRECORDERINDUSTRY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERINDUSTRY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSTASKRECORDERINDUSTRY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERINDUSTRY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSTASKRECORDERINDUSTRY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSPECIALCATEGORYMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSPECIALCATEGORYMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSPECIALCATEGORYMEMBER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSPECIALCATEGORYMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSPECIALCATEGORYMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESDISTINCTPRODUCTVARIANT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESDISTINCTPRODUCTVARIANT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESDISTINCTPRODUCTVARIANT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESDISTINCTPRODUCTVARIANT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESDISTINCTPRODUCTVARIANT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTPRICEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXREGISTRATIONNUMBERS_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXREGISTRATIONNUMBERS_IN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXREGISTRATIONNUMBERS_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXREGISTRATIONNUMBERS_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXREGISTRATIONNUMBERS_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTERMINALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTERMINALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTERMINALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSERIAL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTSERIAL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTSERIAL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTSERIAL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSERIAL] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFOCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFOCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFOCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFOCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFOCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFOCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMPOSITION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[HCMPOSITION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMPOSITION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[HCMPOSITION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[HCMPOSITION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCONFIGURATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAUTHENTICATIONLOG] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEME] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYSCHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYSCHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PROVISIONINGMESSAGETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PROVISIONINGMESSAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[PROVISIONINGMESSAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[PROVISIONINGMESSAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[PROVISIONINGMESSAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSTYLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLEVEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLEVEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLEVEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLEVEL] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLEVEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCOLOR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILJOBPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILJOBPOSPERMISSIONGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILJOBPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILJOBPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILJOBPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTLOCATIONLOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSTYLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCDXDATASTORECHANNEL] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCDXDATASTORECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCDXDATASTORECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCDXDATASTORECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCDXDATASTORECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPMEMBER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONATTRIBUTETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRPARTYTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINECUSTOMERADDRESSFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINECUSTOMERADDRESSFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINECUSTOMERADDRESSFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINECUSTOMERADDRESSFILTER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINECUSTOMERADDRESSFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMENSIONVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCONFIGURATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2LINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILHARDWAREPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILHARDWAREPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILHARDWAREPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILHARDWAREPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILHARDWAREPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[COMPANYINFO] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[COMPANYINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[COMPANYINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[COMPANYINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[COMPANYINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINTERNALORGANIZATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHACCOUNTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTTABLEMODULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTTABLEMODULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTTABLEMODULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTTABLEMODULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTTABLEMODULE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXONITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXONITEM] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXONITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXONITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXONITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILEXTERNALIDTOCUSTOMERMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILEXTERNALIDTOCUSTOMERMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILEXTERNALIDTOCUSTOMERMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILEXTERNALIDTOCUSTOMERMAP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILEXTERNALIDTOCUSTOMERMAP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERMISSIONSEX] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPERMISSIONSEX] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERMISSIONSEX] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPERMISSIONSEX] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPERMISSIONSEX] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXGROUPDATA] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXGROUPDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXGROUPDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXGROUPDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXGROUPDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILREPORTLOCALIZEDSTRING] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILREPORTLOCALIZEDSTRING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILREPORTLOCALIZEDSTRING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILREPORTLOCALIZEDSTRING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILREPORTLOCALIZEDSTRING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONLOYALTYREWARDPOINTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCUSTAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCUSTAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCUSTAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCUSTAFFILIATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCUSTAFFILIATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTREPORTZONE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUTREPORTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTREPORTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUTREPORTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUTREPORTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSLOCATIONEXT] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ACCOUNTANT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ACCOUNTANT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ACCOUNTANT_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ACCOUNTANT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ACCOUNTANT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[CUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[CUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CUSTTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CUSTTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CUSTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINESCOPETABLES] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINESCOPETABLES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINESCOPETABLES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINESCOPETABLES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINESCOPETABLES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELCURRENCY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELCURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELCURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELCURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELCURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[PRICEDISCTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[PRICEDISCTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PRICEDISCTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PRICEDISCTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[PRICEDISCTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2TAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[MARKUPAUTOLINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[MARKUPAUTOLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[MARKUPAUTOLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[MARKUPAUTOLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[MARKUPAUTOLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALCUSTOMFIELD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALCUSTOMFIELD] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTERMINALCUSTOMFIELD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTERMINALCUSTOMFIELD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTERMINALCUSTOMFIELD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDLVMODEPRODUCTEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDLVMODEPRODUCTEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDLVMODEPRODUCTEXPLODED] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDLVMODEPRODUCTEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDLVMODEPRODUCTEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERMISSIONS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPERMISSIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPERMISSIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPERMISSIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERMISSIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALDEVICE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTERMINALDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTERMINALDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTERMINALDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTMIXANDMATCH] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CFOPTABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CFOPTABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CFOPTABLE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CFOPTABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[CFOPTABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTITEMGTIN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMGTIN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMGTIN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTITEMGTIN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTITEMGTIN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDEVICE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDEVICE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILATTRIBUTEFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILATTRIBUTEFILTER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILATTRIBUTEFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILATTRIBUTEFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILATTRIBUTEFILTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINEDATAEXPORTSCHEDULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEDATAEXPORTSCHEDULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINEDATAEXPORTSCHEDULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINEDATAEXPORTSCHEDULE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEDATAEXPORTSCHEDULE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXATIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXATIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXATIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXATIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXATIONCODETABLE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTLINKEDITEM] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTLINKEDITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINVENTLINKEDITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINVENTLINKEDITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINVENTLINKEDITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSZIPCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSZIPCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSZIPCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSZIPCODE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSZIPCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLISTINGSTATUSLOG] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZERTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESSIZE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTDIMENSIONVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PRICEDISCGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[PRICEDISCGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PRICEDISCGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[PRICEDISCGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[PRICEDISCGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTECHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHAREDBINGPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHAREDBINGPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSHAREDBINGPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSHAREDBINGPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSHAREDBINGPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONKITSDISASSEMBLYTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TIMEZONEINFO] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TIMEZONEINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TIMEZONEINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TIMEZONEINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TIMEZONEINFO] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[OMOPERATINGUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMOPERATINGUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[OMOPERATINGUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[OMOPERATINGUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMOPERATINGUNIT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILUNIT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILUNIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTOFFER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTOFFER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRELYINGPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRELYINGPARTY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILRELYINGPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILRELYINGPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILRELYINGPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTAXTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUPMEMBER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELPROFILEPROPERTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPROFILEPROPERTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELPROFILEPROPERTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELPROFILEPROPERTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELPROFILEPROPERTY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHYROLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHYROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHYROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHYROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCATEGORYHIERARCHYROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORKLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[JMGIPCACTIVITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[JMGIPCACTIVITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[JMGIPCACTIVITY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[JMGIPCACTIVITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[JMGIPCACTIVITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBARCODEMASKCHARACTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILBARCODEMASKCHARACTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBARCODEMASKCHARACTER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILBARCODEMASKCHARACTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILBARCODEMASKCHARACTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONFISCALTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[OMINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[OMINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMINTERNALORGANIZATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[OMINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMINTERNALORGANIZATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILONLINECHANNELLANGUAGES] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[UNITOFMEASURECONVERSION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[UNITOFMEASURECONVERSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[UNITOFMEASURECONVERSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[UNITOFMEASURECONVERSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[UNITOFMEASURECONVERSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMULTIBUY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILBARCODEMASKSEGMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBARCODEMASKSEGMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILBARCODEMASKSEGMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBARCODEMASKSEGMENT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILBARCODEMASKSEGMENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOPERATIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOPERATIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOPERATIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOPERATIONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOPERATIONS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODEGROUPSPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFOCODEGROUPSPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFOCODEGROUPSPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODEGROUPSPECIFIC] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFOCODEGROUPSPECIFIC] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCONFIGURATIONSTORETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCONFIGURATIONSTORETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCONFIGURATIONSTORETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCONFIGURATIONSTORETABLE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCONFIGURATIONSTORETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMWORKER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[HCMWORKER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMWORKER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[HCMWORKER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[HCMWORKER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[EFDOCWEBSERVICEPARAMETERS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[EFDOCWEBSERVICEPARAMETERS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EFDOCWEBSERVICEPARAMETERS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[EFDOCWEBSERVICEPARAMETERS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EFDOCWEBSERVICEPARAMETERS_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTBUTTONGRIDZONE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUTBUTTONGRIDZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUTBUTTONGRIDZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUTBUTTONGRIDZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTBUTTONGRIDZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILHARDWARECONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILHARDWARECONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILHARDWARECONFIGURATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILHARDWARECONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILHARDWARECONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[UNITOFMEASURETRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[UNITOFMEASURETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[UNITOFMEASURETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[UNITOFMEASURETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[UNITOFMEASURETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSHIPCARRIERACCOUNTCONFIGURATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBUTTONGRID] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILBUTTONGRID] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBUTTONGRID] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILBUTTONGRID] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILBUTTONGRID] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCHANGERATE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[EXCHANGERATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[EXCHANGERATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCHANGERATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[EXCHANGERATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFOCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFOCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFOCODETRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFOCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DOCUVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DOCUVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DOCUVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DOCUVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DOCUVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILIMAGES] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILIMAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILIMAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILIMAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILIMAGES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMEXPLODEDORGANIZATIONSECURITYGRAPH] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESDATETIMEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESDATETIMEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESDATETIMEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESDATETIMEVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESDATETIMEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATIONROLE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTVALIDATIONPERIOD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTVALIDATIONPERIOD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTVALIDATIONPERIOD] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTVALIDATIONPERIOD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTVALIDATIONPERIOD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSHIPCARRIERINTERFACE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSHIPCARRIERINTERFACE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHIPCARRIERINTERFACE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSHIPCARRIERINTERFACE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHIPCARRIERINTERFACE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[CUSTPACKINGSLIPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTPACKINGSLIPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTPACKINGSLIPTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CUSTPACKINGSLIPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CUSTPACKINGSLIPTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERLINEARTIFACT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSTASKRECORDERLINEARTIFACT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSTASKRECORDERLINEARTIFACT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSTASKRECORDERLINEARTIFACT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERLINEARTIFACT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONINFOCODETRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONEREFERENCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONEREFERENCE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONEREFERENCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONEREFERENCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONEREFERENCE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PRICEPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[PRICEPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[PRICEPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PRICEPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[PRICEPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBRETAILCATALOGPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBRETAILCATALOGPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILCATALOGPRICEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBRETAILCATALOGPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILCATALOGPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPFLDSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LEDGER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LEDGER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LEDGER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LEDGER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LEDGER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CUSTGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CUSTGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[CUSTGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DLVMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DLVMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DLVMODE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DLVMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DLVMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[HCMJOB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMJOB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[HCMJOB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[HCMJOB] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[HCMJOB] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSELECTRONICADDRESS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXCOLLECTLIMIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXCOLLECTLIMIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXCOLLECTLIMIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXCOLLECTLIMIT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXCOLLECTLIMIT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILREPORTPERMISSIONGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILREPORTPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILREPORTPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILREPORTPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILREPORTPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTDIMCOMBINATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTDIMCOMBINATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTDIMCOMBINATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTDIMCOMBINATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTDIMCOMBINATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEPRODUCTSCATEGORY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINEPRODUCTSCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINEPRODUCTSCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEPRODUCTSCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINEPRODUCTSCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYTIERTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYTIERTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYTIERTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYTIERTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYTIERTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILONLINECHANNELPUBLISHSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILONLINECHANNELPUBLISHSTATUS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILONLINECHANNELPUBLISHSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILONLINECHANNELPUBLISHSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILONLINECHANNELPUBLISHSTATUS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONSERVICEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSERVICEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONSERVICEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSERVICEPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONSERVICEPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALPRINTER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBARCODEMASKTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILBARCODEMASKTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBARCODEMASKTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILBARCODEMASKTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILBARCODEMASKTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPITEM] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXFISCALCLASSIFICATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXFISCALCLASSIFICATION_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXFISCALCLASSIFICATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXFISCALCLASSIFICATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXFISCALCLASSIFICATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALRECEIPT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTSITE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTSITE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTSITE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSIZE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFORMLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFORMLAYOUT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFORMLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFORMLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFORMLAYOUT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[EXCHANGERATECURRENCYPAIR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCHANGERATECURRENCYPAIR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[EXCHANGERATECURRENCYPAIR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCHANGERATECURRENCYPAIR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[EXCHANGERATECURRENCYPAIR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTCODE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHTAXTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESBOOLEANVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESBOOLEANVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESBOOLEANVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESBOOLEANVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESBOOLEANVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILHARDWARESTATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILHARDWARESTATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILHARDWARESTATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILHARDWARESTATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILHARDWARESTATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTENDERTYPETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTELOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTELOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTELOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTELOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCATEGORYATTRIBUTELOOKUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSITIONPOSPERMISSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSITIONPOSPERMISSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSITIONPOSPERMISSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSITIONPOSPERMISSION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSITIONPOSPERMISSION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBUTTONGRIDBUTTONS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILBUTTONGRIDBUTTONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILBUTTONGRIDBUTTONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILBUTTONGRIDBUTTONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILBUTTONGRIDBUTTONS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITYPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITYPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITYPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITYPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITYPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTEGROUPATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESATTRIBUTEGROUPATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTEGROUPATTRIBUTE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESATTRIBUTEGROUPATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESATTRIBUTEGROUPATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXCOMPONENTTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXCOMPONENTTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXCOMPONENTTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXCOMPONENTTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXCOMPONENTTABLE_IN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINVENTAVAILABILITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBINTERNALORGATTRIBUTEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATHEADING] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATHEADING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKITCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKITCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITCOMPONENT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKITCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYEARNSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYEARNSCHEMELINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYEARNSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYEARNSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYEARNSCHEMELINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBINVENTDIMCHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBINVENTDIMCHANNELMETADATA] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBINVENTDIMCHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBINVENTDIMCHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBINVENTDIMCHANNELMETADATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTENDERDECLARATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTPAYMENTTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDRAWERPOOL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDRAWERPOOL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDRAWERPOOL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDRAWERPOOL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDRAWERPOOL] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CURRENCY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[CURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CURRENCY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[EXCEPTIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[EXCEPTIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCEPTIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[EXCEPTIONCODETABLE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EXCEPTIONCODETABLE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTERCONFIGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALPRINTERCONFIGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTERCONFIGTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALPRINTERCONFIGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALPRINTERCONFIGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SHIPCARRIERSTAGING] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SHIPCARRIERSTAGING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SHIPCARRIERSTAGING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SHIPCARRIERSTAGING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SHIPCARRIERSTAGING] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERMISSIONSGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPERMISSIONSGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPERMISSIONSGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERMISSIONSGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPERMISSIONSGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHAREDPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSHAREDPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSHAREDPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSHAREDPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSHAREDPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILAFFILIATIONPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAFFILIATIONPRICEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILAFFILIATIONPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILAFFILIATIONPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILAFFILIATIONPRICEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSLOCATIONROLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESSTYLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESSTYLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYCARDTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYCARDTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYCARDTIER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYCARDTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYCARDTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTHEMEPALLET] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTHEMEPALLET] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTHEMEPALLET] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTHEMEPALLET] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTHEMEPALLET] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFUNCTIONALITYPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFUNCTIONALITYPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFUNCTIONALITYPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFUNCTIONALITYPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFUNCTIONALITYPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILZREPORTTOTALIZER_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTEVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESPRODUCTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINCOMEEXPENSEACCOUNTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINCOMEEXPENSEACCOUNTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINCOMEEXPENSEACCOUNTTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINCOMEEXPENSEACCOUNTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINCOMEEXPENSEACCOUNTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSIZE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTSIZE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTPARAMETERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[CUSTPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[CUSTPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[CUSTPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[CUSTPARAMETERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORECASHDECLARATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORECASHDECLARATIONTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORECASHDECLARATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORECASHDECLARATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORECASHDECLARATIONTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINETABLECOLUMNS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINETABLECOLUMNS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINETABLECOLUMNS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINETABLECOLUMNS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINETABLECOLUMNS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTEVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBPRODUCTATTRIBUTEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRPARTYLOCATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHTENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONSALESTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELTABLE_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELTABLE_IN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONORDERINVOICETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCATALOGTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCATALOGTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCATALOGTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILEFDOCCONTINGENCYMODE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTRACKINGDIMENSIONGROUPPRODUCT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTHEMEACCENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTHEMEACCENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTHEMEACCENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTHEMEACCENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTHEMEACCENT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYTIER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYTIER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINESCOPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINESCOPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINESCOPE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINESCOPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINESCOPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTIMAGE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTIMAGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTIMAGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTIMAGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTIMAGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTITEMGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTITEMGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMGROUPITEM] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTITEMGROUPITEM] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORETENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORETENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORETENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETENDERTYPECARDTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETENDERTYPECARDTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTLOCATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATION_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ACCOUNTANTLOGISTICSLOCATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTITEMGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTITEMGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTITEMGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DOCUREF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DOCUREF] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DOCUREF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DOCUREF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DOCUREF] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONINCOMEEXPENSETRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESINTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESINTVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESINTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESINTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESINTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONADDRESSTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORETENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORETENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORETENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETENDERTYPETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORETENDERTYPETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCOLOR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESTEXTVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESTEXTVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTEXTVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTEXTVALUETRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESTEXTVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXINFORMATIONLEGALENTITY_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXINFORMATIONLEGALENTITY_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXINFORMATIONLEGALENTITY_IN] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXINFORMATIONLEGALENTITY_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXINFORMATIONLEGALENTITY_IN] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBRETAILCHANNELCATEGORYATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESFLOATVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESFLOATVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESFLOATVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESFLOATVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESFLOATVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCATALOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCATALOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCATALOG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOG] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONSAFETENDERTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLABELCHANGEJOURNALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLABELCHANGEJOURNALTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLABELCHANGEJOURNALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLABELCHANGEJOURNALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLABELCHANGEJOURNALTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTTAXTRANS_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[OMHIERARCHYPURPOSE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMHIERARCHYPURPOSE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[OMHIERARCHYPURPOSE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[OMHIERARCHYPURPOSE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[OMHIERARCHYPURPOSE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESPRODUCTMASTERDIMVALUETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESREFERENCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESREFERENCEVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESREFERENCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESREFERENCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESREFERENCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCONFIGURATION_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCONFIGURATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCONFIGURATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCONFIGURATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCONFIGURATION_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESINSTANCEVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTIMAGEZONE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTIMAGEZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUTIMAGEZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUTIMAGEZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUTIMAGEZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILIDENTITYPROVIDER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILIDENTITYPROVIDER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILIDENTITYPROVIDER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILIDENTITYPROVIDER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILIDENTITYPROVIDER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKEYBOARDMAPPINGTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGIONTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSPERMISSIONGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSPERMISSIONGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMULTIBUYDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILMULTIBUYDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILMULTIBUYDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMULTIBUYDISCOUNTLINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILMULTIBUYDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINTTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYREWARDPOINTTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEPROFILESCOPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILOFFLINEPROFILESCOPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILOFFLINEPROFILESCOPES] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILOFFLINEPROFILESCOPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILOFFLINEPROFILESCOPES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTINSTANCEVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTINSTANCEVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALRECEIPTTAXTRANS_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[MARKUPTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[MARKUPTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[MARKUPTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[MARKUPTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[MARKUPTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTORE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTORE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTORE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTORE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUTSTORE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCOUNTRYREGION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCATALOGINTERNALORG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGINTERNALORG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCATALOGINTERNALORG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCATALOGINTERNALORG] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGINTERNALORG] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DIRADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRADDRESSBOOK] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCURRENCYVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESCURRENCYVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESCURRENCYVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESCURRENCYVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESCURRENCYVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTILLLAYOUTZONE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[FISCALESTABLISHMENTINVENTSITE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[FISCALESTABLISHMENTINVENTSITE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[FISCALESTABLISHMENTINVENTSITE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[FISCALESTABLISHMENTINVENTSITE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[FISCALESTABLISHMENTINVENTSITE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMIXANDMATCHLINEGROUPS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILMIXANDMATCHLINEGROUPS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILMIXANDMATCHLINEGROUPS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMIXANDMATCHLINEGROUPS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILMIXANDMATCHLINEGROUPS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTAXFILTERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTAXFILTERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTAXFILTERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTAXFILTERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTAXFILTERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LANGUAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LANGUAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LANGUAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LANGUAGETABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LANGUAGETABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALCOUNTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTERMINALCOUNTER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTERMINALCOUNTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTERMINALCOUNTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTERMINALCOUNTER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITVARIANTCOMPONENT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKITVARIANTCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITVARIANTCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKITVARIANTCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKITVARIANTCOMPONENT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMSALESSETUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTITEMSALESSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTITEMSALESSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTITEMSALESSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTITEMSALESSETUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILRECEIPTPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILRECEIPTPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILRECEIPTPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRECEIPTPROFILE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRECEIPTPROFILE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITRELEASEDSUBSTITUTECHARGE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILKITRELEASEDSUBSTITUTECHARGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILKITRELEASEDSUBSTITUTECHARGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILKITRELEASEDSUBSTITUTECHARGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILKITRELEASEDSUBSTITUTECHARGE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSSEEDDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSSEEDDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSSEEDDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSSEEDDATA] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSSEEDDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[TAXDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[TAXDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[TAXDATA] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[TAXDATA] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILRECEIPTMASKS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILRECEIPTMASKS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRECEIPTMASKS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILRECEIPTMASKS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILRECEIPTMASKS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONAFFILIATIONTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESATTRIBUTETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTETRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESATTRIBUTETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESATTRIBUTETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[INVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATLINES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATLINES] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATLINES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATLINES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSFORMATLINES] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORYTRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBECORESCATEGORYTRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLDTIERS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLDTIERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLDTIERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLDTIERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLDTIERS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSALESTAXOVERRIDEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILMEDIAPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIAPRODUCTRELATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILMEDIAPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILMEDIAPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIAPRODUCTRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[PLFISCALTAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PLFISCALTAXTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[PLFISCALTAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[PLFISCALTAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[PLFISCALTAXTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMIXANDMATCH] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTLINEMIXANDMATCH] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILCHANNELTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[DIRADDRESSBOOKPARTY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATIONROLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[INVENTSITELOGISTICSLOCATIONROLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTOREADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTOREADDRESSBOOK] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTOREADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTOREADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTOREADDRESSBOOK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTANDARDATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTANDARDATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTANDARDATTRIBUTE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTANDARDATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTANDARDATTRIBUTE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALPRINTERREPORT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIAANDMASTERENTITYRELATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILMEDIAANDMASTERENTITYRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILMEDIAANDMASTERENTITYRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILMEDIAANDMASTERENTITYRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIAANDMASTERENTITYRELATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLD] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTTHRESHOLD] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILMEDIATEMPLATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIATEMPLATE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILMEDIATEMPLATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILMEDIATEMPLATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILMEDIATEMPLATE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETURNREASONCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETURNREASONCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETURNREASONCODEGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETURNREASONCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETURNREASONCODEGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDLVMODECHANNELEXPLODED] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDLVMODECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDLVMODECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDLVMODECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDLVMODECHANNELEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILGROUPMEMBERLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILGROUPMEMBERLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILGROUPMEMBERLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILGROUPMEMBERLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILGROUPMEMBERLINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[EFDRETURNCODE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EFDRETURNCODE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[EFDRETURNCODE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[EFDRETURNCODE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[EFDRETURNCODE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILTRANSACTIONDISCOUNTTRANS] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORK] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[SYSTASKRECORDERFRAMEWORK] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCITY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSCITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSCITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSCITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSCITY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTAFFCREDENTIALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTAFFCREDENTIALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTAFFCREDENTIALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTAFFCREDENTIALTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTAFFCREDENTIALTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCOLOR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTVARIANTCOLOR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[FISCALESTABLISHMENT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[FISCALESTABLISHMENT_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[FISCALESTABLISHMENT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[FISCALESTABLISHMENT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[FISCALESTABLISHMENT_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESATTRIBUTETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTETYPE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESATTRIBUTETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESATTRIBUTETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESATTRIBUTETYPE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTLINE_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDLVMODEADDRESSEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDLVMODEADDRESSEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDLVMODEADDRESSEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDLVMODEADDRESSEXPLODED] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDLVMODEADDRESSEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[LOGISTICSADDRESSDISTRICT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[LOGISTICSADDRESSDISTRICT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[LOGISTICSADDRESSDISTRICT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSDISTRICT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[LOGISTICSADDRESSDISTRICT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPOWNER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPOWNER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPOWNER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPOWNER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILSTORELOCATORGROUPOWNER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILASSORTMENTLOOKUPCHANNELGROUP] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILASYNCCUSTOMER] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETURNREASONCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETURNREASONCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETURNREASONCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETURNREASONCODE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETURNREASONCODE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSTHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSTHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSTHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSTHEME] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSTHEME] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPOSBATCHTABLE] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNTLINE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPERIODICDISCOUNTLINE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTCATEGORY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESPRODUCTCATEGORY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCT] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBCATALOGPRODUCT] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETRANSLATION] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILINFORMATIONSUBCODETRANSLATION] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILFISCALDOCUMENTMODEL2_BR] TO [UsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNEL] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILLOYALTYSCHEMECHANNEL] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTMULTIBUY] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILDISCOUNTMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILDISCOUNTMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILDISCOUNTMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILDISCOUNTMULTIBUY] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[RETAILPUBINTORGINHERITANCEEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[RETAILPUBINTORGINHERITANCEEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBINTORGINHERITANCEEXPLODED] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[RETAILPUBINTORGINHERITANCEEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[RETAILPUBINTORGINHERITANCEEXPLODED] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT DELETE
    ON OBJECT::[ax].[ECORESTEXTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTEXTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT INSERT
    ON OBJECT::[ax].[ECORESTEXTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT SELECT
    ON OBJECT::[ax].[ECORESTEXTVALUE] TO [ReportUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT ALTER
    ON OBJECT::[ax].[ECORESTEXTVALUE] TO [DataSyncUsersRole];


GO
PRINT N'Creating Permission...';


GO
GRANT UPDATE
    ON OBJECT::[ax].[ECORESTEXTVALUE] TO [DataSyncUsersRole];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-------------------<BEGIN AX SCHEMA ALTERATIONS>--------------------------------------------

-- [ax].[PRICEDISCTABLE]

-- Removing and recreating clustered index, as the original defined in AX cannot be changed
-- and contains 14 columns, causing extreme DB size inflation
IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('ax.PRICEDISCTABLE') AND NAME = 'I_137462222_1904821809')
BEGIN
    ALTER TABLE [ax].[PRICEDISCTABLE]
    DROP CONSTRAINT [I_137462222_1904821809];

    IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('ax.PRICEDISCTABLE') AND NAME = 'I_PRICEDISCTABLE_RECID')
    BEGIN
        ALTER TABLE [ax].[PRICEDISCTABLE]
        DROP CONSTRAINT [I_PRICEDISCTABLE_RECID];
    END;

    ALTER TABLE [ax].[PRICEDISCTABLE]
    ADD CONSTRAINT [I_PRICEDISCTABLE_RECID] PRIMARY KEY CLUSTERED
    (
        [RECID]
    );
END

GO

-- Delete channel report stored procedures
IF OBJECT_ID(N'[crt].[GETBANKDROPREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETBANKDROPREPORT]'
	DROP PROCEDURE [crt].[GETBANKDROPREPORT];
	PRINT 'Dropped [crt].[GETBANKDROPREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETDAYSUMMARY]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETDAYSUMMARY]'
	DROP PROCEDURE [crt].[GETDAYSUMMARY];
	PRINT 'Dropped [crt].[GETDAYSUMMARY]'
END
GO

IF OBJECT_ID(N'[crt].[GETEXPENSETRANSREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETEXPENSETRANSREPORT]'
	DROP PROCEDURE [crt].GETEXPENSETRANSREPORT;
	PRINT 'Dropped [crt].[GETEXPENSETRANSREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETINCOMETRANSREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETINCOMETRANSREPORT]'
	DROP PROCEDURE [crt].GETINCOMETRANSREPORT;
	PRINT 'Dropped [crt].[GETINCOMETRANSREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETOVERSHORTREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETOVERSHORTREPORT]'
	DROP PROCEDURE [crt].GETOVERSHORTREPORT;
	PRINT 'Dropped [crt].[GETOVERSHORTREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETPRODUCTVARIANTSALES]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETPRODUCTVARIANTSALES]'
	DROP PROCEDURE [crt].GETPRODUCTVARIANTSALES;
	PRINT 'Dropped [crt].[GETPRODUCTVARIANTSALES]'
END
GO

IF OBJECT_ID(N'[crt].[GETRETURNTRANSACTIONSREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETRETURNTRANSACTIONSREPORT]'
	DROP PROCEDURE [crt].GETRETURNTRANSACTIONSREPORT;
	PRINT 'Dropped [crt].[GETRETURNTRANSACTIONSREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSAFEDROPREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSAFEDROPREPORT]'
	DROP PROCEDURE [crt].GETSAFEDROPREPORT;
	PRINT 'Dropped [crt].[GETSAFEDROPREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSALESBYDISCOUNTREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSALESBYDISCOUNTREPORT]'
	DROP PROCEDURE [crt].GETSALESBYDISCOUNTREPORT;
	PRINT 'Dropped [crt].[GETSALESBYDISCOUNTREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSALESBYHOURREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSALESBYHOURREPORT]'
	DROP PROCEDURE [crt].GETSALESBYHOURREPORT;
	PRINT 'Dropped [crt].[GETSALESBYHOURREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSALESBYREGISTERREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSALESBYREGISTERREPORT]'
	DROP PROCEDURE [crt].GETSALESBYREGISTERREPORT;
	PRINT 'Dropped [crt].[GETSALESBYREGISTERREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSALESBYSTAFFREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSALESBYSTAFFREPORT]'
	DROP PROCEDURE [crt].GETSALESBYSTAFFREPORT;
	PRINT 'Dropped [crt].[GETSALESBYSTAFFREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSALESBYTENDERTYPEREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSALESBYTENDERTYPEREPORT]'
	DROP PROCEDURE [crt].GETSALESBYTENDERTYPEREPORT;
	PRINT 'Dropped [crt].[GETSALESBYTENDERTYPEREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSTAFFRETURNSALES]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSTAFFRETURNSALES]'
	DROP PROCEDURE [crt].GETSTAFFRETURNSALES;
	PRINT 'Dropped [crt].[GETSTAFFRETURNSALES]'
END
GO

IF OBJECT_ID(N'[crt].[GETSTOREPRICEOVERRIDESREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSTOREPRICEOVERRIDESREPORT]'
	DROP PROCEDURE [crt].GETSTOREPRICEOVERRIDESREPORT;
	PRINT 'Dropped [crt].[GETSTOREPRICEOVERRIDESREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETSTOREVOIDEDTRANSACTIONSREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETSTOREVOIDEDTRANSACTIONSREPORT]'
	DROP PROCEDURE [crt].GETSTOREVOIDEDTRANSACTIONSREPORT;
	PRINT 'Dropped [crt].[GETSTOREVOIDEDTRANSACTIONSREPORT]'
END
GO

IF OBJECT_ID(N'[crt].[GETTOP10PRODUCTSREPORT]', N'P') IS NOT NULL
BEGIN
	PRINT 'Dropping [crt].[GETTOP10PRODUCTSREPORT]'
	DROP PROCEDURE [crt].GETTOP10PRODUCTSREPORT;
	PRINT 'Dropped [crt].[GETTOP10PRODUCTSREPORT]'
END
GO

-- Deleting assortment indexed views
IF OBJECT_ID(N'[crt].[ASSORTEDPRODUCTSINNERVIEW]', N'V') IS NOT NULL
BEGIN
  PRINT 'Dropping [crt].[ASSORTEDPRODUCTSINNERVIEW]'
  DROP VIEW [crt].[ASSORTEDPRODUCTSINNERVIEW];
  PRINT 'Dropped [crt].[ASSORTEDPRODUCTSINNERVIEW]'
END
GO

-- Removing indexes on views to speed up CDX data sync
IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.ITEMCHANNELBASEPRICEVIEW') AND NAME = 'IX_ITEMCHANNELBASEPRICEVIEW')
BEGIN
    PRINT N'Dropping index IX_ITEMCHANNELBASEPRICEVIEW on [crt].ITEMCHANNELBASEPRICEVIEW'
    DROP INDEX IX_ITEMCHANNELBASEPRICEVIEW ON [crt].ITEMCHANNELBASEPRICEVIEW;
END

GO

IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.ITEMCHANNELTRADEAGREEMENTPRICEVIEW') AND NAME = 'IX_ITEMCHANNELTRADEAGREEMENTPRICEVIEW')
BEGIN
    PRINT N'Dropping index IX_ITEMCHANNELTRADEAGREEMENTPRICEVIEW on [crt].ITEMCHANNELTRADEAGREEMENTPRICEVIEW'
    DROP INDEX IX_ITEMCHANNELTRADEAGREEMENTPRICEVIEW ON [crt].ITEMCHANNELTRADEAGREEMENTPRICEVIEW;
END

GO

IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.CHANNELCATEGORYHIERARCHYVIEW') AND NAME = 'IX_CHANNELCATEGORYHIERARCHYVIEW')
BEGIN
    PRINT N'Dropping index IX_CHANNELCATEGORYHIERARCHYVIEW on [crt].CHANNELCATEGORYHIERARCHYVIEW'
    DROP INDEX IX_CHANNELCATEGORYHIERARCHYVIEW ON [crt].CHANNELCATEGORYHIERARCHYVIEW;
END

GO

IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW') AND NAME = 'IX_PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW_CHANNEL_CATALOG')
BEGIN
    PRINT N'Dropping index IX_PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW_CHANNEL_CATALOG on [crt].PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW'
    DROP INDEX IX_PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW_CHANNEL_CATALOG ON [crt].PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW;
END

GO

IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW') AND NAME = 'IX_PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW_CATALOG')
BEGIN
    PRINT N'Dropping index IX_PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW_CATALOG on [crt].PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW'
    DROP INDEX IX_PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW_CATALOG ON [crt].PUBCATALOGCHANNELATTRIBUTEINHERITEDVIEW;
END

GO

IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.PUBCATALOGCHANNELVIEW') AND NAME = 'IX_PUBCATALOGCHANNELVIEW_CHANNEL_CATALOG')
BEGIN
    PRINT N'Dropping index IX_PUBCATALOGCHANNELVIEW_CHANNEL_CATALOG on [crt].PUBCATALOGCHANNELVIEW'
    DROP INDEX IX_PUBCATALOGCHANNELVIEW_CHANNEL_CATALOG ON [crt].PUBCATALOGCHANNELVIEW;
END

GO

IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.PUBCATALOGCHANNELVIEW') AND NAME = 'IX_PUBCATALOGCHANNELVIEW_CHANNEL_CATALOG')
BEGIN
    PRINT N'Dropping index IX_PUBCATALOGCHANNELVIEW_CHANNEL_CATALOG on [crt].PUBCATALOGCHANNELVIEW'
    DROP INDEX IX_PUBCATALOGCHANNELVIEW_CHANNEL_CATALOG ON [crt].PUBCATALOGCHANNELVIEW;
END

GO

-- Start deleting triggers on [ax].[CHANNELREFINABLEATTRIBUTE]
IF OBJECT_ID(N'[ax].[CHANNELREFINABLEATTRIBUTE_INSERTED]') IS NOT NULL
BEGIN
  PRINT 'Dropping [ax].[CHANNELREFINABLEATTRIBUTE_INSERTED]'
  DROP TRIGGER [ax].[CHANNELREFINABLEATTRIBUTE_INSERTED];
  PRINT 'Dropped [ax].[CHANNELREFINABLEATTRIBUTE_INSERTED]'    
END
GO

IF OBJECT_ID(N'[ax].[CHANNELREFINABLEATTRIBUTE_UPDATED]') IS NOT NULL
BEGIN
  PRINT 'Dropping [ax].[CHANNELREFINABLEATTRIBUTE_UPDATED]'
  DROP TRIGGER [ax].[CHANNELREFINABLEATTRIBUTE_UPDATED];
  PRINT 'Dropped [ax].[CHANNELREFINABLEATTRIBUTE_UPDATED]'    
END
GO

IF OBJECT_ID(N'[ax].[CHANNELREFINABLEATTRIBUTE_DELETED]') IS NOT NULL
BEGIN
  PRINT 'Dropping [ax].[CHANNELREFINABLEATTRIBUTE_DELETED]'
  DROP TRIGGER [ax].[CHANNELREFINABLEATTRIBUTE_DELETED];
  PRINT 'Dropped [ax].[CHANNELREFINABLEATTRIBUTE_DELETED]'    
END
GO
-- End deleting triggers on [ax].[CHANNELREFINABLEATTRIBUTE]

IF EXISTS(SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID('crt.PRODUCTCATALOGRULESVIEW') AND NAME = 'IX_PRODUCTCATALOGRULESVIEW')
BEGIN
    PRINT N'Dropping index IX_PRODUCTCATALOGRULESVIEW on [crt].PRODUCTCATALOGRULESVIEW'
    DROP INDEX IX_PRODUCTCATALOGRULESVIEW ON [crt].PRODUCTCATALOGRULESVIEW;
END

GO

-------------------<END AX SCHEMA ALTERATIONS>--------------------------------------------

--------------------<Begin of versioning database>------------------------------------
--we populate the RETAILUPGRADEHISTORY table
declare @thisDbVersionString nvarchar(50);
declare @thisDbUpgradeType nvarchar(50);
declare @thisDbFileAttributes nvarchar(50);
SET @thisDbVersionString = CAST( N'7' + N'.' + N'0' + N'.' + N'1265' + N'.' + N'23014' AS nvarchar(50))
SET @thisDbUpgradeType = N'RETAIL';
SET @thisDbFileAttributes = CAST(N'BASELINE_' + CAST(GETUTCDATE() AS nvarchar(100)) AS nvarchar(300));

PRINT N'DBVersion is ' + @thisDbVersionString;
INSERT [crt].[RETAILUPGRADEHISTORY] (UpgradeType, FilePath, FileName, Build) VALUES (@thisDbUpgradeType, @thisDbFileAttributes, @thisDbFileAttributes, @thisDbVersionString)
GO

PRINT N'Logged baseline file creation'

--we populate the DBVersion stored proc
declare @thisDbVersion int;
declare @thisDbVersionString nvarchar(50);
declare @thisDbVersionType nvarchar(50);

--the format for the int is as follows:
-- 2 digits for the major version
-- 2 digits for the minor versiom
-- 3 digits for the build num major
-- 2 digit for the build num minor
-- this is because one int = 32 bit = 4G -> 10 decimal digit but the highest can only go from 0 to 3
-- so we don't really want to use it for the product version right away as it will limit us to 19
-- skipping it allows us a max range of 199.99.999.99 
-- for the time being the build minor is not upscaled so 3.5.1.1 is 3|05|001|01 and not 3|50|001|01

SET @thisDbVersion = 7 * POWER(10, 7) + 0 * POWER(10, 5) + 1265 * POWER(10, 2) + 23014;
SET @thisDbVersionString = CAST( N'7' + N'.' + N'0' + N'.' + N'1265' + N'.' + N'23014' AS nvarchar(50))
SET @thisDbVersionType = N'databaseVersion';

PRINT N'DBVersion is ' + CAST(@thisDbVersion as nvarchar(50));

IF EXISTS(SELECT TOP 1 VersionNumber FROM [ax].[DBVersion] WHERE VersionType = @thisDbVersionType)  
    UPDATE [ax].[DBVersion] SET VersionNumber = @thisDbVersion, VersionString = @thisDbVersionString
ELSE 
    INSERT [ax].[DBVersion] (VersionType, VersionNumber, VersionString) VALUES (@thisDbVersionType, @thisDbVersion, @thisDbVersionString)
GO

PRINT N'DBVersion set'
--------------------<End of versioning database>--------------------------------------

